{
  "version": 3,
  "sources": ["../../rollup/dist/es/shared/node-entry.js"],
  "sourcesContent": ["/*\r\n  @license\r\n\tRollup.js v4.52.5\r\n\tSat, 18 Oct 2025 06:53:02 GMT - commit 55a8fd5a70820f274921edf394efbbaa620f0962\r\n\r\n\thttps://github.com/rollup/rollup\r\n\r\n\tReleased under the MIT License.\r\n*/\r\nimport { EMPTY_OBJECT, ExportDefaultDeclaration as ExportDefaultDeclaration$1, CallExpression as CallExpression$1, EMPTY_ARRAY, LOGLEVEL_WARN, logUnusedExternalImports, ANNOTATION_KEY, INVALID_ANNOTATION_KEY, ArrowFunctionExpression as ArrowFunctionExpression$1, FunctionExpression as FunctionExpression$1, MemberExpression as MemberExpression$1, Identifier as Identifier$1, ImportExpression as ImportExpression$1, AwaitExpression as AwaitExpression$1, ObjectExpression as ObjectExpression$1, Property as Property$1, Program as Program$1, logIllegalImportReassignment, BLANK, logRedeclarationError, StaticBlock as StaticBlock$1, CatchClause as CatchClause$1, logDuplicateArgumentNameError, logModuleLevelDirective, ReturnStatement as ReturnStatement$1, VariableDeclarator as VariableDeclarator$1, ExpressionStatement as ExpressionStatement$1, logMissingExport, normalize, getImportPath, logMissingNodeBuiltins, logReservedNamespace, error, logIllegalIdentifierAsName, logMissingNameOptionForIifeExport, logMissingNameOptionForUmdExport, RestElement as RestElement$1, logConstVariableReassignError, EMPTY_SET, logCannotCallNamespace, logEval, BlockStatement as BlockStatement$1, getRollupError, logModuleParseError, logParseError, LOGLEVEL_INFO, logFirstSideEffect, locate, logInvalidAnnotation, logThisIsUndefined, getAstBuffer, convertAnnotations, FIXED_STRINGS, convertNode as convertNode$1, logImportAttributeIsInvalid, logImportOptionsAreInvalid, logSyntheticNamedExportsNeedNamespaceExport, logMissingEntryExport, logDuplicateExportError, logInvalidSourcemapForError, augmentCodeLocation, logInconsistentImportAttributes, logMissingJsxExport, logNamespaceConflict, logAmbiguousExternalNamespaces, logShimmedExport, parseAst, logInvalidFormatForTopLevelAwait, TemplateLiteral as TemplateLiteral$1, Literal as Literal$1, logCircularReexport, logAddonNotGenerated, logIncompatibleExportOptionValue, logMixedExport, logFailedValidation, isPathFragment, logCyclicCrossChunkReexport, getAliasName, logUnexpectedNamedImport, isAbsolute as isAbsolute$1, relative as relative$1, logUnexpectedNamespaceReexport, logEmptyChunk, logMissingGlobalName, logOptimizeChunkStatus, logSourcemapBroken, logConflictingSourcemapSources, logChunkInvalid, logInvalidOption, URL_OUTPUT_FORMAT, URL_OUTPUT_DIR, URL_OUTPUT_SOURCEMAPFILE, URL_OUTPUT_AMD_ID, logCannotAssignModuleToChunk, logAnonymousPluginCache, logDuplicatePluginName, logUnknownOption, LOGLEVEL_ERROR, logLevelPriority, LOGLEVEL_DEBUG, printQuotedStringList, logInvalidSetAssetSourceCall, logPluginError, logNoTransformMapOrAstWithoutCode, relativeId, logBadLoader, logExternalModulesCannotBeTransformedToModules, logInternalIdCannotBeExternal, isRelative, logUnresolvedImport, logUnresolvedImportTreatedAsExternal, logExternalSyntheticExports, logUnresolvedEntry, logUnresolvedImplicitDependant, logExternalModulesCannotBeIncludedInManualChunks, logEntryCannotBeExternal, logImplicitDependantCannotBeExternal, logNoAssetSourceSet, logFileReferenceIdNotFoundForFilename, logAssetReferenceIdNotFoundForSetSource, logAssetSourceAlreadySet, logInvalidRollupPhaseForChunkEmission, warnDeprecation, logChunkNotGeneratedForFileName, logAssetNotFinalisedForFileName, logFileNameConflict, URL_GENERATEBUNDLE, logInvalidLogPosition, logInputHookInOutputPlugin, logInvalidAddonPluginHook, logInvalidFunctionPluginHook, logImplicitDependantIsNotIncluded, logCircularDependency, augmentLogMessage, URL_JSX, URL_TREESHAKE_MODULESIDEEFFECTS, URL_TREESHAKE, URL_OUTPUT_INLINEDYNAMICIMPORTS, URL_PRESERVEENTRYSIGNATURES, URL_OUTPUT_GENERATEDCODE, isValidUrl, addTrailingSlashIfMissed, URL_OUTPUT_SOURCEMAPBASEURL, URL_OUTPUT_MANUALCHUNKS, logInvalidExportOptionValue, URL_OUTPUT_AMD_BASEPATH, URL_OUTPUT_INTEROP, URL_OUTPUT_EXTERNALIMPORTATTRIBUTES, logAlreadyClosed, logMissingFileOrDirOption, logCannotEmitFromOptionsHook, URL_WATCH } from './parseAst.js';\r\nimport { relative, dirname, basename, extname, resolve as resolve$1 } from 'node:path';\r\nimport { posix, isAbsolute, resolve, win32 } from 'path';\r\nimport { parseAsync, xxhashBase16, xxhashBase64Url, xxhashBase36 } from '../../native.js';\r\nimport process$1, { env } from 'node:process';\r\nimport { performance } from 'node:perf_hooks';\r\nimport * as promises from 'node:fs/promises';\r\n\r\nfunction _mergeNamespaces(n, m) {\r\n  for (var i = 0; i < m.length; i++) {\r\n    const e = m[i];\r\n    if (typeof e !== 'string' && !Array.isArray(e)) { for (const k in e) {\r\n      if (k !== 'default' && !(k in n)) {\r\n        n[k] = e[k];\r\n      }\r\n    } }\r\n  }\r\n  return Object.defineProperty(n, Symbol.toStringTag, { value: 'Module' });\r\n}\r\n\r\nvar version = \"4.52.5\";\r\n\r\n// src/vlq.ts\r\nvar comma = \",\".charCodeAt(0);\r\nvar semicolon = \";\".charCodeAt(0);\r\nvar chars$1 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\nvar intToChar = new Uint8Array(64);\r\nvar charToInt = new Uint8Array(128);\r\nfor (let i = 0; i < chars$1.length; i++) {\r\n  const c = chars$1.charCodeAt(i);\r\n  intToChar[i] = c;\r\n  charToInt[c] = i;\r\n}\r\nfunction decodeInteger(reader, relative) {\r\n  let value = 0;\r\n  let shift = 0;\r\n  let integer = 0;\r\n  do {\r\n    const c = reader.next();\r\n    integer = charToInt[c];\r\n    value |= (integer & 31) << shift;\r\n    shift += 5;\r\n  } while (integer & 32);\r\n  const shouldNegate = value & 1;\r\n  value >>>= 1;\r\n  if (shouldNegate) {\r\n    value = -2147483648 | -value;\r\n  }\r\n  return relative + value;\r\n}\r\nfunction encodeInteger(builder, num, relative) {\r\n  let delta = num - relative;\r\n  delta = delta < 0 ? -delta << 1 | 1 : delta << 1;\r\n  do {\r\n    let clamped = delta & 31;\r\n    delta >>>= 5;\r\n    if (delta > 0) clamped |= 32;\r\n    builder.write(intToChar[clamped]);\r\n  } while (delta > 0);\r\n  return num;\r\n}\r\nfunction hasMoreVlq(reader, max) {\r\n  if (reader.pos >= max) return false;\r\n  return reader.peek() !== comma;\r\n}\r\n\r\n// src/strings.ts\r\nvar bufLength = 1024 * 16;\r\nvar td = typeof TextDecoder !== \"undefined\" ? /* @__PURE__ */ new TextDecoder() : typeof Buffer !== \"undefined\" ? {\r\n  decode(buf) {\r\n    const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\r\n    return out.toString();\r\n  }\r\n} : {\r\n  decode(buf) {\r\n    let out = \"\";\r\n    for (let i = 0; i < buf.length; i++) {\r\n      out += String.fromCharCode(buf[i]);\r\n    }\r\n    return out;\r\n  }\r\n};\r\nvar StringWriter = class {\r\n  constructor() {\r\n    this.pos = 0;\r\n    this.out = \"\";\r\n    this.buffer = new Uint8Array(bufLength);\r\n  }\r\n  write(v) {\r\n    const { buffer } = this;\r\n    buffer[this.pos++] = v;\r\n    if (this.pos === bufLength) {\r\n      this.out += td.decode(buffer);\r\n      this.pos = 0;\r\n    }\r\n  }\r\n  flush() {\r\n    const { buffer, out, pos } = this;\r\n    return pos > 0 ? out + td.decode(buffer.subarray(0, pos)) : out;\r\n  }\r\n};\r\nvar StringReader = class {\r\n  constructor(buffer) {\r\n    this.pos = 0;\r\n    this.buffer = buffer;\r\n  }\r\n  next() {\r\n    return this.buffer.charCodeAt(this.pos++);\r\n  }\r\n  peek() {\r\n    return this.buffer.charCodeAt(this.pos);\r\n  }\r\n  indexOf(char) {\r\n    const { buffer, pos } = this;\r\n    const idx = buffer.indexOf(char, pos);\r\n    return idx === -1 ? buffer.length : idx;\r\n  }\r\n};\r\n\r\n// src/sourcemap-codec.ts\r\nfunction decode(mappings) {\r\n  const { length } = mappings;\r\n  const reader = new StringReader(mappings);\r\n  const decoded = [];\r\n  let genColumn = 0;\r\n  let sourcesIndex = 0;\r\n  let sourceLine = 0;\r\n  let sourceColumn = 0;\r\n  let namesIndex = 0;\r\n  do {\r\n    const semi = reader.indexOf(\";\");\r\n    const line = [];\r\n    let sorted = true;\r\n    let lastCol = 0;\r\n    genColumn = 0;\r\n    while (reader.pos < semi) {\r\n      let seg;\r\n      genColumn = decodeInteger(reader, genColumn);\r\n      if (genColumn < lastCol) sorted = false;\r\n      lastCol = genColumn;\r\n      if (hasMoreVlq(reader, semi)) {\r\n        sourcesIndex = decodeInteger(reader, sourcesIndex);\r\n        sourceLine = decodeInteger(reader, sourceLine);\r\n        sourceColumn = decodeInteger(reader, sourceColumn);\r\n        if (hasMoreVlq(reader, semi)) {\r\n          namesIndex = decodeInteger(reader, namesIndex);\r\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex];\r\n        } else {\r\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn];\r\n        }\r\n      } else {\r\n        seg = [genColumn];\r\n      }\r\n      line.push(seg);\r\n      reader.pos++;\r\n    }\r\n    if (!sorted) sort(line);\r\n    decoded.push(line);\r\n    reader.pos = semi + 1;\r\n  } while (reader.pos <= length);\r\n  return decoded;\r\n}\r\nfunction sort(line) {\r\n  line.sort(sortComparator);\r\n}\r\nfunction sortComparator(a, b) {\r\n  return a[0] - b[0];\r\n}\r\nfunction encode(decoded) {\r\n  const writer = new StringWriter();\r\n  let sourcesIndex = 0;\r\n  let sourceLine = 0;\r\n  let sourceColumn = 0;\r\n  let namesIndex = 0;\r\n  for (let i = 0; i < decoded.length; i++) {\r\n    const line = decoded[i];\r\n    if (i > 0) writer.write(semicolon);\r\n    if (line.length === 0) continue;\r\n    let genColumn = 0;\r\n    for (let j = 0; j < line.length; j++) {\r\n      const segment = line[j];\r\n      if (j > 0) writer.write(comma);\r\n      genColumn = encodeInteger(writer, segment[0], genColumn);\r\n      if (segment.length === 1) continue;\r\n      sourcesIndex = encodeInteger(writer, segment[1], sourcesIndex);\r\n      sourceLine = encodeInteger(writer, segment[2], sourceLine);\r\n      sourceColumn = encodeInteger(writer, segment[3], sourceColumn);\r\n      if (segment.length === 4) continue;\r\n      namesIndex = encodeInteger(writer, segment[4], namesIndex);\r\n    }\r\n  }\r\n  return writer.flush();\r\n}\r\n\r\nclass BitSet {\r\n\tconstructor(arg) {\r\n\t\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\r\n\t}\r\n\r\n\tadd(n) {\r\n\t\tthis.bits[n >> 5] |= 1 << (n & 31);\r\n\t}\r\n\r\n\thas(n) {\r\n\t\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\r\n\t}\r\n}\r\n\r\nlet Chunk$1 = class Chunk {\r\n\tconstructor(start, end, content) {\r\n\t\tthis.start = start;\r\n\t\tthis.end = end;\r\n\t\tthis.original = content;\r\n\r\n\t\tthis.intro = '';\r\n\t\tthis.outro = '';\r\n\r\n\t\tthis.content = content;\r\n\t\tthis.storeName = false;\r\n\t\tthis.edited = false;\r\n\r\n\t\t{\r\n\t\t\tthis.previous = null;\r\n\t\t\tthis.next = null;\r\n\t\t}\r\n\t}\r\n\r\n\tappendLeft(content) {\r\n\t\tthis.outro += content;\r\n\t}\r\n\r\n\tappendRight(content) {\r\n\t\tthis.intro = this.intro + content;\r\n\t}\r\n\r\n\tclone() {\r\n\t\tconst chunk = new Chunk(this.start, this.end, this.original);\r\n\r\n\t\tchunk.intro = this.intro;\r\n\t\tchunk.outro = this.outro;\r\n\t\tchunk.content = this.content;\r\n\t\tchunk.storeName = this.storeName;\r\n\t\tchunk.edited = this.edited;\r\n\r\n\t\treturn chunk;\r\n\t}\r\n\r\n\tcontains(index) {\r\n\t\treturn this.start < index && index < this.end;\r\n\t}\r\n\r\n\teachNext(fn) {\r\n\t\tlet chunk = this;\r\n\t\twhile (chunk) {\r\n\t\t\tfn(chunk);\r\n\t\t\tchunk = chunk.next;\r\n\t\t}\r\n\t}\r\n\r\n\teachPrevious(fn) {\r\n\t\tlet chunk = this;\r\n\t\twhile (chunk) {\r\n\t\t\tfn(chunk);\r\n\t\t\tchunk = chunk.previous;\r\n\t\t}\r\n\t}\r\n\r\n\tedit(content, storeName, contentOnly) {\r\n\t\tthis.content = content;\r\n\t\tif (!contentOnly) {\r\n\t\t\tthis.intro = '';\r\n\t\t\tthis.outro = '';\r\n\t\t}\r\n\t\tthis.storeName = storeName;\r\n\r\n\t\tthis.edited = true;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprependLeft(content) {\r\n\t\tthis.outro = content + this.outro;\r\n\t}\r\n\r\n\tprependRight(content) {\r\n\t\tthis.intro = content + this.intro;\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.intro = '';\r\n\t\tthis.outro = '';\r\n\t\tif (this.edited) {\r\n\t\t\tthis.content = this.original;\r\n\t\t\tthis.storeName = false;\r\n\t\t\tthis.edited = false;\r\n\t\t}\r\n\t}\r\n\r\n\tsplit(index) {\r\n\t\tconst sliceIndex = index - this.start;\r\n\r\n\t\tconst originalBefore = this.original.slice(0, sliceIndex);\r\n\t\tconst originalAfter = this.original.slice(sliceIndex);\r\n\r\n\t\tthis.original = originalBefore;\r\n\r\n\t\tconst newChunk = new Chunk(index, this.end, originalAfter);\r\n\t\tnewChunk.outro = this.outro;\r\n\t\tthis.outro = '';\r\n\r\n\t\tthis.end = index;\r\n\r\n\t\tif (this.edited) {\r\n\t\t\t// after split we should save the edit content record into the correct chunk\r\n\t\t\t// to make sure sourcemap correct\r\n\t\t\t// For example:\r\n\t\t\t// '  test'.trim()\r\n\t\t\t//     split   -> '  ' + 'test'\r\n\t\t\t//   ✔️ edit    -> '' + 'test'\r\n\t\t\t//   ✖️ edit    -> 'test' + ''\r\n\t\t\t// TODO is this block necessary?...\r\n\t\t\tnewChunk.edit('', false);\r\n\t\t\tthis.content = '';\r\n\t\t} else {\r\n\t\t\tthis.content = originalBefore;\r\n\t\t}\r\n\r\n\t\tnewChunk.next = this.next;\r\n\t\tif (newChunk.next) newChunk.next.previous = newChunk;\r\n\t\tnewChunk.previous = this;\r\n\t\tthis.next = newChunk;\r\n\r\n\t\treturn newChunk;\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn this.intro + this.content + this.outro;\r\n\t}\r\n\r\n\ttrimEnd(rx) {\r\n\t\tthis.outro = this.outro.replace(rx, '');\r\n\t\tif (this.outro.length) return true;\r\n\r\n\t\tconst trimmed = this.content.replace(rx, '');\r\n\r\n\t\tif (trimmed.length) {\r\n\t\t\tif (trimmed !== this.content) {\r\n\t\t\t\tthis.split(this.start + trimmed.length).edit('', undefined, true);\r\n\t\t\t\tif (this.edited) {\r\n\t\t\t\t\t// save the change, if it has been edited\r\n\t\t\t\t\tthis.edit(trimmed, this.storeName, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tthis.edit('', undefined, true);\r\n\r\n\t\t\tthis.intro = this.intro.replace(rx, '');\r\n\t\t\tif (this.intro.length) return true;\r\n\t\t}\r\n\t}\r\n\r\n\ttrimStart(rx) {\r\n\t\tthis.intro = this.intro.replace(rx, '');\r\n\t\tif (this.intro.length) return true;\r\n\r\n\t\tconst trimmed = this.content.replace(rx, '');\r\n\r\n\t\tif (trimmed.length) {\r\n\t\t\tif (trimmed !== this.content) {\r\n\t\t\t\tconst newChunk = this.split(this.end - trimmed.length);\r\n\t\t\t\tif (this.edited) {\r\n\t\t\t\t\t// save the change, if it has been edited\r\n\t\t\t\t\tnewChunk.edit(trimmed, this.storeName, true);\r\n\t\t\t\t}\r\n\t\t\t\tthis.edit('', undefined, true);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tthis.edit('', undefined, true);\r\n\r\n\t\t\tthis.outro = this.outro.replace(rx, '');\r\n\t\t\tif (this.outro.length) return true;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nfunction getBtoa() {\r\n\tif (typeof globalThis !== 'undefined' && typeof globalThis.btoa === 'function') {\r\n\t\treturn (str) => globalThis.btoa(unescape(encodeURIComponent(str)));\r\n\t} else if (typeof Buffer === 'function') {\r\n\t\treturn (str) => Buffer.from(str, 'utf-8').toString('base64');\r\n\t} else {\r\n\t\treturn () => {\r\n\t\t\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\r\n\t\t};\r\n\t}\r\n}\r\n\r\nconst btoa = /*#__PURE__*/ getBtoa();\r\n\r\nclass SourceMap {\r\n\tconstructor(properties) {\r\n\t\tthis.version = 3;\r\n\t\tthis.file = properties.file;\r\n\t\tthis.sources = properties.sources;\r\n\t\tthis.sourcesContent = properties.sourcesContent;\r\n\t\tthis.names = properties.names;\r\n\t\tthis.mappings = encode(properties.mappings);\r\n\t\tif (typeof properties.x_google_ignoreList !== 'undefined') {\r\n\t\t\tthis.x_google_ignoreList = properties.x_google_ignoreList;\r\n\t\t}\r\n\t\tif (typeof properties.debugId !== 'undefined') {\r\n\t\t\tthis.debugId = properties.debugId;\r\n\t\t}\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn JSON.stringify(this);\r\n\t}\r\n\r\n\ttoUrl() {\r\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa(this.toString());\r\n\t}\r\n}\r\n\r\nfunction guessIndent(code) {\r\n\tconst lines = code.split('\\n');\r\n\r\n\tconst tabbed = lines.filter((line) => /^\\t+/.test(line));\r\n\tconst spaced = lines.filter((line) => /^ {2,}/.test(line));\r\n\r\n\tif (tabbed.length === 0 && spaced.length === 0) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// More lines tabbed than spaced? Assume tabs, and\r\n\t// default to tabs in the case of a tie (or nothing\r\n\t// to go on)\r\n\tif (tabbed.length >= spaced.length) {\r\n\t\treturn '\\t';\r\n\t}\r\n\r\n\t// Otherwise, we need to guess the multiple\r\n\tconst min = spaced.reduce((previous, current) => {\r\n\t\tconst numSpaces = /^ +/.exec(current)[0].length;\r\n\t\treturn Math.min(numSpaces, previous);\r\n\t}, Infinity);\r\n\r\n\treturn new Array(min + 1).join(' ');\r\n}\r\n\r\nfunction getRelativePath(from, to) {\r\n\tconst fromParts = from.split(/[/\\\\]/);\r\n\tconst toParts = to.split(/[/\\\\]/);\r\n\r\n\tfromParts.pop(); // get dirname\r\n\r\n\twhile (fromParts[0] === toParts[0]) {\r\n\t\tfromParts.shift();\r\n\t\ttoParts.shift();\r\n\t}\r\n\r\n\tif (fromParts.length) {\r\n\t\tlet i = fromParts.length;\r\n\t\twhile (i--) fromParts[i] = '..';\r\n\t}\r\n\r\n\treturn fromParts.concat(toParts).join('/');\r\n}\r\n\r\nconst toString = Object.prototype.toString;\r\n\r\nfunction isObject(thing) {\r\n\treturn toString.call(thing) === '[object Object]';\r\n}\r\n\r\nfunction getLocator(source) {\r\n\tconst originalLines = source.split('\\n');\r\n\tconst lineOffsets = [];\r\n\r\n\tfor (let i = 0, pos = 0; i < originalLines.length; i++) {\r\n\t\tlineOffsets.push(pos);\r\n\t\tpos += originalLines[i].length + 1;\r\n\t}\r\n\r\n\treturn function locate(index) {\r\n\t\tlet i = 0;\r\n\t\tlet j = lineOffsets.length;\r\n\t\twhile (i < j) {\r\n\t\t\tconst m = (i + j) >> 1;\r\n\t\t\tif (index < lineOffsets[m]) {\r\n\t\t\t\tj = m;\r\n\t\t\t} else {\r\n\t\t\t\ti = m + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst line = i - 1;\r\n\t\tconst column = index - lineOffsets[line];\r\n\t\treturn { line, column };\r\n\t};\r\n}\r\n\r\nconst wordRegex = /\\w/;\r\n\r\nclass Mappings {\r\n\tconstructor(hires) {\r\n\t\tthis.hires = hires;\r\n\t\tthis.generatedCodeLine = 0;\r\n\t\tthis.generatedCodeColumn = 0;\r\n\t\tthis.raw = [];\r\n\t\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\r\n\t\tthis.pending = null;\r\n\t}\r\n\r\n\taddEdit(sourceIndex, content, loc, nameIndex) {\r\n\t\tif (content.length) {\r\n\t\t\tconst contentLengthMinusOne = content.length - 1;\r\n\t\t\tlet contentLineEnd = content.indexOf('\\n', 0);\r\n\t\t\tlet previousContentLineEnd = -1;\r\n\t\t\t// Loop through each line in the content and add a segment, but stop if the last line is empty,\r\n\t\t\t// else code afterwards would fill one line too many\r\n\t\t\twhile (contentLineEnd >= 0 && contentLengthMinusOne > contentLineEnd) {\r\n\t\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\r\n\t\t\t\tif (nameIndex >= 0) {\r\n\t\t\t\t\tsegment.push(nameIndex);\r\n\t\t\t\t}\r\n\t\t\t\tthis.rawSegments.push(segment);\r\n\r\n\t\t\t\tthis.generatedCodeLine += 1;\r\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\r\n\t\t\t\tthis.generatedCodeColumn = 0;\r\n\r\n\t\t\t\tpreviousContentLineEnd = contentLineEnd;\r\n\t\t\t\tcontentLineEnd = content.indexOf('\\n', contentLineEnd + 1);\r\n\t\t\t}\r\n\r\n\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\r\n\t\t\tif (nameIndex >= 0) {\r\n\t\t\t\tsegment.push(nameIndex);\r\n\t\t\t}\r\n\t\t\tthis.rawSegments.push(segment);\r\n\r\n\t\t\tthis.advance(content.slice(previousContentLineEnd + 1));\r\n\t\t} else if (this.pending) {\r\n\t\t\tthis.rawSegments.push(this.pending);\r\n\t\t\tthis.advance(content);\r\n\t\t}\r\n\r\n\t\tthis.pending = null;\r\n\t}\r\n\r\n\taddUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\r\n\t\tlet originalCharIndex = chunk.start;\r\n\t\tlet first = true;\r\n\t\t// when iterating each char, check if it's in a word boundary\r\n\t\tlet charInHiresBoundary = false;\r\n\r\n\t\twhile (originalCharIndex < chunk.end) {\r\n\t\t\tif (original[originalCharIndex] === '\\n') {\r\n\t\t\t\tloc.line += 1;\r\n\t\t\t\tloc.column = 0;\r\n\t\t\t\tthis.generatedCodeLine += 1;\r\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\r\n\t\t\t\tthis.generatedCodeColumn = 0;\r\n\t\t\t\tfirst = true;\r\n\t\t\t\tcharInHiresBoundary = false;\r\n\t\t\t} else {\r\n\t\t\t\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\r\n\t\t\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\r\n\r\n\t\t\t\t\tif (this.hires === 'boundary') {\r\n\t\t\t\t\t\t// in hires \"boundary\", group segments per word boundary than per char\r\n\t\t\t\t\t\tif (wordRegex.test(original[originalCharIndex])) {\r\n\t\t\t\t\t\t\t// for first char in the boundary found, start the boundary by pushing a segment\r\n\t\t\t\t\t\t\tif (!charInHiresBoundary) {\r\n\t\t\t\t\t\t\t\tthis.rawSegments.push(segment);\r\n\t\t\t\t\t\t\t\tcharInHiresBoundary = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// for non-word char, end the boundary by pushing a segment\r\n\t\t\t\t\t\t\tthis.rawSegments.push(segment);\r\n\t\t\t\t\t\t\tcharInHiresBoundary = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.rawSegments.push(segment);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tloc.column += 1;\r\n\t\t\t\tthis.generatedCodeColumn += 1;\r\n\t\t\t\tfirst = false;\r\n\t\t\t}\r\n\r\n\t\t\toriginalCharIndex += 1;\r\n\t\t}\r\n\r\n\t\tthis.pending = null;\r\n\t}\r\n\r\n\tadvance(str) {\r\n\t\tif (!str) return;\r\n\r\n\t\tconst lines = str.split('\\n');\r\n\r\n\t\tif (lines.length > 1) {\r\n\t\t\tfor (let i = 0; i < lines.length - 1; i++) {\r\n\t\t\t\tthis.generatedCodeLine++;\r\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\r\n\t\t\t}\r\n\t\t\tthis.generatedCodeColumn = 0;\r\n\t\t}\r\n\r\n\t\tthis.generatedCodeColumn += lines[lines.length - 1].length;\r\n\t}\r\n}\r\n\r\nconst n = '\\n';\r\n\r\nconst warned = {\r\n\tinsertLeft: false,\r\n\tinsertRight: false,\r\n\tstoreName: false,\r\n};\r\n\r\nclass MagicString {\r\n\tconstructor(string, options = {}) {\r\n\t\tconst chunk = new Chunk$1(0, string.length, string);\r\n\r\n\t\tObject.defineProperties(this, {\r\n\t\t\toriginal: { writable: true, value: string },\r\n\t\t\toutro: { writable: true, value: '' },\r\n\t\t\tintro: { writable: true, value: '' },\r\n\t\t\tfirstChunk: { writable: true, value: chunk },\r\n\t\t\tlastChunk: { writable: true, value: chunk },\r\n\t\t\tlastSearchedChunk: { writable: true, value: chunk },\r\n\t\t\tbyStart: { writable: true, value: {} },\r\n\t\t\tbyEnd: { writable: true, value: {} },\r\n\t\t\tfilename: { writable: true, value: options.filename },\r\n\t\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\r\n\t\t\tsourcemapLocations: { writable: true, value: new BitSet() },\r\n\t\t\tstoredNames: { writable: true, value: {} },\r\n\t\t\tindentStr: { writable: true, value: undefined },\r\n\t\t\tignoreList: { writable: true, value: options.ignoreList },\r\n\t\t\toffset: { writable: true, value: options.offset || 0 },\r\n\t\t});\r\n\r\n\t\tthis.byStart[0] = chunk;\r\n\t\tthis.byEnd[string.length] = chunk;\r\n\t}\r\n\r\n\taddSourcemapLocation(char) {\r\n\t\tthis.sourcemapLocations.add(char);\r\n\t}\r\n\r\n\tappend(content) {\r\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\r\n\r\n\t\tthis.outro += content;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tappendLeft(index, content) {\r\n\t\tindex = index + this.offset;\r\n\r\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\r\n\r\n\t\tthis._split(index);\r\n\r\n\t\tconst chunk = this.byEnd[index];\r\n\r\n\t\tif (chunk) {\r\n\t\t\tchunk.appendLeft(content);\r\n\t\t} else {\r\n\t\t\tthis.intro += content;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tappendRight(index, content) {\r\n\t\tindex = index + this.offset;\r\n\r\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\r\n\r\n\t\tthis._split(index);\r\n\r\n\t\tconst chunk = this.byStart[index];\r\n\r\n\t\tif (chunk) {\r\n\t\t\tchunk.appendRight(content);\r\n\t\t} else {\r\n\t\t\tthis.outro += content;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone() {\r\n\t\tconst cloned = new MagicString(this.original, { filename: this.filename, offset: this.offset });\r\n\r\n\t\tlet originalChunk = this.firstChunk;\r\n\t\tlet clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\r\n\r\n\t\twhile (originalChunk) {\r\n\t\t\tcloned.byStart[clonedChunk.start] = clonedChunk;\r\n\t\t\tcloned.byEnd[clonedChunk.end] = clonedChunk;\r\n\r\n\t\t\tconst nextOriginalChunk = originalChunk.next;\r\n\t\t\tconst nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\r\n\r\n\t\t\tif (nextClonedChunk) {\r\n\t\t\t\tclonedChunk.next = nextClonedChunk;\r\n\t\t\t\tnextClonedChunk.previous = clonedChunk;\r\n\r\n\t\t\t\tclonedChunk = nextClonedChunk;\r\n\t\t\t}\r\n\r\n\t\t\toriginalChunk = nextOriginalChunk;\r\n\t\t}\r\n\r\n\t\tcloned.lastChunk = clonedChunk;\r\n\r\n\t\tif (this.indentExclusionRanges) {\r\n\t\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\r\n\t\t}\r\n\r\n\t\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\r\n\r\n\t\tcloned.intro = this.intro;\r\n\t\tcloned.outro = this.outro;\r\n\r\n\t\treturn cloned;\r\n\t}\r\n\r\n\tgenerateDecodedMap(options) {\r\n\t\toptions = options || {};\r\n\r\n\t\tconst sourceIndex = 0;\r\n\t\tconst names = Object.keys(this.storedNames);\r\n\t\tconst mappings = new Mappings(options.hires);\r\n\r\n\t\tconst locate = getLocator(this.original);\r\n\r\n\t\tif (this.intro) {\r\n\t\t\tmappings.advance(this.intro);\r\n\t\t}\r\n\r\n\t\tthis.firstChunk.eachNext((chunk) => {\r\n\t\t\tconst loc = locate(chunk.start);\r\n\r\n\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\r\n\r\n\t\t\tif (chunk.edited) {\r\n\t\t\t\tmappings.addEdit(\r\n\t\t\t\t\tsourceIndex,\r\n\t\t\t\t\tchunk.content,\r\n\t\t\t\t\tloc,\r\n\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1,\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tmappings.addUneditedChunk(sourceIndex, chunk, this.original, loc, this.sourcemapLocations);\r\n\t\t\t}\r\n\r\n\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\r\n\t\t});\r\n\r\n\t\tif (this.outro) {\r\n\t\t\tmappings.advance(this.outro);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\r\n\t\t\tsources: [\r\n\t\t\t\toptions.source ? getRelativePath(options.file || '', options.source) : options.file || '',\r\n\t\t\t],\r\n\t\t\tsourcesContent: options.includeContent ? [this.original] : undefined,\r\n\t\t\tnames,\r\n\t\t\tmappings: mappings.raw,\r\n\t\t\tx_google_ignoreList: this.ignoreList ? [sourceIndex] : undefined,\r\n\t\t};\r\n\t}\r\n\r\n\tgenerateMap(options) {\r\n\t\treturn new SourceMap(this.generateDecodedMap(options));\r\n\t}\r\n\r\n\t_ensureindentStr() {\r\n\t\tif (this.indentStr === undefined) {\r\n\t\t\tthis.indentStr = guessIndent(this.original);\r\n\t\t}\r\n\t}\r\n\r\n\t_getRawIndentString() {\r\n\t\tthis._ensureindentStr();\r\n\t\treturn this.indentStr;\r\n\t}\r\n\r\n\tgetIndentString() {\r\n\t\tthis._ensureindentStr();\r\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\r\n\t}\r\n\r\n\tindent(indentStr, options) {\r\n\t\tconst pattern = /^[^\\r\\n]/gm;\r\n\r\n\t\tif (isObject(indentStr)) {\r\n\t\t\toptions = indentStr;\r\n\t\t\tindentStr = undefined;\r\n\t\t}\r\n\r\n\t\tif (indentStr === undefined) {\r\n\t\t\tthis._ensureindentStr();\r\n\t\t\tindentStr = this.indentStr || '\\t';\r\n\t\t}\r\n\r\n\t\tif (indentStr === '') return this; // noop\r\n\r\n\t\toptions = options || {};\r\n\r\n\t\t// Process exclusion ranges\r\n\t\tconst isExcluded = {};\r\n\r\n\t\tif (options.exclude) {\r\n\t\t\tconst exclusions =\r\n\t\t\t\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\r\n\t\t\texclusions.forEach((exclusion) => {\r\n\t\t\t\tfor (let i = exclusion[0]; i < exclusion[1]; i += 1) {\r\n\t\t\t\t\tisExcluded[i] = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet shouldIndentNextCharacter = options.indentStart !== false;\r\n\t\tconst replacer = (match) => {\r\n\t\t\tif (shouldIndentNextCharacter) return `${indentStr}${match}`;\r\n\t\t\tshouldIndentNextCharacter = true;\r\n\t\t\treturn match;\r\n\t\t};\r\n\r\n\t\tthis.intro = this.intro.replace(pattern, replacer);\r\n\r\n\t\tlet charIndex = 0;\r\n\t\tlet chunk = this.firstChunk;\r\n\r\n\t\twhile (chunk) {\r\n\t\t\tconst end = chunk.end;\r\n\r\n\t\t\tif (chunk.edited) {\r\n\t\t\t\tif (!isExcluded[charIndex]) {\r\n\t\t\t\t\tchunk.content = chunk.content.replace(pattern, replacer);\r\n\r\n\t\t\t\t\tif (chunk.content.length) {\r\n\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcharIndex = chunk.start;\r\n\r\n\t\t\t\twhile (charIndex < end) {\r\n\t\t\t\t\tif (!isExcluded[charIndex]) {\r\n\t\t\t\t\t\tconst char = this.original[charIndex];\r\n\r\n\t\t\t\t\t\tif (char === '\\n') {\r\n\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\r\n\t\t\t\t\t\t} else if (char !== '\\r' && shouldIndentNextCharacter) {\r\n\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\r\n\r\n\t\t\t\t\t\t\tif (charIndex === chunk.start) {\r\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis._splitChunk(chunk, charIndex);\r\n\t\t\t\t\t\t\t\tchunk = chunk.next;\r\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcharIndex += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcharIndex = chunk.end;\r\n\t\t\tchunk = chunk.next;\r\n\t\t}\r\n\r\n\t\tthis.outro = this.outro.replace(pattern, replacer);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tinsert() {\r\n\t\tthrow new Error(\r\n\t\t\t'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)',\r\n\t\t);\r\n\t}\r\n\r\n\tinsertLeft(index, content) {\r\n\t\tif (!warned.insertLeft) {\r\n\t\t\tconsole.warn(\r\n\t\t\t\t'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead',\r\n\t\t\t);\r\n\t\t\twarned.insertLeft = true;\r\n\t\t}\r\n\r\n\t\treturn this.appendLeft(index, content);\r\n\t}\r\n\r\n\tinsertRight(index, content) {\r\n\t\tif (!warned.insertRight) {\r\n\t\t\tconsole.warn(\r\n\t\t\t\t'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead',\r\n\t\t\t);\r\n\t\t\twarned.insertRight = true;\r\n\t\t}\r\n\r\n\t\treturn this.prependRight(index, content);\r\n\t}\r\n\r\n\tmove(start, end, index) {\r\n\t\tstart = start + this.offset;\r\n\t\tend = end + this.offset;\r\n\t\tindex = index + this.offset;\r\n\r\n\t\tif (index >= start && index <= end) throw new Error('Cannot move a selection inside itself');\r\n\r\n\t\tthis._split(start);\r\n\t\tthis._split(end);\r\n\t\tthis._split(index);\r\n\r\n\t\tconst first = this.byStart[start];\r\n\t\tconst last = this.byEnd[end];\r\n\r\n\t\tconst oldLeft = first.previous;\r\n\t\tconst oldRight = last.next;\r\n\r\n\t\tconst newRight = this.byStart[index];\r\n\t\tif (!newRight && last === this.lastChunk) return this;\r\n\t\tconst newLeft = newRight ? newRight.previous : this.lastChunk;\r\n\r\n\t\tif (oldLeft) oldLeft.next = oldRight;\r\n\t\tif (oldRight) oldRight.previous = oldLeft;\r\n\r\n\t\tif (newLeft) newLeft.next = first;\r\n\t\tif (newRight) newRight.previous = last;\r\n\r\n\t\tif (!first.previous) this.firstChunk = last.next;\r\n\t\tif (!last.next) {\r\n\t\t\tthis.lastChunk = first.previous;\r\n\t\t\tthis.lastChunk.next = null;\r\n\t\t}\r\n\r\n\t\tfirst.previous = newLeft;\r\n\t\tlast.next = newRight || null;\r\n\r\n\t\tif (!newLeft) this.firstChunk = first;\r\n\t\tif (!newRight) this.lastChunk = last;\r\n\t\treturn this;\r\n\t}\r\n\r\n\toverwrite(start, end, content, options) {\r\n\t\toptions = options || {};\r\n\t\treturn this.update(start, end, content, { ...options, overwrite: !options.contentOnly });\r\n\t}\r\n\r\n\tupdate(start, end, content, options) {\r\n\t\tstart = start + this.offset;\r\n\t\tend = end + this.offset;\r\n\r\n\t\tif (typeof content !== 'string') throw new TypeError('replacement content must be a string');\r\n\r\n\t\tif (this.original.length !== 0) {\r\n\t\t\twhile (start < 0) start += this.original.length;\r\n\t\t\twhile (end < 0) end += this.original.length;\r\n\t\t}\r\n\r\n\t\tif (end > this.original.length) throw new Error('end is out of bounds');\r\n\t\tif (start === end)\r\n\t\t\tthrow new Error(\r\n\t\t\t\t'Cannot overwrite a zero-length range – use appendLeft or prependRight instead',\r\n\t\t\t);\r\n\r\n\t\tthis._split(start);\r\n\t\tthis._split(end);\r\n\r\n\t\tif (options === true) {\r\n\t\t\tif (!warned.storeName) {\r\n\t\t\t\tconsole.warn(\r\n\t\t\t\t\t'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string',\r\n\t\t\t\t);\r\n\t\t\t\twarned.storeName = true;\r\n\t\t\t}\r\n\r\n\t\t\toptions = { storeName: true };\r\n\t\t}\r\n\t\tconst storeName = options !== undefined ? options.storeName : false;\r\n\t\tconst overwrite = options !== undefined ? options.overwrite : false;\r\n\r\n\t\tif (storeName) {\r\n\t\t\tconst original = this.original.slice(start, end);\r\n\t\t\tObject.defineProperty(this.storedNames, original, {\r\n\t\t\t\twritable: true,\r\n\t\t\t\tvalue: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst first = this.byStart[start];\r\n\t\tconst last = this.byEnd[end];\r\n\r\n\t\tif (first) {\r\n\t\t\tlet chunk = first;\r\n\t\t\twhile (chunk !== last) {\r\n\t\t\t\tif (chunk.next !== this.byStart[chunk.end]) {\r\n\t\t\t\t\tthrow new Error('Cannot overwrite across a split point');\r\n\t\t\t\t}\r\n\t\t\t\tchunk = chunk.next;\r\n\t\t\t\tchunk.edit('', false);\r\n\t\t\t}\r\n\r\n\t\t\tfirst.edit(content, storeName, !overwrite);\r\n\t\t} else {\r\n\t\t\t// must be inserting at the end\r\n\t\t\tconst newChunk = new Chunk$1(start, end, '').edit(content, storeName);\r\n\r\n\t\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\r\n\t\t\tlast.next = newChunk;\r\n\t\t\tnewChunk.previous = last;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprepend(content) {\r\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\r\n\r\n\t\tthis.intro = content + this.intro;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprependLeft(index, content) {\r\n\t\tindex = index + this.offset;\r\n\r\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\r\n\r\n\t\tthis._split(index);\r\n\r\n\t\tconst chunk = this.byEnd[index];\r\n\r\n\t\tif (chunk) {\r\n\t\t\tchunk.prependLeft(content);\r\n\t\t} else {\r\n\t\t\tthis.intro = content + this.intro;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprependRight(index, content) {\r\n\t\tindex = index + this.offset;\r\n\r\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\r\n\r\n\t\tthis._split(index);\r\n\r\n\t\tconst chunk = this.byStart[index];\r\n\r\n\t\tif (chunk) {\r\n\t\t\tchunk.prependRight(content);\r\n\t\t} else {\r\n\t\t\tthis.outro = content + this.outro;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tremove(start, end) {\r\n\t\tstart = start + this.offset;\r\n\t\tend = end + this.offset;\r\n\r\n\t\tif (this.original.length !== 0) {\r\n\t\t\twhile (start < 0) start += this.original.length;\r\n\t\t\twhile (end < 0) end += this.original.length;\r\n\t\t}\r\n\r\n\t\tif (start === end) return this;\r\n\r\n\t\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\r\n\t\tif (start > end) throw new Error('end must be greater than start');\r\n\r\n\t\tthis._split(start);\r\n\t\tthis._split(end);\r\n\r\n\t\tlet chunk = this.byStart[start];\r\n\r\n\t\twhile (chunk) {\r\n\t\t\tchunk.intro = '';\r\n\t\t\tchunk.outro = '';\r\n\t\t\tchunk.edit('');\r\n\r\n\t\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\treset(start, end) {\r\n\t\tstart = start + this.offset;\r\n\t\tend = end + this.offset;\r\n\r\n\t\tif (this.original.length !== 0) {\r\n\t\t\twhile (start < 0) start += this.original.length;\r\n\t\t\twhile (end < 0) end += this.original.length;\r\n\t\t}\r\n\r\n\t\tif (start === end) return this;\r\n\r\n\t\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\r\n\t\tif (start > end) throw new Error('end must be greater than start');\r\n\r\n\t\tthis._split(start);\r\n\t\tthis._split(end);\r\n\r\n\t\tlet chunk = this.byStart[start];\r\n\r\n\t\twhile (chunk) {\r\n\t\t\tchunk.reset();\r\n\r\n\t\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\tlastChar() {\r\n\t\tif (this.outro.length) return this.outro[this.outro.length - 1];\r\n\t\tlet chunk = this.lastChunk;\r\n\t\tdo {\r\n\t\t\tif (chunk.outro.length) return chunk.outro[chunk.outro.length - 1];\r\n\t\t\tif (chunk.content.length) return chunk.content[chunk.content.length - 1];\r\n\t\t\tif (chunk.intro.length) return chunk.intro[chunk.intro.length - 1];\r\n\t\t} while ((chunk = chunk.previous));\r\n\t\tif (this.intro.length) return this.intro[this.intro.length - 1];\r\n\t\treturn '';\r\n\t}\r\n\r\n\tlastLine() {\r\n\t\tlet lineIndex = this.outro.lastIndexOf(n);\r\n\t\tif (lineIndex !== -1) return this.outro.substr(lineIndex + 1);\r\n\t\tlet lineStr = this.outro;\r\n\t\tlet chunk = this.lastChunk;\r\n\t\tdo {\r\n\t\t\tif (chunk.outro.length > 0) {\r\n\t\t\t\tlineIndex = chunk.outro.lastIndexOf(n);\r\n\t\t\t\tif (lineIndex !== -1) return chunk.outro.substr(lineIndex + 1) + lineStr;\r\n\t\t\t\tlineStr = chunk.outro + lineStr;\r\n\t\t\t}\r\n\r\n\t\t\tif (chunk.content.length > 0) {\r\n\t\t\t\tlineIndex = chunk.content.lastIndexOf(n);\r\n\t\t\t\tif (lineIndex !== -1) return chunk.content.substr(lineIndex + 1) + lineStr;\r\n\t\t\t\tlineStr = chunk.content + lineStr;\r\n\t\t\t}\r\n\r\n\t\t\tif (chunk.intro.length > 0) {\r\n\t\t\t\tlineIndex = chunk.intro.lastIndexOf(n);\r\n\t\t\t\tif (lineIndex !== -1) return chunk.intro.substr(lineIndex + 1) + lineStr;\r\n\t\t\t\tlineStr = chunk.intro + lineStr;\r\n\t\t\t}\r\n\t\t} while ((chunk = chunk.previous));\r\n\t\tlineIndex = this.intro.lastIndexOf(n);\r\n\t\tif (lineIndex !== -1) return this.intro.substr(lineIndex + 1) + lineStr;\r\n\t\treturn this.intro + lineStr;\r\n\t}\r\n\r\n\tslice(start = 0, end = this.original.length - this.offset) {\r\n\t\tstart = start + this.offset;\r\n\t\tend = end + this.offset;\r\n\r\n\t\tif (this.original.length !== 0) {\r\n\t\t\twhile (start < 0) start += this.original.length;\r\n\t\t\twhile (end < 0) end += this.original.length;\r\n\t\t}\r\n\r\n\t\tlet result = '';\r\n\r\n\t\t// find start chunk\r\n\t\tlet chunk = this.firstChunk;\r\n\t\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\r\n\t\t\t// found end chunk before start\r\n\t\t\tif (chunk.start < end && chunk.end >= end) {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\r\n\t\t\tchunk = chunk.next;\r\n\t\t}\r\n\r\n\t\tif (chunk && chunk.edited && chunk.start !== start)\r\n\t\t\tthrow new Error(`Cannot use replaced character ${start} as slice start anchor.`);\r\n\r\n\t\tconst startChunk = chunk;\r\n\t\twhile (chunk) {\r\n\t\t\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\r\n\t\t\t\tresult += chunk.intro;\r\n\t\t\t}\r\n\r\n\t\t\tconst containsEnd = chunk.start < end && chunk.end >= end;\r\n\t\t\tif (containsEnd && chunk.edited && chunk.end !== end)\r\n\t\t\t\tthrow new Error(`Cannot use replaced character ${end} as slice end anchor.`);\r\n\r\n\t\t\tconst sliceStart = startChunk === chunk ? start - chunk.start : 0;\r\n\t\t\tconst sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\r\n\r\n\t\t\tresult += chunk.content.slice(sliceStart, sliceEnd);\r\n\r\n\t\t\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\r\n\t\t\t\tresult += chunk.outro;\r\n\t\t\t}\r\n\r\n\t\t\tif (containsEnd) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tchunk = chunk.next;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// TODO deprecate this? not really very useful\r\n\tsnip(start, end) {\r\n\t\tconst clone = this.clone();\r\n\t\tclone.remove(0, start);\r\n\t\tclone.remove(end, clone.original.length);\r\n\r\n\t\treturn clone;\r\n\t}\r\n\r\n\t_split(index) {\r\n\t\tif (this.byStart[index] || this.byEnd[index]) return;\r\n\r\n\t\tlet chunk = this.lastSearchedChunk;\r\n\t\tlet previousChunk = chunk;\r\n\t\tconst searchForward = index > chunk.end;\r\n\r\n\t\twhile (chunk) {\r\n\t\t\tif (chunk.contains(index)) return this._splitChunk(chunk, index);\r\n\r\n\t\t\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\r\n\r\n\t\t\t// Prevent infinite loop (e.g. via empty chunks, where start === end)\r\n\t\t\tif (chunk === previousChunk) return;\r\n\r\n\t\t\tpreviousChunk = chunk;\r\n\t\t}\r\n\t}\r\n\r\n\t_splitChunk(chunk, index) {\r\n\t\tif (chunk.edited && chunk.content.length) {\r\n\t\t\t// zero-length edited chunks are a special case (overlapping replacements)\r\n\t\t\tconst loc = getLocator(this.original)(index);\r\n\t\t\tthrow new Error(\r\n\t\t\t\t`Cannot split a chunk that has already been edited (${loc.line}:${loc.column} – \"${chunk.original}\")`,\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst newChunk = chunk.split(index);\r\n\r\n\t\tthis.byEnd[index] = chunk;\r\n\t\tthis.byStart[index] = newChunk;\r\n\t\tthis.byEnd[newChunk.end] = newChunk;\r\n\r\n\t\tif (chunk === this.lastChunk) this.lastChunk = newChunk;\r\n\r\n\t\tthis.lastSearchedChunk = chunk;\r\n\t\treturn true;\r\n\t}\r\n\r\n\ttoString() {\r\n\t\tlet str = this.intro;\r\n\r\n\t\tlet chunk = this.firstChunk;\r\n\t\twhile (chunk) {\r\n\t\t\tstr += chunk.toString();\r\n\t\t\tchunk = chunk.next;\r\n\t\t}\r\n\r\n\t\treturn str + this.outro;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\tlet chunk = this.firstChunk;\r\n\t\tdo {\r\n\t\t\tif (\r\n\t\t\t\t(chunk.intro.length && chunk.intro.trim()) ||\r\n\t\t\t\t(chunk.content.length && chunk.content.trim()) ||\r\n\t\t\t\t(chunk.outro.length && chunk.outro.trim())\r\n\t\t\t)\r\n\t\t\t\treturn false;\r\n\t\t} while ((chunk = chunk.next));\r\n\t\treturn true;\r\n\t}\r\n\r\n\tlength() {\r\n\t\tlet chunk = this.firstChunk;\r\n\t\tlet length = 0;\r\n\t\tdo {\r\n\t\t\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\r\n\t\t} while ((chunk = chunk.next));\r\n\t\treturn length;\r\n\t}\r\n\r\n\ttrimLines() {\r\n\t\treturn this.trim('[\\\\r\\\\n]');\r\n\t}\r\n\r\n\ttrim(charType) {\r\n\t\treturn this.trimStart(charType).trimEnd(charType);\r\n\t}\r\n\r\n\ttrimEndAborted(charType) {\r\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\r\n\r\n\t\tthis.outro = this.outro.replace(rx, '');\r\n\t\tif (this.outro.length) return true;\r\n\r\n\t\tlet chunk = this.lastChunk;\r\n\r\n\t\tdo {\r\n\t\t\tconst end = chunk.end;\r\n\t\t\tconst aborted = chunk.trimEnd(rx);\r\n\r\n\t\t\t// if chunk was trimmed, we have a new lastChunk\r\n\t\t\tif (chunk.end !== end) {\r\n\t\t\t\tif (this.lastChunk === chunk) {\r\n\t\t\t\t\tthis.lastChunk = chunk.next;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\r\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\r\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (aborted) return true;\r\n\t\t\tchunk = chunk.previous;\r\n\t\t} while (chunk);\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\ttrimEnd(charType) {\r\n\t\tthis.trimEndAborted(charType);\r\n\t\treturn this;\r\n\t}\r\n\ttrimStartAborted(charType) {\r\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\r\n\r\n\t\tthis.intro = this.intro.replace(rx, '');\r\n\t\tif (this.intro.length) return true;\r\n\r\n\t\tlet chunk = this.firstChunk;\r\n\r\n\t\tdo {\r\n\t\t\tconst end = chunk.end;\r\n\t\t\tconst aborted = chunk.trimStart(rx);\r\n\r\n\t\t\tif (chunk.end !== end) {\r\n\t\t\t\t// special case...\r\n\t\t\t\tif (chunk === this.lastChunk) this.lastChunk = chunk.next;\r\n\r\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\r\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\r\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (aborted) return true;\r\n\t\t\tchunk = chunk.next;\r\n\t\t} while (chunk);\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\ttrimStart(charType) {\r\n\t\tthis.trimStartAborted(charType);\r\n\t\treturn this;\r\n\t}\r\n\r\n\thasChanged() {\r\n\t\treturn this.original !== this.toString();\r\n\t}\r\n\r\n\t_replaceRegexp(searchValue, replacement) {\r\n\t\tfunction getReplacement(match, str) {\r\n\t\t\tif (typeof replacement === 'string') {\r\n\t\t\t\treturn replacement.replace(/\\$(\\$|&|\\d+)/g, (_, i) => {\r\n\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\r\n\t\t\t\t\tif (i === '$') return '$';\r\n\t\t\t\t\tif (i === '&') return match[0];\r\n\t\t\t\t\tconst num = +i;\r\n\t\t\t\t\tif (num < match.length) return match[+i];\r\n\t\t\t\t\treturn `$${i}`;\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\treturn replacement(...match, match.index, str, match.groups);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction matchAll(re, str) {\r\n\t\t\tlet match;\r\n\t\t\tconst matches = [];\r\n\t\t\twhile ((match = re.exec(str))) {\r\n\t\t\t\tmatches.push(match);\r\n\t\t\t}\r\n\t\t\treturn matches;\r\n\t\t}\r\n\t\tif (searchValue.global) {\r\n\t\t\tconst matches = matchAll(searchValue, this.original);\r\n\t\t\tmatches.forEach((match) => {\r\n\t\t\t\tif (match.index != null) {\r\n\t\t\t\t\tconst replacement = getReplacement(match, this.original);\r\n\t\t\t\t\tif (replacement !== match[0]) {\r\n\t\t\t\t\t\tthis.overwrite(match.index, match.index + match[0].length, replacement);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconst match = this.original.match(searchValue);\r\n\t\t\tif (match && match.index != null) {\r\n\t\t\t\tconst replacement = getReplacement(match, this.original);\r\n\t\t\t\tif (replacement !== match[0]) {\r\n\t\t\t\t\tthis.overwrite(match.index, match.index + match[0].length, replacement);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t_replaceString(string, replacement) {\r\n\t\tconst { original } = this;\r\n\t\tconst index = original.indexOf(string);\r\n\r\n\t\tif (index !== -1) {\r\n\t\t\tif (typeof replacement === 'function') {\r\n\t\t\t\treplacement = replacement(string, index, original);\r\n\t\t\t}\r\n\t\t\tif (string !== replacement) {\r\n\t\t\t\tthis.overwrite(index, index + string.length, replacement);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\treplace(searchValue, replacement) {\r\n\t\tif (typeof searchValue === 'string') {\r\n\t\t\treturn this._replaceString(searchValue, replacement);\r\n\t\t}\r\n\r\n\t\treturn this._replaceRegexp(searchValue, replacement);\r\n\t}\r\n\r\n\t_replaceAllString(string, replacement) {\r\n\t\tconst { original } = this;\r\n\t\tconst stringLength = string.length;\r\n\t\tfor (\r\n\t\t\tlet index = original.indexOf(string);\r\n\t\t\tindex !== -1;\r\n\t\t\tindex = original.indexOf(string, index + stringLength)\r\n\t\t) {\r\n\t\t\tconst previous = original.slice(index, index + stringLength);\r\n\t\t\tlet _replacement = replacement;\r\n\t\t\tif (typeof replacement === 'function') {\r\n\t\t\t\t_replacement = replacement(previous, index, original);\r\n\t\t\t}\r\n\t\t\tif (previous !== _replacement) this.overwrite(index, index + stringLength, _replacement);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\treplaceAll(searchValue, replacement) {\r\n\t\tif (typeof searchValue === 'string') {\r\n\t\t\treturn this._replaceAllString(searchValue, replacement);\r\n\t\t}\r\n\r\n\t\tif (!searchValue.global) {\r\n\t\t\tthrow new TypeError(\r\n\t\t\t\t'MagicString.prototype.replaceAll called with a non-global RegExp argument',\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn this._replaceRegexp(searchValue, replacement);\r\n\t}\r\n}\r\n\r\nconst hasOwnProp = Object.prototype.hasOwnProperty;\r\n\r\nlet Bundle$1 = class Bundle {\r\n\tconstructor(options = {}) {\r\n\t\tthis.intro = options.intro || '';\r\n\t\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\r\n\t\tthis.sources = [];\r\n\t\tthis.uniqueSources = [];\r\n\t\tthis.uniqueSourceIndexByFilename = {};\r\n\t}\r\n\r\n\taddSource(source) {\r\n\t\tif (source instanceof MagicString) {\r\n\t\t\treturn this.addSource({\r\n\t\t\t\tcontent: source,\r\n\t\t\t\tfilename: source.filename,\r\n\t\t\t\tseparator: this.separator,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!isObject(source) || !source.content) {\r\n\t\t\tthrow new Error(\r\n\t\t\t\t'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`',\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t['filename', 'ignoreList', 'indentExclusionRanges', 'separator'].forEach((option) => {\r\n\t\t\tif (!hasOwnProp.call(source, option)) source[option] = source.content[option];\r\n\t\t});\r\n\r\n\t\tif (source.separator === undefined) {\r\n\t\t\t// TODO there's a bunch of this sort of thing, needs cleaning up\r\n\t\t\tsource.separator = this.separator;\r\n\t\t}\r\n\r\n\t\tif (source.filename) {\r\n\t\t\tif (!hasOwnProp.call(this.uniqueSourceIndexByFilename, source.filename)) {\r\n\t\t\t\tthis.uniqueSourceIndexByFilename[source.filename] = this.uniqueSources.length;\r\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\r\n\t\t\t} else {\r\n\t\t\t\tconst uniqueSource = this.uniqueSources[this.uniqueSourceIndexByFilename[source.filename]];\r\n\t\t\t\tif (source.content.original !== uniqueSource.content) {\r\n\t\t\t\t\tthrow new Error(`Illegal source: same filename (${source.filename}), different contents`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.sources.push(source);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tappend(str, options) {\r\n\t\tthis.addSource({\r\n\t\t\tcontent: new MagicString(str),\r\n\t\t\tseparator: (options && options.separator) || '',\r\n\t\t});\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tclone() {\r\n\t\tconst bundle = new Bundle({\r\n\t\t\tintro: this.intro,\r\n\t\t\tseparator: this.separator,\r\n\t\t});\r\n\r\n\t\tthis.sources.forEach((source) => {\r\n\t\t\tbundle.addSource({\r\n\t\t\t\tfilename: source.filename,\r\n\t\t\t\tcontent: source.content.clone(),\r\n\t\t\t\tseparator: source.separator,\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn bundle;\r\n\t}\r\n\r\n\tgenerateDecodedMap(options = {}) {\r\n\t\tconst names = [];\r\n\t\tlet x_google_ignoreList = undefined;\r\n\t\tthis.sources.forEach((source) => {\r\n\t\t\tObject.keys(source.content.storedNames).forEach((name) => {\r\n\t\t\t\tif (!~names.indexOf(name)) names.push(name);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tconst mappings = new Mappings(options.hires);\r\n\r\n\t\tif (this.intro) {\r\n\t\t\tmappings.advance(this.intro);\r\n\t\t}\r\n\r\n\t\tthis.sources.forEach((source, i) => {\r\n\t\t\tif (i > 0) {\r\n\t\t\t\tmappings.advance(this.separator);\r\n\t\t\t}\r\n\r\n\t\t\tconst sourceIndex = source.filename ? this.uniqueSourceIndexByFilename[source.filename] : -1;\r\n\t\t\tconst magicString = source.content;\r\n\t\t\tconst locate = getLocator(magicString.original);\r\n\r\n\t\t\tif (magicString.intro) {\r\n\t\t\t\tmappings.advance(magicString.intro);\r\n\t\t\t}\r\n\r\n\t\t\tmagicString.firstChunk.eachNext((chunk) => {\r\n\t\t\t\tconst loc = locate(chunk.start);\r\n\r\n\t\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\r\n\r\n\t\t\t\tif (source.filename) {\r\n\t\t\t\t\tif (chunk.edited) {\r\n\t\t\t\t\t\tmappings.addEdit(\r\n\t\t\t\t\t\t\tsourceIndex,\r\n\t\t\t\t\t\t\tchunk.content,\r\n\t\t\t\t\t\t\tloc,\r\n\t\t\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1,\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tmappings.addUneditedChunk(\r\n\t\t\t\t\t\t\tsourceIndex,\r\n\t\t\t\t\t\t\tchunk,\r\n\t\t\t\t\t\t\tmagicString.original,\r\n\t\t\t\t\t\t\tloc,\r\n\t\t\t\t\t\t\tmagicString.sourcemapLocations,\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmappings.advance(chunk.content);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\r\n\t\t\t});\r\n\r\n\t\t\tif (magicString.outro) {\r\n\t\t\t\tmappings.advance(magicString.outro);\r\n\t\t\t}\r\n\r\n\t\t\tif (source.ignoreList && sourceIndex !== -1) {\r\n\t\t\t\tif (x_google_ignoreList === undefined) {\r\n\t\t\t\t\tx_google_ignoreList = [];\r\n\t\t\t\t}\r\n\t\t\t\tx_google_ignoreList.push(sourceIndex);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : undefined,\r\n\t\t\tsources: this.uniqueSources.map((source) => {\r\n\t\t\t\treturn options.file ? getRelativePath(options.file, source.filename) : source.filename;\r\n\t\t\t}),\r\n\t\t\tsourcesContent: this.uniqueSources.map((source) => {\r\n\t\t\t\treturn options.includeContent ? source.content : null;\r\n\t\t\t}),\r\n\t\t\tnames,\r\n\t\t\tmappings: mappings.raw,\r\n\t\t\tx_google_ignoreList,\r\n\t\t};\r\n\t}\r\n\r\n\tgenerateMap(options) {\r\n\t\treturn new SourceMap(this.generateDecodedMap(options));\r\n\t}\r\n\r\n\tgetIndentString() {\r\n\t\tconst indentStringCounts = {};\r\n\r\n\t\tthis.sources.forEach((source) => {\r\n\t\t\tconst indentStr = source.content._getRawIndentString();\r\n\r\n\t\t\tif (indentStr === null) return;\r\n\r\n\t\t\tif (!indentStringCounts[indentStr]) indentStringCounts[indentStr] = 0;\r\n\t\t\tindentStringCounts[indentStr] += 1;\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\tObject.keys(indentStringCounts).sort((a, b) => {\r\n\t\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\r\n\t\t\t})[0] || '\\t'\r\n\t\t);\r\n\t}\r\n\r\n\tindent(indentStr) {\r\n\t\tif (!arguments.length) {\r\n\t\t\tindentStr = this.getIndentString();\r\n\t\t}\r\n\r\n\t\tif (indentStr === '') return this; // noop\r\n\r\n\t\tlet trailingNewline = !this.intro || this.intro.slice(-1) === '\\n';\r\n\r\n\t\tthis.sources.forEach((source, i) => {\r\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\r\n\t\t\tconst indentStart = trailingNewline || (i > 0 && /\\r?\\n$/.test(separator));\r\n\r\n\t\t\tsource.content.indent(indentStr, {\r\n\t\t\t\texclude: source.indentExclusionRanges,\r\n\t\t\t\tindentStart, //: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\r\n\t\t\t});\r\n\r\n\t\t\ttrailingNewline = source.content.lastChar() === '\\n';\r\n\t\t});\r\n\r\n\t\tif (this.intro) {\r\n\t\t\tthis.intro =\r\n\t\t\t\tindentStr +\r\n\t\t\t\tthis.intro.replace(/^[^\\n]/gm, (match, index) => {\r\n\t\t\t\t\treturn index > 0 ? indentStr + match : match;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tprepend(str) {\r\n\t\tthis.intro = str + this.intro;\r\n\t\treturn this;\r\n\t}\r\n\r\n\ttoString() {\r\n\t\tconst body = this.sources\r\n\t\t\t.map((source, i) => {\r\n\t\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\r\n\t\t\t\tconst str = (i > 0 ? separator : '') + source.content.toString();\r\n\r\n\t\t\t\treturn str;\r\n\t\t\t})\r\n\t\t\t.join('');\r\n\r\n\t\treturn this.intro + body;\r\n\t}\r\n\r\n\tisEmpty() {\r\n\t\tif (this.intro.length && this.intro.trim()) return false;\r\n\t\tif (this.sources.some((source) => !source.content.isEmpty())) return false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tlength() {\r\n\t\treturn this.sources.reduce(\r\n\t\t\t(length, source) => length + source.content.length(),\r\n\t\t\tthis.intro.length,\r\n\t\t);\r\n\t}\r\n\r\n\ttrimLines() {\r\n\t\treturn this.trim('[\\\\r\\\\n]');\r\n\t}\r\n\r\n\ttrim(charType) {\r\n\t\treturn this.trimStart(charType).trimEnd(charType);\r\n\t}\r\n\r\n\ttrimStart(charType) {\r\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\r\n\t\tthis.intro = this.intro.replace(rx, '');\r\n\r\n\t\tif (!this.intro) {\r\n\t\t\tlet source;\r\n\t\t\tlet i = 0;\r\n\r\n\t\t\tdo {\r\n\t\t\t\tsource = this.sources[i++];\r\n\t\t\t\tif (!source) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} while (!source.content.trimStartAborted(charType));\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\ttrimEnd(charType) {\r\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\r\n\r\n\t\tlet source;\r\n\t\tlet i = this.sources.length - 1;\r\n\r\n\t\tdo {\r\n\t\t\tsource = this.sources[i--];\r\n\t\t\tif (!source) {\r\n\t\t\t\tthis.intro = this.intro.replace(rx, '');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} while (!source.content.trimEndAborted(charType));\r\n\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\nfunction treeshakeNode(node, code, start, end) {\r\n    code.remove(start, end);\r\n    node.removeAnnotations(code);\r\n}\r\n\r\nconst NO_SEMICOLON = { isNoStatement: true };\r\n// This assumes there are only white-space and comments between start and the string we are looking for\r\nfunction findFirstOccurrenceOutsideComment(code, searchString, start = 0) {\r\n    let searchPos, charCodeAfterSlash;\r\n    searchPos = code.indexOf(searchString, start);\r\n    while (true) {\r\n        start = code.indexOf('/', start);\r\n        if (start === -1 || start >= searchPos)\r\n            return searchPos;\r\n        charCodeAfterSlash = code.charCodeAt(++start);\r\n        ++start;\r\n        // With our assumption, '/' always starts a comment. Determine comment type:\r\n        start =\r\n            charCodeAfterSlash === 47 /*\"/\"*/\r\n                ? code.indexOf('\\n', start) + 1\r\n                : code.indexOf('*/', start) + 2;\r\n        if (start > searchPos) {\r\n            searchPos = code.indexOf(searchString, start);\r\n        }\r\n    }\r\n}\r\nconst NON_WHITESPACE = /\\S/g;\r\nfunction findNonWhiteSpace(code, index) {\r\n    NON_WHITESPACE.lastIndex = index;\r\n    const result = NON_WHITESPACE.exec(code);\r\n    return result.index;\r\n}\r\nconst WHITESPACE = /\\s/;\r\nfunction findLastWhiteSpaceReverse(code, start, end) {\r\n    while (true) {\r\n        if (start >= end) {\r\n            return end;\r\n        }\r\n        if (WHITESPACE.test(code[end - 1])) {\r\n            end--;\r\n        }\r\n        else {\r\n            return end;\r\n        }\r\n    }\r\n}\r\n// This assumes \"code\" only contains white-space and comments\r\n// Returns position of line-comment if applicable\r\nfunction findFirstLineBreakOutsideComment(code) {\r\n    let lineBreakPos, charCodeAfterSlash, start = 0;\r\n    lineBreakPos = code.indexOf('\\n', start);\r\n    while (true) {\r\n        start = code.indexOf('/', start);\r\n        if (start === -1 || start > lineBreakPos)\r\n            return [lineBreakPos, lineBreakPos + 1];\r\n        // With our assumption, '/' always starts a comment. Determine comment type:\r\n        charCodeAfterSlash = code.charCodeAt(start + 1);\r\n        if (charCodeAfterSlash === 47 /*\"/\"*/)\r\n            return [start, lineBreakPos + 1];\r\n        start = code.indexOf('*/', start + 2) + 2;\r\n        if (start > lineBreakPos) {\r\n            lineBreakPos = code.indexOf('\\n', start);\r\n        }\r\n    }\r\n}\r\nfunction renderStatementList(statements, code, start, end, options) {\r\n    let currentNode, currentNodeStart, currentNodeNeedsBoundaries, nextNodeStart;\r\n    let nextNode = statements[0];\r\n    let nextNodeNeedsBoundaries = !nextNode.included || nextNode.needsBoundaries;\r\n    if (nextNodeNeedsBoundaries) {\r\n        nextNodeStart =\r\n            start + findFirstLineBreakOutsideComment(code.original.slice(start, nextNode.start))[1];\r\n    }\r\n    for (let nextIndex = 1; nextIndex <= statements.length; nextIndex++) {\r\n        currentNode = nextNode;\r\n        currentNodeStart = nextNodeStart;\r\n        currentNodeNeedsBoundaries = nextNodeNeedsBoundaries;\r\n        nextNode = statements[nextIndex];\r\n        nextNodeNeedsBoundaries =\r\n            nextNode === undefined ? false : !nextNode.included || nextNode.needsBoundaries;\r\n        if (currentNodeNeedsBoundaries || nextNodeNeedsBoundaries) {\r\n            nextNodeStart =\r\n                currentNode.end +\r\n                    findFirstLineBreakOutsideComment(code.original.slice(currentNode.end, nextNode === undefined ? end : nextNode.start))[1];\r\n            if (currentNode.included) {\r\n                if (currentNodeNeedsBoundaries) {\r\n                    currentNode.render(code, options, {\r\n                        end: nextNodeStart,\r\n                        start: currentNodeStart\r\n                    });\r\n                }\r\n                else {\r\n                    currentNode.render(code, options);\r\n                }\r\n            }\r\n            else {\r\n                treeshakeNode(currentNode, code, currentNodeStart, nextNodeStart);\r\n            }\r\n        }\r\n        else {\r\n            currentNode.render(code, options);\r\n        }\r\n    }\r\n}\r\n// This assumes that the first character is not part of the first node\r\nfunction getCommaSeparatedNodesWithBoundaries(nodes, code, start, end) {\r\n    const splitUpNodes = [];\r\n    let node, nextNodeStart, contentEnd, char;\r\n    let separator = start - 1;\r\n    for (const nextNode of nodes) {\r\n        if (node !== undefined) {\r\n            separator =\r\n                node.end +\r\n                    findFirstOccurrenceOutsideComment(code.original.slice(node.end, nextNode.start), ',');\r\n        }\r\n        nextNodeStart = contentEnd =\r\n            separator +\r\n                1 +\r\n                findFirstLineBreakOutsideComment(code.original.slice(separator + 1, nextNode.start))[1];\r\n        while (((char = code.original.charCodeAt(nextNodeStart)),\r\n            char === 32 /*\" \"*/ || char === 9 /*\"\\t\"*/ || char === 10 /*\"\\n\"*/ || char === 13) /*\"\\r\"*/)\r\n            nextNodeStart++;\r\n        if (node !== undefined) {\r\n            splitUpNodes.push({\r\n                contentEnd,\r\n                end: nextNodeStart,\r\n                node,\r\n                separator,\r\n                start\r\n            });\r\n        }\r\n        node = nextNode;\r\n        start = nextNodeStart;\r\n    }\r\n    splitUpNodes.push({\r\n        contentEnd: end,\r\n        end,\r\n        node: node,\r\n        separator: null,\r\n        start\r\n    });\r\n    return splitUpNodes;\r\n}\r\n// This assumes there are only white-space and comments between start and end\r\nfunction removeLineBreaks(code, start, end) {\r\n    while (true) {\r\n        const [removeStart, removeEnd] = findFirstLineBreakOutsideComment(code.original.slice(start, end));\r\n        if (removeStart === -1) {\r\n            break;\r\n        }\r\n        code.remove(start + removeStart, (start += removeEnd));\r\n    }\r\n}\r\n\r\nfunction getSystemExportStatement(exportedVariables, { exportNamesByVariable, snippets: { _, getObject, getPropertyAccess } }, modifier = '') {\r\n    if (exportedVariables.length === 1 &&\r\n        exportNamesByVariable.get(exportedVariables[0]).length === 1) {\r\n        const variable = exportedVariables[0];\r\n        return `exports(${JSON.stringify(exportNamesByVariable.get(variable)[0])},${_}${variable.getName(getPropertyAccess)}${modifier})`;\r\n    }\r\n    else {\r\n        const fields = [];\r\n        for (const variable of exportedVariables) {\r\n            for (const exportName of exportNamesByVariable.get(variable)) {\r\n                fields.push([exportName, variable.getName(getPropertyAccess) + modifier]);\r\n            }\r\n        }\r\n        return `exports(${getObject(fields, { lineBreakIndent: null })})`;\r\n    }\r\n}\r\n// This is only invoked if there is exactly one export name\r\nfunction renderSystemExportExpression(exportedVariable, expressionStart, expressionEnd, code, { exportNamesByVariable, snippets: { _ } }) {\r\n    code.prependRight(expressionStart, `exports(${JSON.stringify(exportNamesByVariable.get(exportedVariable)[0])},${_}`);\r\n    code.appendLeft(expressionEnd, ')');\r\n}\r\nfunction renderSystemExportFunction(exportedVariables, expressionStart, expressionEnd, needsParens, code, options) {\r\n    const { _, getDirectReturnIifeLeft } = options.snippets;\r\n    code.prependRight(expressionStart, getDirectReturnIifeLeft(['v'], `${getSystemExportStatement(exportedVariables, options)},${_}v`, { needsArrowReturnParens: true, needsWrappedFunction: needsParens }));\r\n    code.appendLeft(expressionEnd, ')');\r\n}\r\nfunction renderSystemExportSequenceAfterExpression(exportedVariable, expressionStart, expressionEnd, needsParens, code, options) {\r\n    const { _, getPropertyAccess } = options.snippets;\r\n    code.appendLeft(expressionEnd, `,${_}${getSystemExportStatement([exportedVariable], options)},${_}${exportedVariable.getName(getPropertyAccess)}`);\r\n    if (needsParens) {\r\n        code.prependRight(expressionStart, '(');\r\n        code.appendLeft(expressionEnd, ')');\r\n    }\r\n}\r\nfunction renderSystemExportSequenceBeforeExpression(exportedVariable, expressionStart, expressionEnd, needsParens, code, options, modifier) {\r\n    const { _ } = options.snippets;\r\n    code.prependRight(expressionStart, `${getSystemExportStatement([exportedVariable], options, modifier)},${_}`);\r\n    if (needsParens) {\r\n        code.prependRight(expressionStart, '(');\r\n        code.appendLeft(expressionEnd, ')');\r\n    }\r\n}\r\n\r\nfunction getOrCreate(map, key, init) {\r\n    const existing = map.get(key);\r\n    if (existing !== undefined) {\r\n        return existing;\r\n    }\r\n    const value = init();\r\n    map.set(key, value);\r\n    return value;\r\n}\r\nfunction getNewSet() {\r\n    return new Set();\r\n}\r\nfunction getNewArray() {\r\n    return [];\r\n}\r\n\r\nconst UnknownKey = Symbol('Unknown Key');\r\nconst UnknownNonAccessorKey = Symbol('Unknown Non-Accessor Key');\r\nconst UnknownInteger = Symbol('Unknown Integer');\r\nconst SymbolToStringTag = Symbol('Symbol.toStringTag');\r\nconst EMPTY_PATH = [];\r\nconst UNKNOWN_PATH = [UnknownKey];\r\n// For deoptimizations, this means we are modifying an unknown property but did\r\n// not lose track of the object or are creating a setter/getter;\r\n// For assignment effects it means we do not check for setter/getter effects\r\n// but only if something is mutated that is included, which is relevant for\r\n// Object.defineProperty\r\nconst UNKNOWN_NON_ACCESSOR_PATH = [UnknownNonAccessorKey];\r\nconst UNKNOWN_INTEGER_PATH = [UnknownInteger];\r\nconst EntitiesKey = Symbol('Entities');\r\nclass EntityPathTracker {\r\n    constructor() {\r\n        this.entityPaths = Object.create(null, {\r\n            [EntitiesKey]: { value: new Set() }\r\n        });\r\n    }\r\n    trackEntityAtPathAndGetIfTracked(path, entity) {\r\n        const trackedEntities = this.getEntities(path);\r\n        if (trackedEntities.has(entity))\r\n            return true;\r\n        trackedEntities.add(entity);\r\n        return false;\r\n    }\r\n    withTrackedEntityAtPath(path, entity, onUntracked, returnIfTracked) {\r\n        const trackedEntities = this.getEntities(path);\r\n        if (trackedEntities.has(entity))\r\n            return returnIfTracked;\r\n        trackedEntities.add(entity);\r\n        const result = onUntracked();\r\n        trackedEntities.delete(entity);\r\n        return result;\r\n    }\r\n    getEntities(path) {\r\n        let currentPaths = this.entityPaths;\r\n        for (const pathSegment of path) {\r\n            currentPaths = currentPaths[pathSegment] ||= Object.create(null, {\r\n                [EntitiesKey]: { value: new Set() }\r\n            });\r\n        }\r\n        return currentPaths[EntitiesKey];\r\n    }\r\n}\r\nconst SHARED_RECURSION_TRACKER = new EntityPathTracker();\r\nclass DiscriminatedPathTracker {\r\n    constructor() {\r\n        this.entityPaths = Object.create(null, {\r\n            [EntitiesKey]: { value: new Map() }\r\n        });\r\n    }\r\n    trackEntityAtPathAndGetIfTracked(path, discriminator, entity) {\r\n        let currentPaths = this.entityPaths;\r\n        for (const pathSegment of path) {\r\n            currentPaths = currentPaths[pathSegment] ||= Object.create(null, {\r\n                [EntitiesKey]: { value: new Map() }\r\n            });\r\n        }\r\n        const trackedEntities = getOrCreate(currentPaths[EntitiesKey], discriminator, (getNewSet));\r\n        if (trackedEntities.has(entity))\r\n            return true;\r\n        trackedEntities.add(entity);\r\n        return false;\r\n    }\r\n}\r\nconst UNKNOWN_INCLUDED_PATH = Object.freeze({ [UnknownKey]: EMPTY_OBJECT });\r\nclass IncludedFullPathTracker {\r\n    constructor() {\r\n        this.includedPaths = null;\r\n    }\r\n    includePathAndGetIfIncluded(path) {\r\n        let included = true;\r\n        let parent = this;\r\n        let parentSegment = 'includedPaths';\r\n        let currentPaths = (this.includedPaths ||=\r\n            ((included = false), Object.create(null)));\r\n        for (const pathSegment of path) {\r\n            // This means from here, all paths are included\r\n            if (currentPaths[UnknownKey]) {\r\n                return true;\r\n            }\r\n            // Including UnknownKey automatically includes all nested paths.\r\n            // From above, we know that UnknownKey is not included yet.\r\n            if (typeof pathSegment === 'symbol') {\r\n                // Hopefully, this saves some memory over just setting\r\n                // currentPaths[UnknownKey] = EMPTY_OBJECT\r\n                parent[parentSegment] = UNKNOWN_INCLUDED_PATH;\r\n                return false;\r\n            }\r\n            parent = currentPaths;\r\n            parentSegment = pathSegment;\r\n            currentPaths = currentPaths[pathSegment] ||= ((included = false), Object.create(null));\r\n        }\r\n        return included;\r\n    }\r\n}\r\nconst UNKNOWN_INCLUDED_TOP_LEVEL_PATH = Object.freeze({\r\n    [UnknownKey]: true\r\n});\r\nclass IncludedTopLevelPathTracker {\r\n    constructor() {\r\n        this.includedPaths = null;\r\n    }\r\n    includePathAndGetIfIncluded(path) {\r\n        let included = true;\r\n        const includedPaths = (this.includedPaths ||=\r\n            ((included = false), Object.create(null)));\r\n        if (includedPaths[UnknownKey]) {\r\n            return true;\r\n        }\r\n        const [firstPathSegment, secondPathSegment] = path;\r\n        if (!firstPathSegment) {\r\n            return included;\r\n        }\r\n        if (typeof firstPathSegment === 'symbol') {\r\n            this.includedPaths = UNKNOWN_INCLUDED_TOP_LEVEL_PATH;\r\n            return false;\r\n        }\r\n        if (secondPathSegment) {\r\n            if (includedPaths[firstPathSegment] === UnknownKey) {\r\n                return true;\r\n            }\r\n            includedPaths[firstPathSegment] = UnknownKey;\r\n            return false;\r\n        }\r\n        if (includedPaths[firstPathSegment]) {\r\n            return true;\r\n        }\r\n        includedPaths[firstPathSegment] = true;\r\n        return false;\r\n    }\r\n    includeAllPaths(entity, context, basePath) {\r\n        const { includedPaths } = this;\r\n        if (includedPaths) {\r\n            if (includedPaths[UnknownKey]) {\r\n                entity.includePath([...basePath, UnknownKey], context);\r\n            }\r\n            else {\r\n                const inclusionEntries = Object.entries(includedPaths);\r\n                if (inclusionEntries.length === 0) {\r\n                    entity.includePath(basePath, context);\r\n                }\r\n                else {\r\n                    for (const [key, value] of inclusionEntries) {\r\n                        entity.includePath(value === UnknownKey ? [...basePath, key, UnknownKey] : [...basePath, key], context);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/** @import { Node } from 'estree' */\r\n\r\n/**\r\n * @param {Node} node\r\n * @param {Node} parent\r\n * @returns {boolean}\r\n */\r\nfunction is_reference(node, parent) {\r\n\tif (node.type === 'MemberExpression') {\r\n\t\treturn !node.computed && is_reference(node.object, node);\r\n\t}\r\n\r\n\tif (node.type !== 'Identifier') return false;\r\n\r\n\tswitch (parent?.type) {\r\n\t\t// disregard `bar` in `foo.bar`\r\n\t\tcase 'MemberExpression':\r\n\t\t\treturn parent.computed || node === parent.object;\r\n\r\n\t\t// disregard the `foo` in `class {foo(){}}` but keep it in `class {[foo](){}}`\r\n\t\tcase 'MethodDefinition':\r\n\t\t\treturn parent.computed;\r\n\r\n\t\t// disregard the `meta` in `import.meta`\r\n\t\tcase 'MetaProperty':\r\n\t\t\treturn parent.meta === node;\r\n\r\n\t\t// disregard the `foo` in `class {foo=bar}` but keep it in `class {[foo]=bar}` and `class {bar=foo}`\r\n\t\tcase 'PropertyDefinition':\r\n\t\t\treturn parent.computed || node === parent.value;\r\n\r\n\t\t// disregard the `bar` in `{ bar: foo }`, but keep it in `{ [bar]: foo }`\r\n\t\tcase 'Property':\r\n\t\t\treturn parent.computed || node === parent.value;\r\n\r\n\t\t// disregard the `bar` in `export { foo as bar }` or\r\n\t\t// the foo in `import { foo as bar }`\r\n\t\tcase 'ExportSpecifier':\r\n\t\tcase 'ImportSpecifier':\r\n\t\t\treturn node === parent.local;\r\n\r\n\t\t// disregard the `foo` in `foo: while (...) { ... break foo; ... continue foo;}`\r\n\t\tcase 'LabeledStatement':\r\n\t\tcase 'BreakStatement':\r\n\t\tcase 'ContinueStatement':\r\n\t\t\treturn false;\r\n\r\n\t\tdefault:\r\n\t\t\treturn true;\r\n\t}\r\n}\r\n\r\nfunction createInclusionContext() {\r\n    return {\r\n        brokenFlow: false,\r\n        hasBreak: false,\r\n        hasContinue: false,\r\n        includedCallArguments: new Set(),\r\n        includedLabels: new Set()\r\n    };\r\n}\r\nfunction createHasEffectsContext() {\r\n    return {\r\n        accessed: new EntityPathTracker(),\r\n        assigned: new EntityPathTracker(),\r\n        brokenFlow: false,\r\n        called: new DiscriminatedPathTracker(),\r\n        hasBreak: false,\r\n        hasContinue: false,\r\n        ignore: {\r\n            breaks: false,\r\n            continues: false,\r\n            labels: new Set(),\r\n            returnYield: false,\r\n            this: false\r\n        },\r\n        includedLabels: new Set(),\r\n        instantiated: new DiscriminatedPathTracker(),\r\n        replacedVariableInits: new Map()\r\n    };\r\n}\r\n\r\nfunction isFlagSet(flags, flag) {\r\n    return (flags & flag) !== 0;\r\n}\r\nfunction setFlag(flags, flag, value) {\r\n    return (flags & ~flag) | (-value & flag);\r\n}\r\n\r\nconst UnknownValue = Symbol('Unknown Value');\r\nconst UnknownTruthyValue = Symbol('Unknown Truthy Value');\r\nconst UnknownFalsyValue = Symbol('Unknown Falsy Value');\r\nclass ExpressionEntity {\r\n    constructor() {\r\n        this.flags = 0;\r\n    }\r\n    get included() {\r\n        return isFlagSet(this.flags, 1 /* Flag.included */);\r\n    }\r\n    set included(value) {\r\n        this.flags = setFlag(this.flags, 1 /* Flag.included */, value);\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, _path, _recursionTracker) {\r\n        deoptimizeInteraction(interaction);\r\n    }\r\n    deoptimizePath(_path) { }\r\n    /**\r\n     * If possible it returns a stringifyable literal value for this node that\r\n     * can be used for inlining or comparing values. Otherwise, it should return\r\n     * UnknownValue.\r\n     */\r\n    getLiteralValueAtPath(_path, _recursionTracker, _origin) {\r\n        return UnknownValue;\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(_path, _interaction, _recursionTracker, _origin) {\r\n        return UNKNOWN_RETURN_EXPRESSION;\r\n    }\r\n    hasEffectsOnInteractionAtPath(_path, _interaction, _context) {\r\n        return true;\r\n    }\r\n    include(context, _includeChildrenRecursively, _options) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n    }\r\n    includeNode(_context) {\r\n        this.included = true;\r\n    }\r\n    includePath(_path, context) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n    }\r\n    /* We are both including and including an unknown path here as the former\r\n     * ensures that nested nodes are included while the latter ensures that all\r\n     * paths of the expression are included.\r\n     * */\r\n    includeCallArguments(interaction, context) {\r\n        includeInteraction(interaction, context);\r\n    }\r\n    shouldBeIncluded(_context) {\r\n        return true;\r\n    }\r\n}\r\nconst UNKNOWN_EXPRESSION = new (class UnknownExpression extends ExpressionEntity {\r\n})();\r\nconst UNKNOWN_RETURN_EXPRESSION = [\r\n    UNKNOWN_EXPRESSION,\r\n    false\r\n];\r\nconst deoptimizeInteraction = (interaction) => {\r\n    for (const argument of interaction.args) {\r\n        argument?.deoptimizePath(UNKNOWN_PATH);\r\n    }\r\n};\r\nconst includeInteraction = (interaction, context) => {\r\n    // We do not re-include the \"this\" argument as we expect this is already\r\n    // re-included at the call site\r\n    interaction.args[0]?.includePath(UNKNOWN_PATH, context);\r\n    includeInteractionWithoutThis(interaction, context);\r\n};\r\nconst includeInteractionWithoutThis = ({ args }, context) => {\r\n    for (let argumentIndex = 1; argumentIndex < args.length; argumentIndex++) {\r\n        const argument = args[argumentIndex];\r\n        if (argument) {\r\n            argument.includePath(UNKNOWN_PATH, context);\r\n            argument.include(context, false);\r\n        }\r\n    }\r\n};\r\n\r\nconst INTERACTION_ACCESSED = 0;\r\nconst INTERACTION_ASSIGNED = 1;\r\nconst INTERACTION_CALLED = 2;\r\nconst NODE_INTERACTION_UNKNOWN_ACCESS = {\r\n    args: [null],\r\n    type: INTERACTION_ACCESSED\r\n};\r\nconst NODE_INTERACTION_UNKNOWN_ASSIGNMENT = {\r\n    args: [null, UNKNOWN_EXPRESSION],\r\n    type: INTERACTION_ASSIGNED\r\n};\r\n// While this is technically a call without arguments, we can compare against\r\n// this reference in places where precise values or this argument would make a\r\n// difference\r\nconst NODE_INTERACTION_UNKNOWN_CALL = {\r\n    args: [null],\r\n    type: INTERACTION_CALLED,\r\n    withNew: false\r\n};\r\n\r\nconst PureFunctionKey = Symbol('PureFunction');\r\nconst getPureFunctions = ({ treeshake }) => {\r\n    const pureFunctions = Object.create(null);\r\n    for (const functionName of treeshake ? treeshake.manualPureFunctions : []) {\r\n        let currentFunctions = pureFunctions;\r\n        for (const pathSegment of functionName.split('.')) {\r\n            currentFunctions = currentFunctions[pathSegment] ||= Object.create(null);\r\n        }\r\n        currentFunctions[PureFunctionKey] = true;\r\n    }\r\n    return pureFunctions;\r\n};\r\n\r\nclass Variable extends ExpressionEntity {\r\n    markReassigned() {\r\n        this.isReassigned = true;\r\n    }\r\n    constructor(name) {\r\n        super();\r\n        this.name = name;\r\n        this.alwaysRendered = false;\r\n        this.forbiddenNames = null;\r\n        this.globalName = null;\r\n        this.initReached = false;\r\n        this.isId = false;\r\n        this.kind = null;\r\n        this.renderBaseName = null;\r\n        this.renderName = null;\r\n        this.isReassigned = false;\r\n        this.onlyFunctionCallUsed = true;\r\n    }\r\n    /**\r\n     * Binds identifiers that reference this variable to this variable.\r\n     * Necessary to be able to change variable names.\r\n     */\r\n    addReference(_identifier) { }\r\n    /**\r\n     * Check if the identifier variable is only used as function call\r\n     * @returns true if the variable is only used as function call\r\n     */\r\n    getOnlyFunctionCallUsed() {\r\n        return this.onlyFunctionCallUsed;\r\n    }\r\n    /**\r\n     * Collect the places where the identifier variable is used\r\n     * @param usedPlace Where the variable is used\r\n     */\r\n    addUsedPlace(usedPlace) {\r\n        const isFunctionCall = usedPlace.parent.type === CallExpression$1 &&\r\n            usedPlace.parent.callee === usedPlace;\r\n        if (!isFunctionCall && usedPlace.parent.type !== ExportDefaultDeclaration$1) {\r\n            this.onlyFunctionCallUsed = false;\r\n        }\r\n    }\r\n    /**\r\n     * Prevent this variable from being renamed to this name to avoid name\r\n     * collisions\r\n     */\r\n    forbidName(name) {\r\n        (this.forbiddenNames ||= new Set()).add(name);\r\n    }\r\n    getBaseVariableName() {\r\n        return (this.renderedLikeHoisted?.getBaseVariableName() ||\r\n            this.renderBaseName ||\r\n            this.renderName ||\r\n            this.name);\r\n    }\r\n    getName(getPropertyAccess, useOriginalName) {\r\n        if (this.globalName) {\r\n            return this.globalName;\r\n        }\r\n        if (useOriginalName?.(this)) {\r\n            return this.name;\r\n        }\r\n        if (this.renderedLikeHoisted) {\r\n            return this.renderedLikeHoisted.getName(getPropertyAccess, useOriginalName);\r\n        }\r\n        const name = this.renderName || this.name;\r\n        return this.renderBaseName ? `${this.renderBaseName}${getPropertyAccess(name)}` : name;\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, { type }, _context) {\r\n        return type !== INTERACTION_ACCESSED || path.length > 0;\r\n    }\r\n    /**\r\n     * Marks this variable as being part of the bundle, which is usually the case\r\n     * when one of its identifiers becomes part of the bundle. Returns true if it\r\n     * has not been included previously. Once a variable is included, it should\r\n     * take care all its declarations are included.\r\n     */\r\n    includePath(path, context) {\r\n        this.included = true;\r\n        this.renderedLikeHoisted?.includePath(path, context);\r\n    }\r\n    /**\r\n     * Links the rendered name of this variable to another variable and includes\r\n     * this variable if the other variable is included.\r\n     */\r\n    renderLikeHoisted(variable) {\r\n        this.renderedLikeHoisted = variable;\r\n    }\r\n    markCalledFromTryStatement() { }\r\n    setRenderNames(baseName, name) {\r\n        this.renderBaseName = baseName;\r\n        this.renderName = name;\r\n    }\r\n}\r\n\r\nclass ExternalVariable extends Variable {\r\n    constructor(module, name) {\r\n        super(name);\r\n        this.referenced = false;\r\n        this.module = module;\r\n        this.isNamespace = name === '*';\r\n    }\r\n    addReference(identifier) {\r\n        this.referenced = true;\r\n        if (this.name === 'default' || this.name === '*') {\r\n            this.module.suggestName(identifier.name);\r\n        }\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, { type }) {\r\n        return type !== INTERACTION_ACCESSED || path.length > (this.isNamespace ? 1 : 0);\r\n    }\r\n    includePath(path, context) {\r\n        super.includePath(path, context);\r\n        this.module.used = true;\r\n    }\r\n}\r\n\r\nfunction cacheObjectGetters(object, getterProperties) {\r\n    for (const property of getterProperties) {\r\n        const propertyGetter = Object.getOwnPropertyDescriptor(object, property).get;\r\n        Object.defineProperty(object, property, {\r\n            get() {\r\n                const value = propertyGetter.call(object);\r\n                // This replaces the getter with a fixed value for subsequent calls\r\n                Object.defineProperty(object, property, { value });\r\n                return value;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nconst RESERVED_NAMES = new Set([\r\n    'await',\r\n    'break',\r\n    'case',\r\n    'catch',\r\n    'class',\r\n    'const',\r\n    'continue',\r\n    'debugger',\r\n    'default',\r\n    'delete',\r\n    'do',\r\n    'else',\r\n    'enum',\r\n    'eval',\r\n    'export',\r\n    'extends',\r\n    'false',\r\n    'finally',\r\n    'for',\r\n    'function',\r\n    'if',\r\n    'implements',\r\n    'import',\r\n    'in',\r\n    'instanceof',\r\n    'interface',\r\n    'let',\r\n    'NaN',\r\n    'new',\r\n    'null',\r\n    'package',\r\n    'private',\r\n    'protected',\r\n    'public',\r\n    'return',\r\n    'static',\r\n    'super',\r\n    'switch',\r\n    'this',\r\n    'throw',\r\n    'true',\r\n    'try',\r\n    'typeof',\r\n    'undefined',\r\n    'var',\r\n    'void',\r\n    'while',\r\n    'with',\r\n    'yield'\r\n]);\r\n\r\nconst illegalCharacters = /[^\\w$]/g;\r\nconst startsWithDigit = (value) => /\\d/.test(value[0]);\r\nconst needsEscape = (value) => startsWithDigit(value) || RESERVED_NAMES.has(value) || value === 'arguments';\r\nfunction isLegal(value) {\r\n    if (needsEscape(value)) {\r\n        return false;\r\n    }\r\n    return !illegalCharacters.test(value);\r\n}\r\nfunction makeLegal(value) {\r\n    value = value\r\n        .replace(/-(\\w)/g, (_, letter) => letter.toUpperCase())\r\n        .replace(illegalCharacters, '_');\r\n    if (needsEscape(value))\r\n        value = `_${value}`;\r\n    return value || '_';\r\n}\r\nconst VALID_IDENTIFIER_REGEXP = /^[$_\\p{ID_Start}][$\\u200C\\u200D\\p{ID_Continue}]*$/u;\r\nconst NUMBER_REGEXP = /^(?:0|[1-9]\\d*)$/;\r\nfunction stringifyObjectKeyIfNeeded(key) {\r\n    if (VALID_IDENTIFIER_REGEXP.test(key)) {\r\n        return key === '__proto__' ? '[\"__proto__\"]' : key;\r\n    }\r\n    if (NUMBER_REGEXP.test(key) && +key <= Number.MAX_SAFE_INTEGER) {\r\n        return key;\r\n    }\r\n    return JSON.stringify(key);\r\n}\r\nfunction stringifyIdentifierIfNeeded(key) {\r\n    if (VALID_IDENTIFIER_REGEXP.test(key)) {\r\n        return key;\r\n    }\r\n    return JSON.stringify(key);\r\n}\r\n\r\nclass ExternalModule {\r\n    constructor(options, id, moduleSideEffects, meta, renormalizeRenderPath, attributes) {\r\n        this.options = options;\r\n        this.id = id;\r\n        this.renormalizeRenderPath = renormalizeRenderPath;\r\n        this.dynamicImporters = [];\r\n        this.execIndex = Infinity;\r\n        this.exportedVariables = new Map();\r\n        this.importers = [];\r\n        this.reexported = false;\r\n        this.used = false;\r\n        this.declarations = new Map();\r\n        this.mostCommonSuggestion = 0;\r\n        this.nameSuggestions = new Map();\r\n        this.suggestedVariableName = makeLegal(id.split(/[/\\\\]/).pop());\r\n        const { importers, dynamicImporters } = this;\r\n        this.info = {\r\n            ast: null,\r\n            attributes,\r\n            code: null,\r\n            dynamicallyImportedIdResolutions: EMPTY_ARRAY,\r\n            dynamicallyImportedIds: EMPTY_ARRAY,\r\n            get dynamicImporters() {\r\n                return dynamicImporters.sort();\r\n            },\r\n            exportedBindings: null,\r\n            exports: null,\r\n            hasDefaultExport: null,\r\n            id,\r\n            implicitlyLoadedAfterOneOf: EMPTY_ARRAY,\r\n            implicitlyLoadedBefore: EMPTY_ARRAY,\r\n            importedIdResolutions: EMPTY_ARRAY,\r\n            importedIds: EMPTY_ARRAY,\r\n            get importers() {\r\n                return importers.sort();\r\n            },\r\n            isEntry: false,\r\n            isExternal: true,\r\n            isIncluded: null,\r\n            meta,\r\n            moduleSideEffects,\r\n            syntheticNamedExports: false\r\n        };\r\n    }\r\n    cacheInfoGetters() {\r\n        cacheObjectGetters(this.info, ['dynamicImporters', 'importers']);\r\n    }\r\n    getVariableForExportName(name) {\r\n        const declaration = this.declarations.get(name);\r\n        if (declaration)\r\n            return [declaration];\r\n        const externalVariable = new ExternalVariable(this, name);\r\n        this.declarations.set(name, externalVariable);\r\n        this.exportedVariables.set(externalVariable, name);\r\n        return [externalVariable];\r\n    }\r\n    suggestName(name) {\r\n        const value = (this.nameSuggestions.get(name) ?? 0) + 1;\r\n        this.nameSuggestions.set(name, value);\r\n        if (value > this.mostCommonSuggestion) {\r\n            this.mostCommonSuggestion = value;\r\n            this.suggestedVariableName = name;\r\n        }\r\n    }\r\n    warnUnusedImports() {\r\n        const unused = [...this.declarations]\r\n            .filter(([name, declaration]) => name !== '*' && !declaration.included && !this.reexported && !declaration.referenced)\r\n            .map(([name]) => name);\r\n        if (unused.length === 0)\r\n            return;\r\n        const importersSet = new Set();\r\n        for (const name of unused) {\r\n            for (const importer of this.declarations.get(name).module.importers) {\r\n                importersSet.add(importer);\r\n            }\r\n        }\r\n        const importersArray = [...importersSet];\r\n        this.options.onLog(LOGLEVEL_WARN, logUnusedExternalImports(this.id, unused, importersArray));\r\n    }\r\n}\r\n\r\nfunction markModuleAndImpureDependenciesAsExecuted(baseModule) {\r\n    baseModule.isExecuted = true;\r\n    const modules = [baseModule];\r\n    const visitedModules = new Set();\r\n    for (const module of modules) {\r\n        for (const dependency of [...module.dependencies, ...module.implicitlyLoadedBefore]) {\r\n            if (!(dependency instanceof ExternalModule) &&\r\n                !dependency.isExecuted &&\r\n                (dependency.info.moduleSideEffects || module.implicitlyLoadedBefore.has(dependency)) &&\r\n                !visitedModules.has(dependency.id)) {\r\n                dependency.isExecuted = true;\r\n                visitedModules.add(dependency.id);\r\n                modules.push(dependency);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst doNothing = () => { };\r\n\r\n// This file is generated by scripts/generate-child-node-keys.js.\r\n// Do not edit this file directly.\r\nconst childNodeKeys = {\r\n    ArrayExpression: ['elements'],\r\n    ArrayPattern: ['elements'],\r\n    ArrowFunctionExpression: ['params', 'body'],\r\n    AssignmentExpression: ['left', 'right'],\r\n    AssignmentPattern: ['left', 'right'],\r\n    AwaitExpression: ['argument'],\r\n    BinaryExpression: ['left', 'right'],\r\n    BlockStatement: ['body'],\r\n    BreakStatement: ['label'],\r\n    CallExpression: ['callee', 'arguments'],\r\n    CatchClause: ['param', 'body'],\r\n    ChainExpression: ['expression'],\r\n    ClassBody: ['body'],\r\n    ClassDeclaration: ['decorators', 'id', 'superClass', 'body'],\r\n    ClassExpression: ['decorators', 'id', 'superClass', 'body'],\r\n    ConditionalExpression: ['test', 'consequent', 'alternate'],\r\n    ContinueStatement: ['label'],\r\n    DebuggerStatement: [],\r\n    Decorator: ['expression'],\r\n    DoWhileStatement: ['body', 'test'],\r\n    EmptyStatement: [],\r\n    ExportAllDeclaration: ['exported', 'source', 'attributes'],\r\n    ExportDefaultDeclaration: ['declaration'],\r\n    ExportNamedDeclaration: ['specifiers', 'source', 'attributes', 'declaration'],\r\n    ExportSpecifier: ['local', 'exported'],\r\n    ExpressionStatement: ['expression'],\r\n    ForInStatement: ['left', 'right', 'body'],\r\n    ForOfStatement: ['left', 'right', 'body'],\r\n    ForStatement: ['init', 'test', 'update', 'body'],\r\n    FunctionDeclaration: ['id', 'params', 'body'],\r\n    FunctionExpression: ['id', 'params', 'body'],\r\n    Identifier: [],\r\n    IfStatement: ['test', 'consequent', 'alternate'],\r\n    ImportAttribute: ['key', 'value'],\r\n    ImportDeclaration: ['specifiers', 'source', 'attributes'],\r\n    ImportDefaultSpecifier: ['local'],\r\n    ImportExpression: ['source', 'options'],\r\n    ImportNamespaceSpecifier: ['local'],\r\n    ImportSpecifier: ['imported', 'local'],\r\n    JSXAttribute: ['name', 'value'],\r\n    JSXClosingElement: ['name'],\r\n    JSXClosingFragment: [],\r\n    JSXElement: ['openingElement', 'children', 'closingElement'],\r\n    JSXEmptyExpression: [],\r\n    JSXExpressionContainer: ['expression'],\r\n    JSXFragment: ['openingFragment', 'children', 'closingFragment'],\r\n    JSXIdentifier: [],\r\n    JSXMemberExpression: ['object', 'property'],\r\n    JSXNamespacedName: ['namespace', 'name'],\r\n    JSXOpeningElement: ['name', 'attributes'],\r\n    JSXOpeningFragment: [],\r\n    JSXSpreadAttribute: ['argument'],\r\n    JSXSpreadChild: ['expression'],\r\n    JSXText: [],\r\n    LabeledStatement: ['label', 'body'],\r\n    Literal: [],\r\n    LogicalExpression: ['left', 'right'],\r\n    MemberExpression: ['object', 'property'],\r\n    MetaProperty: ['meta', 'property'],\r\n    MethodDefinition: ['decorators', 'key', 'value'],\r\n    NewExpression: ['callee', 'arguments'],\r\n    ObjectExpression: ['properties'],\r\n    ObjectPattern: ['properties'],\r\n    PanicError: [],\r\n    ParseError: [],\r\n    PrivateIdentifier: [],\r\n    Program: ['body'],\r\n    Property: ['key', 'value'],\r\n    PropertyDefinition: ['decorators', 'key', 'value'],\r\n    RestElement: ['argument'],\r\n    ReturnStatement: ['argument'],\r\n    SequenceExpression: ['expressions'],\r\n    SpreadElement: ['argument'],\r\n    StaticBlock: ['body'],\r\n    Super: [],\r\n    SwitchCase: ['test', 'consequent'],\r\n    SwitchStatement: ['discriminant', 'cases'],\r\n    TaggedTemplateExpression: ['tag', 'quasi'],\r\n    TemplateElement: [],\r\n    TemplateLiteral: ['quasis', 'expressions'],\r\n    ThisExpression: [],\r\n    ThrowStatement: ['argument'],\r\n    TryStatement: ['block', 'handler', 'finalizer'],\r\n    UnaryExpression: ['argument'],\r\n    UpdateExpression: ['argument'],\r\n    VariableDeclaration: ['declarations'],\r\n    VariableDeclarator: ['id', 'init'],\r\n    WhileStatement: ['test', 'body'],\r\n    YieldExpression: ['argument']\r\n};\r\n\r\nconst INCLUDE_PARAMETERS = 'variables';\r\nconst IS_SKIPPED_CHAIN = Symbol('IS_SKIPPED_CHAIN');\r\nclass NodeBase extends ExpressionEntity {\r\n    /**\r\n     * Nodes can apply custom deoptimizations once they become part of the\r\n     * executed code. To do this, they must initialize this as false, implement\r\n     * applyDeoptimizations and call this from include and hasEffects if they have\r\n     * custom handlers\r\n     */\r\n    get deoptimized() {\r\n        return isFlagSet(this.flags, 2 /* Flag.deoptimized */);\r\n    }\r\n    set deoptimized(value) {\r\n        this.flags = setFlag(this.flags, 2 /* Flag.deoptimized */, value);\r\n    }\r\n    constructor(parent, parentScope) {\r\n        super();\r\n        this.parent = parent;\r\n        this.scope = parentScope;\r\n        this.createScope(parentScope);\r\n    }\r\n    addExportedVariables(_variables, _exportNamesByVariable) { }\r\n    /**\r\n     * Override this to bind assignments to variables and do any initialisations\r\n     * that require the scopes to be populated with variables.\r\n     */\r\n    bind() {\r\n        for (const key of childNodeKeys[this.type]) {\r\n            const value = this[key];\r\n            if (Array.isArray(value)) {\r\n                for (const child of value) {\r\n                    child?.bind();\r\n                }\r\n            }\r\n            else if (value) {\r\n                value.bind();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Override if this node should receive a different scope than the parent\r\n     * scope.\r\n     */\r\n    createScope(parentScope) {\r\n        this.scope = parentScope;\r\n    }\r\n    hasEffects(context) {\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        for (const key of childNodeKeys[this.type]) {\r\n            const value = this[key];\r\n            if (value === null)\r\n                continue;\r\n            if (Array.isArray(value)) {\r\n                for (const child of value) {\r\n                    if (child?.hasEffects(context))\r\n                        return true;\r\n                }\r\n            }\r\n            else if (value.hasEffects(context))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    hasEffectsAsAssignmentTarget(context, _checkAccess) {\r\n        return (this.hasEffects(context) ||\r\n            this.hasEffectsOnInteractionAtPath(EMPTY_PATH, this.assignmentInteraction, context));\r\n    }\r\n    include(context, includeChildrenRecursively, _options) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        for (const key of childNodeKeys[this.type]) {\r\n            const value = this[key];\r\n            if (value === null)\r\n                continue;\r\n            if (Array.isArray(value)) {\r\n                for (const child of value) {\r\n                    child?.include(context, includeChildrenRecursively);\r\n                }\r\n            }\r\n            else {\r\n                value.include(context, includeChildrenRecursively);\r\n            }\r\n        }\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        for (const key of childNodeKeys[this.type]) {\r\n            const value = this[key];\r\n            if (value === null)\r\n                continue;\r\n            if (Array.isArray(value)) {\r\n                for (const child of value) {\r\n                    child?.includePath(UNKNOWN_PATH, context);\r\n                }\r\n            }\r\n            else {\r\n                value.includePath(UNKNOWN_PATH, context);\r\n            }\r\n        }\r\n    }\r\n    includeAsAssignmentTarget(context, includeChildrenRecursively, _deoptimizeAccess) {\r\n        this.include(context, includeChildrenRecursively);\r\n    }\r\n    /**\r\n     * Override to perform special initialisation steps after the scope is\r\n     * initialised\r\n     */\r\n    initialise() {\r\n        this.scope.context.magicString.addSourcemapLocation(this.start);\r\n        this.scope.context.magicString.addSourcemapLocation(this.end);\r\n    }\r\n    parseNode(esTreeNode) {\r\n        for (const [key, value] of Object.entries(esTreeNode)) {\r\n            // Skip properties defined on the class already.\r\n            // This way, we can override this function to add custom initialisation and then call super.parseNode\r\n            // Note: this doesn't skip properties with defined getters/setters which we use to pack wrap booleans\r\n            // in bitfields. Those are still assigned from the value in the esTreeNode.\r\n            if (this.hasOwnProperty(key))\r\n                continue;\r\n            if (key.charCodeAt(0) === 95 /* _ */) {\r\n                if (key === ANNOTATION_KEY) {\r\n                    this.annotations = value;\r\n                }\r\n                else if (key === INVALID_ANNOTATION_KEY) {\r\n                    this.invalidAnnotations = value;\r\n                }\r\n            }\r\n            else if (typeof value !== 'object' || value === null) {\r\n                this[key] = value;\r\n            }\r\n            else if (Array.isArray(value)) {\r\n                this[key] = new Array(value.length);\r\n                let index = 0;\r\n                for (const child of value) {\r\n                    this[key][index++] =\r\n                        child === null\r\n                            ? null\r\n                            : new (this.scope.context.getNodeConstructor(child.type))(this, this.scope).parseNode(child);\r\n                }\r\n            }\r\n            else {\r\n                this[key] = new (this.scope.context.getNodeConstructor(value.type))(this, this.scope).parseNode(value);\r\n            }\r\n        }\r\n        // extend child keys for unknown node types\r\n        childNodeKeys[esTreeNode.type] ||= createChildNodeKeysForNode(esTreeNode);\r\n        this.initialise();\r\n        return this;\r\n    }\r\n    removeAnnotations(code) {\r\n        if (this.annotations) {\r\n            for (const annotation of this.annotations) {\r\n                code.remove(annotation.start, annotation.end);\r\n            }\r\n        }\r\n    }\r\n    render(code, options) {\r\n        for (const key of childNodeKeys[this.type]) {\r\n            const value = this[key];\r\n            if (value === null)\r\n                continue;\r\n            if (Array.isArray(value)) {\r\n                for (const child of value) {\r\n                    child?.render(code, options);\r\n                }\r\n            }\r\n            else {\r\n                value.render(code, options);\r\n            }\r\n        }\r\n    }\r\n    setAssignedValue(value) {\r\n        this.assignmentInteraction = { args: [null, value], type: INTERACTION_ASSIGNED };\r\n    }\r\n    shouldBeIncluded(context) {\r\n        return this.included || (!context.brokenFlow && this.hasEffects(createHasEffectsContext()));\r\n    }\r\n    /**\r\n     * Just deoptimize everything by default so that when e.g. we do not track\r\n     * something properly, it is deoptimized.\r\n     * @protected\r\n     */\r\n    applyDeoptimizations() {\r\n        this.deoptimized = true;\r\n        for (const key of childNodeKeys[this.type]) {\r\n            const value = this[key];\r\n            if (value === null)\r\n                continue;\r\n            if (Array.isArray(value)) {\r\n                for (const child of value) {\r\n                    child?.deoptimizePath(UNKNOWN_PATH);\r\n                }\r\n            }\r\n            else {\r\n                value.deoptimizePath(UNKNOWN_PATH);\r\n            }\r\n        }\r\n        this.scope.context.requestTreeshakingPass();\r\n    }\r\n}\r\nfunction createChildNodeKeysForNode(esTreeNode) {\r\n    return Object.keys(esTreeNode).filter(key => typeof esTreeNode[key] === 'object' && key.charCodeAt(0) !== 95 /* _ */);\r\n}\r\nfunction onlyIncludeSelf() {\r\n    this.included = true;\r\n    if (!this.deoptimized)\r\n        this.applyDeoptimizations();\r\n}\r\nfunction onlyIncludeSelfNoDeoptimize() {\r\n    this.included = true;\r\n}\r\nfunction doNotDeoptimize() {\r\n    this.deoptimized = true;\r\n}\r\n\r\nfunction isObjectExpressionNode(node) {\r\n    return node instanceof NodeBase && node.type === ObjectExpression$1;\r\n}\r\nfunction isPropertyNode(node) {\r\n    return node instanceof NodeBase && node.type === Property$1;\r\n}\r\nfunction isArrowFunctionExpressionNode(node) {\r\n    return node instanceof NodeBase && node.type === ArrowFunctionExpression$1;\r\n}\r\nfunction isFunctionExpressionNode(node) {\r\n    return node instanceof NodeBase && node.type === FunctionExpression$1;\r\n}\r\nfunction isCallExpressionNode(node) {\r\n    return node instanceof NodeBase && node.type === CallExpression$1;\r\n}\r\nfunction isMemberExpressionNode(node) {\r\n    return node instanceof NodeBase && node.type === MemberExpression$1;\r\n}\r\nfunction isImportExpressionNode(node) {\r\n    return node instanceof NodeBase && node.type === ImportExpression$1;\r\n}\r\nfunction isAwaitExpressionNode(node) {\r\n    return node instanceof NodeBase && node.type === AwaitExpression$1;\r\n}\r\nfunction isIdentifierNode(node) {\r\n    return node instanceof NodeBase && node.type === Identifier$1;\r\n}\r\n\r\nfunction assembleMemberDescriptions(memberDescriptions, inheritedDescriptions = null) {\r\n    return Object.create(inheritedDescriptions, memberDescriptions);\r\n}\r\nconst UNDEFINED_EXPRESSION = new (class UndefinedExpression extends ExpressionEntity {\r\n    getLiteralValueAtPath(path) {\r\n        return path.length > 0 ? UnknownValue : undefined;\r\n    }\r\n})();\r\nconst returnsUnknown = {\r\n    value: {\r\n        hasEffectsWhenCalled: null,\r\n        returns: UNKNOWN_EXPRESSION\r\n    }\r\n};\r\nconst UNKNOWN_LITERAL_BOOLEAN = new (class UnknownBoolean extends ExpressionEntity {\r\n    getReturnExpressionWhenCalledAtPath(path) {\r\n        if (path.length === 1) {\r\n            return getMemberReturnExpressionWhenCalled(literalBooleanMembers, path[0]);\r\n        }\r\n        return UNKNOWN_RETURN_EXPRESSION;\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        if (interaction.type === INTERACTION_ACCESSED) {\r\n            return path.length > 1;\r\n        }\r\n        if (interaction.type === INTERACTION_CALLED && path.length === 1) {\r\n            return hasMemberEffectWhenCalled(literalBooleanMembers, path[0], interaction, context);\r\n        }\r\n        return true;\r\n    }\r\n})();\r\nconst returnsBoolean = {\r\n    value: {\r\n        hasEffectsWhenCalled: null,\r\n        returns: UNKNOWN_LITERAL_BOOLEAN\r\n    }\r\n};\r\nconst UNKNOWN_LITERAL_NUMBER = new (class UnknownNumber extends ExpressionEntity {\r\n    getReturnExpressionWhenCalledAtPath(path) {\r\n        if (path.length === 1) {\r\n            return getMemberReturnExpressionWhenCalled(literalNumberMembers, path[0]);\r\n        }\r\n        return UNKNOWN_RETURN_EXPRESSION;\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        if (interaction.type === INTERACTION_ACCESSED) {\r\n            return path.length > 1;\r\n        }\r\n        if (interaction.type === INTERACTION_CALLED && path.length === 1) {\r\n            return hasMemberEffectWhenCalled(literalNumberMembers, path[0], interaction, context);\r\n        }\r\n        return true;\r\n    }\r\n})();\r\nconst returnsNumber = {\r\n    value: {\r\n        hasEffectsWhenCalled: null,\r\n        returns: UNKNOWN_LITERAL_NUMBER\r\n    }\r\n};\r\nconst UNKNOWN_LITERAL_STRING = new (class UnknownString extends ExpressionEntity {\r\n    getReturnExpressionWhenCalledAtPath(path) {\r\n        if (path.length === 1) {\r\n            return getMemberReturnExpressionWhenCalled(literalStringMembers, path[0]);\r\n        }\r\n        return UNKNOWN_RETURN_EXPRESSION;\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        if (interaction.type === INTERACTION_ACCESSED) {\r\n            return path.length > 1;\r\n        }\r\n        if (interaction.type === INTERACTION_CALLED && path.length === 1) {\r\n            return hasMemberEffectWhenCalled(literalStringMembers, path[0], interaction, context);\r\n        }\r\n        return true;\r\n    }\r\n})();\r\nconst returnsString = {\r\n    value: {\r\n        hasEffectsWhenCalled: null,\r\n        returns: UNKNOWN_LITERAL_STRING\r\n    }\r\n};\r\nconst stringReplace = {\r\n    value: {\r\n        hasEffectsWhenCalled({ args }, context) {\r\n            const argument1 = args[2];\r\n            return (args.length < 3 ||\r\n                (typeof argument1.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, {\r\n                    deoptimizeCache() { }\r\n                }) === 'symbol' &&\r\n                    argument1.hasEffectsOnInteractionAtPath(EMPTY_PATH, NODE_INTERACTION_UNKNOWN_CALL, context)));\r\n        },\r\n        returns: UNKNOWN_LITERAL_STRING\r\n    }\r\n};\r\nconst objectMembers = assembleMemberDescriptions({\r\n    hasOwnProperty: returnsBoolean,\r\n    isPrototypeOf: returnsBoolean,\r\n    propertyIsEnumerable: returnsBoolean,\r\n    toLocaleString: returnsString,\r\n    toString: returnsString,\r\n    valueOf: returnsUnknown\r\n});\r\nconst literalBooleanMembers = assembleMemberDescriptions({\r\n    valueOf: returnsBoolean\r\n}, objectMembers);\r\nconst literalNumberMembers = assembleMemberDescriptions({\r\n    toExponential: returnsString,\r\n    toFixed: returnsString,\r\n    toLocaleString: returnsString,\r\n    toPrecision: returnsString,\r\n    valueOf: returnsNumber\r\n}, objectMembers);\r\n/**\r\n * RegExp are stateful when they have the global or sticky flags set.\r\n * But if we actually don't use them, the side effect does not matter.\r\n * the check logic in `hasEffectsOnInteractionAtPath`.\r\n */\r\nconst literalRegExpMembers = assembleMemberDescriptions({\r\n    exec: returnsUnknown,\r\n    test: returnsBoolean\r\n}, objectMembers);\r\nconst literalStringMembers = assembleMemberDescriptions({\r\n    anchor: returnsString,\r\n    at: returnsUnknown,\r\n    big: returnsString,\r\n    blink: returnsString,\r\n    bold: returnsString,\r\n    charAt: returnsString,\r\n    charCodeAt: returnsNumber,\r\n    codePointAt: returnsUnknown,\r\n    concat: returnsString,\r\n    endsWith: returnsBoolean,\r\n    fixed: returnsString,\r\n    fontcolor: returnsString,\r\n    fontsize: returnsString,\r\n    includes: returnsBoolean,\r\n    indexOf: returnsNumber,\r\n    italics: returnsString,\r\n    lastIndexOf: returnsNumber,\r\n    link: returnsString,\r\n    localeCompare: returnsNumber,\r\n    match: returnsUnknown,\r\n    matchAll: returnsUnknown,\r\n    normalize: returnsString,\r\n    padEnd: returnsString,\r\n    padStart: returnsString,\r\n    repeat: returnsString,\r\n    replace: stringReplace,\r\n    replaceAll: stringReplace,\r\n    search: returnsNumber,\r\n    slice: returnsString,\r\n    small: returnsString,\r\n    split: returnsUnknown,\r\n    startsWith: returnsBoolean,\r\n    strike: returnsString,\r\n    sub: returnsString,\r\n    substr: returnsString,\r\n    substring: returnsString,\r\n    sup: returnsString,\r\n    toLocaleLowerCase: returnsString,\r\n    toLocaleUpperCase: returnsString,\r\n    toLowerCase: returnsString,\r\n    toString: returnsString, // overrides the toString() method of the Object object; it does not inherit Object.prototype.toString()\r\n    toUpperCase: returnsString,\r\n    trim: returnsString,\r\n    trimEnd: returnsString,\r\n    trimLeft: returnsString,\r\n    trimRight: returnsString,\r\n    trimStart: returnsString,\r\n    valueOf: returnsString\r\n}, objectMembers);\r\nfunction getLiteralMembersForValue(value) {\r\n    if (value instanceof RegExp) {\r\n        return literalRegExpMembers;\r\n    }\r\n    switch (typeof value) {\r\n        case 'boolean': {\r\n            return literalBooleanMembers;\r\n        }\r\n        case 'number': {\r\n            return literalNumberMembers;\r\n        }\r\n        case 'string': {\r\n            return literalStringMembers;\r\n        }\r\n    }\r\n    return Object.create(null);\r\n}\r\nfunction hasMemberEffectWhenCalled(members, memberName, interaction, context) {\r\n    if (typeof memberName !== 'string' || !members[memberName]) {\r\n        return true;\r\n    }\r\n    return members[memberName].hasEffectsWhenCalled?.(interaction, context) || false;\r\n}\r\nfunction getMemberReturnExpressionWhenCalled(members, memberName) {\r\n    if (typeof memberName !== 'string' || !members[memberName])\r\n        return UNKNOWN_RETURN_EXPRESSION;\r\n    return [members[memberName].returns, false];\r\n}\r\n\r\nclass Method extends ExpressionEntity {\r\n    constructor(description) {\r\n        super();\r\n        this.description = description;\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath({ args, type }, path) {\r\n        if (type === INTERACTION_CALLED && path.length === 0) {\r\n            if (this.description.mutatesSelfAsArray) {\r\n                args[0]?.deoptimizePath(UNKNOWN_INTEGER_PATH);\r\n            }\r\n            if (this.description.mutatesArgs) {\r\n                for (let index = 1; index < args.length; index++) {\r\n                    args[index].deoptimizePath(UNKNOWN_PATH);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path, { args }) {\r\n        if (path.length > 0) {\r\n            return UNKNOWN_RETURN_EXPRESSION;\r\n        }\r\n        return [\r\n            this.description.returnsPrimitive ||\r\n                (this.description.returns === 'self'\r\n                    ? args[0] || UNKNOWN_EXPRESSION\r\n                    : this.description.returns()),\r\n            false\r\n        ];\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, { args, type }, context) {\r\n        if (path.length > (type === INTERACTION_ACCESSED ? 1 : 0)) {\r\n            return true;\r\n        }\r\n        if (type === INTERACTION_CALLED) {\r\n            if (this.description.mutatesSelfAsArray === true &&\r\n                args[0]?.hasEffectsOnInteractionAtPath(UNKNOWN_INTEGER_PATH, NODE_INTERACTION_UNKNOWN_ASSIGNMENT, context)) {\r\n                return true;\r\n            }\r\n            if (this.description.callsArgs) {\r\n                for (const argumentIndex of this.description.callsArgs) {\r\n                    if (args[argumentIndex + 1]?.hasEffectsOnInteractionAtPath(EMPTY_PATH, NODE_INTERACTION_UNKNOWN_CALL, context)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nconst METHOD_RETURNS_BOOLEAN = [\r\n    new Method({\r\n        callsArgs: null,\r\n        mutatesArgs: false,\r\n        mutatesSelfAsArray: false,\r\n        returns: null,\r\n        returnsPrimitive: UNKNOWN_LITERAL_BOOLEAN\r\n    })\r\n];\r\nconst METHOD_RETURNS_STRING = [\r\n    new Method({\r\n        callsArgs: null,\r\n        mutatesArgs: false,\r\n        mutatesSelfAsArray: false,\r\n        returns: null,\r\n        returnsPrimitive: UNKNOWN_LITERAL_STRING\r\n    })\r\n];\r\nconst METHOD_RETURNS_NUMBER = [\r\n    new Method({\r\n        callsArgs: null,\r\n        mutatesArgs: false,\r\n        mutatesSelfAsArray: false,\r\n        returns: null,\r\n        returnsPrimitive: UNKNOWN_LITERAL_NUMBER\r\n    })\r\n];\r\nconst METHOD_RETURNS_UNKNOWN = [\r\n    new Method({\r\n        callsArgs: null,\r\n        mutatesArgs: false,\r\n        mutatesSelfAsArray: false,\r\n        returns: null,\r\n        returnsPrimitive: UNKNOWN_EXPRESSION\r\n    })\r\n];\r\n\r\nconst INTEGER_REG_EXP = /^\\d+$/;\r\nclass ObjectEntity extends ExpressionEntity {\r\n    get hasLostTrack() {\r\n        return isFlagSet(this.flags, 2048 /* Flag.hasLostTrack */);\r\n    }\r\n    set hasLostTrack(value) {\r\n        this.flags = setFlag(this.flags, 2048 /* Flag.hasLostTrack */, value);\r\n    }\r\n    get hasUnknownDeoptimizedInteger() {\r\n        return isFlagSet(this.flags, 4096 /* Flag.hasUnknownDeoptimizedInteger */);\r\n    }\r\n    set hasUnknownDeoptimizedInteger(value) {\r\n        this.flags = setFlag(this.flags, 4096 /* Flag.hasUnknownDeoptimizedInteger */, value);\r\n    }\r\n    get hasUnknownDeoptimizedProperty() {\r\n        return isFlagSet(this.flags, 8192 /* Flag.hasUnknownDeoptimizedProperty */);\r\n    }\r\n    set hasUnknownDeoptimizedProperty(value) {\r\n        this.flags = setFlag(this.flags, 8192 /* Flag.hasUnknownDeoptimizedProperty */, value);\r\n    }\r\n    // If a PropertyMap is used, this will be taken as propertiesAndGettersByKey\r\n    // and we assume there are no setters or getters\r\n    constructor(properties, prototypeExpression, immutable = false) {\r\n        super();\r\n        this.prototypeExpression = prototypeExpression;\r\n        this.immutable = immutable;\r\n        this.additionalExpressionsToBeDeoptimized = new Set();\r\n        this.allProperties = [];\r\n        this.deoptimizedPaths = Object.create(null);\r\n        this.expressionsToBeDeoptimizedByKey = Object.create(null);\r\n        this.gettersByKey = Object.create(null);\r\n        this.propertiesAndGettersByKey = Object.create(null);\r\n        this.propertiesAndSettersByKey = Object.create(null);\r\n        this.settersByKey = Object.create(null);\r\n        this.unknownIntegerProps = [];\r\n        this.unmatchableGetters = [];\r\n        this.unmatchablePropertiesAndGetters = [];\r\n        this.unmatchablePropertiesAndSetters = [];\r\n        this.unmatchableSetters = [];\r\n        if (Array.isArray(properties)) {\r\n            this.buildPropertyMaps(properties);\r\n        }\r\n        else {\r\n            this.propertiesAndGettersByKey = this.propertiesAndSettersByKey = properties;\r\n            for (const propertiesForKey of Object.values(properties)) {\r\n                this.allProperties.push(...propertiesForKey);\r\n            }\r\n        }\r\n    }\r\n    deoptimizeAllProperties(noAccessors) {\r\n        const isDeoptimized = this.hasLostTrack || this.hasUnknownDeoptimizedProperty;\r\n        if (noAccessors) {\r\n            this.hasUnknownDeoptimizedProperty = true;\r\n        }\r\n        else {\r\n            this.hasLostTrack = true;\r\n        }\r\n        if (isDeoptimized) {\r\n            return;\r\n        }\r\n        for (const properties of [\r\n            ...Object.values(this.propertiesAndGettersByKey),\r\n            ...Object.values(this.settersByKey)\r\n        ]) {\r\n            for (const property of properties) {\r\n                property.deoptimizePath(UNKNOWN_PATH);\r\n            }\r\n        }\r\n        // While the prototype itself cannot be mutated, each property can\r\n        this.prototypeExpression?.deoptimizePath([UnknownKey, UnknownKey]);\r\n        this.deoptimizeCachedEntities();\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        const [key, ...subPath] = path;\r\n        const { args, type } = interaction;\r\n        if (this.hasLostTrack ||\r\n            // single paths that are deoptimized will not become getters or setters\r\n            ((type === INTERACTION_CALLED || path.length > 1) &&\r\n                (this.hasUnknownDeoptimizedProperty ||\r\n                    (typeof key === 'string' && this.deoptimizedPaths[key])))) {\r\n            deoptimizeInteraction(interaction);\r\n            return;\r\n        }\r\n        const [propertiesForExactMatchByKey, relevantPropertiesByKey, relevantUnmatchableProperties] = type === INTERACTION_CALLED || path.length > 1\r\n            ? [\r\n                this.propertiesAndGettersByKey,\r\n                this.propertiesAndGettersByKey,\r\n                this.unmatchablePropertiesAndGetters\r\n            ]\r\n            : type === INTERACTION_ACCESSED\r\n                ? [this.propertiesAndGettersByKey, this.gettersByKey, this.unmatchableGetters]\r\n                : [this.propertiesAndSettersByKey, this.settersByKey, this.unmatchableSetters];\r\n        if (typeof key === 'string') {\r\n            if (propertiesForExactMatchByKey[key]) {\r\n                const properties = relevantPropertiesByKey[key];\r\n                if (properties) {\r\n                    for (const property of properties) {\r\n                        property.deoptimizeArgumentsOnInteractionAtPath(interaction, subPath, recursionTracker);\r\n                    }\r\n                }\r\n                if (!this.immutable) {\r\n                    for (const argument of args) {\r\n                        if (argument) {\r\n                            this.additionalExpressionsToBeDeoptimized.add(argument);\r\n                        }\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            for (const property of relevantUnmatchableProperties) {\r\n                property.deoptimizeArgumentsOnInteractionAtPath(interaction, subPath, recursionTracker);\r\n            }\r\n            if (INTEGER_REG_EXP.test(key)) {\r\n                for (const property of this.unknownIntegerProps) {\r\n                    property.deoptimizeArgumentsOnInteractionAtPath(interaction, subPath, recursionTracker);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const properties of [\r\n                ...Object.values(relevantPropertiesByKey),\r\n                relevantUnmatchableProperties\r\n            ]) {\r\n                for (const property of properties) {\r\n                    property.deoptimizeArgumentsOnInteractionAtPath(interaction, subPath, recursionTracker);\r\n                }\r\n            }\r\n            for (const property of this.unknownIntegerProps) {\r\n                property.deoptimizeArgumentsOnInteractionAtPath(interaction, subPath, recursionTracker);\r\n            }\r\n        }\r\n        if (!this.immutable) {\r\n            for (const argument of args) {\r\n                if (argument) {\r\n                    this.additionalExpressionsToBeDeoptimized.add(argument);\r\n                }\r\n            }\r\n        }\r\n        this.prototypeExpression?.deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n    }\r\n    deoptimizeIntegerProperties() {\r\n        if (this.hasLostTrack ||\r\n            this.hasUnknownDeoptimizedProperty ||\r\n            this.hasUnknownDeoptimizedInteger) {\r\n            return;\r\n        }\r\n        this.hasUnknownDeoptimizedInteger = true;\r\n        for (const [key, propertiesAndGetters] of Object.entries(this.propertiesAndGettersByKey)) {\r\n            if (INTEGER_REG_EXP.test(key)) {\r\n                for (const property of propertiesAndGetters) {\r\n                    property.deoptimizePath(UNKNOWN_PATH);\r\n                }\r\n            }\r\n        }\r\n        this.deoptimizeCachedIntegerEntities();\r\n    }\r\n    // Assumption: If only a specific path is deoptimized, no accessors are created\r\n    deoptimizePath(path) {\r\n        if (this.hasLostTrack || this.immutable) {\r\n            return;\r\n        }\r\n        const key = path[0];\r\n        if (path.length === 1) {\r\n            if (key === UnknownInteger) {\r\n                return this.deoptimizeIntegerProperties();\r\n            }\r\n            else if (typeof key !== 'string') {\r\n                return this.deoptimizeAllProperties(key === UnknownNonAccessorKey);\r\n            }\r\n            if (!this.deoptimizedPaths[key]) {\r\n                this.deoptimizedPaths[key] = true;\r\n                // we only deoptimizeCache exact matches as in all other cases,\r\n                // we do not return a literal value or return expression\r\n                const expressionsToBeDeoptimized = this.expressionsToBeDeoptimizedByKey[key];\r\n                if (expressionsToBeDeoptimized) {\r\n                    for (const expression of expressionsToBeDeoptimized) {\r\n                        expression.deoptimizeCache();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        const subPath = path.length === 1 ? UNKNOWN_PATH : path.slice(1);\r\n        for (const property of typeof key === 'string'\r\n            ? [\r\n                ...(this.propertiesAndGettersByKey[key] || this.unmatchablePropertiesAndGetters),\r\n                ...(this.settersByKey[key] || this.unmatchableSetters)\r\n            ]\r\n            : this.allProperties) {\r\n            property.deoptimizePath(subPath);\r\n        }\r\n        this.prototypeExpression?.deoptimizePath(path.length === 1 ? [path[0], UnknownKey] : path);\r\n    }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        if (path.length === 0) {\r\n            // This should actually be \"UnknownTruthyValue\". However, this currently\r\n            // causes an issue with TypeScript enums in files with moduleSideEffects:\r\n            // false because we cannot properly track whether a \"var\" has been\r\n            // initialized. This should be reverted once we can properly track this.\r\n            // return UnknownTruthyValue;\r\n            return UnknownValue;\r\n        }\r\n        const key = path[0];\r\n        const expressionAtPath = this.getMemberExpressionAndTrackDeopt(key, origin);\r\n        if (expressionAtPath) {\r\n            return expressionAtPath.getLiteralValueAtPath(path.slice(1), recursionTracker, origin);\r\n        }\r\n        if (this.prototypeExpression) {\r\n            return this.prototypeExpression.getLiteralValueAtPath(path, recursionTracker, origin);\r\n        }\r\n        if (path.length === 1) {\r\n            return undefined;\r\n        }\r\n        return UnknownValue;\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\r\n        if (path.length === 0) {\r\n            return UNKNOWN_RETURN_EXPRESSION;\r\n        }\r\n        const [key, ...subPath] = path;\r\n        const expressionAtPath = this.getMemberExpressionAndTrackDeopt(key, origin);\r\n        if (expressionAtPath) {\r\n            return expressionAtPath.getReturnExpressionWhenCalledAtPath(subPath, interaction, recursionTracker, origin);\r\n        }\r\n        if (this.prototypeExpression) {\r\n            return this.prototypeExpression.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\r\n        }\r\n        return UNKNOWN_RETURN_EXPRESSION;\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        const [key, ...subPath] = path;\r\n        if (subPath.length > 0 || interaction.type === INTERACTION_CALLED) {\r\n            const expressionAtPath = this.getMemberExpression(key);\r\n            if (expressionAtPath) {\r\n                return expressionAtPath.hasEffectsOnInteractionAtPath(subPath, interaction, context);\r\n            }\r\n            if (this.prototypeExpression) {\r\n                return this.prototypeExpression.hasEffectsOnInteractionAtPath(path, interaction, context);\r\n            }\r\n            return true;\r\n        }\r\n        if (key === UnknownNonAccessorKey)\r\n            return false;\r\n        if (this.hasLostTrack)\r\n            return true;\r\n        const [propertiesAndAccessorsByKey, accessorsByKey, unmatchableAccessors] = interaction.type === INTERACTION_ACCESSED\r\n            ? [this.propertiesAndGettersByKey, this.gettersByKey, this.unmatchableGetters]\r\n            : [this.propertiesAndSettersByKey, this.settersByKey, this.unmatchableSetters];\r\n        if (typeof key === 'string') {\r\n            if (propertiesAndAccessorsByKey[key]) {\r\n                const accessors = accessorsByKey[key];\r\n                if (accessors) {\r\n                    for (const accessor of accessors) {\r\n                        if (accessor.hasEffectsOnInteractionAtPath(subPath, interaction, context))\r\n                            return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n            for (const accessor of unmatchableAccessors) {\r\n                if (accessor.hasEffectsOnInteractionAtPath(subPath, interaction, context)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const accessors of [...Object.values(accessorsByKey), unmatchableAccessors]) {\r\n                for (const accessor of accessors) {\r\n                    if (accessor.hasEffectsOnInteractionAtPath(subPath, interaction, context))\r\n                        return true;\r\n                }\r\n            }\r\n        }\r\n        if (this.prototypeExpression) {\r\n            return this.prototypeExpression.hasEffectsOnInteractionAtPath(path, interaction, context);\r\n        }\r\n        return false;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        this.included = true;\r\n        for (const property of this.allProperties) {\r\n            if (includeChildrenRecursively || property.shouldBeIncluded(context)) {\r\n                property.include(context, includeChildrenRecursively);\r\n            }\r\n        }\r\n        this.prototypeExpression?.include(context, includeChildrenRecursively);\r\n    }\r\n    includePath(path, context) {\r\n        this.included = true;\r\n        if (path.length === 0)\r\n            return;\r\n        const [key, ...subPath] = path;\r\n        const [includedMembers, includedPath] = typeof key === 'string'\r\n            ? [\r\n                new Set([\r\n                    ...(this.propertiesAndGettersByKey[key] || this.unmatchablePropertiesAndGetters),\r\n                    ...(this.propertiesAndSettersByKey[key] || this.unmatchablePropertiesAndSetters)\r\n                ]),\r\n                subPath\r\n            ]\r\n            : [this.allProperties, UNKNOWN_PATH];\r\n        for (const property of includedMembers) {\r\n            property.includePath(includedPath, context);\r\n        }\r\n        this.prototypeExpression?.includePath(path, context);\r\n    }\r\n    buildPropertyMaps(properties) {\r\n        const { allProperties, propertiesAndGettersByKey, propertiesAndSettersByKey, settersByKey, gettersByKey, unknownIntegerProps, unmatchablePropertiesAndGetters, unmatchablePropertiesAndSetters, unmatchableGetters, unmatchableSetters } = this;\r\n        for (let index = properties.length - 1; index >= 0; index--) {\r\n            const { key, kind, property } = properties[index];\r\n            allProperties.push(property);\r\n            if (typeof key === 'string') {\r\n                if (kind === 'set') {\r\n                    if (!propertiesAndSettersByKey[key]) {\r\n                        propertiesAndSettersByKey[key] = [property, ...unmatchablePropertiesAndSetters];\r\n                        settersByKey[key] = [property, ...unmatchableSetters];\r\n                    }\r\n                }\r\n                else if (kind === 'get') {\r\n                    if (!propertiesAndGettersByKey[key]) {\r\n                        propertiesAndGettersByKey[key] = [property, ...unmatchablePropertiesAndGetters];\r\n                        gettersByKey[key] = [property, ...unmatchableGetters];\r\n                    }\r\n                }\r\n                else {\r\n                    if (!propertiesAndSettersByKey[key]) {\r\n                        propertiesAndSettersByKey[key] = [property, ...unmatchablePropertiesAndSetters];\r\n                    }\r\n                    if (!propertiesAndGettersByKey[key]) {\r\n                        propertiesAndGettersByKey[key] = [property, ...unmatchablePropertiesAndGetters];\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (key === UnknownInteger) {\r\n                    unknownIntegerProps.push(property);\r\n                    continue;\r\n                }\r\n                if (kind === 'set')\r\n                    unmatchableSetters.push(property);\r\n                if (kind === 'get')\r\n                    unmatchableGetters.push(property);\r\n                if (kind !== 'get')\r\n                    unmatchablePropertiesAndSetters.push(property);\r\n                if (kind !== 'set')\r\n                    unmatchablePropertiesAndGetters.push(property);\r\n            }\r\n        }\r\n    }\r\n    deoptimizeCachedEntities() {\r\n        for (const expressionsToBeDeoptimized of Object.values(this.expressionsToBeDeoptimizedByKey)) {\r\n            for (const expression of expressionsToBeDeoptimized) {\r\n                expression.deoptimizeCache();\r\n            }\r\n        }\r\n        for (const expression of this.additionalExpressionsToBeDeoptimized) {\r\n            expression.deoptimizePath(UNKNOWN_PATH);\r\n        }\r\n    }\r\n    deoptimizeCachedIntegerEntities() {\r\n        for (const [key, expressionsToBeDeoptimized] of Object.entries(this.expressionsToBeDeoptimizedByKey)) {\r\n            if (INTEGER_REG_EXP.test(key)) {\r\n                for (const expression of expressionsToBeDeoptimized) {\r\n                    expression.deoptimizeCache();\r\n                }\r\n            }\r\n        }\r\n        for (const expression of this.additionalExpressionsToBeDeoptimized) {\r\n            expression.deoptimizePath(UNKNOWN_INTEGER_PATH);\r\n        }\r\n    }\r\n    getMemberExpression(key) {\r\n        if (this.hasLostTrack ||\r\n            this.hasUnknownDeoptimizedProperty ||\r\n            typeof key !== 'string' ||\r\n            (this.hasUnknownDeoptimizedInteger && INTEGER_REG_EXP.test(key)) ||\r\n            this.deoptimizedPaths[key]) {\r\n            return UNKNOWN_EXPRESSION;\r\n        }\r\n        const properties = this.propertiesAndGettersByKey[key];\r\n        if (properties?.length === 1) {\r\n            return properties[0];\r\n        }\r\n        if (properties ||\r\n            this.unmatchablePropertiesAndGetters.length > 0 ||\r\n            (this.unknownIntegerProps.length > 0 && INTEGER_REG_EXP.test(key))) {\r\n            return UNKNOWN_EXPRESSION;\r\n        }\r\n        return null;\r\n    }\r\n    getMemberExpressionAndTrackDeopt(key, origin) {\r\n        if (typeof key !== 'string') {\r\n            return UNKNOWN_EXPRESSION;\r\n        }\r\n        const expression = this.getMemberExpression(key);\r\n        if (!(expression === UNKNOWN_EXPRESSION || this.immutable)) {\r\n            const expressionsToBeDeoptimized = (this.expressionsToBeDeoptimizedByKey[key] =\r\n                this.expressionsToBeDeoptimizedByKey[key] || []);\r\n            expressionsToBeDeoptimized.push(origin);\r\n        }\r\n        return expression;\r\n    }\r\n}\r\n\r\nconst isInteger = (property) => typeof property === 'string' && /^\\d+$/.test(property);\r\n// This makes sure unknown properties are not handled as \"undefined\" but as\r\n// \"unknown\" but without access side effects. An exception is done for numeric\r\n// properties as we do not expect new builtin properties to be numbers, this\r\n// will improve tree-shaking for out-of-bounds array properties\r\nconst OBJECT_PROTOTYPE_FALLBACK = new (class ObjectPrototypeFallbackExpression extends ExpressionEntity {\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path) {\r\n        if (interaction.type === INTERACTION_CALLED && path.length === 1 && !isInteger(path[0])) {\r\n            deoptimizeInteraction(interaction);\r\n        }\r\n    }\r\n    getLiteralValueAtPath(path) {\r\n        // We ignore number properties as we do not expect new properties to be\r\n        // numbers and also want to keep handling out-of-bound array elements as\r\n        // \"undefined\"\r\n        return path.length === 1 && isInteger(path[0]) ? undefined : UnknownValue;\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, { type }) {\r\n        return path.length > 1 || type === INTERACTION_CALLED;\r\n    }\r\n})();\r\nconst OBJECT_PROTOTYPE = new ObjectEntity({\r\n    __proto__: null,\r\n    hasOwnProperty: METHOD_RETURNS_BOOLEAN,\r\n    isPrototypeOf: METHOD_RETURNS_BOOLEAN,\r\n    propertyIsEnumerable: METHOD_RETURNS_BOOLEAN,\r\n    toLocaleString: METHOD_RETURNS_STRING,\r\n    toString: METHOD_RETURNS_STRING,\r\n    valueOf: METHOD_RETURNS_UNKNOWN\r\n}, OBJECT_PROTOTYPE_FALLBACK, true);\r\n\r\nconst NEW_ARRAY_PROPERTIES = [\r\n    { key: UnknownInteger, kind: 'init', property: UNKNOWN_EXPRESSION },\r\n    { key: 'length', kind: 'init', property: UNKNOWN_LITERAL_NUMBER }\r\n];\r\nconst METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_BOOLEAN = [\r\n    new Method({\r\n        callsArgs: [0],\r\n        mutatesArgs: false,\r\n        mutatesSelfAsArray: 'deopt-only',\r\n        returns: null,\r\n        returnsPrimitive: UNKNOWN_LITERAL_BOOLEAN\r\n    })\r\n];\r\nconst METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NUMBER = [\r\n    new Method({\r\n        callsArgs: [0],\r\n        mutatesArgs: false,\r\n        mutatesSelfAsArray: 'deopt-only',\r\n        returns: null,\r\n        returnsPrimitive: UNKNOWN_LITERAL_NUMBER\r\n    })\r\n];\r\nconst METHOD_MUTATES_SELF_RETURNS_NEW_ARRAY = [\r\n    new Method({\r\n        callsArgs: null,\r\n        mutatesArgs: false,\r\n        mutatesSelfAsArray: true,\r\n        returns: () => new ObjectEntity(NEW_ARRAY_PROPERTIES, ARRAY_PROTOTYPE),\r\n        returnsPrimitive: null\r\n    })\r\n];\r\nconst METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY = [\r\n    new Method({\r\n        callsArgs: null,\r\n        mutatesArgs: false,\r\n        mutatesSelfAsArray: 'deopt-only',\r\n        returns: () => new ObjectEntity(NEW_ARRAY_PROPERTIES, ARRAY_PROTOTYPE),\r\n        returnsPrimitive: null\r\n    })\r\n];\r\nconst METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NEW_ARRAY = [\r\n    new Method({\r\n        callsArgs: [0],\r\n        mutatesArgs: false,\r\n        mutatesSelfAsArray: 'deopt-only',\r\n        returns: () => new ObjectEntity(NEW_ARRAY_PROPERTIES, ARRAY_PROTOTYPE),\r\n        returnsPrimitive: null\r\n    })\r\n];\r\nconst METHOD_MUTATES_SELF_AND_ARGS_RETURNS_NUMBER = [\r\n    new Method({\r\n        callsArgs: null,\r\n        mutatesArgs: true,\r\n        mutatesSelfAsArray: true,\r\n        returns: null,\r\n        returnsPrimitive: UNKNOWN_LITERAL_NUMBER\r\n    })\r\n];\r\nconst METHOD_MUTATES_SELF_RETURNS_UNKNOWN = [\r\n    new Method({\r\n        callsArgs: null,\r\n        mutatesArgs: false,\r\n        mutatesSelfAsArray: true,\r\n        returns: null,\r\n        returnsPrimitive: UNKNOWN_EXPRESSION\r\n    })\r\n];\r\nconst METHOD_DEOPTS_SELF_RETURNS_UNKNOWN = [\r\n    new Method({\r\n        callsArgs: null,\r\n        mutatesArgs: false,\r\n        mutatesSelfAsArray: 'deopt-only',\r\n        returns: null,\r\n        returnsPrimitive: UNKNOWN_EXPRESSION\r\n    })\r\n];\r\nconst METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN = [\r\n    new Method({\r\n        callsArgs: [0],\r\n        mutatesArgs: false,\r\n        mutatesSelfAsArray: 'deopt-only',\r\n        returns: null,\r\n        returnsPrimitive: UNKNOWN_EXPRESSION\r\n    })\r\n];\r\nconst METHOD_MUTATES_SELF_RETURNS_SELF = [\r\n    new Method({\r\n        callsArgs: null,\r\n        mutatesArgs: false,\r\n        mutatesSelfAsArray: true,\r\n        returns: 'self',\r\n        returnsPrimitive: null\r\n    })\r\n];\r\nconst METHOD_CALLS_ARG_MUTATES_SELF_RETURNS_SELF = [\r\n    new Method({\r\n        callsArgs: [0],\r\n        mutatesArgs: false,\r\n        mutatesSelfAsArray: true,\r\n        returns: 'self',\r\n        returnsPrimitive: null\r\n    })\r\n];\r\nconst ARRAY_PROTOTYPE = new ObjectEntity({\r\n    __proto__: null,\r\n    // We assume that accessors have effects as we do not track the accessed value afterwards\r\n    at: METHOD_DEOPTS_SELF_RETURNS_UNKNOWN,\r\n    concat: METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY,\r\n    copyWithin: METHOD_MUTATES_SELF_RETURNS_SELF,\r\n    entries: METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY,\r\n    every: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_BOOLEAN,\r\n    fill: METHOD_MUTATES_SELF_RETURNS_SELF,\r\n    filter: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NEW_ARRAY,\r\n    find: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,\r\n    findIndex: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NUMBER,\r\n    findLast: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,\r\n    findLastIndex: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NUMBER,\r\n    flat: METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY,\r\n    flatMap: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NEW_ARRAY,\r\n    forEach: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,\r\n    includes: METHOD_RETURNS_BOOLEAN,\r\n    indexOf: METHOD_RETURNS_NUMBER,\r\n    join: METHOD_RETURNS_STRING,\r\n    keys: METHOD_RETURNS_UNKNOWN,\r\n    lastIndexOf: METHOD_RETURNS_NUMBER,\r\n    map: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_NEW_ARRAY,\r\n    pop: METHOD_MUTATES_SELF_RETURNS_UNKNOWN,\r\n    push: METHOD_MUTATES_SELF_AND_ARGS_RETURNS_NUMBER,\r\n    reduce: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,\r\n    reduceRight: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_UNKNOWN,\r\n    reverse: METHOD_MUTATES_SELF_RETURNS_SELF,\r\n    shift: METHOD_MUTATES_SELF_RETURNS_UNKNOWN,\r\n    slice: METHOD_DEOPTS_SELF_RETURNS_NEW_ARRAY,\r\n    some: METHOD_CALLS_ARG_DEOPTS_SELF_RETURNS_BOOLEAN,\r\n    sort: METHOD_CALLS_ARG_MUTATES_SELF_RETURNS_SELF,\r\n    splice: METHOD_MUTATES_SELF_RETURNS_NEW_ARRAY,\r\n    toLocaleString: METHOD_RETURNS_STRING,\r\n    toString: METHOD_RETURNS_STRING,\r\n    unshift: METHOD_MUTATES_SELF_AND_ARGS_RETURNS_NUMBER,\r\n    values: METHOD_DEOPTS_SELF_RETURNS_UNKNOWN\r\n}, OBJECT_PROTOTYPE, true);\r\n\r\nclass SpreadElement extends NodeBase {\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        if (path.length > 0) {\r\n            this.argument.deoptimizeArgumentsOnInteractionAtPath(interaction, UNKNOWN_PATH, recursionTracker);\r\n        }\r\n    }\r\n    hasEffects(context) {\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        const { propertyReadSideEffects } = this.scope.context.options\r\n            .treeshake;\r\n        return (this.argument.hasEffects(context) ||\r\n            (propertyReadSideEffects &&\r\n                (propertyReadSideEffects === 'always' ||\r\n                    this.argument.hasEffectsOnInteractionAtPath(UNKNOWN_PATH, NODE_INTERACTION_UNKNOWN_ACCESS, context))));\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        this.argument.includePath(UNKNOWN_PATH, context);\r\n    }\r\n    applyDeoptimizations() {\r\n        this.deoptimized = true;\r\n        // Only properties of properties of the argument could become subject to reassignment\r\n        // This will also reassign the return values of iterators\r\n        this.argument.deoptimizePath([UnknownKey, UnknownKey]);\r\n        this.scope.context.requestTreeshakingPass();\r\n    }\r\n}\r\n\r\nclass ArrayExpression extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.objectEntity = null;\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        this.getObjectEntity().deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n    }\r\n    deoptimizePath(path) {\r\n        this.getObjectEntity().deoptimizePath(path);\r\n    }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        return this.getObjectEntity().getLiteralValueAtPath(path, recursionTracker, origin);\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\r\n        return this.getObjectEntity().getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        return this.getObjectEntity().hasEffectsOnInteractionAtPath(path, interaction, context);\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        for (const element of this.elements) {\r\n            if (element) {\r\n                element?.includePath(UNKNOWN_PATH, context);\r\n            }\r\n        }\r\n    }\r\n    applyDeoptimizations() {\r\n        this.deoptimized = true;\r\n        let hasSpread = false;\r\n        for (let index = 0; index < this.elements.length; index++) {\r\n            const element = this.elements[index];\r\n            if (element && (hasSpread || element instanceof SpreadElement)) {\r\n                hasSpread = true;\r\n                element.deoptimizePath(UNKNOWN_PATH);\r\n            }\r\n        }\r\n        this.scope.context.requestTreeshakingPass();\r\n    }\r\n    getObjectEntity() {\r\n        if (this.objectEntity !== null) {\r\n            return this.objectEntity;\r\n        }\r\n        const properties = [\r\n            { key: 'length', kind: 'init', property: UNKNOWN_LITERAL_NUMBER }\r\n        ];\r\n        let hasSpread = false;\r\n        for (let index = 0; index < this.elements.length; index++) {\r\n            const element = this.elements[index];\r\n            if (hasSpread || element instanceof SpreadElement) {\r\n                if (element) {\r\n                    hasSpread = true;\r\n                    properties.unshift({ key: UnknownInteger, kind: 'init', property: element });\r\n                }\r\n            }\r\n            else if (element) {\r\n                properties.push({ key: String(index), kind: 'init', property: element });\r\n            }\r\n            else {\r\n                properties.push({ key: String(index), kind: 'init', property: UNDEFINED_EXPRESSION });\r\n            }\r\n        }\r\n        return (this.objectEntity = new ObjectEntity(properties, ARRAY_PROTOTYPE));\r\n    }\r\n}\r\n\r\n/* eslint sort-keys: \"off\" */\r\nconst ValueProperties = Symbol('Value Properties');\r\nconst getUnknownValue = () => UnknownValue;\r\nconst returnFalse = () => false;\r\nconst returnTrue = () => true;\r\nconst PURE = {\r\n    deoptimizeArgumentsOnCall: doNothing,\r\n    getLiteralValue: getUnknownValue,\r\n    hasEffectsWhenCalled: returnFalse\r\n};\r\nconst IMPURE = {\r\n    deoptimizeArgumentsOnCall: doNothing,\r\n    getLiteralValue: getUnknownValue,\r\n    hasEffectsWhenCalled: returnTrue\r\n};\r\nconst PURE_WITH_ARRAY = {\r\n    deoptimizeArgumentsOnCall: doNothing,\r\n    getLiteralValue: getUnknownValue,\r\n    hasEffectsWhenCalled({ args }) {\r\n        return args.length > 1 && !(args[1] instanceof ArrayExpression);\r\n    }\r\n};\r\nconst GETTER_ACCESS = {\r\n    deoptimizeArgumentsOnCall: doNothing,\r\n    getLiteralValue: getUnknownValue,\r\n    hasEffectsWhenCalled({ args }, context) {\r\n        const [_thisArgument, firstArgument] = args;\r\n        return (!(firstArgument instanceof ExpressionEntity) ||\r\n            firstArgument.hasEffectsOnInteractionAtPath(UNKNOWN_PATH, NODE_INTERACTION_UNKNOWN_ACCESS, context));\r\n    }\r\n};\r\n// We use shortened variables to reduce file size here\r\n/* OBJECT */\r\nconst O = {\r\n    __proto__: null,\r\n    [ValueProperties]: IMPURE\r\n};\r\n/* PURE FUNCTION */\r\nconst PF = {\r\n    __proto__: null,\r\n    [ValueProperties]: PURE\r\n};\r\n/* PURE FUNCTION IF FIRST ARG DOES NOT CONTAIN A GETTER */\r\nconst PF_NO_GETTER = {\r\n    __proto__: null,\r\n    [ValueProperties]: GETTER_ACCESS\r\n};\r\n/* FUNCTION THAT MUTATES FIRST ARG WITHOUT TRIGGERING ACCESSORS */\r\nconst MUTATES_ARG_WITHOUT_ACCESSOR = {\r\n    __proto__: null,\r\n    [ValueProperties]: {\r\n        deoptimizeArgumentsOnCall({ args: [, firstArgument] }) {\r\n            firstArgument?.deoptimizePath(UNKNOWN_PATH);\r\n        },\r\n        getLiteralValue: getUnknownValue,\r\n        hasEffectsWhenCalled({ args }, context) {\r\n            return (args.length <= 1 ||\r\n                args[1].hasEffectsOnInteractionAtPath(UNKNOWN_NON_ACCESSOR_PATH, NODE_INTERACTION_UNKNOWN_ASSIGNMENT, context));\r\n        }\r\n    }\r\n};\r\n/* CONSTRUCTOR */\r\nconst C = {\r\n    __proto__: null,\r\n    [ValueProperties]: IMPURE,\r\n    prototype: O\r\n};\r\n/* PURE CONSTRUCTOR */\r\nconst PC = {\r\n    __proto__: null,\r\n    [ValueProperties]: PURE,\r\n    prototype: O\r\n};\r\nconst PC_WITH_ARRAY = {\r\n    __proto__: null,\r\n    [ValueProperties]: PURE_WITH_ARRAY,\r\n    prototype: O\r\n};\r\nconst ARRAY_TYPE = {\r\n    __proto__: null,\r\n    [ValueProperties]: PURE,\r\n    from: O,\r\n    of: PF,\r\n    prototype: O\r\n};\r\nconst INTL_MEMBER = {\r\n    __proto__: null,\r\n    [ValueProperties]: PURE,\r\n    supportedLocalesOf: PC\r\n};\r\nconst knownGlobals = {\r\n    // Placeholders for global objects to avoid shape mutations\r\n    global: O,\r\n    globalThis: O,\r\n    self: O,\r\n    window: O,\r\n    // Common globals\r\n    __proto__: null,\r\n    [ValueProperties]: IMPURE,\r\n    Array: {\r\n        __proto__: null,\r\n        [ValueProperties]: IMPURE,\r\n        from: O,\r\n        isArray: PF,\r\n        of: PF,\r\n        prototype: O\r\n    },\r\n    ArrayBuffer: {\r\n        __proto__: null,\r\n        [ValueProperties]: PURE,\r\n        isView: PF,\r\n        prototype: O\r\n    },\r\n    AggregateError: PC_WITH_ARRAY,\r\n    Atomics: O,\r\n    BigInt: C,\r\n    BigInt64Array: C,\r\n    BigUint64Array: C,\r\n    Boolean: PC,\r\n    constructor: C,\r\n    DataView: PC,\r\n    Date: {\r\n        __proto__: null,\r\n        [ValueProperties]: PURE,\r\n        now: PF,\r\n        parse: PF,\r\n        prototype: O,\r\n        UTC: PF\r\n    },\r\n    decodeURI: PF,\r\n    decodeURIComponent: PF,\r\n    encodeURI: PF,\r\n    encodeURIComponent: PF,\r\n    Error: PC,\r\n    escape: PF,\r\n    eval: O,\r\n    EvalError: PC,\r\n    FinalizationRegistry: C,\r\n    Float32Array: ARRAY_TYPE,\r\n    Float64Array: ARRAY_TYPE,\r\n    Function: C,\r\n    hasOwnProperty: O,\r\n    Infinity: O,\r\n    Int16Array: ARRAY_TYPE,\r\n    Int32Array: ARRAY_TYPE,\r\n    Int8Array: ARRAY_TYPE,\r\n    isFinite: PF,\r\n    isNaN: PF,\r\n    isPrototypeOf: O,\r\n    JSON: O,\r\n    Map: PC_WITH_ARRAY,\r\n    Math: {\r\n        __proto__: null,\r\n        [ValueProperties]: IMPURE,\r\n        abs: PF,\r\n        acos: PF,\r\n        acosh: PF,\r\n        asin: PF,\r\n        asinh: PF,\r\n        atan: PF,\r\n        atan2: PF,\r\n        atanh: PF,\r\n        cbrt: PF,\r\n        ceil: PF,\r\n        clz32: PF,\r\n        cos: PF,\r\n        cosh: PF,\r\n        exp: PF,\r\n        expm1: PF,\r\n        floor: PF,\r\n        fround: PF,\r\n        hypot: PF,\r\n        imul: PF,\r\n        log: PF,\r\n        log10: PF,\r\n        log1p: PF,\r\n        log2: PF,\r\n        max: PF,\r\n        min: PF,\r\n        pow: PF,\r\n        random: PF,\r\n        round: PF,\r\n        sign: PF,\r\n        sin: PF,\r\n        sinh: PF,\r\n        sqrt: PF,\r\n        tan: PF,\r\n        tanh: PF,\r\n        trunc: PF\r\n    },\r\n    NaN: O,\r\n    Number: {\r\n        __proto__: null,\r\n        [ValueProperties]: PURE,\r\n        isFinite: PF,\r\n        isInteger: PF,\r\n        isNaN: PF,\r\n        isSafeInteger: PF,\r\n        parseFloat: PF,\r\n        parseInt: PF,\r\n        prototype: O\r\n    },\r\n    Object: {\r\n        __proto__: null,\r\n        [ValueProperties]: PURE,\r\n        create: PF,\r\n        // Technically those can throw in certain situations, but we ignore this as\r\n        // code that relies on this will hopefully wrap this in a try-catch, which\r\n        // deoptimizes everything anyway\r\n        defineProperty: MUTATES_ARG_WITHOUT_ACCESSOR,\r\n        defineProperties: MUTATES_ARG_WITHOUT_ACCESSOR,\r\n        freeze: MUTATES_ARG_WITHOUT_ACCESSOR,\r\n        getOwnPropertyDescriptor: PF,\r\n        getOwnPropertyDescriptors: PF,\r\n        getOwnPropertyNames: PF,\r\n        getOwnPropertySymbols: PF,\r\n        getPrototypeOf: PF,\r\n        hasOwn: PF,\r\n        is: PF,\r\n        isExtensible: PF,\r\n        isFrozen: PF,\r\n        isSealed: PF,\r\n        keys: PF,\r\n        fromEntries: O,\r\n        entries: PF_NO_GETTER,\r\n        values: PF_NO_GETTER,\r\n        prototype: O\r\n    },\r\n    parseFloat: PF,\r\n    parseInt: PF,\r\n    Promise: {\r\n        __proto__: null,\r\n        [ValueProperties]: IMPURE,\r\n        all: O,\r\n        allSettled: O,\r\n        any: O,\r\n        prototype: O,\r\n        race: O,\r\n        reject: O,\r\n        resolve: O\r\n    },\r\n    propertyIsEnumerable: O,\r\n    Proxy: {\r\n        __proto__: null,\r\n        [ValueProperties]: {\r\n            deoptimizeArgumentsOnCall: ({ args: [, target, parameter] }) => {\r\n                if (isObjectExpressionNode(parameter)) {\r\n                    const hasSpreadElement = parameter.properties.some(property => !isPropertyNode(property));\r\n                    if (!hasSpreadElement) {\r\n                        for (const property of parameter.properties) {\r\n                            property.deoptimizeArgumentsOnInteractionAtPath({\r\n                                args: [null, target],\r\n                                type: INTERACTION_CALLED,\r\n                                withNew: false\r\n                            }, EMPTY_PATH, SHARED_RECURSION_TRACKER);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n                target.deoptimizePath(UNKNOWN_PATH);\r\n            },\r\n            getLiteralValue: getUnknownValue,\r\n            hasEffectsWhenCalled: returnTrue\r\n        }\r\n    },\r\n    RangeError: PC,\r\n    ReferenceError: PC,\r\n    Reflect: O,\r\n    RegExp: PC,\r\n    Set: PC_WITH_ARRAY,\r\n    SharedArrayBuffer: C,\r\n    String: {\r\n        __proto__: null,\r\n        [ValueProperties]: PURE,\r\n        fromCharCode: PF,\r\n        fromCodePoint: PF,\r\n        prototype: O,\r\n        raw: PF\r\n    },\r\n    Symbol: {\r\n        __proto__: null,\r\n        [ValueProperties]: PURE,\r\n        for: PF,\r\n        keyFor: PF,\r\n        prototype: O,\r\n        toStringTag: {\r\n            __proto__: null,\r\n            [ValueProperties]: {\r\n                deoptimizeArgumentsOnCall: doNothing,\r\n                getLiteralValue() {\r\n                    return SymbolToStringTag;\r\n                },\r\n                hasEffectsWhenCalled: returnTrue\r\n            }\r\n        }\r\n    },\r\n    SyntaxError: PC,\r\n    toLocaleString: O,\r\n    toString: O,\r\n    TypeError: PC,\r\n    Uint16Array: ARRAY_TYPE,\r\n    Uint32Array: ARRAY_TYPE,\r\n    Uint8Array: ARRAY_TYPE,\r\n    Uint8ClampedArray: ARRAY_TYPE,\r\n    // Technically, this is a global, but it needs special handling\r\n    // undefined: ?,\r\n    unescape: PF,\r\n    URIError: PC,\r\n    valueOf: O,\r\n    WeakMap: PC_WITH_ARRAY,\r\n    WeakRef: C,\r\n    WeakSet: PC_WITH_ARRAY,\r\n    // Additional globals shared by Node and Browser that are not strictly part of the language\r\n    clearInterval: C,\r\n    clearTimeout: C,\r\n    console: {\r\n        __proto__: null,\r\n        [ValueProperties]: IMPURE,\r\n        assert: C,\r\n        clear: C,\r\n        count: C,\r\n        countReset: C,\r\n        debug: C,\r\n        dir: C,\r\n        dirxml: C,\r\n        error: C,\r\n        exception: C,\r\n        group: C,\r\n        groupCollapsed: C,\r\n        groupEnd: C,\r\n        info: C,\r\n        log: C,\r\n        table: C,\r\n        time: C,\r\n        timeEnd: C,\r\n        timeLog: C,\r\n        trace: C,\r\n        warn: C\r\n    },\r\n    Intl: {\r\n        __proto__: null,\r\n        [ValueProperties]: IMPURE,\r\n        Collator: INTL_MEMBER,\r\n        DateTimeFormat: INTL_MEMBER,\r\n        DisplayNames: INTL_MEMBER,\r\n        ListFormat: INTL_MEMBER,\r\n        Locale: INTL_MEMBER,\r\n        NumberFormat: INTL_MEMBER,\r\n        PluralRules: INTL_MEMBER,\r\n        RelativeTimeFormat: INTL_MEMBER,\r\n        Segmenter: INTL_MEMBER\r\n    },\r\n    setInterval: C,\r\n    setTimeout: C,\r\n    TextDecoder: C,\r\n    TextEncoder: C,\r\n    URL: {\r\n        __proto__: null,\r\n        [ValueProperties]: IMPURE,\r\n        prototype: O,\r\n        canParse: PF\r\n    },\r\n    URLSearchParams: C,\r\n    // Browser specific globals\r\n    AbortController: C,\r\n    AbortSignal: C,\r\n    addEventListener: O,\r\n    alert: O,\r\n    AnalyserNode: C,\r\n    Animation: C,\r\n    AnimationEvent: C,\r\n    applicationCache: O,\r\n    ApplicationCache: C,\r\n    ApplicationCacheErrorEvent: C,\r\n    atob: O,\r\n    Attr: C,\r\n    Audio: C,\r\n    AudioBuffer: C,\r\n    AudioBufferSourceNode: C,\r\n    AudioContext: C,\r\n    AudioDestinationNode: C,\r\n    AudioListener: C,\r\n    AudioNode: C,\r\n    AudioParam: C,\r\n    AudioProcessingEvent: C,\r\n    AudioScheduledSourceNode: C,\r\n    AudioWorkletNode: C,\r\n    BarProp: C,\r\n    BaseAudioContext: C,\r\n    BatteryManager: C,\r\n    BeforeUnloadEvent: C,\r\n    BiquadFilterNode: C,\r\n    Blob: C,\r\n    BlobEvent: C,\r\n    blur: O,\r\n    BroadcastChannel: C,\r\n    btoa: O,\r\n    ByteLengthQueuingStrategy: C,\r\n    Cache: C,\r\n    caches: O,\r\n    CacheStorage: C,\r\n    cancelAnimationFrame: O,\r\n    cancelIdleCallback: O,\r\n    CanvasCaptureMediaStreamTrack: C,\r\n    CanvasGradient: C,\r\n    CanvasPattern: C,\r\n    CanvasRenderingContext2D: C,\r\n    ChannelMergerNode: C,\r\n    ChannelSplitterNode: C,\r\n    CharacterData: C,\r\n    clientInformation: O,\r\n    ClipboardEvent: C,\r\n    close: O,\r\n    closed: O,\r\n    CloseEvent: C,\r\n    Comment: C,\r\n    CompositionEvent: C,\r\n    confirm: O,\r\n    ConstantSourceNode: C,\r\n    ConvolverNode: C,\r\n    CountQueuingStrategy: C,\r\n    createImageBitmap: O,\r\n    Credential: C,\r\n    CredentialsContainer: C,\r\n    crypto: O,\r\n    Crypto: C,\r\n    CryptoKey: C,\r\n    CSS: C,\r\n    CSSConditionRule: C,\r\n    CSSFontFaceRule: C,\r\n    CSSGroupingRule: C,\r\n    CSSImportRule: C,\r\n    CSSKeyframeRule: C,\r\n    CSSKeyframesRule: C,\r\n    CSSMediaRule: C,\r\n    CSSNamespaceRule: C,\r\n    CSSPageRule: C,\r\n    CSSRule: C,\r\n    CSSRuleList: C,\r\n    CSSStyleDeclaration: C,\r\n    CSSStyleRule: C,\r\n    CSSStyleSheet: C,\r\n    CSSSupportsRule: C,\r\n    CustomElementRegistry: C,\r\n    customElements: O,\r\n    CustomEvent: {\r\n        __proto__: null,\r\n        [ValueProperties]: {\r\n            deoptimizeArgumentsOnCall({ args }) {\r\n                args[2]?.deoptimizePath(['detail']);\r\n            },\r\n            getLiteralValue: getUnknownValue,\r\n            hasEffectsWhenCalled: returnFalse\r\n        },\r\n        prototype: O\r\n    },\r\n    DataTransfer: C,\r\n    DataTransferItem: C,\r\n    DataTransferItemList: C,\r\n    defaultstatus: O,\r\n    defaultStatus: O,\r\n    DelayNode: C,\r\n    DeviceMotionEvent: C,\r\n    DeviceOrientationEvent: C,\r\n    devicePixelRatio: O,\r\n    dispatchEvent: O,\r\n    document: O,\r\n    Document: C,\r\n    DocumentFragment: C,\r\n    DocumentType: C,\r\n    DOMError: C,\r\n    DOMException: C,\r\n    DOMImplementation: C,\r\n    DOMMatrix: C,\r\n    DOMMatrixReadOnly: C,\r\n    DOMParser: C,\r\n    DOMPoint: C,\r\n    DOMPointReadOnly: C,\r\n    DOMQuad: C,\r\n    DOMRect: C,\r\n    DOMRectReadOnly: C,\r\n    DOMStringList: C,\r\n    DOMStringMap: C,\r\n    DOMTokenList: C,\r\n    DragEvent: C,\r\n    DynamicsCompressorNode: C,\r\n    Element: C,\r\n    ErrorEvent: C,\r\n    Event: C,\r\n    EventSource: C,\r\n    EventTarget: C,\r\n    external: O,\r\n    fetch: O,\r\n    File: C,\r\n    FileList: C,\r\n    FileReader: C,\r\n    find: O,\r\n    focus: O,\r\n    FocusEvent: C,\r\n    FontFace: C,\r\n    FontFaceSetLoadEvent: C,\r\n    FormData: C,\r\n    frames: O,\r\n    GainNode: C,\r\n    Gamepad: C,\r\n    GamepadButton: C,\r\n    GamepadEvent: C,\r\n    getComputedStyle: O,\r\n    getSelection: O,\r\n    HashChangeEvent: C,\r\n    Headers: C,\r\n    history: O,\r\n    History: C,\r\n    HTMLAllCollection: C,\r\n    HTMLAnchorElement: C,\r\n    HTMLAreaElement: C,\r\n    HTMLAudioElement: C,\r\n    HTMLBaseElement: C,\r\n    HTMLBodyElement: C,\r\n    HTMLBRElement: C,\r\n    HTMLButtonElement: C,\r\n    HTMLCanvasElement: C,\r\n    HTMLCollection: C,\r\n    HTMLContentElement: C,\r\n    HTMLDataElement: C,\r\n    HTMLDataListElement: C,\r\n    HTMLDetailsElement: C,\r\n    HTMLDialogElement: C,\r\n    HTMLDirectoryElement: C,\r\n    HTMLDivElement: C,\r\n    HTMLDListElement: C,\r\n    HTMLDocument: C,\r\n    HTMLElement: C,\r\n    HTMLEmbedElement: C,\r\n    HTMLFieldSetElement: C,\r\n    HTMLFontElement: C,\r\n    HTMLFormControlsCollection: C,\r\n    HTMLFormElement: C,\r\n    HTMLFrameElement: C,\r\n    HTMLFrameSetElement: C,\r\n    HTMLHeadElement: C,\r\n    HTMLHeadingElement: C,\r\n    HTMLHRElement: C,\r\n    HTMLHtmlElement: C,\r\n    HTMLIFrameElement: C,\r\n    HTMLImageElement: C,\r\n    HTMLInputElement: C,\r\n    HTMLLabelElement: C,\r\n    HTMLLegendElement: C,\r\n    HTMLLIElement: C,\r\n    HTMLLinkElement: C,\r\n    HTMLMapElement: C,\r\n    HTMLMarqueeElement: C,\r\n    HTMLMediaElement: C,\r\n    HTMLMenuElement: C,\r\n    HTMLMetaElement: C,\r\n    HTMLMeterElement: C,\r\n    HTMLModElement: C,\r\n    HTMLObjectElement: C,\r\n    HTMLOListElement: C,\r\n    HTMLOptGroupElement: C,\r\n    HTMLOptionElement: C,\r\n    HTMLOptionsCollection: C,\r\n    HTMLOutputElement: C,\r\n    HTMLParagraphElement: C,\r\n    HTMLParamElement: C,\r\n    HTMLPictureElement: C,\r\n    HTMLPreElement: C,\r\n    HTMLProgressElement: C,\r\n    HTMLQuoteElement: C,\r\n    HTMLScriptElement: C,\r\n    HTMLSelectElement: C,\r\n    HTMLShadowElement: C,\r\n    HTMLSlotElement: C,\r\n    HTMLSourceElement: C,\r\n    HTMLSpanElement: C,\r\n    HTMLStyleElement: C,\r\n    HTMLTableCaptionElement: C,\r\n    HTMLTableCellElement: C,\r\n    HTMLTableColElement: C,\r\n    HTMLTableElement: C,\r\n    HTMLTableRowElement: C,\r\n    HTMLTableSectionElement: C,\r\n    HTMLTemplateElement: C,\r\n    HTMLTextAreaElement: C,\r\n    HTMLTimeElement: C,\r\n    HTMLTitleElement: C,\r\n    HTMLTrackElement: C,\r\n    HTMLUListElement: C,\r\n    HTMLUnknownElement: C,\r\n    HTMLVideoElement: C,\r\n    IDBCursor: C,\r\n    IDBCursorWithValue: C,\r\n    IDBDatabase: C,\r\n    IDBFactory: C,\r\n    IDBIndex: C,\r\n    IDBKeyRange: C,\r\n    IDBObjectStore: C,\r\n    IDBOpenDBRequest: C,\r\n    IDBRequest: C,\r\n    IDBTransaction: C,\r\n    IDBVersionChangeEvent: C,\r\n    IdleDeadline: C,\r\n    IIRFilterNode: C,\r\n    Image: C,\r\n    ImageBitmap: C,\r\n    ImageBitmapRenderingContext: C,\r\n    ImageCapture: C,\r\n    ImageData: C,\r\n    indexedDB: O,\r\n    innerHeight: O,\r\n    innerWidth: O,\r\n    InputEvent: C,\r\n    IntersectionObserver: C,\r\n    IntersectionObserverEntry: C,\r\n    isSecureContext: O,\r\n    KeyboardEvent: C,\r\n    KeyframeEffect: C,\r\n    length: O,\r\n    localStorage: O,\r\n    location: O,\r\n    Location: C,\r\n    locationbar: O,\r\n    matchMedia: O,\r\n    MediaDeviceInfo: C,\r\n    MediaDevices: C,\r\n    MediaElementAudioSourceNode: C,\r\n    MediaEncryptedEvent: C,\r\n    MediaError: C,\r\n    MediaKeyMessageEvent: C,\r\n    MediaKeySession: C,\r\n    MediaKeyStatusMap: C,\r\n    MediaKeySystemAccess: C,\r\n    MediaList: C,\r\n    MediaQueryList: C,\r\n    MediaQueryListEvent: C,\r\n    MediaRecorder: C,\r\n    MediaSettingsRange: C,\r\n    MediaSource: C,\r\n    MediaStream: C,\r\n    MediaStreamAudioDestinationNode: C,\r\n    MediaStreamAudioSourceNode: C,\r\n    MediaStreamEvent: C,\r\n    MediaStreamTrack: C,\r\n    MediaStreamTrackEvent: C,\r\n    menubar: O,\r\n    MessageChannel: C,\r\n    MessageEvent: C,\r\n    MessagePort: C,\r\n    MIDIAccess: C,\r\n    MIDIConnectionEvent: C,\r\n    MIDIInput: C,\r\n    MIDIInputMap: C,\r\n    MIDIMessageEvent: C,\r\n    MIDIOutput: C,\r\n    MIDIOutputMap: C,\r\n    MIDIPort: C,\r\n    MimeType: C,\r\n    MimeTypeArray: C,\r\n    MouseEvent: C,\r\n    moveBy: O,\r\n    moveTo: O,\r\n    MutationEvent: C,\r\n    MutationObserver: C,\r\n    MutationRecord: C,\r\n    name: O,\r\n    NamedNodeMap: C,\r\n    NavigationPreloadManager: C,\r\n    navigator: O,\r\n    Navigator: C,\r\n    NetworkInformation: C,\r\n    Node: C,\r\n    NodeFilter: O,\r\n    NodeIterator: C,\r\n    NodeList: C,\r\n    Notification: C,\r\n    OfflineAudioCompletionEvent: C,\r\n    OfflineAudioContext: C,\r\n    offscreenBuffering: O,\r\n    OffscreenCanvas: C,\r\n    open: O,\r\n    openDatabase: O,\r\n    Option: C,\r\n    origin: O,\r\n    OscillatorNode: C,\r\n    outerHeight: O,\r\n    outerWidth: O,\r\n    PageTransitionEvent: C,\r\n    pageXOffset: O,\r\n    pageYOffset: O,\r\n    PannerNode: C,\r\n    parent: O,\r\n    Path2D: C,\r\n    PaymentAddress: C,\r\n    PaymentRequest: C,\r\n    PaymentRequestUpdateEvent: C,\r\n    PaymentResponse: C,\r\n    performance: O,\r\n    Performance: C,\r\n    PerformanceEntry: C,\r\n    PerformanceLongTaskTiming: C,\r\n    PerformanceMark: C,\r\n    PerformanceMeasure: C,\r\n    PerformanceNavigation: C,\r\n    PerformanceNavigationTiming: C,\r\n    PerformanceObserver: C,\r\n    PerformanceObserverEntryList: C,\r\n    PerformancePaintTiming: C,\r\n    PerformanceResourceTiming: C,\r\n    PerformanceTiming: C,\r\n    PeriodicWave: C,\r\n    Permissions: C,\r\n    PermissionStatus: C,\r\n    personalbar: O,\r\n    PhotoCapabilities: C,\r\n    Plugin: C,\r\n    PluginArray: C,\r\n    PointerEvent: C,\r\n    PopStateEvent: C,\r\n    postMessage: O,\r\n    Presentation: C,\r\n    PresentationAvailability: C,\r\n    PresentationConnection: C,\r\n    PresentationConnectionAvailableEvent: C,\r\n    PresentationConnectionCloseEvent: C,\r\n    PresentationConnectionList: C,\r\n    PresentationReceiver: C,\r\n    PresentationRequest: C,\r\n    print: O,\r\n    ProcessingInstruction: C,\r\n    ProgressEvent: C,\r\n    PromiseRejectionEvent: C,\r\n    prompt: O,\r\n    PushManager: C,\r\n    PushSubscription: C,\r\n    PushSubscriptionOptions: C,\r\n    queueMicrotask: O,\r\n    RadioNodeList: C,\r\n    Range: C,\r\n    ReadableStream: C,\r\n    RemotePlayback: C,\r\n    removeEventListener: O,\r\n    Request: C,\r\n    requestAnimationFrame: O,\r\n    requestIdleCallback: O,\r\n    resizeBy: O,\r\n    ResizeObserver: C,\r\n    ResizeObserverEntry: C,\r\n    resizeTo: O,\r\n    Response: C,\r\n    RTCCertificate: C,\r\n    RTCDataChannel: C,\r\n    RTCDataChannelEvent: C,\r\n    RTCDtlsTransport: C,\r\n    RTCIceCandidate: C,\r\n    RTCIceTransport: C,\r\n    RTCPeerConnection: C,\r\n    RTCPeerConnectionIceEvent: C,\r\n    RTCRtpReceiver: C,\r\n    RTCRtpSender: C,\r\n    RTCSctpTransport: C,\r\n    RTCSessionDescription: C,\r\n    RTCStatsReport: C,\r\n    RTCTrackEvent: C,\r\n    screen: O,\r\n    Screen: C,\r\n    screenLeft: O,\r\n    ScreenOrientation: C,\r\n    screenTop: O,\r\n    screenX: O,\r\n    screenY: O,\r\n    ScriptProcessorNode: C,\r\n    scroll: O,\r\n    scrollbars: O,\r\n    scrollBy: O,\r\n    scrollTo: O,\r\n    scrollX: O,\r\n    scrollY: O,\r\n    SecurityPolicyViolationEvent: C,\r\n    Selection: C,\r\n    ServiceWorker: C,\r\n    ServiceWorkerContainer: C,\r\n    ServiceWorkerRegistration: C,\r\n    sessionStorage: O,\r\n    ShadowRoot: C,\r\n    SharedWorker: C,\r\n    SourceBuffer: C,\r\n    SourceBufferList: C,\r\n    speechSynthesis: O,\r\n    SpeechSynthesisEvent: C,\r\n    SpeechSynthesisUtterance: C,\r\n    StaticRange: C,\r\n    status: O,\r\n    statusbar: O,\r\n    StereoPannerNode: C,\r\n    stop: O,\r\n    Storage: C,\r\n    StorageEvent: C,\r\n    StorageManager: C,\r\n    styleMedia: O,\r\n    StyleSheet: C,\r\n    StyleSheetList: C,\r\n    SubtleCrypto: C,\r\n    SVGAElement: C,\r\n    SVGAngle: C,\r\n    SVGAnimatedAngle: C,\r\n    SVGAnimatedBoolean: C,\r\n    SVGAnimatedEnumeration: C,\r\n    SVGAnimatedInteger: C,\r\n    SVGAnimatedLength: C,\r\n    SVGAnimatedLengthList: C,\r\n    SVGAnimatedNumber: C,\r\n    SVGAnimatedNumberList: C,\r\n    SVGAnimatedPreserveAspectRatio: C,\r\n    SVGAnimatedRect: C,\r\n    SVGAnimatedString: C,\r\n    SVGAnimatedTransformList: C,\r\n    SVGAnimateElement: C,\r\n    SVGAnimateMotionElement: C,\r\n    SVGAnimateTransformElement: C,\r\n    SVGAnimationElement: C,\r\n    SVGCircleElement: C,\r\n    SVGClipPathElement: C,\r\n    SVGComponentTransferFunctionElement: C,\r\n    SVGDefsElement: C,\r\n    SVGDescElement: C,\r\n    SVGDiscardElement: C,\r\n    SVGElement: C,\r\n    SVGEllipseElement: C,\r\n    SVGFEBlendElement: C,\r\n    SVGFEColorMatrixElement: C,\r\n    SVGFEComponentTransferElement: C,\r\n    SVGFECompositeElement: C,\r\n    SVGFEConvolveMatrixElement: C,\r\n    SVGFEDiffuseLightingElement: C,\r\n    SVGFEDisplacementMapElement: C,\r\n    SVGFEDistantLightElement: C,\r\n    SVGFEDropShadowElement: C,\r\n    SVGFEFloodElement: C,\r\n    SVGFEFuncAElement: C,\r\n    SVGFEFuncBElement: C,\r\n    SVGFEFuncGElement: C,\r\n    SVGFEFuncRElement: C,\r\n    SVGFEGaussianBlurElement: C,\r\n    SVGFEImageElement: C,\r\n    SVGFEMergeElement: C,\r\n    SVGFEMergeNodeElement: C,\r\n    SVGFEMorphologyElement: C,\r\n    SVGFEOffsetElement: C,\r\n    SVGFEPointLightElement: C,\r\n    SVGFESpecularLightingElement: C,\r\n    SVGFESpotLightElement: C,\r\n    SVGFETileElement: C,\r\n    SVGFETurbulenceElement: C,\r\n    SVGFilterElement: C,\r\n    SVGForeignObjectElement: C,\r\n    SVGGElement: C,\r\n    SVGGeometryElement: C,\r\n    SVGGradientElement: C,\r\n    SVGGraphicsElement: C,\r\n    SVGImageElement: C,\r\n    SVGLength: C,\r\n    SVGLengthList: C,\r\n    SVGLinearGradientElement: C,\r\n    SVGLineElement: C,\r\n    SVGMarkerElement: C,\r\n    SVGMaskElement: C,\r\n    SVGMatrix: C,\r\n    SVGMetadataElement: C,\r\n    SVGMPathElement: C,\r\n    SVGNumber: C,\r\n    SVGNumberList: C,\r\n    SVGPathElement: C,\r\n    SVGPatternElement: C,\r\n    SVGPoint: C,\r\n    SVGPointList: C,\r\n    SVGPolygonElement: C,\r\n    SVGPolylineElement: C,\r\n    SVGPreserveAspectRatio: C,\r\n    SVGRadialGradientElement: C,\r\n    SVGRect: C,\r\n    SVGRectElement: C,\r\n    SVGScriptElement: C,\r\n    SVGSetElement: C,\r\n    SVGStopElement: C,\r\n    SVGStringList: C,\r\n    SVGStyleElement: C,\r\n    SVGSVGElement: C,\r\n    SVGSwitchElement: C,\r\n    SVGSymbolElement: C,\r\n    SVGTextContentElement: C,\r\n    SVGTextElement: C,\r\n    SVGTextPathElement: C,\r\n    SVGTextPositioningElement: C,\r\n    SVGTitleElement: C,\r\n    SVGTransform: C,\r\n    SVGTransformList: C,\r\n    SVGTSpanElement: C,\r\n    SVGUnitTypes: C,\r\n    SVGUseElement: C,\r\n    SVGViewElement: C,\r\n    TaskAttributionTiming: C,\r\n    Text: C,\r\n    TextEvent: C,\r\n    TextMetrics: C,\r\n    TextTrack: C,\r\n    TextTrackCue: C,\r\n    TextTrackCueList: C,\r\n    TextTrackList: C,\r\n    TimeRanges: C,\r\n    toolbar: O,\r\n    top: O,\r\n    Touch: C,\r\n    TouchEvent: C,\r\n    TouchList: C,\r\n    TrackEvent: C,\r\n    TransitionEvent: C,\r\n    TreeWalker: C,\r\n    UIEvent: C,\r\n    ValidityState: C,\r\n    visualViewport: O,\r\n    VisualViewport: C,\r\n    VTTCue: C,\r\n    WaveShaperNode: C,\r\n    WebAssembly: O,\r\n    WebGL2RenderingContext: C,\r\n    WebGLActiveInfo: C,\r\n    WebGLBuffer: C,\r\n    WebGLContextEvent: C,\r\n    WebGLFramebuffer: C,\r\n    WebGLProgram: C,\r\n    WebGLQuery: C,\r\n    WebGLRenderbuffer: C,\r\n    WebGLRenderingContext: C,\r\n    WebGLSampler: C,\r\n    WebGLShader: C,\r\n    WebGLShaderPrecisionFormat: C,\r\n    WebGLSync: C,\r\n    WebGLTexture: C,\r\n    WebGLTransformFeedback: C,\r\n    WebGLUniformLocation: C,\r\n    WebGLVertexArrayObject: C,\r\n    WebSocket: C,\r\n    WheelEvent: C,\r\n    Window: C,\r\n    Worker: C,\r\n    WritableStream: C,\r\n    XMLDocument: C,\r\n    XMLHttpRequest: C,\r\n    XMLHttpRequestEventTarget: C,\r\n    XMLHttpRequestUpload: C,\r\n    XMLSerializer: C,\r\n    XPathEvaluator: C,\r\n    XPathExpression: C,\r\n    XPathResult: C,\r\n    XSLTProcessor: C\r\n};\r\nfor (const global of ['window', 'global', 'self', 'globalThis']) {\r\n    knownGlobals[global] = knownGlobals;\r\n}\r\nfunction getGlobalAtPath(path) {\r\n    let currentGlobal = knownGlobals;\r\n    for (const pathSegment of path) {\r\n        if (typeof pathSegment !== 'string') {\r\n            return null;\r\n        }\r\n        currentGlobal = currentGlobal[pathSegment];\r\n        if (!currentGlobal) {\r\n            return null;\r\n        }\r\n    }\r\n    return currentGlobal[ValueProperties];\r\n}\r\n\r\nclass GlobalVariable extends Variable {\r\n    constructor(name) {\r\n        super(name);\r\n        // Ensure we use live-bindings for globals as we do not know if they have\r\n        // been reassigned\r\n        this.markReassigned();\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        switch (interaction.type) {\r\n            // While there is no point in testing these cases as at the moment, they\r\n            // are also covered via other means, we keep them for completeness\r\n            case INTERACTION_ACCESSED:\r\n            case INTERACTION_ASSIGNED: {\r\n                if (!getGlobalAtPath([this.name, ...path].slice(0, -1))) {\r\n                    super.deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n                }\r\n                return;\r\n            }\r\n            case INTERACTION_CALLED: {\r\n                const globalAtPath = getGlobalAtPath([this.name, ...path]);\r\n                if (globalAtPath) {\r\n                    globalAtPath.deoptimizeArgumentsOnCall(interaction);\r\n                }\r\n                else {\r\n                    super.deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    getLiteralValueAtPath(path, _recursionTracker, _origin) {\r\n        const globalAtPath = getGlobalAtPath([this.name, ...path]);\r\n        return globalAtPath ? globalAtPath.getLiteralValue() : UnknownValue;\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        switch (interaction.type) {\r\n            case INTERACTION_ACCESSED: {\r\n                if (path.length === 0) {\r\n                    // Technically, \"undefined\" is a global variable of sorts\r\n                    return this.name !== 'undefined' && !getGlobalAtPath([this.name]);\r\n                }\r\n                return !getGlobalAtPath([this.name, ...path].slice(0, -1));\r\n            }\r\n            case INTERACTION_ASSIGNED: {\r\n                return true;\r\n            }\r\n            case INTERACTION_CALLED: {\r\n                const globalAtPath = getGlobalAtPath([this.name, ...path]);\r\n                return !globalAtPath || globalAtPath.hasEffectsWhenCalled(interaction, context);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// To avoid infinite recursions\r\nconst MAX_PATH_DEPTH = 6;\r\n// If a path is longer than MAX_PATH_DEPTH, it is truncated so that it is at\r\n// most MAX_PATH_DEPTH long. The last element is always UnknownKey\r\nconst limitConcatenatedPathDepth = (path1, path2) => {\r\n    const { length: length1 } = path1;\r\n    const { length: length2 } = path2;\r\n    return length1 === 0\r\n        ? path2\r\n        : length2 === 0\r\n            ? path1\r\n            : length1 + length2 > MAX_PATH_DEPTH\r\n                ? [...path1, ...path2.slice(0, MAX_PATH_DEPTH - 1 - path1.length), 'UnknownKey']\r\n                : [...path1, ...path2];\r\n};\r\n\r\nclass LocalVariable extends Variable {\r\n    constructor(name, declarator, init, \r\n    /** if this is non-empty, the actual init is this path of this.init */\r\n    initPath, context, kind) {\r\n        super(name);\r\n        this.init = init;\r\n        this.initPath = initPath;\r\n        this.kind = kind;\r\n        this.calledFromTryStatement = false;\r\n        this.additionalInitializers = null;\r\n        this.includedPathTracker = new IncludedFullPathTracker();\r\n        this.expressionsToBeDeoptimized = [];\r\n        this.declarations = declarator ? [declarator] : [];\r\n        this.deoptimizationTracker = context.deoptimizationTracker;\r\n        this.module = context.module;\r\n    }\r\n    addDeclaration(identifier, init) {\r\n        this.declarations.push(identifier);\r\n        this.markInitializersForDeoptimization().push(init);\r\n    }\r\n    consolidateInitializers() {\r\n        if (this.additionalInitializers) {\r\n            for (const initializer of this.additionalInitializers) {\r\n                initializer.deoptimizePath(UNKNOWN_PATH);\r\n            }\r\n        }\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        if (this.isReassigned || path.length + this.initPath.length > MAX_PATH_DEPTH) {\r\n            deoptimizeInteraction(interaction);\r\n            return;\r\n        }\r\n        recursionTracker.withTrackedEntityAtPath(path, this.init, () => {\r\n            this.init.deoptimizeArgumentsOnInteractionAtPath(interaction, [...this.initPath, ...path], recursionTracker);\r\n        }, undefined);\r\n    }\r\n    deoptimizePath(path) {\r\n        if (this.isReassigned ||\r\n            this.deoptimizationTracker.trackEntityAtPathAndGetIfTracked(path, this)) {\r\n            return;\r\n        }\r\n        if (path.length === 0) {\r\n            this.markReassigned();\r\n            const expressionsToBeDeoptimized = this.expressionsToBeDeoptimized;\r\n            this.expressionsToBeDeoptimized = EMPTY_ARRAY;\r\n            for (const expression of expressionsToBeDeoptimized) {\r\n                expression.deoptimizeCache();\r\n            }\r\n            this.init.deoptimizePath([...this.initPath, UnknownKey]);\r\n        }\r\n        else {\r\n            this.init.deoptimizePath(limitConcatenatedPathDepth(this.initPath, path));\r\n        }\r\n    }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        if (this.isReassigned || path.length + this.initPath.length > MAX_PATH_DEPTH) {\r\n            return UnknownValue;\r\n        }\r\n        return recursionTracker.withTrackedEntityAtPath(path, this.init, () => {\r\n            this.expressionsToBeDeoptimized.push(origin);\r\n            return this.init.getLiteralValueAtPath([...this.initPath, ...path], recursionTracker, origin);\r\n        }, UnknownValue);\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\r\n        if (this.isReassigned || path.length + this.initPath.length > MAX_PATH_DEPTH) {\r\n            return UNKNOWN_RETURN_EXPRESSION;\r\n        }\r\n        return recursionTracker.withTrackedEntityAtPath(path, this.init, () => {\r\n            this.expressionsToBeDeoptimized.push(origin);\r\n            return this.init.getReturnExpressionWhenCalledAtPath([...this.initPath, ...path], interaction, recursionTracker, origin);\r\n        }, UNKNOWN_RETURN_EXPRESSION);\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        if (path.length + this.initPath.length > MAX_PATH_DEPTH) {\r\n            return true;\r\n        }\r\n        switch (interaction.type) {\r\n            case INTERACTION_ACCESSED: {\r\n                if (this.isReassigned)\r\n                    return true;\r\n                return (!context.accessed.trackEntityAtPathAndGetIfTracked(path, this) &&\r\n                    this.init.hasEffectsOnInteractionAtPath([...this.initPath, ...path], interaction, context));\r\n            }\r\n            case INTERACTION_ASSIGNED: {\r\n                if (this.included)\r\n                    return true;\r\n                if (path.length === 0)\r\n                    return false;\r\n                if (this.isReassigned)\r\n                    return true;\r\n                return (!context.assigned.trackEntityAtPathAndGetIfTracked(path, this) &&\r\n                    this.init.hasEffectsOnInteractionAtPath([...this.initPath, ...path], interaction, context));\r\n            }\r\n            case INTERACTION_CALLED: {\r\n                if (this.isReassigned)\r\n                    return true;\r\n                return (!(interaction.withNew ? context.instantiated : context.called).trackEntityAtPathAndGetIfTracked(path, interaction.args, this) &&\r\n                    this.init.hasEffectsOnInteractionAtPath([...this.initPath, ...path], interaction, context));\r\n            }\r\n        }\r\n    }\r\n    includePath(path, context) {\r\n        if (!this.includedPathTracker.includePathAndGetIfIncluded(path)) {\r\n            this.module.scope.context.requestTreeshakingPass();\r\n            if (!this.included) {\r\n                // This will reduce the number of tree-shaking passes by eagerly\r\n                // including inits. By pushing this here instead of directly including\r\n                // we avoid deep call stacks.\r\n                this.module.scope.context.newlyIncludedVariableInits.add(this.init);\r\n            }\r\n            super.includePath(path, context);\r\n            for (const declaration of this.declarations) {\r\n                // If node is a default export, it can save a tree-shaking run to include the full declaration now\r\n                if (!declaration.included)\r\n                    declaration.include(context, false);\r\n                let node = declaration.parent;\r\n                while (!node.included) {\r\n                    // We do not want to properly include parents in case they are part of a dead branch\r\n                    // in which case .include() might pull in more dead code\r\n                    node.includeNode(context);\r\n                    if (node.type === Program$1)\r\n                        break;\r\n                    node = node.parent;\r\n                }\r\n                /**\r\n                 * import('foo').then(m => {\r\n                 *   console.log(m.foo)\r\n                 * })\r\n                 */\r\n                if (this.kind === 'parameter' &&\r\n                    (isArrowFunctionExpressionNode(declaration.parent) ||\r\n                        isFunctionExpressionNode(declaration.parent)) &&\r\n                    isCallExpressionNode(declaration.parent.parent) &&\r\n                    isMemberExpressionNode(declaration.parent.parent.callee) &&\r\n                    isIdentifierNode(declaration.parent.parent.callee.property) &&\r\n                    declaration.parent.parent.callee.property.name === 'then' &&\r\n                    isImportExpressionNode(declaration.parent.parent.callee.object)) {\r\n                    declaration.parent.parent.callee.object.includePath(path, context);\r\n                }\r\n            }\r\n            // We need to make sure we include the correct path of the init\r\n            if (path.length > 0) {\r\n                this.init.includePath(limitConcatenatedPathDepth(this.initPath, path), context);\r\n                this.additionalInitializers?.forEach(initializer => initializer.includePath(UNKNOWN_PATH, context));\r\n            }\r\n        }\r\n    }\r\n    includeCallArguments(interaction, context) {\r\n        if (this.isReassigned ||\r\n            context.includedCallArguments.has(this.init) ||\r\n            // This can be removed again once we can include arguments when called at\r\n            // a specific path\r\n            this.initPath.length > 0) {\r\n            includeInteraction(interaction, context);\r\n        }\r\n        else {\r\n            context.includedCallArguments.add(this.init);\r\n            this.init.includeCallArguments(interaction, context);\r\n            context.includedCallArguments.delete(this.init);\r\n        }\r\n    }\r\n    markCalledFromTryStatement() {\r\n        this.calledFromTryStatement = true;\r\n    }\r\n    markInitializersForDeoptimization() {\r\n        if (this.additionalInitializers === null) {\r\n            this.additionalInitializers = [this.init];\r\n            this.init = UNKNOWN_EXPRESSION;\r\n            this.markReassigned();\r\n        }\r\n        return this.additionalInitializers;\r\n    }\r\n}\r\n\r\nconst tdzVariableKinds = new Set(['class', 'const', 'let', 'var', 'using', 'await using']);\r\nclass IdentifierBase extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.variable = null;\r\n        this.isVariableReference = false;\r\n    }\r\n    get isTDZAccess() {\r\n        if (!isFlagSet(this.flags, 4 /* Flag.tdzAccessDefined */)) {\r\n            return null;\r\n        }\r\n        return isFlagSet(this.flags, 8 /* Flag.tdzAccess */);\r\n    }\r\n    set isTDZAccess(value) {\r\n        this.flags = setFlag(this.flags, 4 /* Flag.tdzAccessDefined */, true);\r\n        this.flags = setFlag(this.flags, 8 /* Flag.tdzAccess */, value);\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        this.variable.deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n    }\r\n    deoptimizePath(path) {\r\n        if (path.length === 0 && !this.scope.contains(this.name)) {\r\n            this.disallowImportReassignment();\r\n        }\r\n        // We keep conditional chaining because an unknown Node could have an\r\n        // Identifier as property that might be deoptimized by default\r\n        this.variable?.deoptimizePath(path);\r\n    }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        return this.getVariableRespectingTDZ().getLiteralValueAtPath(path, recursionTracker, origin);\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\r\n        const [expression, isPure] = this.getVariableRespectingTDZ().getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\r\n        return [expression, isPure || this.isPureFunction(path)];\r\n    }\r\n    hasEffects(context) {\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        if (this.isPossibleTDZ() && this.variable.kind !== 'var') {\r\n            return true;\r\n        }\r\n        return (this.scope.context.options.treeshake\r\n            .unknownGlobalSideEffects &&\r\n            this.variable instanceof GlobalVariable &&\r\n            !this.isPureFunction(EMPTY_PATH) &&\r\n            this.variable.hasEffectsOnInteractionAtPath(EMPTY_PATH, NODE_INTERACTION_UNKNOWN_ACCESS, context));\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        switch (interaction.type) {\r\n            case INTERACTION_ACCESSED: {\r\n                return (this.variable !== null &&\r\n                    !this.isPureFunction(path) &&\r\n                    this.getVariableRespectingTDZ().hasEffectsOnInteractionAtPath(path, interaction, context));\r\n            }\r\n            case INTERACTION_ASSIGNED: {\r\n                return (path.length > 0 ? this.getVariableRespectingTDZ() : this.variable).hasEffectsOnInteractionAtPath(path, interaction, context);\r\n            }\r\n            case INTERACTION_CALLED: {\r\n                return (!this.isPureFunction(path) &&\r\n                    this.getVariableRespectingTDZ().hasEffectsOnInteractionAtPath(path, interaction, context));\r\n            }\r\n        }\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        if (includeChildrenRecursively) {\r\n            this.variable?.includePath(UNKNOWN_PATH, context);\r\n        }\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        if (this.variable !== null) {\r\n            this.scope.context.includeVariableInModule(this.variable, EMPTY_PATH, context);\r\n        }\r\n    }\r\n    includePath(path, context) {\r\n        if (!this.included) {\r\n            this.included = true;\r\n            if (!this.deoptimized)\r\n                this.applyDeoptimizations();\r\n            if (this.variable !== null) {\r\n                this.scope.context.includeVariableInModule(this.variable, path, context);\r\n            }\r\n        }\r\n        else if (path.length > 0) {\r\n            this.variable?.includePath(path, context);\r\n        }\r\n    }\r\n    includeCallArguments(interaction, context) {\r\n        this.variable.includeCallArguments(interaction, context);\r\n    }\r\n    isPossibleTDZ() {\r\n        // return cached value to avoid issues with the next tree-shaking pass\r\n        const cachedTdzAccess = this.isTDZAccess;\r\n        if (cachedTdzAccess !== null)\r\n            return cachedTdzAccess;\r\n        if (!(this.variable instanceof LocalVariable &&\r\n            this.variable.kind &&\r\n            tdzVariableKinds.has(this.variable.kind) &&\r\n            // We ignore modules that did not receive a treeshaking pass yet as that\r\n            // causes many false positives due to circular dependencies or disabled\r\n            // moduleSideEffects.\r\n            this.variable.module.hasTreeShakingPassStarted)) {\r\n            return (this.isTDZAccess = false);\r\n        }\r\n        let decl_id;\r\n        if (this.variable.declarations &&\r\n            this.variable.declarations.length === 1 &&\r\n            (decl_id = this.variable.declarations[0]) &&\r\n            this.start < decl_id.start &&\r\n            closestParentFunctionOrProgram(this) === closestParentFunctionOrProgram(decl_id)) {\r\n            // a variable accessed before its declaration\r\n            // in the same function or at top level of module\r\n            return (this.isTDZAccess = true);\r\n        }\r\n        if (!this.variable.initReached) {\r\n            // Either a const/let TDZ violation or\r\n            // var use before declaration was encountered.\r\n            return (this.isTDZAccess = true);\r\n        }\r\n        return (this.isTDZAccess = false);\r\n    }\r\n    applyDeoptimizations() {\r\n        this.deoptimized = true;\r\n        if (this.variable instanceof LocalVariable) {\r\n            // When accessing a variable from a module without side effects, this\r\n            // means we use an export of that module and therefore need to potentially\r\n            // include it in the bundle.\r\n            if (!this.variable.module.isExecuted) {\r\n                markModuleAndImpureDependenciesAsExecuted(this.variable.module);\r\n            }\r\n            this.variable.consolidateInitializers();\r\n            this.scope.context.requestTreeshakingPass();\r\n        }\r\n        if (this.isVariableReference) {\r\n            this.variable.addUsedPlace(this);\r\n            this.scope.context.requestTreeshakingPass();\r\n        }\r\n    }\r\n    disallowImportReassignment() {\r\n        return this.scope.context.error(logIllegalImportReassignment(this.name, this.scope.context.module.id), this.start);\r\n    }\r\n    getVariableRespectingTDZ() {\r\n        if (this.isPossibleTDZ()) {\r\n            return UNKNOWN_EXPRESSION;\r\n        }\r\n        return this.variable;\r\n    }\r\n    isPureFunction(path) {\r\n        let currentPureFunction = this.scope.context.manualPureFunctions[this.name];\r\n        for (const segment of path) {\r\n            if (currentPureFunction) {\r\n                if (currentPureFunction[PureFunctionKey]) {\r\n                    return true;\r\n                }\r\n                currentPureFunction = currentPureFunction[segment];\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        return currentPureFunction?.[PureFunctionKey];\r\n    }\r\n}\r\nfunction closestParentFunctionOrProgram(node) {\r\n    while (node && !/^Program|Function/.test(node.type)) {\r\n        node = node.parent;\r\n    }\r\n    // one of: ArrowFunctionExpression, FunctionDeclaration, FunctionExpression or Program\r\n    return node;\r\n}\r\n\r\nclass ObjectMember extends ExpressionEntity {\r\n    constructor(object, path) {\r\n        super();\r\n        this.object = object;\r\n        this.path = path;\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        this.object.deoptimizeArgumentsOnInteractionAtPath(interaction, [...this.path, ...path], recursionTracker);\r\n    }\r\n    deoptimizePath(path) {\r\n        this.object.deoptimizePath([...this.path, ...path]);\r\n    }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        return this.object.getLiteralValueAtPath([...this.path, ...path], recursionTracker, origin);\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\r\n        return this.object.getReturnExpressionWhenCalledAtPath([...this.path, ...path], interaction, recursionTracker, origin);\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        return this.object.hasEffectsOnInteractionAtPath([...this.path, ...path], interaction, context);\r\n    }\r\n}\r\n\r\nclass Identifier extends IdentifierBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.variable = null;\r\n    }\r\n    get isDestructuringDeoptimized() {\r\n        return isFlagSet(this.flags, 16777216 /* Flag.destructuringDeoptimized */);\r\n    }\r\n    set isDestructuringDeoptimized(value) {\r\n        this.flags = setFlag(this.flags, 16777216 /* Flag.destructuringDeoptimized */, value);\r\n    }\r\n    addExportedVariables(variables, exportNamesByVariable) {\r\n        if (exportNamesByVariable.has(this.variable)) {\r\n            variables.push(this.variable);\r\n        }\r\n    }\r\n    bind() {\r\n        if (!this.variable && is_reference(this, this.parent)) {\r\n            this.variable = this.scope.findVariable(this.name);\r\n            this.variable.addReference(this);\r\n            this.isVariableReference = true;\r\n        }\r\n    }\r\n    declare(kind, destructuredInitPath, init) {\r\n        let variable;\r\n        const { treeshake } = this.scope.context.options;\r\n        if (kind === 'parameter') {\r\n            variable = this.scope.addParameterDeclaration(this, destructuredInitPath);\r\n        }\r\n        else {\r\n            variable = this.scope.addDeclaration(this, this.scope.context, init, destructuredInitPath, kind);\r\n            if (kind === 'var' && treeshake && treeshake.correctVarValueBeforeDeclaration) {\r\n                // Necessary to make sure the init is deoptimized. We cannot call deoptimizePath here.\r\n                variable.markInitializersForDeoptimization();\r\n            }\r\n        }\r\n        return [(this.variable = variable)];\r\n    }\r\n    deoptimizeAssignment(destructuredInitPath, init) {\r\n        this.deoptimizePath(EMPTY_PATH);\r\n        init.deoptimizePath([...destructuredInitPath, UnknownKey]);\r\n    }\r\n    hasEffectsWhenDestructuring(context, destructuredInitPath, init) {\r\n        return (destructuredInitPath.length > 0 &&\r\n            init.hasEffectsOnInteractionAtPath(destructuredInitPath, NODE_INTERACTION_UNKNOWN_ACCESS, context));\r\n    }\r\n    includeDestructuredIfNecessary(context, destructuredInitPath, init) {\r\n        if (destructuredInitPath.length > 0 && !this.isDestructuringDeoptimized) {\r\n            this.isDestructuringDeoptimized = true;\r\n            init.deoptimizeArgumentsOnInteractionAtPath({\r\n                args: [new ObjectMember(init, destructuredInitPath.slice(0, -1))],\r\n                type: INTERACTION_ACCESSED\r\n            }, destructuredInitPath, SHARED_RECURSION_TRACKER);\r\n        }\r\n        const { propertyReadSideEffects } = this.scope.context.options\r\n            .treeshake;\r\n        let included = this.included;\r\n        if ((included ||=\r\n            destructuredInitPath.length > 0 &&\r\n                !context.brokenFlow &&\r\n                propertyReadSideEffects &&\r\n                (propertyReadSideEffects === 'always' ||\r\n                    init.hasEffectsOnInteractionAtPath(destructuredInitPath, NODE_INTERACTION_UNKNOWN_ACCESS, createHasEffectsContext())))) {\r\n            if (this.variable && !this.variable.included) {\r\n                this.scope.context.includeVariableInModule(this.variable, EMPTY_PATH, context);\r\n            }\r\n            init.includePath(destructuredInitPath, context);\r\n        }\r\n        if (!this.included && included) {\r\n            this.includeNode(context);\r\n        }\r\n        return this.included;\r\n    }\r\n    markDeclarationReached() {\r\n        this.variable.initReached = true;\r\n    }\r\n    render(code, { snippets: { getPropertyAccess }, useOriginalName }, { renderedParentType, isCalleeOfRenderedParent, isShorthandProperty } = BLANK) {\r\n        if (this.variable) {\r\n            const name = this.variable.getName(getPropertyAccess, useOriginalName);\r\n            if (name !== this.name) {\r\n                code.overwrite(this.start, this.end, name, {\r\n                    contentOnly: true,\r\n                    storeName: true\r\n                });\r\n                if (isShorthandProperty) {\r\n                    code.prependRight(this.start, `${this.name}: `);\r\n                }\r\n            }\r\n            // In strict mode, any variable named \"eval\" must be the actual \"eval\" function\r\n            if (name === 'eval' &&\r\n                renderedParentType === CallExpression$1 &&\r\n                isCalleeOfRenderedParent) {\r\n                code.appendRight(this.start, '0, ');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$';\r\nconst base = 64;\r\nfunction toBase64(value) {\r\n    let outString = '';\r\n    do {\r\n        const currentDigit = value % base;\r\n        value = (value / base) | 0;\r\n        outString = chars[currentDigit] + outString;\r\n    } while (value !== 0);\r\n    return outString;\r\n}\r\n\r\nfunction getSafeName(baseName, usedNames, forbiddenNames) {\r\n    let safeName = baseName;\r\n    let count = 1;\r\n    while (usedNames.has(safeName) || RESERVED_NAMES.has(safeName) || forbiddenNames?.has(safeName)) {\r\n        safeName = `${baseName}$${toBase64(count++)}`;\r\n    }\r\n    usedNames.add(safeName);\r\n    return safeName;\r\n}\r\n\r\nclass Scope {\r\n    constructor() {\r\n        this.children = [];\r\n        this.variables = new Map();\r\n    }\r\n    /*\r\n    Redeclaration rules:\r\n    - var can redeclare var\r\n    - in function scopes, function and var can redeclare function and var\r\n    - var is hoisted across scopes, function remains in the scope it is declared\r\n    - var and function can redeclare function parameters, but parameters cannot redeclare parameters\r\n    - function cannot redeclare catch scope parameters\r\n    - var can redeclare catch scope parameters in a way\r\n        - if the parameter is an identifier and not a pattern\r\n        - then the variable is still declared in the hoisted outer scope, but the initializer is assigned to the parameter\r\n    - const, let, class, and function except in the cases above cannot redeclare anything\r\n     */\r\n    addDeclaration(identifier, context, init, destructuredInitPath, kind) {\r\n        const name = identifier.name;\r\n        const existingVariable = this.hoistedVariables?.get(name) || this.variables.get(name);\r\n        if (existingVariable) {\r\n            if (kind === 'var' && existingVariable.kind === 'var') {\r\n                existingVariable.addDeclaration(identifier, init);\r\n                return existingVariable;\r\n            }\r\n            context.error(logRedeclarationError(name), identifier.start);\r\n        }\r\n        const newVariable = new LocalVariable(identifier.name, identifier, init, destructuredInitPath, context, kind);\r\n        this.variables.set(name, newVariable);\r\n        return newVariable;\r\n    }\r\n    addHoistedVariable(name, variable) {\r\n        (this.hoistedVariables ||= new Map()).set(name, variable);\r\n    }\r\n    contains(name) {\r\n        return this.variables.has(name);\r\n    }\r\n    findVariable(_name) {\r\n        /* istanbul ignore next */\r\n        throw new Error('Internal Error: findVariable needs to be implemented by a subclass');\r\n    }\r\n}\r\n\r\nclass ChildScope extends Scope {\r\n    constructor(parent, context) {\r\n        super();\r\n        this.parent = parent;\r\n        this.context = context;\r\n        this.accessedOutsideVariables = new Map();\r\n        parent.children.push(this);\r\n    }\r\n    addAccessedDynamicImport(importExpression) {\r\n        (this.accessedDynamicImports || (this.accessedDynamicImports = new Set())).add(importExpression);\r\n        if (this.parent instanceof ChildScope) {\r\n            this.parent.addAccessedDynamicImport(importExpression);\r\n        }\r\n    }\r\n    addAccessedGlobals(globals, accessedGlobalsByScope) {\r\n        const accessedGlobals = accessedGlobalsByScope.get(this) || new Set();\r\n        for (const name of globals) {\r\n            accessedGlobals.add(name);\r\n        }\r\n        accessedGlobalsByScope.set(this, accessedGlobals);\r\n        if (this.parent instanceof ChildScope) {\r\n            this.parent.addAccessedGlobals(globals, accessedGlobalsByScope);\r\n        }\r\n    }\r\n    addNamespaceMemberAccess(name, variable) {\r\n        this.accessedOutsideVariables.set(name, variable);\r\n        this.parent.addNamespaceMemberAccess(name, variable);\r\n    }\r\n    addReturnExpression(expression) {\r\n        if (this.parent instanceof ChildScope) {\r\n            this.parent.addReturnExpression(expression);\r\n        }\r\n    }\r\n    addUsedOutsideNames(usedNames, format, exportNamesByVariable, accessedGlobalsByScope) {\r\n        for (const variable of this.accessedOutsideVariables.values()) {\r\n            if (variable.included) {\r\n                usedNames.add(variable.getBaseVariableName());\r\n                if (format === 'system' && exportNamesByVariable.has(variable)) {\r\n                    usedNames.add('exports');\r\n                }\r\n            }\r\n        }\r\n        const accessedGlobals = accessedGlobalsByScope.get(this);\r\n        if (accessedGlobals) {\r\n            for (const name of accessedGlobals) {\r\n                usedNames.add(name);\r\n            }\r\n        }\r\n    }\r\n    contains(name) {\r\n        return this.variables.has(name) || this.parent.contains(name);\r\n    }\r\n    deconflict(format, exportNamesByVariable, accessedGlobalsByScope) {\r\n        const usedNames = new Set();\r\n        this.addUsedOutsideNames(usedNames, format, exportNamesByVariable, accessedGlobalsByScope);\r\n        if (this.accessedDynamicImports) {\r\n            for (const importExpression of this.accessedDynamicImports) {\r\n                if (importExpression.inlineNamespace) {\r\n                    usedNames.add(importExpression.inlineNamespace.getBaseVariableName());\r\n                }\r\n            }\r\n        }\r\n        for (const [name, variable] of this.variables) {\r\n            if (variable.included || variable.alwaysRendered) {\r\n                variable.setRenderNames(null, getSafeName(name, usedNames, variable.forbiddenNames));\r\n            }\r\n        }\r\n        for (const scope of this.children) {\r\n            scope.deconflict(format, exportNamesByVariable, accessedGlobalsByScope);\r\n        }\r\n    }\r\n    findLexicalBoundary() {\r\n        return this.parent.findLexicalBoundary();\r\n    }\r\n    findGlobal(name) {\r\n        const variable = this.parent.findVariable(name);\r\n        this.accessedOutsideVariables.set(name, variable);\r\n        return variable;\r\n    }\r\n    findVariable(name) {\r\n        const knownVariable = this.variables.get(name) || this.accessedOutsideVariables.get(name);\r\n        if (knownVariable) {\r\n            return knownVariable;\r\n        }\r\n        const variable = this.parent.findVariable(name);\r\n        this.accessedOutsideVariables.set(name, variable);\r\n        return variable;\r\n    }\r\n}\r\n\r\nfunction checkEffectForNodes(nodes, context) {\r\n    for (const node of nodes) {\r\n        if (node.hasEffects(context)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nclass MethodBase extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.accessedValue = null;\r\n    }\r\n    get computed() {\r\n        return isFlagSet(this.flags, 1024 /* Flag.computed */);\r\n    }\r\n    set computed(value) {\r\n        this.flags = setFlag(this.flags, 1024 /* Flag.computed */, value);\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        if (interaction.type === INTERACTION_ACCESSED && this.kind === 'get' && path.length === 0) {\r\n            return this.value.deoptimizeArgumentsOnInteractionAtPath({\r\n                args: interaction.args,\r\n                type: INTERACTION_CALLED,\r\n                withNew: false\r\n            }, EMPTY_PATH, recursionTracker);\r\n        }\r\n        if (interaction.type === INTERACTION_ASSIGNED && this.kind === 'set' && path.length === 0) {\r\n            return this.value.deoptimizeArgumentsOnInteractionAtPath({\r\n                args: interaction.args,\r\n                type: INTERACTION_CALLED,\r\n                withNew: false\r\n            }, EMPTY_PATH, recursionTracker);\r\n        }\r\n        this.getAccessedValue()[0].deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n    }\r\n    // As getter properties directly receive their values from fixed function\r\n    // expressions, there is no known situation where a getter is deoptimized.\r\n    deoptimizeCache() { }\r\n    deoptimizePath(path) {\r\n        this.getAccessedValue()[0].deoptimizePath(path);\r\n    }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        return this.getAccessedValue()[0].getLiteralValueAtPath(path, recursionTracker, origin);\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\r\n        return this.getAccessedValue()[0].getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\r\n    }\r\n    hasEffects(context) {\r\n        return this.key.hasEffects(context);\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        if (this.kind === 'get' && interaction.type === INTERACTION_ACCESSED && path.length === 0) {\r\n            return this.value.hasEffectsOnInteractionAtPath(EMPTY_PATH, {\r\n                args: interaction.args,\r\n                type: INTERACTION_CALLED,\r\n                withNew: false\r\n            }, context);\r\n        }\r\n        // setters are only called for empty paths\r\n        if (this.kind === 'set' && interaction.type === INTERACTION_ASSIGNED) {\r\n            return this.value.hasEffectsOnInteractionAtPath(EMPTY_PATH, {\r\n                args: interaction.args,\r\n                type: INTERACTION_CALLED,\r\n                withNew: false\r\n            }, context);\r\n        }\r\n        return this.getAccessedValue()[0].hasEffectsOnInteractionAtPath(path, interaction, context);\r\n    }\r\n    getAccessedValue() {\r\n        if (this.accessedValue === null) {\r\n            if (this.kind === 'get') {\r\n                this.accessedValue = UNKNOWN_RETURN_EXPRESSION;\r\n                return (this.accessedValue = this.value.getReturnExpressionWhenCalledAtPath(EMPTY_PATH, NODE_INTERACTION_UNKNOWN_CALL, SHARED_RECURSION_TRACKER, this));\r\n            }\r\n            else {\r\n                return (this.accessedValue = [this.value, false]);\r\n            }\r\n        }\r\n        return this.accessedValue;\r\n    }\r\n}\r\nMethodBase.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nMethodBase.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass MethodDefinition extends MethodBase {\r\n    hasEffects(context) {\r\n        return super.hasEffects(context) || checkEffectForNodes(this.decorators, context);\r\n    }\r\n}\r\n\r\nclass BlockScope extends ChildScope {\r\n    constructor(parent) {\r\n        super(parent, parent.context);\r\n    }\r\n    addDeclaration(identifier, context, init, destructuredInitPath, kind) {\r\n        if (kind === 'var') {\r\n            const name = identifier.name;\r\n            const existingVariable = this.hoistedVariables?.get(name) || this.variables.get(name);\r\n            if (existingVariable) {\r\n                if (existingVariable.kind === 'var' ||\r\n                    (kind === 'var' && existingVariable.kind === 'parameter')) {\r\n                    existingVariable.addDeclaration(identifier, init);\r\n                    return existingVariable;\r\n                }\r\n                return context.error(logRedeclarationError(name), identifier.start);\r\n            }\r\n            const declaredVariable = this.parent.addDeclaration(identifier, context, init, destructuredInitPath, kind);\r\n            // Necessary to make sure the init is deoptimized for conditional declarations.\r\n            // We cannot call deoptimizePath here.\r\n            declaredVariable.markInitializersForDeoptimization();\r\n            // We add the variable to this and all parent scopes to reliably detect conflicts\r\n            this.addHoistedVariable(name, declaredVariable);\r\n            return declaredVariable;\r\n        }\r\n        return super.addDeclaration(identifier, context, init, destructuredInitPath, kind);\r\n    }\r\n}\r\n\r\nclass StaticBlock extends NodeBase {\r\n    createScope(parentScope) {\r\n        this.scope = new BlockScope(parentScope);\r\n    }\r\n    hasEffects(context) {\r\n        for (const node of this.body) {\r\n            if (node.hasEffects(context))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        this.included = true;\r\n        for (const node of this.body) {\r\n            if (includeChildrenRecursively || node.shouldBeIncluded(context))\r\n                node.include(context, includeChildrenRecursively);\r\n        }\r\n    }\r\n    render(code, options) {\r\n        if (this.body.length > 0) {\r\n            const bodyStartPos = findFirstOccurrenceOutsideComment(code.original.slice(this.start, this.end), '{') + 1;\r\n            renderStatementList(this.body, code, this.start + bodyStartPos, this.end - 1, options);\r\n        }\r\n        else {\r\n            super.render(code, options);\r\n        }\r\n    }\r\n}\r\nStaticBlock.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nStaticBlock.prototype.applyDeoptimizations = doNotDeoptimize;\r\nfunction isStaticBlock(statement) {\r\n    return statement.type === StaticBlock$1;\r\n}\r\n\r\nclass ClassNode extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.objectEntity = null;\r\n    }\r\n    createScope(parentScope) {\r\n        this.scope = new ChildScope(parentScope, parentScope.context);\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        this.getObjectEntity().deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n    }\r\n    deoptimizeCache() {\r\n        this.getObjectEntity().deoptimizeAllProperties();\r\n    }\r\n    deoptimizePath(path) {\r\n        this.getObjectEntity().deoptimizePath(path);\r\n    }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        return this.getObjectEntity().getLiteralValueAtPath(path, recursionTracker, origin);\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\r\n        return this.getObjectEntity().getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\r\n    }\r\n    hasEffects(context) {\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        const initEffect = this.superClass?.hasEffects(context) || this.body.hasEffects(context);\r\n        this.id?.markDeclarationReached();\r\n        return initEffect || super.hasEffects(context) || checkEffectForNodes(this.decorators, context);\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        return interaction.type === INTERACTION_CALLED && path.length === 0\r\n            ? !interaction.withNew ||\r\n                (this.classConstructor === null\r\n                    ? this.superClass?.hasEffectsOnInteractionAtPath(path, interaction, context)\r\n                    : this.classConstructor.hasEffectsOnInteractionAtPath(path, interaction, context)) ||\r\n                false\r\n            : this.getObjectEntity().hasEffectsOnInteractionAtPath(path, interaction, context);\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        this.superClass?.include(context, includeChildrenRecursively);\r\n        this.body.include(context, includeChildrenRecursively);\r\n        for (const decorator of this.decorators)\r\n            decorator.include(context, includeChildrenRecursively);\r\n        if (this.id) {\r\n            this.id.markDeclarationReached();\r\n            this.id.include(context, includeChildrenRecursively);\r\n        }\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        this.id?.declare('class', EMPTY_PATH, this);\r\n        for (const method of this.body.body) {\r\n            if (method instanceof MethodDefinition && method.kind === 'constructor') {\r\n                this.classConstructor = method;\r\n                return;\r\n            }\r\n        }\r\n        this.classConstructor = null;\r\n    }\r\n    applyDeoptimizations() {\r\n        this.deoptimized = true;\r\n        for (const definition of this.body.body) {\r\n            if (!isStaticBlock(definition) &&\r\n                !(definition.static ||\r\n                    (definition instanceof MethodDefinition && definition.kind === 'constructor'))) {\r\n                // Calls to methods are not tracked, ensure that the return value is deoptimized\r\n                definition.deoptimizePath(UNKNOWN_PATH);\r\n            }\r\n        }\r\n        this.scope.context.requestTreeshakingPass();\r\n    }\r\n    getObjectEntity() {\r\n        if (this.objectEntity !== null) {\r\n            return this.objectEntity;\r\n        }\r\n        const staticProperties = [];\r\n        const dynamicMethods = [];\r\n        for (const definition of this.body.body) {\r\n            if (isStaticBlock(definition))\r\n                continue;\r\n            const properties = definition.static ? staticProperties : dynamicMethods;\r\n            const definitionKind = definition.kind;\r\n            // Note that class fields do not end up on the prototype\r\n            if (properties === dynamicMethods && !definitionKind)\r\n                continue;\r\n            const kind = definitionKind === 'set' || definitionKind === 'get' ? definitionKind : 'init';\r\n            let key;\r\n            if (definition.computed) {\r\n                const keyValue = definition.key.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this);\r\n                if (typeof keyValue === 'symbol') {\r\n                    properties.push({ key: UnknownKey, kind, property: definition });\r\n                    continue;\r\n                }\r\n                else {\r\n                    key = String(keyValue);\r\n                }\r\n            }\r\n            else {\r\n                key =\r\n                    definition.key instanceof Identifier\r\n                        ? definition.key.name\r\n                        : String(definition.key.value);\r\n            }\r\n            properties.push({ key, kind, property: definition });\r\n        }\r\n        staticProperties.unshift({\r\n            key: 'prototype',\r\n            kind: 'init',\r\n            property: new ObjectEntity(dynamicMethods, this.superClass ? new ObjectMember(this.superClass, ['prototype']) : OBJECT_PROTOTYPE)\r\n        });\r\n        return (this.objectEntity = new ObjectEntity(staticProperties, this.superClass || OBJECT_PROTOTYPE));\r\n    }\r\n}\r\nClassNode.prototype.includeNode = onlyIncludeSelf;\r\n\r\nclass ClassDeclaration extends ClassNode {\r\n    initialise() {\r\n        super.initialise();\r\n        if (this.id !== null) {\r\n            this.id.variable.isId = true;\r\n        }\r\n    }\r\n    parseNode(esTreeNode) {\r\n        if (esTreeNode.id !== null) {\r\n            this.id = new Identifier(this, this.scope.parent).parseNode(esTreeNode.id);\r\n        }\r\n        return super.parseNode(esTreeNode);\r\n    }\r\n    render(code, options) {\r\n        const { exportNamesByVariable, format, snippets: { _, getPropertyAccess } } = options;\r\n        if (this.id) {\r\n            const { variable, name } = this.id;\r\n            if (format === 'system' && exportNamesByVariable.has(variable)) {\r\n                code.appendLeft(this.end, `${_}${getSystemExportStatement([variable], options)};`);\r\n            }\r\n            const renderedVariable = variable.getName(getPropertyAccess);\r\n            if (renderedVariable !== name) {\r\n                this.decorators.map(decorator => decorator.render(code, options));\r\n                this.superClass?.render(code, options);\r\n                this.body.render(code, {\r\n                    ...options,\r\n                    useOriginalName: (_variable) => _variable === variable\r\n                });\r\n                code.prependRight(this.start, `let ${renderedVariable}${_}=${_}`);\r\n                code.prependLeft(this.end, ';');\r\n                return;\r\n            }\r\n        }\r\n        super.render(code, options);\r\n    }\r\n    applyDeoptimizations() {\r\n        super.applyDeoptimizations();\r\n        const { id, scope } = this;\r\n        if (id) {\r\n            const { name, variable } = id;\r\n            for (const accessedVariable of scope.accessedOutsideVariables.values()) {\r\n                if (accessedVariable !== variable) {\r\n                    accessedVariable.forbidName(name);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass ArgumentsVariable extends LocalVariable {\r\n    constructor(context) {\r\n        super('arguments', null, UNKNOWN_EXPRESSION, EMPTY_PATH, context, 'other');\r\n    }\r\n    addArgumentToBeDeoptimized(_argument) { }\r\n    // Only If there is at least one reference, then we need to track all\r\n    // arguments in order to be able to deoptimize them.\r\n    addReference() {\r\n        this.deoptimizedArguments = [];\r\n        this.addArgumentToBeDeoptimized = addArgumentToBeDeoptimized;\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, { type }) {\r\n        return type !== INTERACTION_ACCESSED || path.length > 1;\r\n    }\r\n    includePath(path, context) {\r\n        super.includePath(path, context);\r\n        for (const argument of this.deoptimizedArguments) {\r\n            argument.deoptimizePath(UNKNOWN_PATH);\r\n        }\r\n        this.deoptimizedArguments.length = 0;\r\n    }\r\n}\r\nfunction addArgumentToBeDeoptimized(argument) {\r\n    if (this.included) {\r\n        argument.deoptimizePath(UNKNOWN_PATH);\r\n    }\r\n    else {\r\n        this.deoptimizedArguments?.push(argument);\r\n    }\r\n}\r\n\r\nconst MAX_TRACKED_INTERACTIONS = 20;\r\nconst NO_INTERACTIONS = EMPTY_ARRAY;\r\nconst UNKNOWN_DEOPTIMIZED_FIELD = new Set([UnknownKey]);\r\nconst EMPTY_PATH_TRACKER = new EntityPathTracker();\r\nconst UNKNOWN_DEOPTIMIZED_ENTITY = new Set([UNKNOWN_EXPRESSION]);\r\nclass ParameterVariable extends LocalVariable {\r\n    constructor(name, declarator, argumentPath, context) {\r\n        super(name, declarator, UNKNOWN_EXPRESSION, argumentPath, context, 'parameter');\r\n        this.includedPathTracker = new IncludedTopLevelPathTracker();\r\n        this.argumentsToBeDeoptimized = new Set();\r\n        this.deoptimizationInteractions = [];\r\n        this.deoptimizations = new EntityPathTracker();\r\n        this.deoptimizedFields = new Set();\r\n        this.expressionsDependingOnKnownValue = [];\r\n        this.knownValue = null;\r\n        this.knownValueLiteral = UnknownValue;\r\n    }\r\n    addArgumentForDeoptimization(entity) {\r\n        this.updateKnownValue(entity);\r\n        if (entity === UNKNOWN_EXPRESSION) {\r\n            // As unknown expressions fully deoptimize all interactions, we can clear\r\n            // the interaction cache at this point provided we keep this optimization\r\n            // in mind when adding new interactions\r\n            if (!this.argumentsToBeDeoptimized.has(UNKNOWN_EXPRESSION)) {\r\n                this.argumentsToBeDeoptimized.add(UNKNOWN_EXPRESSION);\r\n                for (const { interaction } of this.deoptimizationInteractions) {\r\n                    deoptimizeInteraction(interaction);\r\n                }\r\n                this.deoptimizationInteractions = NO_INTERACTIONS;\r\n            }\r\n        }\r\n        else if (this.deoptimizedFields.has(UnknownKey)) {\r\n            // This means that we already deoptimized all interactions and no longer\r\n            // track them\r\n            entity.deoptimizePath([...this.initPath, UnknownKey]);\r\n        }\r\n        else if (!this.argumentsToBeDeoptimized.has(entity)) {\r\n            this.argumentsToBeDeoptimized.add(entity);\r\n            for (const field of this.deoptimizedFields) {\r\n                entity.deoptimizePath([...this.initPath, field]);\r\n            }\r\n            for (const { interaction, path } of this.deoptimizationInteractions) {\r\n                entity.deoptimizeArgumentsOnInteractionAtPath(interaction, [...this.initPath, ...path], SHARED_RECURSION_TRACKER);\r\n            }\r\n        }\r\n    }\r\n    /** This says we should not make assumptions about the value of the parameter.\r\n     *  This is different from deoptimization that will also cause argument values\r\n     *  to be deoptimized. */\r\n    markReassigned() {\r\n        if (this.isReassigned) {\r\n            return;\r\n        }\r\n        super.markReassigned();\r\n        for (const expression of this.expressionsDependingOnKnownValue) {\r\n            expression.deoptimizeCache();\r\n        }\r\n        this.expressionsDependingOnKnownValue = EMPTY_ARRAY;\r\n    }\r\n    deoptimizeCache() {\r\n        this.markReassigned();\r\n    }\r\n    /**\r\n     * Update the known value of the parameter variable.\r\n     * Must be called for every function call, so it can track all the arguments,\r\n     * and deoptimizeCache itself to mark reassigned if the argument is changed.\r\n     * @param argument The argument of the function call\r\n     */\r\n    updateKnownValue(argument) {\r\n        if (this.isReassigned) {\r\n            return;\r\n        }\r\n        if (this.knownValue === null) {\r\n            this.knownValue = argument;\r\n            this.knownValueLiteral = argument.getLiteralValueAtPath(this.initPath, SHARED_RECURSION_TRACKER, this);\r\n            return;\r\n        }\r\n        // the same literal or identifier, do nothing\r\n        if (this.knownValue === argument ||\r\n            (this.knownValue instanceof Identifier &&\r\n                argument instanceof Identifier &&\r\n                this.knownValue.variable === argument.variable)) {\r\n            return;\r\n        }\r\n        const { knownValueLiteral } = this;\r\n        if (typeof knownValueLiteral === 'symbol' ||\r\n            argument.getLiteralValueAtPath(this.initPath, SHARED_RECURSION_TRACKER, this) !==\r\n                knownValueLiteral) {\r\n            this.markReassigned();\r\n        }\r\n    }\r\n    /**\r\n     * This function freezes the known value of the parameter variable,\r\n     * so the optimization starts with a certain ExpressionEntity.\r\n     * The optimization can be undone by calling `markReassigned`.\r\n     * @returns the frozen value\r\n     */\r\n    getKnownValue() {\r\n        return this.knownValue || UNKNOWN_EXPRESSION;\r\n    }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        if (this.isReassigned || path.length + this.initPath.length > MAX_PATH_DEPTH) {\r\n            return UnknownValue;\r\n        }\r\n        const knownValue = this.getKnownValue();\r\n        this.expressionsDependingOnKnownValue.push(origin);\r\n        return recursionTracker.withTrackedEntityAtPath(path, knownValue, () => knownValue.getLiteralValueAtPath([...this.initPath, ...path], recursionTracker, origin), UnknownValue);\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        const { type } = interaction;\r\n        if (this.isReassigned ||\r\n            type === INTERACTION_ASSIGNED ||\r\n            path.length + this.initPath.length > MAX_PATH_DEPTH) {\r\n            return super.hasEffectsOnInteractionAtPath(path, interaction, context);\r\n        }\r\n        return (!(type === INTERACTION_CALLED\r\n            ? (interaction.withNew\r\n                ? context.instantiated\r\n                : context.called).trackEntityAtPathAndGetIfTracked(path, interaction.args, this)\r\n            : context.accessed.trackEntityAtPathAndGetIfTracked(path, this)) &&\r\n            this.getKnownValue().hasEffectsOnInteractionAtPath([...this.initPath, ...path], interaction, context));\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path) {\r\n        // For performance reasons, we fully deoptimize all deeper interactions\r\n        if (path.length >= 2 ||\r\n            this.argumentsToBeDeoptimized.has(UNKNOWN_EXPRESSION) ||\r\n            this.deoptimizationInteractions.length >= MAX_TRACKED_INTERACTIONS ||\r\n            (path.length === 1 &&\r\n                (this.deoptimizedFields.has(UnknownKey) ||\r\n                    (interaction.type === INTERACTION_CALLED && this.deoptimizedFields.has(path[0])))) ||\r\n            this.initPath.length + path.length > MAX_PATH_DEPTH) {\r\n            deoptimizeInteraction(interaction);\r\n            return;\r\n        }\r\n        if (!this.deoptimizations.trackEntityAtPathAndGetIfTracked(path, interaction.args)) {\r\n            for (const entity of this.argumentsToBeDeoptimized) {\r\n                entity.deoptimizeArgumentsOnInteractionAtPath(interaction, [...this.initPath, ...path], SHARED_RECURSION_TRACKER);\r\n            }\r\n            if (!this.argumentsToBeDeoptimized.has(UNKNOWN_EXPRESSION)) {\r\n                this.deoptimizationInteractions.push({\r\n                    interaction,\r\n                    path\r\n                });\r\n            }\r\n        }\r\n    }\r\n    deoptimizePath(path) {\r\n        if (path.length === 0) {\r\n            this.markReassigned();\r\n            return;\r\n        }\r\n        if (this.deoptimizedFields.has(UnknownKey)) {\r\n            return;\r\n        }\r\n        const key = path[0];\r\n        if (this.deoptimizedFields.has(key)) {\r\n            return;\r\n        }\r\n        this.deoptimizedFields.add(key);\r\n        for (const entity of this.argumentsToBeDeoptimized) {\r\n            // We do not need a recursion tracker here as we already track whether\r\n            // this field is deoptimized\r\n            entity.deoptimizePath([...this.initPath, key]);\r\n        }\r\n        if (key === UnknownKey) {\r\n            // save some memory\r\n            this.deoptimizationInteractions = NO_INTERACTIONS;\r\n            this.deoptimizations = EMPTY_PATH_TRACKER;\r\n            this.deoptimizedFields = UNKNOWN_DEOPTIMIZED_FIELD;\r\n            this.argumentsToBeDeoptimized = UNKNOWN_DEOPTIMIZED_ENTITY;\r\n        }\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path) {\r\n        // We deoptimize everything that is called as that will trivially deoptimize\r\n        // the corresponding return expressions as well and avoid badly performing\r\n        // and complicated alternatives\r\n        if (path.length === 0) {\r\n            this.deoptimizePath(UNKNOWN_PATH);\r\n        }\r\n        else if (!this.deoptimizedFields.has(path[0])) {\r\n            this.deoptimizePath([path[0]]);\r\n        }\r\n        return UNKNOWN_RETURN_EXPRESSION;\r\n    }\r\n    includeArgumentPaths(entity, context) {\r\n        this.includedPathTracker.includeAllPaths(entity, context, this.initPath);\r\n    }\r\n}\r\n\r\nclass ThisVariable extends ParameterVariable {\r\n    constructor(context) {\r\n        super('this', null, EMPTY_PATH, context);\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        return (context.replacedVariableInits.get(this) || UNKNOWN_EXPRESSION).hasEffectsOnInteractionAtPath(path, interaction, context);\r\n    }\r\n}\r\n\r\nclass CatchBodyScope extends ChildScope {\r\n    constructor(parent) {\r\n        super(parent, parent.context);\r\n        this.parent = parent;\r\n    }\r\n    addDeclaration(identifier, context, init, destructuredInitPath, kind) {\r\n        if (kind === 'var') {\r\n            const name = identifier.name;\r\n            const existingVariable = this.hoistedVariables?.get(name) || this.variables.get(name);\r\n            if (existingVariable) {\r\n                const existingKind = existingVariable.kind;\r\n                if (existingKind === 'parameter' &&\r\n                    // If this is a destructured parameter, it is forbidden to redeclare\r\n                    existingVariable.declarations[0].parent.type === CatchClause$1) {\r\n                    // If this is a var with the same name as the catch scope parameter,\r\n                    // the assignment actually goes to the parameter and the var is\r\n                    // hoisted without assignment. Locally, it is shadowed by the\r\n                    // parameter\r\n                    const declaredVariable = this.parent.parent.addDeclaration(identifier, context, UNDEFINED_EXPRESSION, destructuredInitPath, kind);\r\n                    // To avoid the need to rewrite the declaration, we link the variable\r\n                    // names. If we ever implement a logic that splits initialization and\r\n                    // assignment for hoisted vars, the \"renderLikeHoisted\" logic can be\r\n                    // removed again.\r\n                    // We do not need to check whether there already is a linked\r\n                    // variable because then declaredVariable would be that linked\r\n                    // variable.\r\n                    existingVariable.renderLikeHoisted(declaredVariable);\r\n                    this.addHoistedVariable(name, declaredVariable);\r\n                    return declaredVariable;\r\n                }\r\n                if (existingKind === 'var') {\r\n                    existingVariable.addDeclaration(identifier, init);\r\n                    return existingVariable;\r\n                }\r\n                return context.error(logRedeclarationError(name), identifier.start);\r\n            }\r\n            // We only add parameters to parameter scopes\r\n            const declaredVariable = this.parent.parent.addDeclaration(identifier, context, init, destructuredInitPath, kind);\r\n            // Necessary to make sure the init is deoptimized for conditional declarations.\r\n            // We cannot call deoptimizePath here.\r\n            declaredVariable.markInitializersForDeoptimization();\r\n            // We add the variable to this and all parent scopes to reliably detect conflicts\r\n            this.addHoistedVariable(name, declaredVariable);\r\n            return declaredVariable;\r\n        }\r\n        return super.addDeclaration(identifier, context, init, destructuredInitPath, kind);\r\n    }\r\n}\r\n\r\nclass FunctionBodyScope extends ChildScope {\r\n    constructor(parent) {\r\n        super(parent, parent.context);\r\n    }\r\n    // There is stuff that is only allowed in function scopes, i.e. functions can\r\n    // be redeclared, functions and var can redeclare each other\r\n    addDeclaration(identifier, context, init, destructuredInitPath, kind) {\r\n        const name = identifier.name;\r\n        const existingVariable = this.hoistedVariables?.get(name) || this.variables.get(name);\r\n        if (existingVariable) {\r\n            const existingKind = existingVariable.kind;\r\n            if ((kind === 'var' || kind === 'function') &&\r\n                (existingKind === 'var' || existingKind === 'function' || existingKind === 'parameter')) {\r\n                existingVariable.addDeclaration(identifier, init);\r\n                return existingVariable;\r\n            }\r\n            context.error(logRedeclarationError(name), identifier.start);\r\n        }\r\n        const newVariable = new LocalVariable(identifier.name, identifier, init, destructuredInitPath, context, kind);\r\n        this.variables.set(name, newVariable);\r\n        return newVariable;\r\n    }\r\n}\r\n\r\nclass ParameterScope extends ChildScope {\r\n    constructor(parent, isCatchScope) {\r\n        super(parent, parent.context);\r\n        this.hasRest = false;\r\n        this.parameters = [];\r\n        this.bodyScope = isCatchScope ? new CatchBodyScope(this) : new FunctionBodyScope(this);\r\n    }\r\n    /**\r\n     * Adds a parameter to this scope. Parameters must be added in the correct\r\n     * order, i.e. from left to right.\r\n     */\r\n    addParameterDeclaration(identifier, argumentPath) {\r\n        const { name, start } = identifier;\r\n        const existingParameter = this.variables.get(name);\r\n        if (existingParameter) {\r\n            return this.context.error(logDuplicateArgumentNameError(name), start);\r\n        }\r\n        const variable = new ParameterVariable(name, identifier, argumentPath, this.context);\r\n        this.variables.set(name, variable);\r\n        // We also add it to the body scope to detect name conflicts with local\r\n        // variables. We still need the intermediate scope, though, as parameter\r\n        // defaults are NOT taken from the body scope but from the parameters or\r\n        // outside scope.\r\n        this.bodyScope.addHoistedVariable(name, variable);\r\n        return variable;\r\n    }\r\n    addParameterVariables(parameters, hasRest) {\r\n        this.parameters = parameters;\r\n        for (const parameterList of parameters) {\r\n            for (const parameter of parameterList) {\r\n                parameter.alwaysRendered = true;\r\n            }\r\n        }\r\n        this.hasRest = hasRest;\r\n    }\r\n    includeCallArguments({ args }, context) {\r\n        let calledFromTryStatement = false;\r\n        let argumentIncluded = false;\r\n        const restParameter = this.hasRest && this.parameters[this.parameters.length - 1];\r\n        let lastExplicitlyIncludedIndex = args.length - 1;\r\n        // If there is a SpreadElement, we need to include all arguments after it\r\n        // because we no longer know which argument corresponds to which parameter.\r\n        for (let argumentIndex = 1; argumentIndex < args.length; argumentIndex++) {\r\n            const argument = args[argumentIndex];\r\n            if (argument instanceof SpreadElement && !argumentIncluded) {\r\n                argumentIncluded = true;\r\n                lastExplicitlyIncludedIndex = argumentIndex - 1;\r\n            }\r\n            if (argumentIncluded) {\r\n                argument.includePath(UNKNOWN_PATH, context);\r\n                argument.include(context, false);\r\n            }\r\n        }\r\n        // Now we go backwards either starting from the last argument or before the\r\n        // first SpreadElement to ensure all arguments before are included as needed\r\n        for (let index = lastExplicitlyIncludedIndex; index >= 1; index--) {\r\n            const parameterVariables = this.parameters[index - 1] || restParameter;\r\n            const argument = args[index];\r\n            if (parameterVariables) {\r\n                calledFromTryStatement = false;\r\n                if (parameterVariables.length === 0) {\r\n                    // handle empty destructuring to avoid destructuring undefined\r\n                    argumentIncluded = true;\r\n                }\r\n                else {\r\n                    for (const parameterVariable of parameterVariables) {\r\n                        if (parameterVariable.calledFromTryStatement) {\r\n                            calledFromTryStatement = true;\r\n                        }\r\n                        if (parameterVariable.included) {\r\n                            argumentIncluded = true;\r\n                            if (calledFromTryStatement) {\r\n                                argument.include(context, true);\r\n                            }\r\n                            else {\r\n                                parameterVariable.includeArgumentPaths(argument, context);\r\n                                argument.include(context, false);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (argumentIncluded || argument.shouldBeIncluded(context)) {\r\n                argumentIncluded = true;\r\n                argument.include(context, calledFromTryStatement);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass ReturnValueScope extends ParameterScope {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.returnExpression = null;\r\n        this.returnExpressions = [];\r\n    }\r\n    addReturnExpression(expression) {\r\n        this.returnExpressions.push(expression);\r\n    }\r\n    deoptimizeArgumentsOnCall({ args }) {\r\n        const { parameters } = this;\r\n        let position = 0;\r\n        for (; position < args.length - 1; position++) {\r\n            // Only the \"this\" argument arg[0] can be null\r\n            const argument = args[position + 1];\r\n            if (argument instanceof SpreadElement) {\r\n                // This deoptimizes the current and remaining parameters and arguments\r\n                for (; position < parameters.length; position++) {\r\n                    args[position + 1]?.deoptimizePath(UNKNOWN_PATH);\r\n                    for (const variable of parameters[position]) {\r\n                        variable.markReassigned();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            if (this.hasRest && position >= parameters.length - 1) {\r\n                argument.deoptimizePath(UNKNOWN_PATH);\r\n            }\r\n            else {\r\n                const variables = parameters[position];\r\n                if (variables) {\r\n                    for (const variable of variables) {\r\n                        variable.addArgumentForDeoptimization(argument);\r\n                    }\r\n                }\r\n                this.addArgumentToBeDeoptimized(argument);\r\n            }\r\n        }\r\n        const nonRestParameterLength = this.hasRest ? parameters.length - 1 : parameters.length;\r\n        for (; position < nonRestParameterLength; position++) {\r\n            for (const variable of parameters[position]) {\r\n                variable.addArgumentForDeoptimization(UNDEFINED_EXPRESSION);\r\n            }\r\n        }\r\n    }\r\n    getReturnExpression() {\r\n        if (this.returnExpression === null)\r\n            this.updateReturnExpression();\r\n        return this.returnExpression;\r\n    }\r\n    deoptimizeAllParameters() {\r\n        for (const parameter of this.parameters) {\r\n            for (const variable of parameter) {\r\n                variable.deoptimizePath(UNKNOWN_PATH);\r\n                variable.markReassigned();\r\n            }\r\n        }\r\n    }\r\n    reassignAllParameters() {\r\n        for (const parameter of this.parameters) {\r\n            for (const variable of parameter) {\r\n                variable.markReassigned();\r\n            }\r\n        }\r\n    }\r\n    addArgumentToBeDeoptimized(_argument) { }\r\n    updateReturnExpression() {\r\n        if (this.returnExpressions.length === 1) {\r\n            this.returnExpression = this.returnExpressions[0];\r\n        }\r\n        else {\r\n            this.returnExpression = UNKNOWN_EXPRESSION;\r\n            for (const expression of this.returnExpressions) {\r\n                expression.deoptimizePath(UNKNOWN_PATH);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass FunctionScope extends ReturnValueScope {\r\n    constructor(parent, functionNode) {\r\n        super(parent, false);\r\n        this.functionNode = functionNode;\r\n        const { context } = parent;\r\n        this.variables.set('arguments', (this.argumentsVariable = new ArgumentsVariable(context)));\r\n        this.variables.set('this', (this.thisVariable = new ThisVariable(context)));\r\n    }\r\n    findLexicalBoundary() {\r\n        return this;\r\n    }\r\n    includeCallArguments(interaction, context) {\r\n        super.includeCallArguments(interaction, context);\r\n        if (this.argumentsVariable.included) {\r\n            const { args } = interaction;\r\n            for (let argumentIndex = 1; argumentIndex < args.length; argumentIndex++) {\r\n                const argument = args[argumentIndex];\r\n                if (argument) {\r\n                    argument.includePath(UNKNOWN_PATH, context);\r\n                    argument.include(context, false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    addArgumentToBeDeoptimized(argument) {\r\n        this.argumentsVariable.addArgumentToBeDeoptimized(argument);\r\n    }\r\n}\r\n\r\nclass ExpressionStatement extends NodeBase {\r\n    initialise() {\r\n        super.initialise();\r\n        if (this.directive &&\r\n            this.directive !== 'use strict' &&\r\n            this.parent.type === Program$1) {\r\n            this.scope.context.log(LOGLEVEL_WARN, \r\n            // This is necessary, because either way (deleting or not) can lead to errors.\r\n            logModuleLevelDirective(this.directive, this.scope.context.module.id), this.start);\r\n        }\r\n    }\r\n    removeAnnotations(code) {\r\n        this.expression.removeAnnotations(code);\r\n    }\r\n    render(code, options) {\r\n        super.render(code, options);\r\n        if (code.original[this.end - 1] !== ';') {\r\n            code.appendLeft(this.end, ';');\r\n        }\r\n    }\r\n    shouldBeIncluded(context) {\r\n        if (this.directive && this.directive !== 'use strict')\r\n            return this.parent.type !== Program$1;\r\n        return super.shouldBeIncluded(context);\r\n    }\r\n}\r\nExpressionStatement.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nExpressionStatement.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass BlockStatement extends NodeBase {\r\n    get deoptimizeBody() {\r\n        return isFlagSet(this.flags, 32768 /* Flag.deoptimizeBody */);\r\n    }\r\n    set deoptimizeBody(value) {\r\n        this.flags = setFlag(this.flags, 32768 /* Flag.deoptimizeBody */, value);\r\n    }\r\n    get directlyIncluded() {\r\n        return isFlagSet(this.flags, 16384 /* Flag.directlyIncluded */);\r\n    }\r\n    set directlyIncluded(value) {\r\n        this.flags = setFlag(this.flags, 16384 /* Flag.directlyIncluded */, value);\r\n    }\r\n    addImplicitReturnExpressionToScope() {\r\n        const lastStatement = this.body[this.body.length - 1];\r\n        if (!lastStatement || lastStatement.type !== ReturnStatement$1) {\r\n            this.scope.addReturnExpression(UNKNOWN_EXPRESSION);\r\n        }\r\n    }\r\n    createScope(parentScope) {\r\n        this.scope = this.parent.preventChildBlockScope\r\n            ? parentScope\r\n            : new BlockScope(parentScope);\r\n    }\r\n    hasEffects(context) {\r\n        if (this.deoptimizeBody)\r\n            return true;\r\n        for (const node of this.body) {\r\n            if (context.brokenFlow)\r\n                break;\r\n            if (node.hasEffects(context))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        if (!(this.deoptimizeBody && this.directlyIncluded)) {\r\n            this.included = true;\r\n            this.directlyIncluded = true;\r\n            if (this.deoptimizeBody)\r\n                includeChildrenRecursively = true;\r\n            for (const node of this.body) {\r\n                if (includeChildrenRecursively || node.shouldBeIncluded(context))\r\n                    node.include(context, includeChildrenRecursively);\r\n            }\r\n        }\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        this.scope.context.magicString.addSourcemapLocation(this.end - 1);\r\n        const firstBodyStatement = this.body[0];\r\n        this.deoptimizeBody =\r\n            firstBodyStatement instanceof ExpressionStatement &&\r\n                firstBodyStatement.directive === 'use asm';\r\n    }\r\n    render(code, options) {\r\n        if (this.body.length > 0) {\r\n            renderStatementList(this.body, code, this.start + 1, this.end - 1, options);\r\n        }\r\n        else {\r\n            super.render(code, options);\r\n        }\r\n    }\r\n}\r\nBlockStatement.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nBlockStatement.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass RestElement extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.declarationInit = null;\r\n    }\r\n    addExportedVariables(variables, exportNamesByVariable) {\r\n        this.argument.addExportedVariables(variables, exportNamesByVariable);\r\n    }\r\n    declare(kind, destructuredInitPath, init) {\r\n        this.declarationInit = init;\r\n        return this.argument.declare(kind, getIncludedPatternPath$1(destructuredInitPath), init);\r\n    }\r\n    deoptimizeAssignment(destructuredInitPath, init) {\r\n        this.argument.deoptimizeAssignment(getIncludedPatternPath$1(destructuredInitPath), init);\r\n    }\r\n    deoptimizePath(path) {\r\n        if (path.length === 0) {\r\n            this.argument.deoptimizePath(EMPTY_PATH);\r\n        }\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        return (path.length > 0 ||\r\n            this.argument.hasEffectsOnInteractionAtPath(EMPTY_PATH, interaction, context));\r\n    }\r\n    hasEffectsWhenDestructuring(context, destructuredInitPath, init) {\r\n        return this.argument.hasEffectsWhenDestructuring(context, getIncludedPatternPath$1(destructuredInitPath), init);\r\n    }\r\n    includeDestructuredIfNecessary(context, destructuredInitPath, init) {\r\n        const included = this.argument.includeDestructuredIfNecessary(context, getIncludedPatternPath$1(destructuredInitPath), init);\r\n        if (!this.included && included) {\r\n            this.includeNode(context);\r\n        }\r\n        return this.included;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        // This should just include the identifier, its properties should be\r\n        // included where the variable is used.\r\n        this.argument.include(context, includeChildrenRecursively);\r\n    }\r\n    markDeclarationReached() {\r\n        this.argument.markDeclarationReached();\r\n    }\r\n    applyDeoptimizations() {\r\n        this.deoptimized = true;\r\n        if (this.declarationInit !== null) {\r\n            this.declarationInit.deoptimizePath([UnknownKey, UnknownKey]);\r\n            this.scope.context.requestTreeshakingPass();\r\n        }\r\n    }\r\n}\r\nRestElement.prototype.includeNode = onlyIncludeSelf;\r\nconst getIncludedPatternPath$1 = (destructuredInitPath) => destructuredInitPath.at(-1) === UnknownKey\r\n    ? destructuredInitPath\r\n    : [...destructuredInitPath, UnknownKey];\r\n\r\nclass FunctionBase extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.parameterVariableValuesDeoptimized = false;\r\n        this.includeCallArguments = this.scope.includeCallArguments.bind(this.scope);\r\n    }\r\n    get async() {\r\n        return isFlagSet(this.flags, 256 /* Flag.async */);\r\n    }\r\n    set async(value) {\r\n        this.flags = setFlag(this.flags, 256 /* Flag.async */, value);\r\n    }\r\n    get deoptimizedReturn() {\r\n        return isFlagSet(this.flags, 512 /* Flag.deoptimizedReturn */);\r\n    }\r\n    set deoptimizedReturn(value) {\r\n        this.flags = setFlag(this.flags, 512 /* Flag.deoptimizedReturn */, value);\r\n    }\r\n    get generator() {\r\n        return isFlagSet(this.flags, 4194304 /* Flag.generator */);\r\n    }\r\n    set generator(value) {\r\n        this.flags = setFlag(this.flags, 4194304 /* Flag.generator */, value);\r\n    }\r\n    get hasCachedEffects() {\r\n        return isFlagSet(this.flags, 67108864 /* Flag.hasEffects */);\r\n    }\r\n    set hasCachedEffects(value) {\r\n        this.flags = setFlag(this.flags, 67108864 /* Flag.hasEffects */, value);\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        if (interaction.type === INTERACTION_CALLED && path.length === 0) {\r\n            this.scope.deoptimizeArgumentsOnCall(interaction);\r\n        }\r\n        else {\r\n            this.getObjectEntity().deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n        }\r\n    }\r\n    deoptimizePath(path) {\r\n        this.getObjectEntity().deoptimizePath(path);\r\n        if (path.length === 1 && path[0] === UnknownKey) {\r\n            // A reassignment of UNKNOWN_PATH is considered equivalent to having lost track\r\n            // which means the return expression and parameters need to be reassigned\r\n            this.scope.getReturnExpression().deoptimizePath(UNKNOWN_PATH);\r\n            this.scope.deoptimizeAllParameters();\r\n        }\r\n    }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        return this.getObjectEntity().getLiteralValueAtPath(path, recursionTracker, origin);\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\r\n        if (path.length > 0) {\r\n            return this.getObjectEntity().getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\r\n        }\r\n        if (this.async) {\r\n            if (!this.deoptimizedReturn) {\r\n                this.deoptimizedReturn = true;\r\n                this.scope.getReturnExpression().deoptimizePath(UNKNOWN_PATH);\r\n                this.scope.context.requestTreeshakingPass();\r\n            }\r\n            return UNKNOWN_RETURN_EXPRESSION;\r\n        }\r\n        return [this.scope.getReturnExpression(), false];\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        if (path.length > 0 || interaction.type !== INTERACTION_CALLED) {\r\n            return this.getObjectEntity().hasEffectsOnInteractionAtPath(path, interaction, context);\r\n        }\r\n        if (this.hasCachedEffects) {\r\n            return true;\r\n        }\r\n        if (this.async) {\r\n            const { propertyReadSideEffects } = this.scope.context.options\r\n                .treeshake;\r\n            const returnExpression = this.scope.getReturnExpression();\r\n            if (returnExpression.hasEffectsOnInteractionAtPath(['then'], NODE_INTERACTION_UNKNOWN_CALL, context) ||\r\n                (propertyReadSideEffects &&\r\n                    (propertyReadSideEffects === 'always' ||\r\n                        returnExpression.hasEffectsOnInteractionAtPath(['then'], NODE_INTERACTION_UNKNOWN_ACCESS, context)))) {\r\n                this.hasCachedEffects = true;\r\n                return true;\r\n            }\r\n        }\r\n        const { propertyReadSideEffects } = this.scope.context.options\r\n            .treeshake;\r\n        for (let index = 0; index < this.params.length; index++) {\r\n            const parameter = this.params[index];\r\n            if (parameter.hasEffects(context) ||\r\n                (propertyReadSideEffects &&\r\n                    parameter.hasEffectsWhenDestructuring(context, EMPTY_PATH, interaction.args[index + 1] || UNDEFINED_EXPRESSION))) {\r\n                this.hasCachedEffects = true;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * If the function (expression or declaration) is only used as function calls\r\n     */\r\n    onlyFunctionCallUsed() {\r\n        let variable = null;\r\n        if (this.parent.type === VariableDeclarator$1) {\r\n            variable = this.parent.id.variable ?? null;\r\n        }\r\n        if (this.parent.type === ExportDefaultDeclaration$1) {\r\n            variable = this.parent.variable;\r\n        }\r\n        return variable?.getOnlyFunctionCallUsed() ?? false;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        if (!(this.parameterVariableValuesDeoptimized || this.onlyFunctionCallUsed())) {\r\n            this.parameterVariableValuesDeoptimized = true;\r\n            this.scope.reassignAllParameters();\r\n        }\r\n        const { brokenFlow } = context;\r\n        context.brokenFlow = false;\r\n        this.body.include(context, includeChildrenRecursively);\r\n        context.brokenFlow = brokenFlow;\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        if (this.body instanceof BlockStatement) {\r\n            this.body.addImplicitReturnExpressionToScope();\r\n        }\r\n        else {\r\n            this.scope.addReturnExpression(this.body);\r\n        }\r\n        if (this.annotations &&\r\n            this.scope.context.options.treeshake.annotations) {\r\n            this.annotationNoSideEffects = this.annotations.some(comment => comment.type === 'noSideEffects');\r\n        }\r\n    }\r\n    parseNode(esTreeNode) {\r\n        const { body, params } = esTreeNode;\r\n        const { scope } = this;\r\n        const { bodyScope, context } = scope;\r\n        // We need to ensure that parameters are declared before the body is parsed\r\n        // so that the scope already knows all parameters and can detect conflicts\r\n        // when parsing the body.\r\n        const parameters = (this.params = params.map((parameter) => new (context.getNodeConstructor(parameter.type))(this, scope).parseNode(parameter)));\r\n        scope.addParameterVariables(parameters.map(parameter => parameter.declare('parameter', EMPTY_PATH, UNKNOWN_EXPRESSION)), parameters[parameters.length - 1] instanceof RestElement);\r\n        this.body = new (context.getNodeConstructor(body.type))(this, bodyScope).parseNode(body);\r\n        return super.parseNode(esTreeNode);\r\n    }\r\n}\r\nFunctionBase.prototype.preventChildBlockScope = true;\r\nFunctionBase.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nFunctionBase.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass FunctionNode extends FunctionBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.objectEntity = null;\r\n    }\r\n    createScope(parentScope) {\r\n        this.scope = new FunctionScope(parentScope, this);\r\n        this.constructedEntity = new ObjectEntity(Object.create(null), OBJECT_PROTOTYPE);\r\n        // This makes sure that all deoptimizations of \"this\" are applied to the\r\n        // constructed entity.\r\n        this.scope.thisVariable.addArgumentForDeoptimization(this.constructedEntity);\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        super.deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n        if (interaction.type === INTERACTION_CALLED && path.length === 0 && interaction.args[0]) {\r\n            // args[0] is the \"this\" argument\r\n            this.scope.thisVariable.addArgumentForDeoptimization(interaction.args[0]);\r\n        }\r\n    }\r\n    hasEffects(context) {\r\n        if (this.annotationNoSideEffects) {\r\n            return false;\r\n        }\r\n        return !!this.id?.hasEffects(context);\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        if (this.annotationNoSideEffects &&\r\n            path.length === 0 &&\r\n            interaction.type === INTERACTION_CALLED) {\r\n            return false;\r\n        }\r\n        if (super.hasEffectsOnInteractionAtPath(path, interaction, context)) {\r\n            return true;\r\n        }\r\n        if (path.length === 0 && interaction.type === INTERACTION_CALLED) {\r\n            const thisInit = context.replacedVariableInits.get(this.scope.thisVariable);\r\n            context.replacedVariableInits.set(this.scope.thisVariable, interaction.withNew ? this.constructedEntity : UNKNOWN_EXPRESSION);\r\n            const { brokenFlow, ignore, replacedVariableInits } = context;\r\n            context.ignore = {\r\n                breaks: false,\r\n                continues: false,\r\n                labels: new Set(),\r\n                returnYield: true,\r\n                this: interaction.withNew\r\n            };\r\n            if (this.body.hasEffects(context)) {\r\n                this.hasCachedEffects = true;\r\n                return true;\r\n            }\r\n            context.brokenFlow = brokenFlow;\r\n            if (thisInit) {\r\n                replacedVariableInits.set(this.scope.thisVariable, thisInit);\r\n            }\r\n            else {\r\n                replacedVariableInits.delete(this.scope.thisVariable);\r\n            }\r\n            context.ignore = ignore;\r\n        }\r\n        return false;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        super.include(context, includeChildrenRecursively);\r\n        this.id?.include(context, includeChildrenRecursively);\r\n        const hasArguments = this.scope.argumentsVariable.included;\r\n        for (const parameter of this.params) {\r\n            if (!(parameter instanceof Identifier) || hasArguments) {\r\n                parameter.include(context, includeChildrenRecursively);\r\n            }\r\n        }\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        const hasArguments = this.scope.argumentsVariable.included;\r\n        for (const parameter of this.params) {\r\n            if (!(parameter instanceof Identifier) || hasArguments) {\r\n                parameter.includePath(UNKNOWN_PATH, context);\r\n            }\r\n        }\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        this.id?.declare('function', EMPTY_PATH, this);\r\n    }\r\n    getObjectEntity() {\r\n        if (this.objectEntity !== null) {\r\n            return this.objectEntity;\r\n        }\r\n        return (this.objectEntity = new ObjectEntity([\r\n            {\r\n                key: 'prototype',\r\n                kind: 'init',\r\n                property: new ObjectEntity([], OBJECT_PROTOTYPE)\r\n            }\r\n        ], OBJECT_PROTOTYPE));\r\n    }\r\n}\r\n\r\nclass FunctionDeclaration extends FunctionNode {\r\n    initialise() {\r\n        super.initialise();\r\n        if (this.id !== null) {\r\n            this.id.variable.isId = true;\r\n        }\r\n    }\r\n    onlyFunctionCallUsed() {\r\n        // call super.onlyFunctionCallUsed for export default anonymous function\r\n        return this.id?.variable.getOnlyFunctionCallUsed() ?? super.onlyFunctionCallUsed();\r\n    }\r\n    parseNode(esTreeNode) {\r\n        if (esTreeNode.id !== null) {\r\n            this.id = new Identifier(this, this.scope.parent).parseNode(esTreeNode.id);\r\n        }\r\n        return super.parseNode(esTreeNode);\r\n    }\r\n}\r\n\r\n// The header ends at the first non-white-space after \"default\"\r\nfunction getDeclarationStart(code, start) {\r\n    return findNonWhiteSpace(code, findFirstOccurrenceOutsideComment(code, 'default', start) + 7);\r\n}\r\nfunction getFunctionIdInsertPosition(code, start) {\r\n    const declarationEnd = findFirstOccurrenceOutsideComment(code, 'function', start) + 'function'.length;\r\n    code = code.slice(declarationEnd, findFirstOccurrenceOutsideComment(code, '(', declarationEnd));\r\n    const generatorStarPos = findFirstOccurrenceOutsideComment(code, '*');\r\n    if (generatorStarPos === -1) {\r\n        return declarationEnd;\r\n    }\r\n    return declarationEnd + generatorStarPos + 1;\r\n}\r\nclass ExportDefaultDeclaration extends NodeBase {\r\n    include(context, includeChildrenRecursively) {\r\n        this.included = true;\r\n        this.declaration.include(context, includeChildrenRecursively);\r\n        if (includeChildrenRecursively) {\r\n            this.scope.context.includeVariableInModule(this.variable, UNKNOWN_PATH, context);\r\n        }\r\n    }\r\n    includePath(path, context) {\r\n        this.included = true;\r\n        this.declaration.includePath(path, context);\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        const declaration = this.declaration;\r\n        this.declarationName =\r\n            (declaration.id && declaration.id.name) || this.declaration.name;\r\n        this.variable = this.scope.addExportDefaultDeclaration(this.declarationName || this.scope.context.getModuleName(), this, this.scope.context);\r\n        this.scope.context.addExport(this);\r\n    }\r\n    removeAnnotations(code) {\r\n        this.declaration.removeAnnotations(code);\r\n    }\r\n    render(code, options, nodeRenderOptions) {\r\n        const { start, end } = nodeRenderOptions;\r\n        const declarationStart = getDeclarationStart(code.original, this.start);\r\n        if (this.declaration instanceof FunctionDeclaration) {\r\n            this.renderNamedDeclaration(code, declarationStart, this.declaration.id === null\r\n                ? getFunctionIdInsertPosition(code.original, declarationStart)\r\n                : null, options);\r\n        }\r\n        else if (this.declaration instanceof ClassDeclaration) {\r\n            this.renderNamedDeclaration(code, declarationStart, this.declaration.id === null\r\n                ? findFirstOccurrenceOutsideComment(code.original, 'class', start) + 'class'.length\r\n                : null, options);\r\n        }\r\n        else if (this.variable.getOriginalVariable() !== this.variable) {\r\n            // Remove altogether to prevent re-declaring the same variable\r\n            treeshakeNode(this, code, start, end);\r\n            return;\r\n        }\r\n        else if (this.variable.included) {\r\n            this.renderVariableDeclaration(code, declarationStart, options);\r\n        }\r\n        else {\r\n            code.remove(this.start, declarationStart);\r\n            this.declaration.render(code, options, {\r\n                renderedSurroundingElement: ExpressionStatement$1\r\n            });\r\n            if (code.original[this.end - 1] !== ';') {\r\n                code.appendLeft(this.end, ';');\r\n            }\r\n            return;\r\n        }\r\n        this.declaration.render(code, options);\r\n    }\r\n    renderNamedDeclaration(code, declarationStart, idInsertPosition, options) {\r\n        const { exportNamesByVariable, format, snippets: { getPropertyAccess } } = options;\r\n        const name = this.variable.getName(getPropertyAccess);\r\n        // Remove `export default`\r\n        code.remove(this.start, declarationStart);\r\n        if (idInsertPosition !== null) {\r\n            code.appendLeft(idInsertPosition, ` ${name}`);\r\n        }\r\n        if (format === 'system' &&\r\n            this.declaration instanceof ClassDeclaration &&\r\n            exportNamesByVariable.has(this.variable)) {\r\n            code.appendLeft(this.end, ` ${getSystemExportStatement([this.variable], options)};`);\r\n        }\r\n    }\r\n    renderVariableDeclaration(code, declarationStart, { format, exportNamesByVariable, snippets: { cnst, getPropertyAccess } }) {\r\n        const hasTrailingSemicolon = code.original.charCodeAt(this.end - 1) === 59; /*\";\"*/\r\n        const systemExportNames = format === 'system' && exportNamesByVariable.get(this.variable);\r\n        if (systemExportNames) {\r\n            code.overwrite(this.start, declarationStart, `${cnst} ${this.variable.getName(getPropertyAccess)} = exports(${JSON.stringify(systemExportNames[0])}, `);\r\n            code.appendRight(hasTrailingSemicolon ? this.end - 1 : this.end, ')' + (hasTrailingSemicolon ? '' : ';'));\r\n        }\r\n        else {\r\n            code.overwrite(this.start, declarationStart, `${cnst} ${this.variable.getName(getPropertyAccess)} = `);\r\n            if (!hasTrailingSemicolon) {\r\n                code.appendLeft(this.end, ';');\r\n            }\r\n        }\r\n    }\r\n}\r\nExportDefaultDeclaration.prototype.needsBoundaries = true;\r\nExportDefaultDeclaration.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nExportDefaultDeclaration.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nconst needsEscapeRegEx = /[\\n\\r'\\\\\\u2028\\u2029]/;\r\nconst quoteNewlineRegEx = /([\\n\\r'\\u2028\\u2029])/g;\r\nconst backSlashRegEx = /\\\\/g;\r\nfunction escapeId(id) {\r\n    if (!needsEscapeRegEx.test(id))\r\n        return id;\r\n    return id.replace(backSlashRegEx, '\\\\\\\\').replace(quoteNewlineRegEx, '\\\\$1');\r\n}\r\n\r\nconst INTEROP_DEFAULT_VARIABLE = '_interopDefault';\r\nconst INTEROP_DEFAULT_COMPAT_VARIABLE = '_interopDefaultCompat';\r\nconst INTEROP_NAMESPACE_VARIABLE = '_interopNamespace';\r\nconst INTEROP_NAMESPACE_COMPAT_VARIABLE = '_interopNamespaceCompat';\r\nconst INTEROP_NAMESPACE_DEFAULT_VARIABLE = '_interopNamespaceDefault';\r\nconst INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE = '_interopNamespaceDefaultOnly';\r\nconst MERGE_NAMESPACES_VARIABLE = '_mergeNamespaces';\r\nconst DOCUMENT_CURRENT_SCRIPT = '_documentCurrentScript';\r\nconst defaultInteropHelpersByInteropType = {\r\n    auto: INTEROP_DEFAULT_VARIABLE,\r\n    compat: INTEROP_DEFAULT_COMPAT_VARIABLE,\r\n    default: null,\r\n    defaultOnly: null,\r\n    esModule: null\r\n};\r\nconst isDefaultAProperty = (interopType, externalLiveBindings) => interopType === 'esModule' ||\r\n    (externalLiveBindings && (interopType === 'auto' || interopType === 'compat'));\r\nconst namespaceInteropHelpersByInteropType = {\r\n    auto: INTEROP_NAMESPACE_VARIABLE,\r\n    compat: INTEROP_NAMESPACE_COMPAT_VARIABLE,\r\n    default: INTEROP_NAMESPACE_DEFAULT_VARIABLE,\r\n    defaultOnly: INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE,\r\n    esModule: null\r\n};\r\nconst canDefaultBeTakenFromNamespace = (interopType, externalLiveBindings) => interopType !== 'esModule' && isDefaultAProperty(interopType, externalLiveBindings);\r\nconst getHelpersBlock = (additionalHelpers, accessedGlobals, indent, snippets, liveBindings, freeze, symbols) => {\r\n    const usedHelpers = new Set(additionalHelpers);\r\n    for (const variable of HELPER_NAMES) {\r\n        if (accessedGlobals.has(variable)) {\r\n            usedHelpers.add(variable);\r\n        }\r\n    }\r\n    return HELPER_NAMES.map(variable => usedHelpers.has(variable)\r\n        ? HELPER_GENERATORS[variable](indent, snippets, liveBindings, freeze, symbols, usedHelpers)\r\n        : '').join('');\r\n};\r\nconst HELPER_GENERATORS = {\r\n    [DOCUMENT_CURRENT_SCRIPT](_t, { _, n }) {\r\n        return `var ${DOCUMENT_CURRENT_SCRIPT}${_}=${_}typeof document${_}!==${_}'undefined'${_}?${_}document.currentScript${_}:${_}null;${n}`;\r\n    },\r\n    [INTEROP_DEFAULT_COMPAT_VARIABLE](_t, snippets, liveBindings) {\r\n        const { _, getDirectReturnFunction, n } = snippets;\r\n        const [left, right] = getDirectReturnFunction(['e'], {\r\n            functionReturn: true,\r\n            lineBreakIndent: null,\r\n            name: INTEROP_DEFAULT_COMPAT_VARIABLE\r\n        });\r\n        return (`${left}${getIsCompatNamespace(snippets)}${_}?${_}` +\r\n            `${liveBindings ? getDefaultLiveBinding(snippets) : getDefaultStatic(snippets)}${right}${n}${n}`);\r\n    },\r\n    [INTEROP_DEFAULT_VARIABLE](_t, snippets, liveBindings) {\r\n        const { _, getDirectReturnFunction, n } = snippets;\r\n        const [left, right] = getDirectReturnFunction(['e'], {\r\n            functionReturn: true,\r\n            lineBreakIndent: null,\r\n            name: INTEROP_DEFAULT_VARIABLE\r\n        });\r\n        return (`${left}e${_}&&${_}e.__esModule${_}?${_}` +\r\n            `${liveBindings ? getDefaultLiveBinding(snippets) : getDefaultStatic(snippets)}${right}${n}${n}`);\r\n    },\r\n    [INTEROP_NAMESPACE_COMPAT_VARIABLE](t, snippets, liveBindings, freeze, symbols, usedHelpers) {\r\n        const { _, getDirectReturnFunction, n } = snippets;\r\n        if (usedHelpers.has(INTEROP_NAMESPACE_DEFAULT_VARIABLE)) {\r\n            const [left, right] = getDirectReturnFunction(['e'], {\r\n                functionReturn: true,\r\n                lineBreakIndent: null,\r\n                name: INTEROP_NAMESPACE_COMPAT_VARIABLE\r\n            });\r\n            return `${left}${getIsCompatNamespace(snippets)}${_}?${_}e${_}:${_}${INTEROP_NAMESPACE_DEFAULT_VARIABLE}(e)${right}${n}${n}`;\r\n        }\r\n        return (`function ${INTEROP_NAMESPACE_COMPAT_VARIABLE}(e)${_}{${n}` +\r\n            `${t}if${_}(${getIsCompatNamespace(snippets)})${_}return e;${n}` +\r\n            createNamespaceObject(t, t, snippets, liveBindings, freeze, symbols) +\r\n            `}${n}${n}`);\r\n    },\r\n    [INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE](_t, snippets, _liveBindings, freeze, symbols) {\r\n        const { getDirectReturnFunction, getObject, n, _ } = snippets;\r\n        const [left, right] = getDirectReturnFunction(['e'], {\r\n            functionReturn: true,\r\n            lineBreakIndent: null,\r\n            name: INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE\r\n        });\r\n        return `${left}${getFrozen(freeze, getWithToStringTag(symbols, getObject([\r\n            [null, `__proto__:${_}null`],\r\n            ['default', 'e']\r\n        ], { lineBreakIndent: null }), snippets))}${right}${n}${n}`;\r\n    },\r\n    [INTEROP_NAMESPACE_DEFAULT_VARIABLE](t, snippets, liveBindings, freeze, symbols) {\r\n        const { _, n } = snippets;\r\n        return (`function ${INTEROP_NAMESPACE_DEFAULT_VARIABLE}(e)${_}{${n}` +\r\n            createNamespaceObject(t, t, snippets, liveBindings, freeze, symbols) +\r\n            `}${n}${n}`);\r\n    },\r\n    [INTEROP_NAMESPACE_VARIABLE](t, snippets, liveBindings, freeze, symbols, usedHelpers) {\r\n        const { _, getDirectReturnFunction, n } = snippets;\r\n        if (usedHelpers.has(INTEROP_NAMESPACE_DEFAULT_VARIABLE)) {\r\n            const [left, right] = getDirectReturnFunction(['e'], {\r\n                functionReturn: true,\r\n                lineBreakIndent: null,\r\n                name: INTEROP_NAMESPACE_VARIABLE\r\n            });\r\n            return `${left}e${_}&&${_}e.__esModule${_}?${_}e${_}:${_}${INTEROP_NAMESPACE_DEFAULT_VARIABLE}(e)${right}${n}${n}`;\r\n        }\r\n        return (`function ${INTEROP_NAMESPACE_VARIABLE}(e)${_}{${n}` +\r\n            `${t}if${_}(e${_}&&${_}e.__esModule)${_}return e;${n}` +\r\n            createNamespaceObject(t, t, snippets, liveBindings, freeze, symbols) +\r\n            `}${n}${n}`);\r\n    },\r\n    [MERGE_NAMESPACES_VARIABLE](t, snippets, liveBindings, freeze, symbols) {\r\n        const { _, cnst, n } = snippets;\r\n        const useForEach = cnst === 'var' && liveBindings;\r\n        return (`function ${MERGE_NAMESPACES_VARIABLE}(n, m)${_}{${n}` +\r\n            `${t}${loopOverNamespaces(`{${n}` +\r\n                `${t}${t}${t}if${_}(k${_}!==${_}'default'${_}&&${_}!(k in n))${_}{${n}` +\r\n                (liveBindings\r\n                    ? useForEach\r\n                        ? copyOwnPropertyLiveBinding\r\n                        : copyPropertyLiveBinding\r\n                    : copyPropertyStatic)(t, t + t + t + t, snippets) +\r\n                `${t}${t}${t}}${n}` +\r\n                `${t}${t}}`, useForEach, t, snippets)}${n}` +\r\n            `${t}return ${getFrozen(freeze, getWithToStringTag(symbols, 'n', snippets))};${n}` +\r\n            `}${n}${n}`);\r\n    }\r\n};\r\nconst getDefaultLiveBinding = ({ _, getObject }) => `e${_}:${_}${getObject([['default', 'e']], { lineBreakIndent: null })}`;\r\nconst getDefaultStatic = ({ _, getPropertyAccess }) => `e${getPropertyAccess('default')}${_}:${_}e`;\r\nconst getIsCompatNamespace = ({ _ }) => `e${_}&&${_}typeof e${_}===${_}'object'${_}&&${_}'default'${_}in e`;\r\nconst createNamespaceObject = (t, index, snippets, liveBindings, freeze, symbols) => {\r\n    const { _, cnst, getObject, getPropertyAccess, n, s } = snippets;\r\n    const copyProperty = `{${n}` +\r\n        (liveBindings ? copyNonDefaultOwnPropertyLiveBinding : copyPropertyStatic)(t, index + t + t, snippets) +\r\n        `${index}${t}}`;\r\n    return (`${index}${cnst} n${_}=${_}Object.create(null${symbols ? `,${_}{${_}[Symbol.toStringTag]:${_}${getToStringTagValue(getObject)}${_}}` : ''});${n}` +\r\n        `${index}if${_}(e)${_}{${n}` +\r\n        `${index}${t}${loopOverKeys(copyProperty, !liveBindings, snippets)}${n}` +\r\n        `${index}}${n}` +\r\n        `${index}n${getPropertyAccess('default')}${_}=${_}e;${n}` +\r\n        `${index}return ${getFrozen(freeze, 'n')}${s}${n}`);\r\n};\r\nconst loopOverKeys = (body, allowVariableLoopVariable, { _, cnst, getFunctionIntro, s }) => cnst !== 'var' || allowVariableLoopVariable\r\n    ? `for${_}(${cnst} k in e)${_}${body}`\r\n    : `Object.keys(e).forEach(${getFunctionIntro(['k'], {\r\n        isAsync: false,\r\n        name: null\r\n    })}${body})${s}`;\r\nconst loopOverNamespaces = (body, useForEach, t, { _, cnst, getDirectReturnFunction, getFunctionIntro, n }) => {\r\n    if (useForEach) {\r\n        const [left, right] = getDirectReturnFunction(['e'], {\r\n            functionReturn: false,\r\n            lineBreakIndent: { base: t, t },\r\n            name: null\r\n        });\r\n        return (`m.forEach(${left}` +\r\n            `e${_}&&${_}typeof e${_}!==${_}'string'${_}&&${_}!Array.isArray(e)${_}&&${_}Object.keys(e).forEach(${getFunctionIntro(['k'], {\r\n                isAsync: false,\r\n                name: null\r\n            })}${body})${right});`);\r\n    }\r\n    return (`for${_}(var i${_}=${_}0;${_}i${_}<${_}m.length;${_}i++)${_}{${n}` +\r\n        `${t}${t}${cnst} e${_}=${_}m[i];${n}` +\r\n        `${t}${t}if${_}(typeof e${_}!==${_}'string'${_}&&${_}!Array.isArray(e))${_}{${_}for${_}(${cnst} k in e)${_}${body}${_}}${n}${t}}`);\r\n};\r\nconst copyNonDefaultOwnPropertyLiveBinding = (t, index, snippets) => {\r\n    const { _, n } = snippets;\r\n    return (`${index}if${_}(k${_}!==${_}'default')${_}{${n}` +\r\n        copyOwnPropertyLiveBinding(t, index + t, snippets) +\r\n        `${index}}${n}`);\r\n};\r\nconst copyOwnPropertyLiveBinding = (t, index, { _, cnst, getDirectReturnFunction, n }) => {\r\n    const [left, right] = getDirectReturnFunction([], {\r\n        functionReturn: true,\r\n        lineBreakIndent: null,\r\n        name: null\r\n    });\r\n    return (`${index}${cnst} d${_}=${_}Object.getOwnPropertyDescriptor(e,${_}k);${n}` +\r\n        `${index}Object.defineProperty(n,${_}k,${_}d.get${_}?${_}d${_}:${_}{${n}` +\r\n        `${index}${t}enumerable:${_}true,${n}` +\r\n        `${index}${t}get:${_}${left}e[k]${right}${n}` +\r\n        `${index}});${n}`);\r\n};\r\nconst copyPropertyLiveBinding = (t, index, { _, cnst, getDirectReturnFunction, n }) => {\r\n    const [left, right] = getDirectReturnFunction([], {\r\n        functionReturn: true,\r\n        lineBreakIndent: null,\r\n        name: null\r\n    });\r\n    return (`${index}${cnst} d${_}=${_}Object.getOwnPropertyDescriptor(e,${_}k);${n}` +\r\n        `${index}if${_}(d)${_}{${n}` +\r\n        `${index}${t}Object.defineProperty(n,${_}k,${_}d.get${_}?${_}d${_}:${_}{${n}` +\r\n        `${index}${t}${t}enumerable:${_}true,${n}` +\r\n        `${index}${t}${t}get:${_}${left}e[k]${right}${n}` +\r\n        `${index}${t}});${n}` +\r\n        `${index}}${n}`);\r\n};\r\nconst copyPropertyStatic = (_t, index, { _, n }) => `${index}n[k]${_}=${_}e[k];${n}`;\r\nconst getFrozen = (freeze, fragment) => freeze ? `Object.freeze(${fragment})` : fragment;\r\nconst getWithToStringTag = (symbols, fragment, { _, getObject }) => symbols\r\n    ? `Object.defineProperty(${fragment},${_}Symbol.toStringTag,${_}${getToStringTagValue(getObject)})`\r\n    : fragment;\r\nconst HELPER_NAMES = Object.keys(HELPER_GENERATORS);\r\nfunction getToStringTagValue(getObject) {\r\n    return getObject([['value', \"'Module'\"]], {\r\n        lineBreakIndent: null\r\n    });\r\n}\r\n\r\nclass Literal extends NodeBase {\r\n    deoptimizeArgumentsOnInteractionAtPath() { }\r\n    getLiteralValueAtPath(path) {\r\n        if (path.length > 0 ||\r\n            // unknown literals can also be null but do not start with an \"n\"\r\n            (this.value === null && this.scope.context.code.charCodeAt(this.start) !== 110) ||\r\n            typeof this.value === 'bigint' ||\r\n            // to support shims for regular expressions\r\n            this.scope.context.code.charCodeAt(this.start) === 47) {\r\n            return UnknownValue;\r\n        }\r\n        return this.value;\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path) {\r\n        if (path.length !== 1)\r\n            return UNKNOWN_RETURN_EXPRESSION;\r\n        return getMemberReturnExpressionWhenCalled(this.members, path[0]);\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        switch (interaction.type) {\r\n            case INTERACTION_ACCESSED: {\r\n                return path.length > (this.value === null ? 0 : 1);\r\n            }\r\n            case INTERACTION_ASSIGNED: {\r\n                return true;\r\n            }\r\n            case INTERACTION_CALLED: {\r\n                if (this.included &&\r\n                    this.value instanceof RegExp &&\r\n                    (this.value.global || this.value.sticky)) {\r\n                    return true;\r\n                }\r\n                return (path.length !== 1 ||\r\n                    hasMemberEffectWhenCalled(this.members, path[0], interaction, context));\r\n            }\r\n        }\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        this.members = getLiteralMembersForValue(this.value);\r\n    }\r\n    parseNode(esTreeNode) {\r\n        this.value = esTreeNode.value;\r\n        this.regex = esTreeNode.regex;\r\n        return super.parseNode(esTreeNode);\r\n    }\r\n    render(code) {\r\n        if (typeof this.value === 'string') {\r\n            code.indentExclusionRanges.push([this.start + 1, this.end - 1]);\r\n        }\r\n    }\r\n}\r\nLiteral.prototype.includeNode = onlyIncludeSelf;\r\n\r\nfunction getChainElementLiteralValueAtPath(element, object, path, recursionTracker, origin) {\r\n    if ('getLiteralValueAtPathAsChainElement' in object) {\r\n        const calleeValue = object.getLiteralValueAtPathAsChainElement(EMPTY_PATH, SHARED_RECURSION_TRACKER, origin);\r\n        if (calleeValue === IS_SKIPPED_CHAIN || (element.optional && calleeValue == null)) {\r\n            return IS_SKIPPED_CHAIN;\r\n        }\r\n    }\r\n    else if (element.optional &&\r\n        object.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, origin) == null) {\r\n        return IS_SKIPPED_CHAIN;\r\n    }\r\n    return element.getLiteralValueAtPath(path, recursionTracker, origin);\r\n}\r\n\r\nfunction getResolvablePropertyKey(memberExpression) {\r\n    return memberExpression.computed\r\n        ? getResolvableComputedPropertyKey(memberExpression.property)\r\n        : memberExpression.property.name;\r\n}\r\nfunction getResolvableComputedPropertyKey(propertyKey) {\r\n    if (propertyKey instanceof Literal) {\r\n        return String(propertyKey.value);\r\n    }\r\n    return null;\r\n}\r\nfunction getPathIfNotComputed(memberExpression) {\r\n    const nextPathKey = memberExpression.propertyKey;\r\n    const object = memberExpression.object;\r\n    if (typeof nextPathKey === 'string') {\r\n        if (object instanceof Identifier) {\r\n            return [\r\n                { key: object.name, pos: object.start },\r\n                { key: nextPathKey, pos: memberExpression.property.start }\r\n            ];\r\n        }\r\n        if (object instanceof MemberExpression) {\r\n            const parentPath = getPathIfNotComputed(object);\r\n            return (parentPath && [...parentPath, { key: nextPathKey, pos: memberExpression.property.start }]);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction getStringFromPath(path) {\r\n    let pathString = path[0].key;\r\n    for (let index = 1; index < path.length; index++) {\r\n        pathString += '.' + path[index].key;\r\n    }\r\n    return pathString;\r\n}\r\nclass MemberExpression extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.variable = null;\r\n        this.expressionsToBeDeoptimized = [];\r\n    }\r\n    get computed() {\r\n        return isFlagSet(this.flags, 1024 /* Flag.computed */);\r\n    }\r\n    set computed(value) {\r\n        this.flags = setFlag(this.flags, 1024 /* Flag.computed */, value);\r\n    }\r\n    get optional() {\r\n        return isFlagSet(this.flags, 128 /* Flag.optional */);\r\n    }\r\n    set optional(value) {\r\n        this.flags = setFlag(this.flags, 128 /* Flag.optional */, value);\r\n    }\r\n    get assignmentDeoptimized() {\r\n        return isFlagSet(this.flags, 16 /* Flag.assignmentDeoptimized */);\r\n    }\r\n    set assignmentDeoptimized(value) {\r\n        this.flags = setFlag(this.flags, 16 /* Flag.assignmentDeoptimized */, value);\r\n    }\r\n    get bound() {\r\n        return isFlagSet(this.flags, 32 /* Flag.bound */);\r\n    }\r\n    set bound(value) {\r\n        this.flags = setFlag(this.flags, 32 /* Flag.bound */, value);\r\n    }\r\n    get isUndefined() {\r\n        return isFlagSet(this.flags, 64 /* Flag.isUndefined */);\r\n    }\r\n    set isUndefined(value) {\r\n        this.flags = setFlag(this.flags, 64 /* Flag.isUndefined */, value);\r\n    }\r\n    bind() {\r\n        this.bound = true;\r\n        const path = getPathIfNotComputed(this);\r\n        const baseVariable = path && this.scope.findVariable(path[0].key);\r\n        if (baseVariable?.isNamespace) {\r\n            const resolvedVariable = resolveNamespaceVariables(baseVariable, path.slice(1), this.scope.context);\r\n            if (!resolvedVariable) {\r\n                super.bind();\r\n            }\r\n            else if (resolvedVariable === 'undefined') {\r\n                this.isUndefined = true;\r\n            }\r\n            else {\r\n                this.variable = resolvedVariable;\r\n                this.scope.addNamespaceMemberAccess(getStringFromPath(path), resolvedVariable);\r\n            }\r\n        }\r\n        else {\r\n            super.bind();\r\n        }\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        if (this.variable) {\r\n            this.variable.deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n        }\r\n        else if (!this.isUndefined) {\r\n            if (path.length < MAX_PATH_DEPTH) {\r\n                this.object.deoptimizeArgumentsOnInteractionAtPath(interaction, this.propertyKey === UnknownKey ? UNKNOWN_PATH : [this.propertyKey, ...path], recursionTracker);\r\n            }\r\n            else {\r\n                deoptimizeInteraction(interaction);\r\n            }\r\n        }\r\n    }\r\n    deoptimizeAssignment(destructuredInitPath, init) {\r\n        this.deoptimizePath(EMPTY_PATH);\r\n        init.deoptimizePath([...destructuredInitPath, UnknownKey]);\r\n    }\r\n    deoptimizeCache() {\r\n        if (this.propertyKey === this.dynamicPropertyKey)\r\n            return;\r\n        const { expressionsToBeDeoptimized, object } = this;\r\n        this.expressionsToBeDeoptimized = EMPTY_ARRAY;\r\n        this.dynamicPropertyKey = this.propertyKey;\r\n        object.deoptimizePath(UNKNOWN_PATH);\r\n        if (this.included) {\r\n            object.includePath(UNKNOWN_PATH, createInclusionContext());\r\n        }\r\n        for (const expression of expressionsToBeDeoptimized) {\r\n            expression.deoptimizeCache();\r\n        }\r\n    }\r\n    deoptimizePath(path) {\r\n        if (path.length === 0)\r\n            this.disallowNamespaceReassignment();\r\n        if (this.variable) {\r\n            this.variable.deoptimizePath(path);\r\n        }\r\n        else if (!this.isUndefined) {\r\n            const { propertyKey } = this;\r\n            this.object.deoptimizePath([\r\n                propertyKey === UnknownKey ? UnknownNonAccessorKey : propertyKey,\r\n                ...(path.length < MAX_PATH_DEPTH\r\n                    ? path\r\n                    : [...path.slice(0, MAX_PATH_DEPTH), UnknownKey])\r\n            ]);\r\n        }\r\n    }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        if (this.variable) {\r\n            return this.variable.getLiteralValueAtPath(path, recursionTracker, origin);\r\n        }\r\n        if (this.isUndefined) {\r\n            return undefined;\r\n        }\r\n        const propertyKey = this.getDynamicPropertyKey();\r\n        if (propertyKey !== UnknownKey && path.length < MAX_PATH_DEPTH) {\r\n            if (propertyKey !== this.propertyKey)\r\n                this.expressionsToBeDeoptimized.push(origin);\r\n            return this.object.getLiteralValueAtPath([propertyKey, ...path], recursionTracker, origin);\r\n        }\r\n        return UnknownValue;\r\n    }\r\n    getLiteralValueAtPathAsChainElement(path, recursionTracker, origin) {\r\n        if (this.variable) {\r\n            return this.variable.getLiteralValueAtPath(path, recursionTracker, origin);\r\n        }\r\n        if (this.isUndefined) {\r\n            return undefined;\r\n        }\r\n        return getChainElementLiteralValueAtPath(this, this.object, path, recursionTracker, origin);\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\r\n        if (this.variable) {\r\n            return this.variable.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\r\n        }\r\n        if (this.isUndefined) {\r\n            return [UNDEFINED_EXPRESSION, false];\r\n        }\r\n        const propertyKey = this.getDynamicPropertyKey();\r\n        if (propertyKey !== UnknownKey && path.length < MAX_PATH_DEPTH) {\r\n            if (propertyKey !== this.propertyKey)\r\n                this.expressionsToBeDeoptimized.push(origin);\r\n            return this.object.getReturnExpressionWhenCalledAtPath([propertyKey, ...path], interaction, recursionTracker, origin);\r\n        }\r\n        return UNKNOWN_RETURN_EXPRESSION;\r\n    }\r\n    hasEffects(context) {\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        return (this.property.hasEffects(context) ||\r\n            this.object.hasEffects(context) ||\r\n            this.hasAccessEffect(context));\r\n    }\r\n    hasEffectsAsChainElement(context) {\r\n        if (this.variable || this.isUndefined)\r\n            return this.hasEffects(context);\r\n        const objectHasEffects = 'hasEffectsAsChainElement' in this.object\r\n            ? this.object.hasEffectsAsChainElement(context)\r\n            : this.object.hasEffects(context);\r\n        if (objectHasEffects === IS_SKIPPED_CHAIN)\r\n            return IS_SKIPPED_CHAIN;\r\n        if (this.optional &&\r\n            this.object.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this) == null) {\r\n            return objectHasEffects || IS_SKIPPED_CHAIN;\r\n        }\r\n        // We only apply deoptimizations lazily once we know we are not skipping\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        return objectHasEffects || this.property.hasEffects(context) || this.hasAccessEffect(context);\r\n    }\r\n    hasEffectsAsAssignmentTarget(context, checkAccess) {\r\n        if (checkAccess && !this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        if (!this.assignmentDeoptimized)\r\n            this.applyAssignmentDeoptimization();\r\n        return (this.property.hasEffects(context) ||\r\n            this.object.hasEffects(context) ||\r\n            (checkAccess && this.hasAccessEffect(context)) ||\r\n            this.hasEffectsOnInteractionAtPath(EMPTY_PATH, this.assignmentInteraction, context));\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        if (this.variable) {\r\n            return this.variable.hasEffectsOnInteractionAtPath(path, interaction, context);\r\n        }\r\n        if (this.isUndefined) {\r\n            return true;\r\n        }\r\n        if (path.length < MAX_PATH_DEPTH) {\r\n            return this.object.hasEffectsOnInteractionAtPath([this.getDynamicPropertyKey(), ...path], interaction, context);\r\n        }\r\n        return true;\r\n    }\r\n    hasEffectsWhenDestructuring(context, destructuredInitPath, init) {\r\n        return (destructuredInitPath.length > 0 &&\r\n            init.hasEffectsOnInteractionAtPath(destructuredInitPath, NODE_INTERACTION_UNKNOWN_ACCESS, context));\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        this.object.include(context, includeChildrenRecursively);\r\n        this.property.include(context, includeChildrenRecursively);\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        if (this.variable) {\r\n            this.scope.context.includeVariableInModule(this.variable, EMPTY_PATH, context);\r\n        }\r\n        else if (!this.isUndefined) {\r\n            this.object.includePath([this.propertyKey], context);\r\n        }\r\n    }\r\n    includeNodeAsAssignmentTarget(context) {\r\n        this.included = true;\r\n        if (!this.assignmentDeoptimized)\r\n            this.applyAssignmentDeoptimization();\r\n        if (this.variable) {\r\n            this.scope.context.includeVariableInModule(this.variable, EMPTY_PATH, context);\r\n        }\r\n        else if (!this.isUndefined) {\r\n            this.object.includePath([this.propertyKey], context);\r\n        }\r\n    }\r\n    includePath(path, context) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        if (this.variable) {\r\n            this.variable?.includePath(path, context);\r\n        }\r\n        else if (!this.isUndefined) {\r\n            this.object.includePath([\r\n                this.propertyKey,\r\n                ...(path.length < MAX_PATH_DEPTH\r\n                    ? path\r\n                    : [...path.slice(0, MAX_PATH_DEPTH), UnknownKey])\r\n            ], context);\r\n        }\r\n    }\r\n    includeAsAssignmentTarget(context, includeChildrenRecursively, deoptimizeAccess) {\r\n        if (!this.included)\r\n            this.includeNodeAsAssignmentTarget(context);\r\n        if (deoptimizeAccess && !this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        this.object.include(context, includeChildrenRecursively);\r\n        this.property.include(context, includeChildrenRecursively);\r\n    }\r\n    includeCallArguments(interaction, context) {\r\n        if (this.variable) {\r\n            this.variable.includeCallArguments(interaction, context);\r\n        }\r\n        else {\r\n            if (isImportExpressionNode(this.object) ||\r\n                /**\r\n                 * const c = await import('foo')\r\n                 * c.foo();\r\n                 */\r\n                (this.object.variable &&\r\n                    !this.object.variable.isReassigned &&\r\n                    this.object.variable instanceof LocalVariable &&\r\n                    isAwaitExpressionNode(this.object.variable.init) &&\r\n                    isImportExpressionNode(this.object.variable.init.argument))) {\r\n                includeInteractionWithoutThis(interaction, context);\r\n            }\r\n            else {\r\n                includeInteraction(interaction, context);\r\n            }\r\n        }\r\n    }\r\n    includeDestructuredIfNecessary() {\r\n        /* istanbul ignore next */\r\n        this.scope.context.error({\r\n            message: 'includeDestructuredIfNecessary is currently not supported for MemberExpressions'\r\n        }, this.start);\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        this.dynamicPropertyKey = getResolvablePropertyKey(this);\r\n        this.propertyKey = this.dynamicPropertyKey === null ? UnknownKey : this.dynamicPropertyKey;\r\n        this.accessInteraction = { args: [this.object], type: INTERACTION_ACCESSED };\r\n    }\r\n    render(code, options, { renderedParentType, isCalleeOfRenderedParent, renderedSurroundingElement } = BLANK) {\r\n        if (this.variable || this.isUndefined) {\r\n            const { snippets: { getPropertyAccess } } = options;\r\n            let replacement = this.variable ? this.variable.getName(getPropertyAccess) : 'undefined';\r\n            if (renderedParentType && isCalleeOfRenderedParent)\r\n                replacement = '0, ' + replacement;\r\n            code.overwrite(this.start, this.end, replacement, {\r\n                contentOnly: true,\r\n                storeName: true\r\n            });\r\n        }\r\n        else {\r\n            if (renderedParentType && isCalleeOfRenderedParent) {\r\n                code.appendRight(this.start, '0, ');\r\n            }\r\n            this.object.render(code, options, { renderedSurroundingElement });\r\n            this.property.render(code, options);\r\n        }\r\n    }\r\n    setAssignedValue(value) {\r\n        this.assignmentInteraction = {\r\n            args: [this.object, value],\r\n            type: INTERACTION_ASSIGNED\r\n        };\r\n    }\r\n    applyDeoptimizations() {\r\n        this.deoptimized = true;\r\n        const { propertyReadSideEffects } = this.scope.context.options\r\n            .treeshake;\r\n        if (\r\n        // Namespaces are not bound and should not be deoptimized\r\n        this.bound &&\r\n            propertyReadSideEffects &&\r\n            !(this.variable || this.isUndefined)) {\r\n            this.object.deoptimizeArgumentsOnInteractionAtPath(this.accessInteraction, [this.propertyKey], SHARED_RECURSION_TRACKER);\r\n            this.scope.context.requestTreeshakingPass();\r\n        }\r\n        if (this.variable) {\r\n            this.variable.addUsedPlace(this);\r\n            this.scope.context.requestTreeshakingPass();\r\n        }\r\n    }\r\n    applyAssignmentDeoptimization() {\r\n        this.assignmentDeoptimized = true;\r\n        const { propertyReadSideEffects } = this.scope.context.options\r\n            .treeshake;\r\n        if (\r\n        // Namespaces are not bound and should not be deoptimized\r\n        this.bound &&\r\n            propertyReadSideEffects &&\r\n            !(this.variable || this.isUndefined)) {\r\n            this.object.deoptimizeArgumentsOnInteractionAtPath(this.assignmentInteraction, [this.propertyKey], SHARED_RECURSION_TRACKER);\r\n            this.scope.context.requestTreeshakingPass();\r\n        }\r\n    }\r\n    disallowNamespaceReassignment() {\r\n        if (this.object instanceof Identifier) {\r\n            const variable = this.scope.findVariable(this.object.name);\r\n            if (variable.isNamespace) {\r\n                if (this.variable) {\r\n                    this.scope.context.includeVariableInModule(this.variable, UNKNOWN_PATH, createInclusionContext());\r\n                }\r\n                this.scope.context.log(LOGLEVEL_WARN, logIllegalImportReassignment(this.object.name, this.scope.context.module.id), this.start);\r\n            }\r\n        }\r\n    }\r\n    getDynamicPropertyKey() {\r\n        if (this.dynamicPropertyKey === null) {\r\n            this.dynamicPropertyKey = this.propertyKey;\r\n            const value = this.property.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this);\r\n            return (this.dynamicPropertyKey =\r\n                value === SymbolToStringTag\r\n                    ? value\r\n                    : typeof value === 'symbol'\r\n                        ? UnknownKey\r\n                        : String(value));\r\n        }\r\n        return this.dynamicPropertyKey;\r\n    }\r\n    hasAccessEffect(context) {\r\n        const { propertyReadSideEffects } = this.scope.context.options\r\n            .treeshake;\r\n        return (!(this.variable || this.isUndefined) &&\r\n            propertyReadSideEffects &&\r\n            (propertyReadSideEffects === 'always' ||\r\n                this.object.hasEffectsOnInteractionAtPath([this.getDynamicPropertyKey()], this.accessInteraction, context)));\r\n    }\r\n}\r\nfunction resolveNamespaceVariables(baseVariable, path, astContext) {\r\n    if (path.length === 0)\r\n        return baseVariable;\r\n    if (!baseVariable.isNamespace || baseVariable instanceof ExternalVariable)\r\n        return null;\r\n    const exportName = path[0].key;\r\n    const [variable, options] = baseVariable.context.traceExport(exportName);\r\n    if (!variable) {\r\n        if (path.length === 1) {\r\n            const fileName = baseVariable.context.fileName;\r\n            astContext.log(LOGLEVEL_WARN, logMissingExport(exportName, astContext.module.id, fileName, !!options?.missingButExportExists), path[0].pos);\r\n            return 'undefined';\r\n        }\r\n        return null;\r\n    }\r\n    return resolveNamespaceVariables(variable, path.slice(1), astContext);\r\n}\r\n\r\nconst FILE_PREFIX = 'ROLLUP_FILE_URL_';\r\nconst FILE_OBJ_PREFIX = 'ROLLUP_FILE_URL_OBJ_';\r\nconst IMPORT = 'import';\r\nclass MetaProperty extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.metaProperty = null;\r\n        this.preliminaryChunkId = null;\r\n        this.referenceId = null;\r\n    }\r\n    getReferencedFileName(outputPluginDriver) {\r\n        const { meta: { name }, metaProperty } = this;\r\n        if (name === IMPORT) {\r\n            if (metaProperty?.startsWith(FILE_OBJ_PREFIX)) {\r\n                return outputPluginDriver.getFileName(metaProperty.slice(FILE_OBJ_PREFIX.length));\r\n            }\r\n            else if (metaProperty?.startsWith(FILE_PREFIX)) {\r\n                return outputPluginDriver.getFileName(metaProperty.slice(FILE_PREFIX.length));\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    hasEffects() {\r\n        return false;\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, { type }) {\r\n        return path.length > 1 || type !== INTERACTION_ACCESSED;\r\n    }\r\n    include() {\r\n        if (!this.included)\r\n            this.includeNode();\r\n    }\r\n    includeNode() {\r\n        this.included = true;\r\n        if (this.meta.name === IMPORT) {\r\n            this.scope.context.addImportMeta(this);\r\n            const parent = this.parent;\r\n            const metaProperty = (this.metaProperty =\r\n                parent instanceof MemberExpression && typeof parent.propertyKey === 'string'\r\n                    ? parent.propertyKey\r\n                    : null);\r\n            if (metaProperty?.startsWith(FILE_OBJ_PREFIX)) {\r\n                this.referenceId = metaProperty.slice(FILE_OBJ_PREFIX.length);\r\n            }\r\n            else if (metaProperty?.startsWith(FILE_PREFIX)) {\r\n                this.referenceId = metaProperty.slice(FILE_PREFIX.length);\r\n            }\r\n        }\r\n    }\r\n    render(code, renderOptions) {\r\n        const { format, pluginDriver, snippets } = renderOptions;\r\n        const { scope: { context: { module } }, meta: { name }, metaProperty, parent, preliminaryChunkId, referenceId, start, end } = this;\r\n        const { id: moduleId } = module;\r\n        if (name !== IMPORT)\r\n            return;\r\n        const chunkId = preliminaryChunkId;\r\n        if (referenceId) {\r\n            const fileName = pluginDriver.getFileName(referenceId);\r\n            const relativePath = normalize(relative(dirname(chunkId), fileName));\r\n            const isUrlObject = !!metaProperty?.startsWith(FILE_OBJ_PREFIX);\r\n            const replacement = pluginDriver.hookFirstSync('resolveFileUrl', [\r\n                { chunkId, fileName, format, moduleId, referenceId, relativePath }\r\n            ]) || relativeUrlMechanisms[format](relativePath, isUrlObject);\r\n            code.overwrite(parent.start, parent.end, replacement, { contentOnly: true });\r\n            return;\r\n        }\r\n        let replacement = pluginDriver.hookFirstSync('resolveImportMeta', [\r\n            metaProperty,\r\n            { chunkId, format, moduleId }\r\n        ]);\r\n        if (!replacement) {\r\n            replacement = importMetaMechanisms[format]?.(metaProperty, { chunkId, snippets });\r\n            renderOptions.accessedDocumentCurrentScript ||=\r\n                formatsMaybeAccessDocumentCurrentScript.includes(format) && replacement !== 'undefined';\r\n        }\r\n        if (typeof replacement === 'string') {\r\n            if (parent instanceof MemberExpression) {\r\n                code.overwrite(parent.start, parent.end, replacement, { contentOnly: true });\r\n            }\r\n            else {\r\n                code.overwrite(start, end, replacement, { contentOnly: true });\r\n            }\r\n        }\r\n    }\r\n    setResolution(format, accessedGlobalsByScope, preliminaryChunkId) {\r\n        this.preliminaryChunkId = preliminaryChunkId;\r\n        const accessedGlobals = (this.metaProperty?.startsWith(FILE_PREFIX) || this.metaProperty?.startsWith(FILE_OBJ_PREFIX)\r\n            ? accessedFileUrlGlobals\r\n            : accessedMetaUrlGlobals)[format];\r\n        if (accessedGlobals.length > 0) {\r\n            this.scope.addAccessedGlobals(accessedGlobals, accessedGlobalsByScope);\r\n        }\r\n    }\r\n}\r\nconst formatsMaybeAccessDocumentCurrentScript = ['cjs', 'iife', 'umd'];\r\nconst accessedMetaUrlGlobals = {\r\n    amd: ['document', 'module', 'URL'],\r\n    cjs: ['document', 'require', 'URL', DOCUMENT_CURRENT_SCRIPT],\r\n    es: [],\r\n    iife: ['document', 'URL', DOCUMENT_CURRENT_SCRIPT],\r\n    system: ['module'],\r\n    umd: ['document', 'require', 'URL', DOCUMENT_CURRENT_SCRIPT]\r\n};\r\nconst accessedFileUrlGlobals = {\r\n    amd: ['document', 'require', 'URL'],\r\n    cjs: ['document', 'require', 'URL'],\r\n    es: [],\r\n    iife: ['document', 'URL'],\r\n    system: ['module', 'URL'],\r\n    umd: ['document', 'require', 'URL']\r\n};\r\nconst getResolveUrl = (path, asObject, URL = 'URL') => `new ${URL}(${path})${asObject ? '' : '.href'}`;\r\nconst getRelativeUrlFromDocument = (relativePath, asObject, umd = false) => getResolveUrl(`'${escapeId(relativePath)}', ${umd ? `typeof document === 'undefined' ? location.href : ` : ''}document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT' && document.currentScript.src || document.baseURI`, asObject);\r\nconst getGenericImportMetaMechanism = (getUrl) => (property, { chunkId }) => {\r\n    const urlMechanism = getUrl(chunkId);\r\n    return property === null\r\n        ? `({ url: ${urlMechanism} })`\r\n        : property === 'url'\r\n            ? urlMechanism\r\n            : 'undefined';\r\n};\r\nconst getFileUrlFromFullPath = (path, asObject) => `require('u' + 'rl').pathToFileURL(${path})${asObject ? '' : '.href'}`;\r\nconst getFileUrlFromRelativePath = (path, asObject) => getFileUrlFromFullPath(`__dirname + '/${escapeId(path)}'`, asObject);\r\nconst getUrlFromDocument = (chunkId, umd = false) => `${umd ? `typeof document === 'undefined' ? location.href : ` : ''}(${DOCUMENT_CURRENT_SCRIPT} && ${DOCUMENT_CURRENT_SCRIPT}.tagName.toUpperCase() === 'SCRIPT' && ${DOCUMENT_CURRENT_SCRIPT}.src || new URL('${escapeId(chunkId)}', document.baseURI).href)`;\r\nconst relativeUrlMechanisms = {\r\n    amd: (relativePath, asObject) => {\r\n        if (relativePath[0] !== '.')\r\n            relativePath = './' + relativePath;\r\n        return getResolveUrl(`require.toUrl('${escapeId(relativePath)}'), document.baseURI`, asObject);\r\n    },\r\n    cjs: (relativePath, asObject) => `(typeof document === 'undefined' ? ${getFileUrlFromRelativePath(relativePath, asObject)} : ${getRelativeUrlFromDocument(relativePath, asObject)})`,\r\n    es: (relativePath, asObject) => getResolveUrl(`'${escapeId(relativePath)}', import.meta.url`, asObject),\r\n    iife: (relativePath, asObject) => getRelativeUrlFromDocument(relativePath, asObject),\r\n    system: (relativePath, asObject) => getResolveUrl(`'${escapeId(relativePath)}', module.meta.url`, asObject),\r\n    umd: (relativePath, asObject) => `(typeof document === 'undefined' && typeof location === 'undefined' ? ${getFileUrlFromRelativePath(relativePath, asObject)} : ${getRelativeUrlFromDocument(relativePath, asObject, true)})`\r\n};\r\nconst importMetaMechanisms = {\r\n    amd: getGenericImportMetaMechanism(() => getResolveUrl(`module.uri, document.baseURI`, false)),\r\n    cjs: getGenericImportMetaMechanism(chunkId => `(typeof document === 'undefined' ? ${getFileUrlFromFullPath('__filename', false)} : ${getUrlFromDocument(chunkId)})`),\r\n    iife: getGenericImportMetaMechanism(chunkId => getUrlFromDocument(chunkId)),\r\n    system: (property, { snippets: { getPropertyAccess } }) => property === null ? `module.meta` : `module.meta${getPropertyAccess(property)}`,\r\n    umd: getGenericImportMetaMechanism(chunkId => `(typeof document === 'undefined' && typeof location === 'undefined' ? ${getFileUrlFromFullPath('__filename', false)} : ${getUrlFromDocument(chunkId, true)})`)\r\n};\r\n\r\nclass UndefinedVariable extends Variable {\r\n    constructor() {\r\n        super('undefined');\r\n    }\r\n    getLiteralValueAtPath() {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nclass ExportDefaultVariable extends LocalVariable {\r\n    constructor(name, exportDefaultDeclaration, context) {\r\n        super(name, exportDefaultDeclaration, exportDefaultDeclaration.declaration, EMPTY_PATH, context, 'other');\r\n        this.hasId = false;\r\n        this.originalId = null;\r\n        this.originalVariable = null;\r\n        const declaration = exportDefaultDeclaration.declaration;\r\n        if ((declaration instanceof FunctionDeclaration || declaration instanceof ClassDeclaration) &&\r\n            declaration.id) {\r\n            this.hasId = true;\r\n            this.originalId = declaration.id;\r\n        }\r\n        else if (declaration instanceof Identifier) {\r\n            this.originalId = declaration;\r\n        }\r\n    }\r\n    addReference(identifier) {\r\n        if (!this.hasId) {\r\n            this.name = identifier.name;\r\n        }\r\n    }\r\n    addUsedPlace(usedPlace) {\r\n        const original = this.getOriginalVariable();\r\n        if (original === this) {\r\n            super.addUsedPlace(usedPlace);\r\n        }\r\n        else {\r\n            original.addUsedPlace(usedPlace);\r\n        }\r\n    }\r\n    forbidName(name) {\r\n        const original = this.getOriginalVariable();\r\n        if (original === this) {\r\n            super.forbidName(name);\r\n        }\r\n        else {\r\n            original.forbidName(name);\r\n        }\r\n    }\r\n    getAssignedVariableName() {\r\n        return (this.originalId && this.originalId.name) || null;\r\n    }\r\n    getBaseVariableName() {\r\n        const original = this.getOriginalVariable();\r\n        return original === this ? super.getBaseVariableName() : original.getBaseVariableName();\r\n    }\r\n    getDirectOriginalVariable() {\r\n        return this.originalId &&\r\n            (this.hasId ||\r\n                !(this.originalId.isPossibleTDZ() ||\r\n                    this.originalId.variable.isReassigned ||\r\n                    this.originalId.variable instanceof UndefinedVariable ||\r\n                    // this avoids a circular dependency\r\n                    'syntheticNamespace' in this.originalId.variable))\r\n            ? this.originalId.variable\r\n            : null;\r\n    }\r\n    getName(getPropertyAccess) {\r\n        const original = this.getOriginalVariable();\r\n        return original === this\r\n            ? super.getName(getPropertyAccess)\r\n            : original.getName(getPropertyAccess);\r\n    }\r\n    getOriginalVariable() {\r\n        if (this.originalVariable)\r\n            return this.originalVariable;\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        let original = this;\r\n        let currentVariable;\r\n        const checkedVariables = new Set();\r\n        do {\r\n            checkedVariables.add(original);\r\n            currentVariable = original;\r\n            original = currentVariable.getDirectOriginalVariable();\r\n        } while (original instanceof ExportDefaultVariable && !checkedVariables.has(original));\r\n        return (this.originalVariable = original || currentVariable);\r\n    }\r\n}\r\n\r\nclass NamespaceVariable extends Variable {\r\n    constructor(context) {\r\n        super(context.getModuleName());\r\n        this.memberVariables = null;\r\n        this.mergedNamespaces = [];\r\n        this.referencedEarly = false;\r\n        this.references = [];\r\n        this.context = context;\r\n        this.module = context.module;\r\n    }\r\n    addReference(identifier) {\r\n        this.references.push(identifier);\r\n        this.name = identifier.name;\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        if (path.length > 1 || (path.length === 1 && interaction.type === INTERACTION_CALLED)) {\r\n            const key = path[0];\r\n            if (typeof key === 'string') {\r\n                this.getMemberVariables()[key]?.deoptimizeArgumentsOnInteractionAtPath(interaction, path.slice(1), recursionTracker);\r\n            }\r\n            else {\r\n                deoptimizeInteraction(interaction);\r\n            }\r\n        }\r\n    }\r\n    deoptimizePath(path) {\r\n        if (path.length > 1) {\r\n            const key = path[0];\r\n            if (typeof key === 'string') {\r\n                this.getMemberVariables()[key]?.deoptimizePath(path.slice(1));\r\n            }\r\n        }\r\n    }\r\n    getLiteralValueAtPath(path) {\r\n        if (path[0] === SymbolToStringTag) {\r\n            return 'Module';\r\n        }\r\n        return UnknownValue;\r\n    }\r\n    getMemberVariables() {\r\n        if (this.memberVariables) {\r\n            return this.memberVariables;\r\n        }\r\n        const memberVariables = Object.create(null);\r\n        const sortedExports = [...this.context.getExports(), ...this.context.getReexports()].sort();\r\n        for (const name of sortedExports) {\r\n            if (name[0] !== '*' && name !== this.module.info.syntheticNamedExports) {\r\n                const [exportedVariable] = this.context.traceExport(name);\r\n                if (exportedVariable) {\r\n                    memberVariables[name] = exportedVariable;\r\n                }\r\n            }\r\n        }\r\n        return (this.memberVariables = memberVariables);\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        const { type } = interaction;\r\n        if (path.length === 0) {\r\n            // This can only be a call anyway\r\n            return true;\r\n        }\r\n        if (path.length === 1 && type !== INTERACTION_CALLED) {\r\n            return type === INTERACTION_ASSIGNED;\r\n        }\r\n        const key = path[0];\r\n        if (typeof key !== 'string') {\r\n            return true;\r\n        }\r\n        const memberVariable = this.getMemberVariables()[key];\r\n        return (!memberVariable ||\r\n            memberVariable.hasEffectsOnInteractionAtPath(path.slice(1), interaction, context));\r\n    }\r\n    includePath(path, context) {\r\n        super.includePath(path, context);\r\n        this.context.includeAllExports();\r\n    }\r\n    prepare(accessedGlobalsByScope) {\r\n        if (this.mergedNamespaces.length > 0) {\r\n            this.module.scope.addAccessedGlobals([MERGE_NAMESPACES_VARIABLE], accessedGlobalsByScope);\r\n        }\r\n    }\r\n    renderBlock(options) {\r\n        const { exportNamesByVariable, format, freeze, indent: t, symbols, snippets: { _, cnst, getObject, getPropertyAccess, n, s } } = options;\r\n        const memberVariables = this.getMemberVariables();\r\n        const members = Object.entries(memberVariables)\r\n            .filter(([_, variable]) => variable.included)\r\n            .map(([name, variable]) => {\r\n            if (this.referencedEarly || variable.isReassigned || variable === this) {\r\n                return [\r\n                    null,\r\n                    `get ${stringifyObjectKeyIfNeeded(name)}${_}()${_}{${_}return ${variable.getName(getPropertyAccess)}${s}${_}}`\r\n                ];\r\n            }\r\n            return [name, variable.getName(getPropertyAccess)];\r\n        });\r\n        members.unshift([null, `__proto__:${_}null`]);\r\n        let output = getObject(members, { lineBreakIndent: { base: '', t } });\r\n        if (this.mergedNamespaces.length > 0) {\r\n            const assignmentArguments = this.mergedNamespaces.map(variable => variable.getName(getPropertyAccess));\r\n            output = `/*#__PURE__*/${MERGE_NAMESPACES_VARIABLE}(${output},${_}[${assignmentArguments.join(`,${_}`)}])`;\r\n        }\r\n        else {\r\n            // The helper to merge namespaces will also take care of freezing and toStringTag\r\n            if (symbols) {\r\n                output = `/*#__PURE__*/Object.defineProperty(${output},${_}Symbol.toStringTag,${_}${getToStringTagValue(getObject)})`;\r\n            }\r\n            if (freeze) {\r\n                output = `/*#__PURE__*/Object.freeze(${output})`;\r\n            }\r\n        }\r\n        const name = this.getName(getPropertyAccess);\r\n        output = `${cnst} ${name}${_}=${_}${output};`;\r\n        if (format === 'system' && exportNamesByVariable.has(this)) {\r\n            output += `${n}${getSystemExportStatement([this], options)};`;\r\n        }\r\n        return output;\r\n    }\r\n    renderFirst() {\r\n        return this.referencedEarly;\r\n    }\r\n    setMergedNamespaces(mergedNamespaces) {\r\n        this.mergedNamespaces = mergedNamespaces;\r\n        const moduleExecIndex = this.context.getModuleExecIndex();\r\n        for (const identifier of this.references) {\r\n            const { context } = identifier.scope;\r\n            if (context.getModuleExecIndex() <= moduleExecIndex) {\r\n                this.referencedEarly = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\nNamespaceVariable.prototype.isNamespace = true;\r\n\r\nclass SyntheticNamedExportVariable extends Variable {\r\n    constructor(context, name, syntheticNamespace) {\r\n        super(name);\r\n        this.baseVariable = null;\r\n        this.context = context;\r\n        this.module = context.module;\r\n        this.syntheticNamespace = syntheticNamespace;\r\n    }\r\n    getBaseVariable() {\r\n        if (this.baseVariable)\r\n            return this.baseVariable;\r\n        let baseVariable = this.syntheticNamespace;\r\n        while (baseVariable instanceof ExportDefaultVariable ||\r\n            baseVariable instanceof SyntheticNamedExportVariable) {\r\n            if (baseVariable instanceof ExportDefaultVariable) {\r\n                const original = baseVariable.getOriginalVariable();\r\n                if (original === baseVariable)\r\n                    break;\r\n                baseVariable = original;\r\n            }\r\n            if (baseVariable instanceof SyntheticNamedExportVariable) {\r\n                baseVariable = baseVariable.syntheticNamespace;\r\n            }\r\n        }\r\n        return (this.baseVariable = baseVariable);\r\n    }\r\n    getBaseVariableName() {\r\n        return this.syntheticNamespace.getBaseVariableName();\r\n    }\r\n    getName(getPropertyAccess) {\r\n        return `${this.syntheticNamespace.getName(getPropertyAccess)}${getPropertyAccess(this.name)}`;\r\n    }\r\n    includePath(path, context) {\r\n        super.includePath(path, context);\r\n        this.context.includeVariableInModule(this.syntheticNamespace, path, context);\r\n    }\r\n    setRenderNames(baseName, name) {\r\n        super.setRenderNames(baseName, name);\r\n    }\r\n}\r\n\r\nclass ExternalChunk {\r\n    constructor(module, options, inputBase) {\r\n        this.options = options;\r\n        this.inputBase = inputBase;\r\n        this.defaultVariableName = '';\r\n        this.namespaceVariableName = '';\r\n        this.variableName = '';\r\n        this.fileName = null;\r\n        this.importAttributes = null;\r\n        this.id = module.id;\r\n        this.moduleInfo = module.info;\r\n        this.renormalizeRenderPath = module.renormalizeRenderPath;\r\n        this.suggestedVariableName = module.suggestedVariableName;\r\n    }\r\n    getFileName() {\r\n        if (this.fileName) {\r\n            return this.fileName;\r\n        }\r\n        const { paths } = this.options;\r\n        return (this.fileName =\r\n            (typeof paths === 'function' ? paths(this.id) : paths[this.id]) ||\r\n                (this.renormalizeRenderPath ? normalize(relative(this.inputBase, this.id)) : this.id));\r\n    }\r\n    getImportAttributes(snippets) {\r\n        return (this.importAttributes ||= formatAttributes(['es', 'cjs'].includes(this.options.format) &&\r\n            this.options.externalImportAttributes &&\r\n            this.moduleInfo.attributes, snippets));\r\n    }\r\n    getImportPath(importer) {\r\n        return escapeId(this.renormalizeRenderPath\r\n            ? getImportPath(importer, this.getFileName(), this.options.format === 'amd', false)\r\n            : this.getFileName());\r\n    }\r\n}\r\nfunction formatAttributes(attributes, { getObject }) {\r\n    if (!attributes) {\r\n        return null;\r\n    }\r\n    const assertionEntries = Object.entries(attributes).map(([key, value]) => [key, `'${value}'`]);\r\n    if (assertionEntries.length > 0) {\r\n        return getObject(assertionEntries, { lineBreakIndent: null });\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction removeJsExtension(name) {\r\n    return name.endsWith('.js') ? name.slice(0, -3) : name;\r\n}\r\n\r\nfunction getCompleteAmdId(options, chunkId) {\r\n    if (options.autoId) {\r\n        return `${options.basePath ? options.basePath + '/' : ''}${removeJsExtension(chunkId)}`;\r\n    }\r\n    return options.id ?? '';\r\n}\r\n\r\nfunction getExportBlock$1(exports, dependencies, namedExportsMode, interop, snippets, t, externalLiveBindings, reexportProtoFromExternal, mechanism = 'return ') {\r\n    const { _, getDirectReturnFunction, getFunctionIntro, getPropertyAccess, n, s } = snippets;\r\n    if (!namedExportsMode) {\r\n        return `${n}${n}${mechanism}${getSingleDefaultExport(exports, dependencies, interop, externalLiveBindings, getPropertyAccess)};`;\r\n    }\r\n    let exportBlock = '';\r\n    if (namedExportsMode) {\r\n        for (const { defaultVariableName, importPath, isChunk, name, namedExportsMode: depNamedExportsMode, namespaceVariableName, reexports } of dependencies) {\r\n            if (!reexports) {\r\n                continue;\r\n            }\r\n            for (const specifier of reexports) {\r\n                if (specifier.reexported !== '*') {\r\n                    const importName = getReexportedImportName(name, specifier.imported, depNamedExportsMode, isChunk, defaultVariableName, namespaceVariableName, interop, importPath, externalLiveBindings, getPropertyAccess);\r\n                    if (exportBlock)\r\n                        exportBlock += n;\r\n                    if (specifier.imported !== '*' && specifier.needsLiveBinding) {\r\n                        const [left, right] = getDirectReturnFunction([], {\r\n                            functionReturn: true,\r\n                            lineBreakIndent: null,\r\n                            name: null\r\n                        });\r\n                        exportBlock +=\r\n                            `Object.defineProperty(exports,${_}${JSON.stringify(specifier.reexported)},${_}{${n}` +\r\n                                `${t}enumerable:${_}true,${n}` +\r\n                                `${t}get:${_}${left}${importName}${right}${n}});`;\r\n                    }\r\n                    else if (specifier.reexported === '__proto__') {\r\n                        exportBlock +=\r\n                            `Object.defineProperty(exports,${_}\"__proto__\",${_}{${n}` +\r\n                                `${t}enumerable:${_}true,${n}` +\r\n                                `${t}value:${_}${importName}${n}});`;\r\n                    }\r\n                    else {\r\n                        exportBlock += `exports${getPropertyAccess(specifier.reexported)}${_}=${_}${importName};`;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for (const { exported, local } of exports) {\r\n        const lhs = `exports${getPropertyAccess(exported)}`;\r\n        const rhs = local;\r\n        if (lhs !== rhs) {\r\n            if (exportBlock)\r\n                exportBlock += n;\r\n            exportBlock +=\r\n                exported === '__proto__'\r\n                    ? `Object.defineProperty(exports,${_}\"__proto__\",${_}{${n}` +\r\n                        `${t}enumerable:${_}true,${n}` +\r\n                        `${t}value:${_}${rhs}${n}});`\r\n                    : `${lhs}${_}=${_}${rhs};`;\r\n        }\r\n    }\r\n    if (namedExportsMode) {\r\n        for (const { name, reexports } of dependencies) {\r\n            if (!reexports) {\r\n                continue;\r\n            }\r\n            for (const specifier of reexports) {\r\n                if (specifier.reexported === '*') {\r\n                    if (exportBlock)\r\n                        exportBlock += n;\r\n                    if (!specifier.needsLiveBinding && reexportProtoFromExternal) {\r\n                        const protoString = \"'__proto__'\";\r\n                        exportBlock +=\r\n                            `Object.prototype.hasOwnProperty.call(${name},${_}${protoString})${_}&&${n}` +\r\n                                `${t}!Object.prototype.hasOwnProperty.call(exports,${_}${protoString})${_}&&${n}` +\r\n                                `${t}Object.defineProperty(exports,${_}${protoString},${_}{${n}` +\r\n                                `${t}${t}enumerable:${_}true,${n}` +\r\n                                `${t}${t}value:${_}${name}[${protoString}]${n}` +\r\n                                `${t}});${n}${n}`;\r\n                    }\r\n                    const copyPropertyIfNecessary = `{${n}${t}if${_}(k${_}!==${_}'default'${_}&&${_}!Object.prototype.hasOwnProperty.call(exports,${_}k))${_}${getDefineProperty(name, specifier.needsLiveBinding, t, snippets)}${s}${n}}`;\r\n                    exportBlock += `Object.keys(${name}).forEach(${getFunctionIntro(['k'], {\r\n                        isAsync: false,\r\n                        name: null\r\n                    })}${copyPropertyIfNecessary});`;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (exportBlock) {\r\n        return `${n}${n}${exportBlock}`;\r\n    }\r\n    return '';\r\n}\r\nfunction getSingleDefaultExport(exports, dependencies, interop, externalLiveBindings, getPropertyAccess) {\r\n    if (exports.length > 0) {\r\n        return exports[0].local;\r\n    }\r\n    else {\r\n        for (const { defaultVariableName, importPath, isChunk, name, namedExportsMode: depNamedExportsMode, namespaceVariableName, reexports } of dependencies) {\r\n            if (reexports) {\r\n                return getReexportedImportName(name, reexports[0].imported, depNamedExportsMode, isChunk, defaultVariableName, namespaceVariableName, interop, importPath, externalLiveBindings, getPropertyAccess);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction getReexportedImportName(moduleVariableName, imported, depNamedExportsMode, isChunk, defaultVariableName, namespaceVariableName, interop, moduleId, externalLiveBindings, getPropertyAccess) {\r\n    if (imported === 'default') {\r\n        if (!isChunk) {\r\n            const moduleInterop = interop(moduleId);\r\n            const variableName = defaultInteropHelpersByInteropType[moduleInterop]\r\n                ? defaultVariableName\r\n                : moduleVariableName;\r\n            return isDefaultAProperty(moduleInterop, externalLiveBindings)\r\n                ? `${variableName}${getPropertyAccess('default')}`\r\n                : variableName;\r\n        }\r\n        return depNamedExportsMode\r\n            ? `${moduleVariableName}${getPropertyAccess('default')}`\r\n            : moduleVariableName;\r\n    }\r\n    if (imported === '*') {\r\n        return (isChunk ? !depNamedExportsMode : namespaceInteropHelpersByInteropType[interop(moduleId)])\r\n            ? namespaceVariableName\r\n            : moduleVariableName;\r\n    }\r\n    return `${moduleVariableName}${getPropertyAccess(imported)}`;\r\n}\r\nfunction getEsModuleValue(getObject) {\r\n    return getObject([['value', 'true']], {\r\n        lineBreakIndent: null\r\n    });\r\n}\r\nfunction getNamespaceMarkers(hasNamedExports, addEsModule, addNamespaceToStringTag, { _, getObject }) {\r\n    if (hasNamedExports) {\r\n        if (addEsModule) {\r\n            if (addNamespaceToStringTag) {\r\n                return `Object.defineProperties(exports,${_}${getObject([\r\n                    ['__esModule', getEsModuleValue(getObject)],\r\n                    [null, `[Symbol.toStringTag]:${_}${getToStringTagValue(getObject)}`]\r\n                ], {\r\n                    lineBreakIndent: null\r\n                })});`;\r\n            }\r\n            return `Object.defineProperty(exports,${_}'__esModule',${_}${getEsModuleValue(getObject)});`;\r\n        }\r\n        if (addNamespaceToStringTag) {\r\n            return `Object.defineProperty(exports,${_}Symbol.toStringTag,${_}${getToStringTagValue(getObject)});`;\r\n        }\r\n    }\r\n    return '';\r\n}\r\nconst getDefineProperty = (name, needsLiveBinding, t, { _, getDirectReturnFunction, n }) => {\r\n    if (needsLiveBinding) {\r\n        const [left, right] = getDirectReturnFunction([], {\r\n            functionReturn: true,\r\n            lineBreakIndent: null,\r\n            name: null\r\n        });\r\n        return (`Object.defineProperty(exports,${_}k,${_}{${n}` +\r\n            `${t}${t}enumerable:${_}true,${n}` +\r\n            `${t}${t}get:${_}${left}${name}[k]${right}${n}${t}})`);\r\n    }\r\n    return `exports[k]${_}=${_}${name}[k]`;\r\n};\r\n\r\nfunction getInteropBlock(dependencies, interop, externalLiveBindings, freeze, symbols, accessedGlobals, indent, snippets) {\r\n    const { _, cnst, n } = snippets;\r\n    const neededInteropHelpers = new Set();\r\n    const interopStatements = [];\r\n    const addInteropStatement = (helperVariableName, helper, dependencyVariableName) => {\r\n        neededInteropHelpers.add(helper);\r\n        interopStatements.push(`${cnst} ${helperVariableName}${_}=${_}/*#__PURE__*/${helper}(${dependencyVariableName});`);\r\n    };\r\n    for (const { defaultVariableName, imports, importPath, isChunk, name, namedExportsMode, namespaceVariableName, reexports } of dependencies) {\r\n        if (isChunk) {\r\n            for (const { imported, reexported } of [\r\n                ...(imports || []),\r\n                ...(reexports || [])\r\n            ]) {\r\n                if (imported === '*' && reexported !== '*') {\r\n                    if (!namedExportsMode) {\r\n                        addInteropStatement(namespaceVariableName, INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE, name);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            const moduleInterop = interop(importPath);\r\n            let hasDefault = false;\r\n            let hasNamespace = false;\r\n            for (const { imported, reexported } of [\r\n                ...(imports || []),\r\n                ...(reexports || [])\r\n            ]) {\r\n                let helper;\r\n                let variableName;\r\n                if (imported === 'default') {\r\n                    if (!hasDefault) {\r\n                        hasDefault = true;\r\n                        if (defaultVariableName !== namespaceVariableName) {\r\n                            variableName = defaultVariableName;\r\n                            helper = defaultInteropHelpersByInteropType[moduleInterop];\r\n                        }\r\n                    }\r\n                }\r\n                else if (imported === '*' && reexported !== '*' && !hasNamespace) {\r\n                    hasNamespace = true;\r\n                    helper = namespaceInteropHelpersByInteropType[moduleInterop];\r\n                    variableName = namespaceVariableName;\r\n                }\r\n                if (helper) {\r\n                    addInteropStatement(variableName, helper, name);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return `${getHelpersBlock(neededInteropHelpers, accessedGlobals, indent, snippets, externalLiveBindings, freeze, symbols)}${interopStatements.length > 0 ? `${interopStatements.join(n)}${n}${n}` : ''}`;\r\n}\r\n\r\nfunction addJsExtension(name) {\r\n    return name.endsWith('.js') ? name : name + '.js';\r\n}\r\n\r\n// AMD resolution will only respect the AMD baseUrl if the .js extension is omitted.\r\n// The assumption is that this makes sense for all relative ids:\r\n// https://requirejs.org/docs/api.html#jsfiles\r\nfunction updateExtensionForRelativeAmdId(id, forceJsExtensionForImports) {\r\n    if (id[0] !== '.') {\r\n        return id;\r\n    }\r\n    return forceJsExtensionForImports ? addJsExtension(id) : removeJsExtension(id);\r\n}\r\n\r\nconst builtinModules = [\r\n\t\"node:assert\",\r\n\t\"assert\",\r\n\t\"node:assert/strict\",\r\n\t\"assert/strict\",\r\n\t\"node:async_hooks\",\r\n\t\"async_hooks\",\r\n\t\"node:buffer\",\r\n\t\"buffer\",\r\n\t\"node:child_process\",\r\n\t\"child_process\",\r\n\t\"node:cluster\",\r\n\t\"cluster\",\r\n\t\"node:console\",\r\n\t\"console\",\r\n\t\"node:constants\",\r\n\t\"constants\",\r\n\t\"node:crypto\",\r\n\t\"crypto\",\r\n\t\"node:dgram\",\r\n\t\"dgram\",\r\n\t\"node:diagnostics_channel\",\r\n\t\"diagnostics_channel\",\r\n\t\"node:dns\",\r\n\t\"dns\",\r\n\t\"node:dns/promises\",\r\n\t\"dns/promises\",\r\n\t\"node:domain\",\r\n\t\"domain\",\r\n\t\"node:events\",\r\n\t\"events\",\r\n\t\"node:fs\",\r\n\t\"fs\",\r\n\t\"node:fs/promises\",\r\n\t\"fs/promises\",\r\n\t\"node:http\",\r\n\t\"http\",\r\n\t\"node:http2\",\r\n\t\"http2\",\r\n\t\"node:https\",\r\n\t\"https\",\r\n\t\"node:inspector\",\r\n\t\"inspector\",\r\n\t\"node:inspector/promises\",\r\n\t\"inspector/promises\",\r\n\t\"node:module\",\r\n\t\"module\",\r\n\t\"node:net\",\r\n\t\"net\",\r\n\t\"node:os\",\r\n\t\"os\",\r\n\t\"node:path\",\r\n\t\"path\",\r\n\t\"node:path/posix\",\r\n\t\"path/posix\",\r\n\t\"node:path/win32\",\r\n\t\"path/win32\",\r\n\t\"node:perf_hooks\",\r\n\t\"perf_hooks\",\r\n\t\"node:process\",\r\n\t\"process\",\r\n\t\"node:querystring\",\r\n\t\"querystring\",\r\n\t\"node:quic\",\r\n\t\"node:readline\",\r\n\t\"readline\",\r\n\t\"node:readline/promises\",\r\n\t\"readline/promises\",\r\n\t\"node:repl\",\r\n\t\"repl\",\r\n\t\"node:sea\",\r\n\t\"node:sqlite\",\r\n\t\"node:stream\",\r\n\t\"stream\",\r\n\t\"node:stream/consumers\",\r\n\t\"stream/consumers\",\r\n\t\"node:stream/promises\",\r\n\t\"stream/promises\",\r\n\t\"node:stream/web\",\r\n\t\"stream/web\",\r\n\t\"node:string_decoder\",\r\n\t\"string_decoder\",\r\n\t\"node:test\",\r\n\t\"node:test/reporters\",\r\n\t\"node:timers\",\r\n\t\"timers\",\r\n\t\"node:timers/promises\",\r\n\t\"timers/promises\",\r\n\t\"node:tls\",\r\n\t\"tls\",\r\n\t\"node:trace_events\",\r\n\t\"trace_events\",\r\n\t\"node:tty\",\r\n\t\"tty\",\r\n\t\"node:url\",\r\n\t\"url\",\r\n\t\"node:util\",\r\n\t\"util\",\r\n\t\"node:util/types\",\r\n\t\"util/types\",\r\n\t\"node:v8\",\r\n\t\"v8\",\r\n\t\"node:vm\",\r\n\t\"vm\",\r\n\t\"node:wasi\",\r\n\t\"wasi\",\r\n\t\"node:worker_threads\",\r\n\t\"worker_threads\",\r\n\t\"node:zlib\",\r\n\t\"zlib\"\r\n];\r\n\r\nconst nodeBuiltins = new Set(builtinModules);\r\nfunction warnOnBuiltins(log, dependencies) {\r\n    const externalBuiltins = dependencies\r\n        .map(({ importPath }) => importPath)\r\n        .filter(importPath => nodeBuiltins.has(importPath) || importPath.startsWith('node:'));\r\n    if (externalBuiltins.length === 0)\r\n        return;\r\n    log(LOGLEVEL_WARN, logMissingNodeBuiltins(externalBuiltins));\r\n}\r\n\r\nfunction amd(magicString, { accessedGlobals, dependencies, exports, hasDefaultExport, hasExports, id, indent: t, intro, isEntryFacade, isModuleFacade, namedExportsMode, log, outro, snippets }, { amd, esModule, externalLiveBindings, freeze, generatedCode: { symbols }, interop, reexportProtoFromExternal, strict }) {\r\n    warnOnBuiltins(log, dependencies);\r\n    const deps = dependencies.map(m => `'${updateExtensionForRelativeAmdId(m.importPath, amd.forceJsExtensionForImports)}'`);\r\n    const parameters = dependencies.map(m => m.name);\r\n    const { n, getNonArrowFunctionIntro, _ } = snippets;\r\n    if (hasExports && (namedExportsMode || exports[0]?.local === 'exports.default')) {\r\n        parameters.unshift(`exports`);\r\n        deps.unshift(`'exports'`);\r\n    }\r\n    if (accessedGlobals.has('require')) {\r\n        parameters.unshift('require');\r\n        deps.unshift(`'require'`);\r\n    }\r\n    if (accessedGlobals.has('module')) {\r\n        parameters.unshift('module');\r\n        deps.unshift(`'module'`);\r\n    }\r\n    const completeAmdId = getCompleteAmdId(amd, id);\r\n    const defineParameters = (completeAmdId ? `'${completeAmdId}',${_}` : ``) +\r\n        (deps.length > 0 ? `[${deps.join(`,${_}`)}],${_}` : ``);\r\n    const useStrict = strict ? `${_}'use strict';` : '';\r\n    magicString.prepend(`${intro}${getInteropBlock(dependencies, interop, externalLiveBindings, freeze, symbols, accessedGlobals, t, snippets)}`);\r\n    const exportBlock = getExportBlock$1(exports, dependencies, namedExportsMode, interop, snippets, t, externalLiveBindings, reexportProtoFromExternal);\r\n    let namespaceMarkers = getNamespaceMarkers(namedExportsMode && hasExports, isEntryFacade && (esModule === true || (esModule === 'if-default-prop' && hasDefaultExport)), isModuleFacade && symbols, snippets);\r\n    if (namespaceMarkers) {\r\n        namespaceMarkers = n + n + namespaceMarkers;\r\n    }\r\n    magicString\r\n        .append(`${exportBlock}${namespaceMarkers}${outro}`)\r\n        .indent(t)\r\n        // factory function should be wrapped by parentheses to avoid lazy parsing,\r\n        // cf. https://v8.dev/blog/preparser#pife\r\n        .prepend(`${amd.define}(${defineParameters}(${getNonArrowFunctionIntro(parameters, {\r\n        isAsync: false,\r\n        name: null\r\n    })}{${useStrict}${n}${n}`)\r\n        .append(`${n}${n}}));`);\r\n}\r\n\r\nfunction cjs(magicString, { accessedGlobals, dependencies, exports, hasDefaultExport, hasExports, indent: t, intro, isEntryFacade, isModuleFacade, namedExportsMode, outro, snippets }, { compact, esModule, externalLiveBindings, freeze, interop, generatedCode: { symbols }, reexportProtoFromExternal, strict }) {\r\n    const { _, n } = snippets;\r\n    const useStrict = strict ? `'use strict';${n}${n}` : '';\r\n    let namespaceMarkers = getNamespaceMarkers(namedExportsMode && hasExports, isEntryFacade && (esModule === true || (esModule === 'if-default-prop' && hasDefaultExport)), isModuleFacade && symbols, snippets);\r\n    if (namespaceMarkers) {\r\n        namespaceMarkers += n + n;\r\n    }\r\n    const importBlock = getImportBlock$1(dependencies, snippets, compact);\r\n    const interopBlock = getInteropBlock(dependencies, interop, externalLiveBindings, freeze, symbols, accessedGlobals, t, snippets);\r\n    magicString.prepend(`${useStrict}${intro}${namespaceMarkers}${importBlock}${interopBlock}`);\r\n    const exportBlock = getExportBlock$1(exports, dependencies, namedExportsMode, interop, snippets, t, externalLiveBindings, reexportProtoFromExternal, `module.exports${_}=${_}`);\r\n    magicString.append(`${exportBlock}${outro}`);\r\n}\r\nfunction getImportBlock$1(dependencies, { _, cnst, n }, compact) {\r\n    let importBlock = '';\r\n    let definingVariable = false;\r\n    for (const { importPath, name, reexports, imports } of dependencies) {\r\n        if (!reexports && !imports) {\r\n            if (importBlock) {\r\n                importBlock += compact && !definingVariable ? ',' : `;${n}`;\r\n            }\r\n            definingVariable = false;\r\n            importBlock += `require('${importPath}')`;\r\n        }\r\n        else {\r\n            importBlock += compact && definingVariable ? ',' : `${importBlock ? `;${n}` : ''}${cnst} `;\r\n            definingVariable = true;\r\n            importBlock += `${name}${_}=${_}require('${importPath}')`;\r\n        }\r\n    }\r\n    if (importBlock) {\r\n        return `${importBlock};${n}${n}`;\r\n    }\r\n    return '';\r\n}\r\n\r\nfunction es(magicString, { accessedGlobals, indent: t, intro, outro, dependencies, exports, snippets }, { externalLiveBindings, freeze, generatedCode: { symbols }, importAttributesKey }) {\r\n    const { n } = snippets;\r\n    const importBlock = getImportBlock(dependencies, importAttributesKey, snippets);\r\n    if (importBlock.length > 0)\r\n        intro += importBlock.join(n) + n + n;\r\n    intro += getHelpersBlock(null, accessedGlobals, t, snippets, externalLiveBindings, freeze, symbols);\r\n    if (intro)\r\n        magicString.prepend(intro);\r\n    const exportBlock = getExportBlock(exports, snippets);\r\n    if (exportBlock.length > 0)\r\n        magicString.append(n + n + exportBlock.join(n).trim());\r\n    if (outro)\r\n        magicString.append(outro);\r\n    magicString.trim();\r\n}\r\nfunction getImportBlock(dependencies, importAttributesKey, { _ }) {\r\n    const importBlock = [];\r\n    for (const { importPath, reexports, imports, name, attributes } of dependencies) {\r\n        const assertion = attributes ? `${_}${importAttributesKey}${_}${attributes}` : '';\r\n        const pathWithAssertion = `'${importPath}'${assertion};`;\r\n        if (!reexports && !imports) {\r\n            importBlock.push(`import${_}${pathWithAssertion}`);\r\n            continue;\r\n        }\r\n        if (imports) {\r\n            let defaultImport = null;\r\n            let starImport = null;\r\n            const importedNames = [];\r\n            for (const specifier of imports) {\r\n                if (specifier.imported === 'default') {\r\n                    defaultImport = specifier;\r\n                }\r\n                else if (specifier.imported === '*') {\r\n                    starImport = specifier;\r\n                }\r\n                else {\r\n                    importedNames.push(specifier);\r\n                }\r\n            }\r\n            if (starImport) {\r\n                importBlock.push(`import${_}*${_}as ${starImport.local} from${_}${pathWithAssertion}`);\r\n            }\r\n            if (defaultImport && importedNames.length === 0) {\r\n                importBlock.push(`import ${defaultImport.local} from${_}${pathWithAssertion}`);\r\n            }\r\n            else if (importedNames.length > 0) {\r\n                importBlock.push(`import ${defaultImport ? `${defaultImport.local},${_}` : ''}{${_}${importedNames\r\n                    .map(specifier => specifier.imported === specifier.local\r\n                    ? specifier.imported\r\n                    : `${stringifyIdentifierIfNeeded(specifier.imported)} as ${specifier.local}`)\r\n                    .join(`,${_}`)}${_}}${_}from${_}${pathWithAssertion}`);\r\n            }\r\n        }\r\n        if (reexports) {\r\n            let starExport = null;\r\n            const namespaceReexports = [];\r\n            const namedReexports = [];\r\n            for (const specifier of reexports) {\r\n                if (specifier.reexported === '*') {\r\n                    starExport = specifier;\r\n                }\r\n                else if (specifier.imported === '*') {\r\n                    namespaceReexports.push(specifier);\r\n                }\r\n                else {\r\n                    namedReexports.push(specifier);\r\n                }\r\n            }\r\n            if (starExport) {\r\n                importBlock.push(`export${_}*${_}from${_}${pathWithAssertion}`);\r\n            }\r\n            if (namespaceReexports.length > 0) {\r\n                if (!imports ||\r\n                    !imports.some(specifier => specifier.imported === '*' && specifier.local === name)) {\r\n                    importBlock.push(`import${_}*${_}as ${name} from${_}${pathWithAssertion}`);\r\n                }\r\n                for (const specifier of namespaceReexports) {\r\n                    importBlock.push(`export${_}{${_}${name === specifier.reexported\r\n                        ? name\r\n                        : `${name} as ${stringifyIdentifierIfNeeded(specifier.reexported)}`} };`);\r\n                }\r\n            }\r\n            if (namedReexports.length > 0) {\r\n                importBlock.push(`export${_}{${_}${namedReexports\r\n                    .map(specifier => specifier.imported === specifier.reexported\r\n                    ? stringifyIdentifierIfNeeded(specifier.imported)\r\n                    : `${stringifyIdentifierIfNeeded(specifier.imported)} as ${stringifyIdentifierIfNeeded(specifier.reexported)}`)\r\n                    .join(`,${_}`)}${_}}${_}from${_}${pathWithAssertion}`);\r\n            }\r\n        }\r\n    }\r\n    return importBlock;\r\n}\r\nfunction getExportBlock(exports, { _, cnst }) {\r\n    const exportBlock = [];\r\n    const exportDeclaration = new Array(exports.length);\r\n    let index = 0;\r\n    for (const specifier of exports) {\r\n        if (specifier.expression) {\r\n            exportBlock.push(`${cnst} ${specifier.local}${_}=${_}${specifier.expression};`);\r\n        }\r\n        exportDeclaration[index++] =\r\n            specifier.exported === specifier.local\r\n                ? specifier.local\r\n                : `${specifier.local} as ${stringifyIdentifierIfNeeded(specifier.exported)}`;\r\n    }\r\n    if (exportDeclaration.length > 0) {\r\n        exportBlock.push(`export${_}{${_}${exportDeclaration.join(`,${_}`)}${_}};`);\r\n    }\r\n    return exportBlock;\r\n}\r\n\r\nconst keypath = (keypath, getPropertyAccess) => keypath.split('.').map(getPropertyAccess).join('');\r\n\r\nfunction setupNamespace(name, root, globals, { _, getPropertyAccess, s }, compact, log) {\r\n    const parts = name.split('.');\r\n    // Check if the key exists in the object's prototype.\r\n    const isReserved = parts[0] in Object.prototype;\r\n    if (log && isReserved) {\r\n        log(LOGLEVEL_WARN, logReservedNamespace(parts[0]));\r\n    }\r\n    parts[0] =\r\n        (typeof globals === 'function'\r\n            ? globals(parts[0])\r\n            : isReserved\r\n                ? parts[0]\r\n                : globals[parts[0]]) || parts[0];\r\n    parts.pop();\r\n    let propertyPath = root;\r\n    return (parts\r\n        .map(part => {\r\n        propertyPath += getPropertyAccess(part);\r\n        return `${propertyPath}${_}=${_}${propertyPath}${_}||${_}{}${s}`;\r\n    })\r\n        .join(compact ? ',' : '\\n') + (compact && parts.length > 0 ? ';' : '\\n'));\r\n}\r\nfunction assignToDeepVariable(deepName, root, globals, assignment, { _, getPropertyAccess }, log) {\r\n    const parts = deepName.split('.');\r\n    // Check if the key exists in the object's prototype.\r\n    const isReserved = parts[0] in Object.prototype;\r\n    if (log && isReserved) {\r\n        log(LOGLEVEL_WARN, logReservedNamespace(parts[0]));\r\n    }\r\n    parts[0] =\r\n        (typeof globals === 'function'\r\n            ? globals(parts[0])\r\n            : isReserved\r\n                ? parts[0]\r\n                : globals[parts[0]]) || parts[0];\r\n    const last = parts.pop();\r\n    let propertyPath = root;\r\n    let deepAssignment = [\r\n        ...parts.map(part => {\r\n            propertyPath += getPropertyAccess(part);\r\n            return `${propertyPath}${_}=${_}${propertyPath}${_}||${_}{}`;\r\n        }),\r\n        `${propertyPath}${getPropertyAccess(last)}`\r\n    ].join(`,${_}`) + `${_}=${_}${assignment}`;\r\n    if (parts.length > 0) {\r\n        deepAssignment = `(${deepAssignment})`;\r\n    }\r\n    return deepAssignment;\r\n}\r\n\r\nfunction trimEmptyImports(dependencies) {\r\n    let index = dependencies.length;\r\n    while (index--) {\r\n        const { imports, reexports } = dependencies[index];\r\n        if (imports || reexports) {\r\n            return dependencies.slice(0, index + 1);\r\n        }\r\n    }\r\n    return [];\r\n}\r\n\r\nfunction iife(magicString, { accessedGlobals, dependencies, exports, hasDefaultExport, hasExports, indent: t, intro, namedExportsMode, log, outro, snippets }, { compact, esModule, extend, freeze, externalLiveBindings, reexportProtoFromExternal, globals, interop, name, generatedCode: { symbols }, strict }) {\r\n    const { _, getNonArrowFunctionIntro, getPropertyAccess, n } = snippets;\r\n    const isNamespaced = name && name.includes('.');\r\n    const useVariableAssignment = !extend && !isNamespaced;\r\n    if (name && useVariableAssignment && !isLegal(name)) {\r\n        return error(logIllegalIdentifierAsName(name));\r\n    }\r\n    warnOnBuiltins(log, dependencies);\r\n    const external = trimEmptyImports(dependencies);\r\n    const deps = external.map(dep => dep.globalName || 'null');\r\n    const parameters = external.map(m => m.name);\r\n    if (hasExports && !name) {\r\n        log(LOGLEVEL_WARN, logMissingNameOptionForIifeExport());\r\n    }\r\n    if (hasExports && (namedExportsMode || exports[0]?.local === 'exports.default')) {\r\n        if (extend) {\r\n            deps.unshift(`this${keypath(name, getPropertyAccess)}${_}=${_}this${keypath(name, getPropertyAccess)}${_}||${_}{}`);\r\n            parameters.unshift('exports');\r\n        }\r\n        else {\r\n            deps.unshift('{}');\r\n            parameters.unshift('exports');\r\n        }\r\n    }\r\n    const useStrict = strict ? `${t}'use strict';${n}` : '';\r\n    const interopBlock = getInteropBlock(dependencies, interop, externalLiveBindings, freeze, symbols, accessedGlobals, t, snippets);\r\n    magicString.prepend(`${intro}${interopBlock}`);\r\n    let wrapperIntro = `(${getNonArrowFunctionIntro(parameters, {\r\n        isAsync: false,\r\n        name: null\r\n    })}{${n}${useStrict}${n}`;\r\n    if (hasExports) {\r\n        if (name && !(extend && namedExportsMode)) {\r\n            wrapperIntro =\r\n                (useVariableAssignment ? `var ${name}` : `this${keypath(name, getPropertyAccess)}`) +\r\n                    `${_}=${_}${wrapperIntro}`;\r\n        }\r\n        if (isNamespaced) {\r\n            wrapperIntro = setupNamespace(name, 'this', globals, snippets, compact, log) + wrapperIntro;\r\n        }\r\n    }\r\n    let wrapperOutro = `${n}${n}})(${deps.join(`,${_}`)});`;\r\n    if (hasExports && !extend && namedExportsMode) {\r\n        wrapperOutro = `${n}${n}${t}return exports;${wrapperOutro}`;\r\n    }\r\n    const exportBlock = getExportBlock$1(exports, dependencies, namedExportsMode, interop, snippets, t, externalLiveBindings, reexportProtoFromExternal);\r\n    let namespaceMarkers = getNamespaceMarkers(namedExportsMode && hasExports, esModule === true || (esModule === 'if-default-prop' && hasDefaultExport), symbols, snippets);\r\n    if (namespaceMarkers) {\r\n        namespaceMarkers = n + n + namespaceMarkers;\r\n    }\r\n    magicString\r\n        .append(`${exportBlock}${namespaceMarkers}${outro}`)\r\n        .indent(t)\r\n        .prepend(wrapperIntro)\r\n        .append(wrapperOutro);\r\n}\r\n\r\nconst MISSING_EXPORT_SHIM_VARIABLE = '_missingExportShim';\r\n\r\nfunction system(magicString, { accessedGlobals, dependencies, exports, hasExports, indent: t, intro, snippets, outro, usesTopLevelAwait }, { externalLiveBindings, freeze, name, generatedCode: { symbols }, strict, systemNullSetters }) {\r\n    const { _, getFunctionIntro, getNonArrowFunctionIntro, n, s } = snippets;\r\n    const { importBindings, setters, starExcludes } = analyzeDependencies(dependencies, exports, t, snippets);\r\n    const registeredName = name ? `'${name}',${_}` : '';\r\n    const wrapperParameters = accessedGlobals.has('module')\r\n        ? ['exports', 'module']\r\n        : hasExports\r\n            ? ['exports']\r\n            : [];\r\n    // factory function should be wrapped by parentheses to avoid lazy parsing,\r\n    // cf. https://v8.dev/blog/preparser#pife\r\n    let wrapperStart = `System.register(${registeredName}[` +\r\n        dependencies.map(({ importPath }) => `'${importPath}'`).join(`,${_}`) +\r\n        `],${_}(${getNonArrowFunctionIntro(wrapperParameters, {\r\n            isAsync: false,\r\n            name: null\r\n        })}{${n}${t}${strict ? \"'use strict';\" : ''}` +\r\n        getStarExcludesBlock(starExcludes, t, snippets) +\r\n        getImportBindingsBlock(importBindings, t, snippets) +\r\n        `${n}${t}return${_}{${setters.length > 0\r\n            ? `${n}${t}${t}setters:${_}[${setters\r\n                .map(setter => setter\r\n                ? `${getFunctionIntro(['module'], {\r\n                    isAsync: false,\r\n                    name: null\r\n                })}{${n}${t}${t}${t}${setter}${n}${t}${t}}`\r\n                : systemNullSetters\r\n                    ? `null`\r\n                    : `${getFunctionIntro([], { isAsync: false, name: null })}{}`)\r\n                .join(`,${_}`)}],`\r\n            : ''}${n}`;\r\n    wrapperStart += `${t}${t}execute:${_}(${getNonArrowFunctionIntro([], {\r\n        isAsync: usesTopLevelAwait,\r\n        name: null\r\n    })}{${n}${n}`;\r\n    const wrapperEnd = `${t}${t}})${n}${t}}${s}${n}}));`;\r\n    magicString\r\n        .prepend(intro +\r\n        getHelpersBlock(null, accessedGlobals, t, snippets, externalLiveBindings, freeze, symbols) +\r\n        getHoistedExportsBlock(exports, t, snippets))\r\n        .append(`${outro}${n}${n}` +\r\n        getSyntheticExportsBlock(exports, t, snippets) +\r\n        getMissingExportsBlock(exports, t, snippets))\r\n        .indent(`${t}${t}${t}`)\r\n        .append(wrapperEnd)\r\n        .prepend(wrapperStart);\r\n}\r\nfunction analyzeDependencies(dependencies, exports, t, { _, cnst, getObject, getPropertyAccess, n }) {\r\n    const importBindings = [];\r\n    const setters = [];\r\n    let starExcludes = null;\r\n    for (const { imports, reexports } of dependencies) {\r\n        const setter = [];\r\n        if (imports) {\r\n            for (const specifier of imports) {\r\n                importBindings.push(specifier.local);\r\n                if (specifier.imported === '*') {\r\n                    setter.push(`${specifier.local}${_}=${_}module;`);\r\n                }\r\n                else {\r\n                    setter.push(`${specifier.local}${_}=${_}module${getPropertyAccess(specifier.imported)};`);\r\n                }\r\n            }\r\n        }\r\n        if (reexports) {\r\n            const reexportedNames = [];\r\n            let hasStarReexport = false;\r\n            for (const { imported, reexported } of reexports) {\r\n                if (reexported === '*') {\r\n                    hasStarReexport = true;\r\n                }\r\n                else {\r\n                    reexportedNames.push([\r\n                        reexported,\r\n                        imported === '*' ? 'module' : `module${getPropertyAccess(imported)}`\r\n                    ]);\r\n                }\r\n            }\r\n            if (reexportedNames.length > 1 || hasStarReexport) {\r\n                if (hasStarReexport) {\r\n                    if (!starExcludes) {\r\n                        starExcludes = getStarExcludes({ dependencies, exports });\r\n                    }\r\n                    reexportedNames.unshift([null, `__proto__:${_}null`]);\r\n                    const exportMapping = getObject(reexportedNames, { lineBreakIndent: null });\r\n                    setter.push(`${cnst} setter${_}=${_}${exportMapping};`, `for${_}(${cnst} name in module)${_}{`, `${t}if${_}(!_starExcludes[name])${_}setter[name]${_}=${_}module[name];`, '}', 'exports(setter);');\r\n                }\r\n                else {\r\n                    const exportMapping = getObject(reexportedNames, { lineBreakIndent: null });\r\n                    setter.push(`exports(${exportMapping});`);\r\n                }\r\n            }\r\n            else {\r\n                const [key, value] = reexportedNames[0];\r\n                setter.push(`exports(${JSON.stringify(key)},${_}${value});`);\r\n            }\r\n        }\r\n        setters.push(setter.join(`${n}${t}${t}${t}`));\r\n    }\r\n    return { importBindings, setters, starExcludes };\r\n}\r\nconst getStarExcludes = ({ dependencies, exports }) => {\r\n    const starExcludes = new Set(exports.map(expt => expt.exported));\r\n    starExcludes.add('default');\r\n    for (const { reexports } of dependencies) {\r\n        if (reexports) {\r\n            for (const reexport of reexports) {\r\n                if (reexport.reexported !== '*')\r\n                    starExcludes.add(reexport.reexported);\r\n            }\r\n        }\r\n    }\r\n    return starExcludes;\r\n};\r\nconst getStarExcludesBlock = (starExcludes, t, { _, cnst, getObject, n }) => {\r\n    if (starExcludes) {\r\n        const fields = [...starExcludes].map(property => [\r\n            property,\r\n            '1'\r\n        ]);\r\n        fields.unshift([null, `__proto__:${_}null`]);\r\n        return `${n}${t}${cnst} _starExcludes${_}=${_}${getObject(fields, {\r\n            lineBreakIndent: { base: t, t }\r\n        })};`;\r\n    }\r\n    return '';\r\n};\r\nconst getImportBindingsBlock = (importBindings, t, { _, n }) => (importBindings.length > 0 ? `${n}${t}var ${importBindings.join(`,${_}`)};` : '');\r\nconst getHoistedExportsBlock = (exports, t, snippets) => getExportsBlock(exports.filter(expt => expt.hoisted).map(expt => ({ name: expt.exported, value: expt.local })), t, snippets);\r\nfunction getExportsBlock(exports, t, { _, n }) {\r\n    if (exports.length === 0) {\r\n        return '';\r\n    }\r\n    if (exports.length === 1) {\r\n        return `exports(${JSON.stringify(exports[0].name)},${_}${exports[0].value});${n}${n}`;\r\n    }\r\n    return (`exports({${n}` +\r\n        exports\r\n            .map(({ name, value }) => `${t}${stringifyObjectKeyIfNeeded(name)}:${_}${value}`)\r\n            .join(`,${n}`) +\r\n        `${n}});${n}${n}`);\r\n}\r\nconst getSyntheticExportsBlock = (exports, t, snippets) => getExportsBlock(exports\r\n    .filter(expt => expt.expression)\r\n    .map(expt => ({ name: expt.exported, value: expt.local })), t, snippets);\r\nconst getMissingExportsBlock = (exports, t, snippets) => getExportsBlock(exports\r\n    .filter(expt => expt.local === MISSING_EXPORT_SHIM_VARIABLE)\r\n    .map(expt => ({ name: expt.exported, value: MISSING_EXPORT_SHIM_VARIABLE })), t, snippets);\r\n\r\nfunction globalProperty(name, globalVariable, getPropertyAccess) {\r\n    if (!name)\r\n        return 'null';\r\n    return `${globalVariable}${keypath(name, getPropertyAccess)}`;\r\n}\r\nfunction safeAccess(name, globalVariable, { _, getPropertyAccess }) {\r\n    let propertyPath = globalVariable;\r\n    return name\r\n        .split('.')\r\n        .map(part => (propertyPath += getPropertyAccess(part)))\r\n        .join(`${_}&&${_}`);\r\n}\r\nfunction umd(magicString, { accessedGlobals, dependencies, exports, hasDefaultExport, hasExports, id, indent: t, intro, namedExportsMode, log, outro, snippets }, { amd, compact, esModule, extend, externalLiveBindings, freeze, interop, name, generatedCode: { symbols }, globals, noConflict, reexportProtoFromExternal, strict }) {\r\n    const { _, cnst, getFunctionIntro, getNonArrowFunctionIntro, getPropertyAccess, n, s } = snippets;\r\n    const factoryVariable = compact ? 'f' : 'factory';\r\n    const globalVariable = compact ? 'g' : 'global';\r\n    if (hasExports && !name) {\r\n        return error(logMissingNameOptionForUmdExport());\r\n    }\r\n    warnOnBuiltins(log, dependencies);\r\n    const amdDeps = dependencies.map(m => `'${updateExtensionForRelativeAmdId(m.importPath, amd.forceJsExtensionForImports)}'`);\r\n    const cjsDeps = dependencies.map(m => `require('${m.importPath}')`);\r\n    const trimmedImports = trimEmptyImports(dependencies);\r\n    const globalDeps = trimmedImports.map(module => globalProperty(module.globalName, globalVariable, getPropertyAccess));\r\n    const factoryParameters = trimmedImports.map(m => m.name);\r\n    if ((hasExports || noConflict) &&\r\n        (namedExportsMode || (hasExports && exports[0]?.local === 'exports.default'))) {\r\n        amdDeps.unshift(`'exports'`);\r\n        cjsDeps.unshift(`exports`);\r\n        globalDeps.unshift(assignToDeepVariable(name, globalVariable, globals, `${extend ? `${globalProperty(name, globalVariable, getPropertyAccess)}${_}||${_}` : ''}{}`, snippets, log));\r\n        factoryParameters.unshift('exports');\r\n    }\r\n    const completeAmdId = getCompleteAmdId(amd, id);\r\n    const amdParameters = (completeAmdId ? `'${completeAmdId}',${_}` : ``) +\r\n        (amdDeps.length > 0 ? `[${amdDeps.join(`,${_}`)}],${_}` : ``);\r\n    const define = amd.define;\r\n    const cjsExport = !namedExportsMode && hasExports ? `module.exports${_}=${_}` : ``;\r\n    const useStrict = strict ? `${_}'use strict';${n}` : ``;\r\n    let iifeExport;\r\n    if (noConflict) {\r\n        const noConflictExportsVariable = compact ? 'e' : 'exports';\r\n        let factory;\r\n        if (!namedExportsMode && hasExports) {\r\n            factory = `${cnst} ${noConflictExportsVariable}${_}=${_}${assignToDeepVariable(name, globalVariable, globals, `${factoryVariable}(${globalDeps.join(`,${_}`)})`, snippets, log)};`;\r\n        }\r\n        else {\r\n            const module = globalDeps.shift();\r\n            factory =\r\n                `${cnst} ${noConflictExportsVariable}${_}=${_}${module};${n}` +\r\n                    `${t}${t}${factoryVariable}(${[noConflictExportsVariable, ...globalDeps].join(`,${_}`)});`;\r\n        }\r\n        iifeExport =\r\n            `(${getFunctionIntro([], { isAsync: false, name: null })}{${n}` +\r\n                `${t}${t}${cnst} current${_}=${_}${safeAccess(name, globalVariable, snippets)};${n}` +\r\n                `${t}${t}${factory}${n}` +\r\n                `${t}${t}${noConflictExportsVariable}.noConflict${_}=${_}${getFunctionIntro([], {\r\n                    isAsync: false,\r\n                    name: null\r\n                })}{${_}` +\r\n                `${globalProperty(name, globalVariable, getPropertyAccess)}${_}=${_}current;${_}return ${noConflictExportsVariable}${s}${_}};${n}` +\r\n                `${t}})()`;\r\n    }\r\n    else {\r\n        iifeExport = `${factoryVariable}(${globalDeps.join(`,${_}`)})`;\r\n        if (!namedExportsMode && hasExports) {\r\n            iifeExport = assignToDeepVariable(name, globalVariable, globals, iifeExport, snippets, log);\r\n        }\r\n    }\r\n    const iifeNeedsGlobal = hasExports || (noConflict && namedExportsMode) || globalDeps.length > 0;\r\n    const wrapperParameters = [factoryVariable];\r\n    if (iifeNeedsGlobal) {\r\n        wrapperParameters.unshift(globalVariable);\r\n    }\r\n    const globalArgument = iifeNeedsGlobal ? `this,${_}` : '';\r\n    const iifeStart = iifeNeedsGlobal\r\n        ? `(${globalVariable}${_}=${_}typeof globalThis${_}!==${_}'undefined'${_}?${_}globalThis${_}:${_}${globalVariable}${_}||${_}self,${_}`\r\n        : '';\r\n    const iifeEnd = iifeNeedsGlobal ? ')' : '';\r\n    const cjsIntro = iifeNeedsGlobal\r\n        ? `${t}typeof exports${_}===${_}'object'${_}&&${_}typeof module${_}!==${_}'undefined'${_}?` +\r\n            `${_}${cjsExport}${factoryVariable}(${cjsDeps.join(`,${_}`)})${_}:${n}`\r\n        : '';\r\n    const wrapperIntro = `(${getNonArrowFunctionIntro(wrapperParameters, { isAsync: false, name: null })}{${n}` +\r\n        cjsIntro +\r\n        `${t}typeof ${define}${_}===${_}'function'${_}&&${_}${define}.amd${_}?${_}${define}(${amdParameters}${factoryVariable})${_}:${n}` +\r\n        `${t}${iifeStart}${iifeExport}${iifeEnd};${n}` +\r\n        // factory function should be wrapped by parentheses to avoid lazy parsing,\r\n        // cf. https://v8.dev/blog/preparser#pife\r\n        `})(${globalArgument}(${getNonArrowFunctionIntro(factoryParameters, {\r\n            isAsync: false,\r\n            name: null\r\n        })}{${useStrict}${n}`;\r\n    const wrapperOutro = n + n + '}));';\r\n    magicString.prepend(`${intro}${getInteropBlock(dependencies, interop, externalLiveBindings, freeze, symbols, accessedGlobals, t, snippets)}`);\r\n    const exportBlock = getExportBlock$1(exports, dependencies, namedExportsMode, interop, snippets, t, externalLiveBindings, reexportProtoFromExternal);\r\n    let namespaceMarkers = getNamespaceMarkers(namedExportsMode && hasExports, esModule === true || (esModule === 'if-default-prop' && hasDefaultExport), symbols, snippets);\r\n    if (namespaceMarkers) {\r\n        namespaceMarkers = n + n + namespaceMarkers;\r\n    }\r\n    magicString\r\n        .append(`${exportBlock}${namespaceMarkers}${outro}`)\r\n        .trim()\r\n        .indent(t)\r\n        .append(wrapperOutro)\r\n        .prepend(wrapperIntro);\r\n}\r\n\r\nconst finalisers = { amd, cjs, es, iife, system, umd };\r\n\r\nfunction getDefaultExportFromCjs (x) {\r\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\r\n}\r\n\r\nfunction getAugmentedNamespace(n) {\r\n  if (Object.prototype.hasOwnProperty.call(n, '__esModule')) return n;\r\n  var f = n.default;\r\n\tif (typeof f == \"function\") {\r\n\t\tvar a = function a () {\r\n\t\t\tvar isInstance = false;\r\n      try {\r\n        isInstance = this instanceof a;\r\n      } catch {}\r\n\t\t\tif (isInstance) {\r\n        return Reflect.construct(f, arguments, this.constructor);\r\n\t\t\t}\r\n\t\t\treturn f.apply(this, arguments);\r\n\t\t};\r\n\t\ta.prototype = f.prototype;\r\n  } else a = {};\r\n  Object.defineProperty(a, '__esModule', {value: true});\r\n\tObject.keys(n).forEach(function (k) {\r\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\r\n\t\tObject.defineProperty(a, k, d.get ? d : {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function () {\r\n\t\t\t\treturn n[k];\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn a;\r\n}\r\n\r\nvar utils = {};\r\n\r\nvar constants;\r\nvar hasRequiredConstants;\r\n\r\nfunction requireConstants () {\r\n\tif (hasRequiredConstants) return constants;\r\n\thasRequiredConstants = 1;\r\n\r\n\tconst WIN_SLASH = '\\\\\\\\/';\r\n\tconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\r\n\r\n\t/**\r\n\t * Posix glob regex\r\n\t */\r\n\r\n\tconst DOT_LITERAL = '\\\\.';\r\n\tconst PLUS_LITERAL = '\\\\+';\r\n\tconst QMARK_LITERAL = '\\\\?';\r\n\tconst SLASH_LITERAL = '\\\\/';\r\n\tconst ONE_CHAR = '(?=.)';\r\n\tconst QMARK = '[^/]';\r\n\tconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\r\n\tconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\r\n\tconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\r\n\tconst NO_DOT = `(?!${DOT_LITERAL})`;\r\n\tconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\r\n\tconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\r\n\tconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\r\n\tconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\r\n\tconst STAR = `${QMARK}*?`;\r\n\tconst SEP = '/';\r\n\r\n\tconst POSIX_CHARS = {\r\n\t  DOT_LITERAL,\r\n\t  PLUS_LITERAL,\r\n\t  QMARK_LITERAL,\r\n\t  SLASH_LITERAL,\r\n\t  ONE_CHAR,\r\n\t  QMARK,\r\n\t  END_ANCHOR,\r\n\t  DOTS_SLASH,\r\n\t  NO_DOT,\r\n\t  NO_DOTS,\r\n\t  NO_DOT_SLASH,\r\n\t  NO_DOTS_SLASH,\r\n\t  QMARK_NO_DOT,\r\n\t  STAR,\r\n\t  START_ANCHOR,\r\n\t  SEP\r\n\t};\r\n\r\n\t/**\r\n\t * Windows glob regex\r\n\t */\r\n\r\n\tconst WINDOWS_CHARS = {\r\n\t  ...POSIX_CHARS,\r\n\r\n\t  SLASH_LITERAL: `[${WIN_SLASH}]`,\r\n\t  QMARK: WIN_NO_SLASH,\r\n\t  STAR: `${WIN_NO_SLASH}*?`,\r\n\t  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\r\n\t  NO_DOT: `(?!${DOT_LITERAL})`,\r\n\t  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\r\n\t  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\r\n\t  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\r\n\t  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\r\n\t  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\r\n\t  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`,\r\n\t  SEP: '\\\\'\r\n\t};\r\n\r\n\t/**\r\n\t * POSIX Bracket Regex\r\n\t */\r\n\r\n\tconst POSIX_REGEX_SOURCE = {\r\n\t  alnum: 'a-zA-Z0-9',\r\n\t  alpha: 'a-zA-Z',\r\n\t  ascii: '\\\\x00-\\\\x7F',\r\n\t  blank: ' \\\\t',\r\n\t  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\r\n\t  digit: '0-9',\r\n\t  graph: '\\\\x21-\\\\x7E',\r\n\t  lower: 'a-z',\r\n\t  print: '\\\\x20-\\\\x7E ',\r\n\t  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\r\n\t  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\r\n\t  upper: 'A-Z',\r\n\t  word: 'A-Za-z0-9_',\r\n\t  xdigit: 'A-Fa-f0-9'\r\n\t};\r\n\r\n\tconstants = {\r\n\t  MAX_LENGTH: 1024 * 64,\r\n\t  POSIX_REGEX_SOURCE,\r\n\r\n\t  // regular expressions\r\n\t  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\r\n\t  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\r\n\t  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\r\n\t  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\r\n\t  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\r\n\t  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\r\n\r\n\t  // Replace globs with equivalent patterns to reduce parsing time.\r\n\t  REPLACEMENTS: {\r\n\t    __proto__: null,\r\n\t    '***': '*',\r\n\t    '**/**': '**',\r\n\t    '**/**/**': '**'\r\n\t  },\r\n\r\n\t  // Digits\r\n\t  CHAR_0: 48, /* 0 */\r\n\t  CHAR_9: 57, /* 9 */\r\n\r\n\t  // Alphabet chars.\r\n\t  CHAR_UPPERCASE_A: 65, /* A */\r\n\t  CHAR_LOWERCASE_A: 97, /* a */\r\n\t  CHAR_UPPERCASE_Z: 90, /* Z */\r\n\t  CHAR_LOWERCASE_Z: 122, /* z */\r\n\r\n\t  CHAR_LEFT_PARENTHESES: 40, /* ( */\r\n\t  CHAR_RIGHT_PARENTHESES: 41, /* ) */\r\n\r\n\t  CHAR_ASTERISK: 42, /* * */\r\n\r\n\t  // Non-alphabetic chars.\r\n\t  CHAR_AMPERSAND: 38, /* & */\r\n\t  CHAR_AT: 64, /* @ */\r\n\t  CHAR_BACKWARD_SLASH: 92, /* \\ */\r\n\t  CHAR_CARRIAGE_RETURN: 13, /* \\r */\r\n\t  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\r\n\t  CHAR_COLON: 58, /* : */\r\n\t  CHAR_COMMA: 44, /* , */\r\n\t  CHAR_DOT: 46, /* . */\r\n\t  CHAR_DOUBLE_QUOTE: 34, /* \" */\r\n\t  CHAR_EQUAL: 61, /* = */\r\n\t  CHAR_EXCLAMATION_MARK: 33, /* ! */\r\n\t  CHAR_FORM_FEED: 12, /* \\f */\r\n\t  CHAR_FORWARD_SLASH: 47, /* / */\r\n\t  CHAR_GRAVE_ACCENT: 96, /* ` */\r\n\t  CHAR_HASH: 35, /* # */\r\n\t  CHAR_HYPHEN_MINUS: 45, /* - */\r\n\t  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\r\n\t  CHAR_LEFT_CURLY_BRACE: 123, /* { */\r\n\t  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\r\n\t  CHAR_LINE_FEED: 10, /* \\n */\r\n\t  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\r\n\t  CHAR_PERCENT: 37, /* % */\r\n\t  CHAR_PLUS: 43, /* + */\r\n\t  CHAR_QUESTION_MARK: 63, /* ? */\r\n\t  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\r\n\t  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\r\n\t  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\r\n\t  CHAR_SEMICOLON: 59, /* ; */\r\n\t  CHAR_SINGLE_QUOTE: 39, /* ' */\r\n\t  CHAR_SPACE: 32, /*   */\r\n\t  CHAR_TAB: 9, /* \\t */\r\n\t  CHAR_UNDERSCORE: 95, /* _ */\r\n\t  CHAR_VERTICAL_LINE: 124, /* | */\r\n\t  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\r\n\r\n\t  /**\r\n\t   * Create EXTGLOB_CHARS\r\n\t   */\r\n\r\n\t  extglobChars(chars) {\r\n\t    return {\r\n\t      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\r\n\t      '?': { type: 'qmark', open: '(?:', close: ')?' },\r\n\t      '+': { type: 'plus', open: '(?:', close: ')+' },\r\n\t      '*': { type: 'star', open: '(?:', close: ')*' },\r\n\t      '@': { type: 'at', open: '(?:', close: ')' }\r\n\t    };\r\n\t  },\r\n\r\n\t  /**\r\n\t   * Create GLOB_CHARS\r\n\t   */\r\n\r\n\t  globChars(win32) {\r\n\t    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\r\n\t  }\r\n\t};\r\n\treturn constants;\r\n}\r\n\r\n/*global navigator*/\r\n\r\nvar hasRequiredUtils;\r\n\r\nfunction requireUtils () {\r\n\tif (hasRequiredUtils) return utils;\r\n\thasRequiredUtils = 1;\r\n\t(function (exports) {\r\n\r\n\t\tconst {\r\n\t\t  REGEX_BACKSLASH,\r\n\t\t  REGEX_REMOVE_BACKSLASH,\r\n\t\t  REGEX_SPECIAL_CHARS,\r\n\t\t  REGEX_SPECIAL_CHARS_GLOBAL\r\n\t\t} = /*@__PURE__*/ requireConstants();\r\n\r\n\t\texports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\r\n\t\texports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\r\n\t\texports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\r\n\t\texports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\r\n\t\texports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\r\n\r\n\t\texports.isWindows = () => {\r\n\t\t  if (typeof navigator !== 'undefined' && navigator.platform) {\r\n\t\t    const platform = navigator.platform.toLowerCase();\r\n\t\t    return platform === 'win32' || platform === 'windows';\r\n\t\t  }\r\n\r\n\t\t  if (typeof process !== 'undefined' && process.platform) {\r\n\t\t    return process.platform === 'win32';\r\n\t\t  }\r\n\r\n\t\t  return false;\r\n\t\t};\r\n\r\n\t\texports.removeBackslashes = str => {\r\n\t\t  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\r\n\t\t    return match === '\\\\' ? '' : match;\r\n\t\t  });\r\n\t\t};\r\n\r\n\t\texports.escapeLast = (input, char, lastIdx) => {\r\n\t\t  const idx = input.lastIndexOf(char, lastIdx);\r\n\t\t  if (idx === -1) return input;\r\n\t\t  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\r\n\t\t  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\r\n\t\t};\r\n\r\n\t\texports.removePrefix = (input, state = {}) => {\r\n\t\t  let output = input;\r\n\t\t  if (output.startsWith('./')) {\r\n\t\t    output = output.slice(2);\r\n\t\t    state.prefix = './';\r\n\t\t  }\r\n\t\t  return output;\r\n\t\t};\r\n\r\n\t\texports.wrapOutput = (input, state = {}, options = {}) => {\r\n\t\t  const prepend = options.contains ? '' : '^';\r\n\t\t  const append = options.contains ? '' : '$';\r\n\r\n\t\t  let output = `${prepend}(?:${input})${append}`;\r\n\t\t  if (state.negated === true) {\r\n\t\t    output = `(?:^(?!${output}).*$)`;\r\n\t\t  }\r\n\t\t  return output;\r\n\t\t};\r\n\r\n\t\texports.basename = (path, { windows } = {}) => {\r\n\t\t  const segs = path.split(windows ? /[\\\\/]/ : '/');\r\n\t\t  const last = segs[segs.length - 1];\r\n\r\n\t\t  if (last === '') {\r\n\t\t    return segs[segs.length - 2];\r\n\t\t  }\r\n\r\n\t\t  return last;\r\n\t\t}; \r\n\t} (utils));\r\n\treturn utils;\r\n}\r\n\r\nvar scan_1;\r\nvar hasRequiredScan;\r\n\r\nfunction requireScan () {\r\n\tif (hasRequiredScan) return scan_1;\r\n\thasRequiredScan = 1;\r\n\r\n\tconst utils = /*@__PURE__*/ requireUtils();\r\n\tconst {\r\n\t  CHAR_ASTERISK,             /* * */\r\n\t  CHAR_AT,                   /* @ */\r\n\t  CHAR_BACKWARD_SLASH,       /* \\ */\r\n\t  CHAR_COMMA,                /* , */\r\n\t  CHAR_DOT,                  /* . */\r\n\t  CHAR_EXCLAMATION_MARK,     /* ! */\r\n\t  CHAR_FORWARD_SLASH,        /* / */\r\n\t  CHAR_LEFT_CURLY_BRACE,     /* { */\r\n\t  CHAR_LEFT_PARENTHESES,     /* ( */\r\n\t  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\r\n\t  CHAR_PLUS,                 /* + */\r\n\t  CHAR_QUESTION_MARK,        /* ? */\r\n\t  CHAR_RIGHT_CURLY_BRACE,    /* } */\r\n\t  CHAR_RIGHT_PARENTHESES,    /* ) */\r\n\t  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\r\n\t} = /*@__PURE__*/ requireConstants();\r\n\r\n\tconst isPathSeparator = code => {\r\n\t  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\r\n\t};\r\n\r\n\tconst depth = token => {\r\n\t  if (token.isPrefix !== true) {\r\n\t    token.depth = token.isGlobstar ? Infinity : 1;\r\n\t  }\r\n\t};\r\n\r\n\t/**\r\n\t * Quickly scans a glob pattern and returns an object with a handful of\r\n\t * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\r\n\t * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\r\n\t * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\r\n\t *\r\n\t * ```js\r\n\t * const pm = require('picomatch');\r\n\t * console.log(pm.scan('foo/bar/*.js'));\r\n\t * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\r\n\t * ```\r\n\t * @param {String} `str`\r\n\t * @param {Object} `options`\r\n\t * @return {Object} Returns an object with tokens and regex source string.\r\n\t * @api public\r\n\t */\r\n\r\n\tconst scan = (input, options) => {\r\n\t  const opts = options || {};\r\n\r\n\t  const length = input.length - 1;\r\n\t  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\r\n\t  const slashes = [];\r\n\t  const tokens = [];\r\n\t  const parts = [];\r\n\r\n\t  let str = input;\r\n\t  let index = -1;\r\n\t  let start = 0;\r\n\t  let lastIndex = 0;\r\n\t  let isBrace = false;\r\n\t  let isBracket = false;\r\n\t  let isGlob = false;\r\n\t  let isExtglob = false;\r\n\t  let isGlobstar = false;\r\n\t  let braceEscaped = false;\r\n\t  let backslashes = false;\r\n\t  let negated = false;\r\n\t  let negatedExtglob = false;\r\n\t  let finished = false;\r\n\t  let braces = 0;\r\n\t  let prev;\r\n\t  let code;\r\n\t  let token = { value: '', depth: 0, isGlob: false };\r\n\r\n\t  const eos = () => index >= length;\r\n\t  const peek = () => str.charCodeAt(index + 1);\r\n\t  const advance = () => {\r\n\t    prev = code;\r\n\t    return str.charCodeAt(++index);\r\n\t  };\r\n\r\n\t  while (index < length) {\r\n\t    code = advance();\r\n\t    let next;\r\n\r\n\t    if (code === CHAR_BACKWARD_SLASH) {\r\n\t      backslashes = token.backslashes = true;\r\n\t      code = advance();\r\n\r\n\t      if (code === CHAR_LEFT_CURLY_BRACE) {\r\n\t        braceEscaped = true;\r\n\t      }\r\n\t      continue;\r\n\t    }\r\n\r\n\t    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\r\n\t      braces++;\r\n\r\n\t      while (eos() !== true && (code = advance())) {\r\n\t        if (code === CHAR_BACKWARD_SLASH) {\r\n\t          backslashes = token.backslashes = true;\r\n\t          advance();\r\n\t          continue;\r\n\t        }\r\n\r\n\t        if (code === CHAR_LEFT_CURLY_BRACE) {\r\n\t          braces++;\r\n\t          continue;\r\n\t        }\r\n\r\n\t        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\r\n\t          isBrace = token.isBrace = true;\r\n\t          isGlob = token.isGlob = true;\r\n\t          finished = true;\r\n\r\n\t          if (scanToEnd === true) {\r\n\t            continue;\r\n\t          }\r\n\r\n\t          break;\r\n\t        }\r\n\r\n\t        if (braceEscaped !== true && code === CHAR_COMMA) {\r\n\t          isBrace = token.isBrace = true;\r\n\t          isGlob = token.isGlob = true;\r\n\t          finished = true;\r\n\r\n\t          if (scanToEnd === true) {\r\n\t            continue;\r\n\t          }\r\n\r\n\t          break;\r\n\t        }\r\n\r\n\t        if (code === CHAR_RIGHT_CURLY_BRACE) {\r\n\t          braces--;\r\n\r\n\t          if (braces === 0) {\r\n\t            braceEscaped = false;\r\n\t            isBrace = token.isBrace = true;\r\n\t            finished = true;\r\n\t            break;\r\n\t          }\r\n\t        }\r\n\t      }\r\n\r\n\t      if (scanToEnd === true) {\r\n\t        continue;\r\n\t      }\r\n\r\n\t      break;\r\n\t    }\r\n\r\n\t    if (code === CHAR_FORWARD_SLASH) {\r\n\t      slashes.push(index);\r\n\t      tokens.push(token);\r\n\t      token = { value: '', depth: 0, isGlob: false };\r\n\r\n\t      if (finished === true) continue;\r\n\t      if (prev === CHAR_DOT && index === (start + 1)) {\r\n\t        start += 2;\r\n\t        continue;\r\n\t      }\r\n\r\n\t      lastIndex = index + 1;\r\n\t      continue;\r\n\t    }\r\n\r\n\t    if (opts.noext !== true) {\r\n\t      const isExtglobChar = code === CHAR_PLUS\r\n\t        || code === CHAR_AT\r\n\t        || code === CHAR_ASTERISK\r\n\t        || code === CHAR_QUESTION_MARK\r\n\t        || code === CHAR_EXCLAMATION_MARK;\r\n\r\n\t      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\r\n\t        isGlob = token.isGlob = true;\r\n\t        isExtglob = token.isExtglob = true;\r\n\t        finished = true;\r\n\t        if (code === CHAR_EXCLAMATION_MARK && index === start) {\r\n\t          negatedExtglob = true;\r\n\t        }\r\n\r\n\t        if (scanToEnd === true) {\r\n\t          while (eos() !== true && (code = advance())) {\r\n\t            if (code === CHAR_BACKWARD_SLASH) {\r\n\t              backslashes = token.backslashes = true;\r\n\t              code = advance();\r\n\t              continue;\r\n\t            }\r\n\r\n\t            if (code === CHAR_RIGHT_PARENTHESES) {\r\n\t              isGlob = token.isGlob = true;\r\n\t              finished = true;\r\n\t              break;\r\n\t            }\r\n\t          }\r\n\t          continue;\r\n\t        }\r\n\t        break;\r\n\t      }\r\n\t    }\r\n\r\n\t    if (code === CHAR_ASTERISK) {\r\n\t      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\r\n\t      isGlob = token.isGlob = true;\r\n\t      finished = true;\r\n\r\n\t      if (scanToEnd === true) {\r\n\t        continue;\r\n\t      }\r\n\t      break;\r\n\t    }\r\n\r\n\t    if (code === CHAR_QUESTION_MARK) {\r\n\t      isGlob = token.isGlob = true;\r\n\t      finished = true;\r\n\r\n\t      if (scanToEnd === true) {\r\n\t        continue;\r\n\t      }\r\n\t      break;\r\n\t    }\r\n\r\n\t    if (code === CHAR_LEFT_SQUARE_BRACKET) {\r\n\t      while (eos() !== true && (next = advance())) {\r\n\t        if (next === CHAR_BACKWARD_SLASH) {\r\n\t          backslashes = token.backslashes = true;\r\n\t          advance();\r\n\t          continue;\r\n\t        }\r\n\r\n\t        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\r\n\t          isBracket = token.isBracket = true;\r\n\t          isGlob = token.isGlob = true;\r\n\t          finished = true;\r\n\t          break;\r\n\t        }\r\n\t      }\r\n\r\n\t      if (scanToEnd === true) {\r\n\t        continue;\r\n\t      }\r\n\r\n\t      break;\r\n\t    }\r\n\r\n\t    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\r\n\t      negated = token.negated = true;\r\n\t      start++;\r\n\t      continue;\r\n\t    }\r\n\r\n\t    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\r\n\t      isGlob = token.isGlob = true;\r\n\r\n\t      if (scanToEnd === true) {\r\n\t        while (eos() !== true && (code = advance())) {\r\n\t          if (code === CHAR_LEFT_PARENTHESES) {\r\n\t            backslashes = token.backslashes = true;\r\n\t            code = advance();\r\n\t            continue;\r\n\t          }\r\n\r\n\t          if (code === CHAR_RIGHT_PARENTHESES) {\r\n\t            finished = true;\r\n\t            break;\r\n\t          }\r\n\t        }\r\n\t        continue;\r\n\t      }\r\n\t      break;\r\n\t    }\r\n\r\n\t    if (isGlob === true) {\r\n\t      finished = true;\r\n\r\n\t      if (scanToEnd === true) {\r\n\t        continue;\r\n\t      }\r\n\r\n\t      break;\r\n\t    }\r\n\t  }\r\n\r\n\t  if (opts.noext === true) {\r\n\t    isExtglob = false;\r\n\t    isGlob = false;\r\n\t  }\r\n\r\n\t  let base = str;\r\n\t  let prefix = '';\r\n\t  let glob = '';\r\n\r\n\t  if (start > 0) {\r\n\t    prefix = str.slice(0, start);\r\n\t    str = str.slice(start);\r\n\t    lastIndex -= start;\r\n\t  }\r\n\r\n\t  if (base && isGlob === true && lastIndex > 0) {\r\n\t    base = str.slice(0, lastIndex);\r\n\t    glob = str.slice(lastIndex);\r\n\t  } else if (isGlob === true) {\r\n\t    base = '';\r\n\t    glob = str;\r\n\t  } else {\r\n\t    base = str;\r\n\t  }\r\n\r\n\t  if (base && base !== '' && base !== '/' && base !== str) {\r\n\t    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\r\n\t      base = base.slice(0, -1);\r\n\t    }\r\n\t  }\r\n\r\n\t  if (opts.unescape === true) {\r\n\t    if (glob) glob = utils.removeBackslashes(glob);\r\n\r\n\t    if (base && backslashes === true) {\r\n\t      base = utils.removeBackslashes(base);\r\n\t    }\r\n\t  }\r\n\r\n\t  const state = {\r\n\t    prefix,\r\n\t    input,\r\n\t    start,\r\n\t    base,\r\n\t    glob,\r\n\t    isBrace,\r\n\t    isBracket,\r\n\t    isGlob,\r\n\t    isExtglob,\r\n\t    isGlobstar,\r\n\t    negated,\r\n\t    negatedExtglob\r\n\t  };\r\n\r\n\t  if (opts.tokens === true) {\r\n\t    state.maxDepth = 0;\r\n\t    if (!isPathSeparator(code)) {\r\n\t      tokens.push(token);\r\n\t    }\r\n\t    state.tokens = tokens;\r\n\t  }\r\n\r\n\t  if (opts.parts === true || opts.tokens === true) {\r\n\t    let prevIndex;\r\n\r\n\t    for (let idx = 0; idx < slashes.length; idx++) {\r\n\t      const n = prevIndex ? prevIndex + 1 : start;\r\n\t      const i = slashes[idx];\r\n\t      const value = input.slice(n, i);\r\n\t      if (opts.tokens) {\r\n\t        if (idx === 0 && start !== 0) {\r\n\t          tokens[idx].isPrefix = true;\r\n\t          tokens[idx].value = prefix;\r\n\t        } else {\r\n\t          tokens[idx].value = value;\r\n\t        }\r\n\t        depth(tokens[idx]);\r\n\t        state.maxDepth += tokens[idx].depth;\r\n\t      }\r\n\t      if (idx !== 0 || value !== '') {\r\n\t        parts.push(value);\r\n\t      }\r\n\t      prevIndex = i;\r\n\t    }\r\n\r\n\t    if (prevIndex && prevIndex + 1 < input.length) {\r\n\t      const value = input.slice(prevIndex + 1);\r\n\t      parts.push(value);\r\n\r\n\t      if (opts.tokens) {\r\n\t        tokens[tokens.length - 1].value = value;\r\n\t        depth(tokens[tokens.length - 1]);\r\n\t        state.maxDepth += tokens[tokens.length - 1].depth;\r\n\t      }\r\n\t    }\r\n\r\n\t    state.slashes = slashes;\r\n\t    state.parts = parts;\r\n\t  }\r\n\r\n\t  return state;\r\n\t};\r\n\r\n\tscan_1 = scan;\r\n\treturn scan_1;\r\n}\r\n\r\nvar parse_1;\r\nvar hasRequiredParse;\r\n\r\nfunction requireParse () {\r\n\tif (hasRequiredParse) return parse_1;\r\n\thasRequiredParse = 1;\r\n\r\n\tconst constants = /*@__PURE__*/ requireConstants();\r\n\tconst utils = /*@__PURE__*/ requireUtils();\r\n\r\n\t/**\r\n\t * Constants\r\n\t */\r\n\r\n\tconst {\r\n\t  MAX_LENGTH,\r\n\t  POSIX_REGEX_SOURCE,\r\n\t  REGEX_NON_SPECIAL_CHARS,\r\n\t  REGEX_SPECIAL_CHARS_BACKREF,\r\n\t  REPLACEMENTS\r\n\t} = constants;\r\n\r\n\t/**\r\n\t * Helpers\r\n\t */\r\n\r\n\tconst expandRange = (args, options) => {\r\n\t  if (typeof options.expandRange === 'function') {\r\n\t    return options.expandRange(...args, options);\r\n\t  }\r\n\r\n\t  args.sort();\r\n\t  const value = `[${args.join('-')}]`;\r\n\r\n\t  return value;\r\n\t};\r\n\r\n\t/**\r\n\t * Create the message for a syntax error\r\n\t */\r\n\r\n\tconst syntaxError = (type, char) => {\r\n\t  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\r\n\t};\r\n\r\n\t/**\r\n\t * Parse the given input string.\r\n\t * @param {String} input\r\n\t * @param {Object} options\r\n\t * @return {Object}\r\n\t */\r\n\r\n\tconst parse = (input, options) => {\r\n\t  if (typeof input !== 'string') {\r\n\t    throw new TypeError('Expected a string');\r\n\t  }\r\n\r\n\t  input = REPLACEMENTS[input] || input;\r\n\r\n\t  const opts = { ...options };\r\n\t  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\r\n\r\n\t  let len = input.length;\r\n\t  if (len > max) {\r\n\t    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\r\n\t  }\r\n\r\n\t  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\r\n\t  const tokens = [bos];\r\n\r\n\t  const capture = opts.capture ? '' : '?:';\r\n\r\n\t  // create constants based on platform, for windows or posix\r\n\t  const PLATFORM_CHARS = constants.globChars(opts.windows);\r\n\t  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\r\n\r\n\t  const {\r\n\t    DOT_LITERAL,\r\n\t    PLUS_LITERAL,\r\n\t    SLASH_LITERAL,\r\n\t    ONE_CHAR,\r\n\t    DOTS_SLASH,\r\n\t    NO_DOT,\r\n\t    NO_DOT_SLASH,\r\n\t    NO_DOTS_SLASH,\r\n\t    QMARK,\r\n\t    QMARK_NO_DOT,\r\n\t    STAR,\r\n\t    START_ANCHOR\r\n\t  } = PLATFORM_CHARS;\r\n\r\n\t  const globstar = opts => {\r\n\t    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\r\n\t  };\r\n\r\n\t  const nodot = opts.dot ? '' : NO_DOT;\r\n\t  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\r\n\t  let star = opts.bash === true ? globstar(opts) : STAR;\r\n\r\n\t  if (opts.capture) {\r\n\t    star = `(${star})`;\r\n\t  }\r\n\r\n\t  // minimatch options support\r\n\t  if (typeof opts.noext === 'boolean') {\r\n\t    opts.noextglob = opts.noext;\r\n\t  }\r\n\r\n\t  const state = {\r\n\t    input,\r\n\t    index: -1,\r\n\t    start: 0,\r\n\t    dot: opts.dot === true,\r\n\t    consumed: '',\r\n\t    output: '',\r\n\t    prefix: '',\r\n\t    backtrack: false,\r\n\t    negated: false,\r\n\t    brackets: 0,\r\n\t    braces: 0,\r\n\t    parens: 0,\r\n\t    quotes: 0,\r\n\t    globstar: false,\r\n\t    tokens\r\n\t  };\r\n\r\n\t  input = utils.removePrefix(input, state);\r\n\t  len = input.length;\r\n\r\n\t  const extglobs = [];\r\n\t  const braces = [];\r\n\t  const stack = [];\r\n\t  let prev = bos;\r\n\t  let value;\r\n\r\n\t  /**\r\n\t   * Tokenizing helpers\r\n\t   */\r\n\r\n\t  const eos = () => state.index === len - 1;\r\n\t  const peek = state.peek = (n = 1) => input[state.index + n];\r\n\t  const advance = state.advance = () => input[++state.index] || '';\r\n\t  const remaining = () => input.slice(state.index + 1);\r\n\t  const consume = (value = '', num = 0) => {\r\n\t    state.consumed += value;\r\n\t    state.index += num;\r\n\t  };\r\n\r\n\t  const append = token => {\r\n\t    state.output += token.output != null ? token.output : token.value;\r\n\t    consume(token.value);\r\n\t  };\r\n\r\n\t  const negate = () => {\r\n\t    let count = 1;\r\n\r\n\t    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\r\n\t      advance();\r\n\t      state.start++;\r\n\t      count++;\r\n\t    }\r\n\r\n\t    if (count % 2 === 0) {\r\n\t      return false;\r\n\t    }\r\n\r\n\t    state.negated = true;\r\n\t    state.start++;\r\n\t    return true;\r\n\t  };\r\n\r\n\t  const increment = type => {\r\n\t    state[type]++;\r\n\t    stack.push(type);\r\n\t  };\r\n\r\n\t  const decrement = type => {\r\n\t    state[type]--;\r\n\t    stack.pop();\r\n\t  };\r\n\r\n\t  /**\r\n\t   * Push tokens onto the tokens array. This helper speeds up\r\n\t   * tokenizing by 1) helping us avoid backtracking as much as possible,\r\n\t   * and 2) helping us avoid creating extra tokens when consecutive\r\n\t   * characters are plain text. This improves performance and simplifies\r\n\t   * lookbehinds.\r\n\t   */\r\n\r\n\t  const push = tok => {\r\n\t    if (prev.type === 'globstar') {\r\n\t      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\r\n\t      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\r\n\r\n\t      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\r\n\t        state.output = state.output.slice(0, -prev.output.length);\r\n\t        prev.type = 'star';\r\n\t        prev.value = '*';\r\n\t        prev.output = star;\r\n\t        state.output += prev.output;\r\n\t      }\r\n\t    }\r\n\r\n\t    if (extglobs.length && tok.type !== 'paren') {\r\n\t      extglobs[extglobs.length - 1].inner += tok.value;\r\n\t    }\r\n\r\n\t    if (tok.value || tok.output) append(tok);\r\n\t    if (prev && prev.type === 'text' && tok.type === 'text') {\r\n\t      prev.output = (prev.output || prev.value) + tok.value;\r\n\t      prev.value += tok.value;\r\n\t      return;\r\n\t    }\r\n\r\n\t    tok.prev = prev;\r\n\t    tokens.push(tok);\r\n\t    prev = tok;\r\n\t  };\r\n\r\n\t  const extglobOpen = (type, value) => {\r\n\t    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\r\n\r\n\t    token.prev = prev;\r\n\t    token.parens = state.parens;\r\n\t    token.output = state.output;\r\n\t    const output = (opts.capture ? '(' : '') + token.open;\r\n\r\n\t    increment('parens');\r\n\t    push({ type, value, output: state.output ? '' : ONE_CHAR });\r\n\t    push({ type: 'paren', extglob: true, value: advance(), output });\r\n\t    extglobs.push(token);\r\n\t  };\r\n\r\n\t  const extglobClose = token => {\r\n\t    let output = token.close + (opts.capture ? ')' : '');\r\n\t    let rest;\r\n\r\n\t    if (token.type === 'negate') {\r\n\t      let extglobStar = star;\r\n\r\n\t      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\r\n\t        extglobStar = globstar(opts);\r\n\t      }\r\n\r\n\t      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\r\n\t        output = token.close = `)$))${extglobStar}`;\r\n\t      }\r\n\r\n\t      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\r\n\t        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\r\n\t        // In this case, we need to parse the string and use it in the output of the original pattern.\r\n\t        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\r\n\t        //\r\n\t        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\r\n\t        const expression = parse(rest, { ...options, fastpaths: false }).output;\r\n\r\n\t        output = token.close = `)${expression})${extglobStar})`;\r\n\t      }\r\n\r\n\t      if (token.prev.type === 'bos') {\r\n\t        state.negatedExtglob = true;\r\n\t      }\r\n\t    }\r\n\r\n\t    push({ type: 'paren', extglob: true, value, output });\r\n\t    decrement('parens');\r\n\t  };\r\n\r\n\t  /**\r\n\t   * Fast paths\r\n\t   */\r\n\r\n\t  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\r\n\t    let backslashes = false;\r\n\r\n\t    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\r\n\t      if (first === '\\\\') {\r\n\t        backslashes = true;\r\n\t        return m;\r\n\t      }\r\n\r\n\t      if (first === '?') {\r\n\t        if (esc) {\r\n\t          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\r\n\t        }\r\n\t        if (index === 0) {\r\n\t          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\r\n\t        }\r\n\t        return QMARK.repeat(chars.length);\r\n\t      }\r\n\r\n\t      if (first === '.') {\r\n\t        return DOT_LITERAL.repeat(chars.length);\r\n\t      }\r\n\r\n\t      if (first === '*') {\r\n\t        if (esc) {\r\n\t          return esc + first + (rest ? star : '');\r\n\t        }\r\n\t        return star;\r\n\t      }\r\n\t      return esc ? m : `\\\\${m}`;\r\n\t    });\r\n\r\n\t    if (backslashes === true) {\r\n\t      if (opts.unescape === true) {\r\n\t        output = output.replace(/\\\\/g, '');\r\n\t      } else {\r\n\t        output = output.replace(/\\\\+/g, m => {\r\n\t          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\r\n\t        });\r\n\t      }\r\n\t    }\r\n\r\n\t    if (output === input && opts.contains === true) {\r\n\t      state.output = input;\r\n\t      return state;\r\n\t    }\r\n\r\n\t    state.output = utils.wrapOutput(output, state, options);\r\n\t    return state;\r\n\t  }\r\n\r\n\t  /**\r\n\t   * Tokenize input until we reach end-of-string\r\n\t   */\r\n\r\n\t  while (!eos()) {\r\n\t    value = advance();\r\n\r\n\t    if (value === '\\u0000') {\r\n\t      continue;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Escaped characters\r\n\t     */\r\n\r\n\t    if (value === '\\\\') {\r\n\t      const next = peek();\r\n\r\n\t      if (next === '/' && opts.bash !== true) {\r\n\t        continue;\r\n\t      }\r\n\r\n\t      if (next === '.' || next === ';') {\r\n\t        continue;\r\n\t      }\r\n\r\n\t      if (!next) {\r\n\t        value += '\\\\';\r\n\t        push({ type: 'text', value });\r\n\t        continue;\r\n\t      }\r\n\r\n\t      // collapse slashes to reduce potential for exploits\r\n\t      const match = /^\\\\+/.exec(remaining());\r\n\t      let slashes = 0;\r\n\r\n\t      if (match && match[0].length > 2) {\r\n\t        slashes = match[0].length;\r\n\t        state.index += slashes;\r\n\t        if (slashes % 2 !== 0) {\r\n\t          value += '\\\\';\r\n\t        }\r\n\t      }\r\n\r\n\t      if (opts.unescape === true) {\r\n\t        value = advance();\r\n\t      } else {\r\n\t        value += advance();\r\n\t      }\r\n\r\n\t      if (state.brackets === 0) {\r\n\t        push({ type: 'text', value });\r\n\t        continue;\r\n\t      }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * If we're inside a regex character class, continue\r\n\t     * until we reach the closing bracket.\r\n\t     */\r\n\r\n\t    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\r\n\t      if (opts.posix !== false && value === ':') {\r\n\t        const inner = prev.value.slice(1);\r\n\t        if (inner.includes('[')) {\r\n\t          prev.posix = true;\r\n\r\n\t          if (inner.includes(':')) {\r\n\t            const idx = prev.value.lastIndexOf('[');\r\n\t            const pre = prev.value.slice(0, idx);\r\n\t            const rest = prev.value.slice(idx + 2);\r\n\t            const posix = POSIX_REGEX_SOURCE[rest];\r\n\t            if (posix) {\r\n\t              prev.value = pre + posix;\r\n\t              state.backtrack = true;\r\n\t              advance();\r\n\r\n\t              if (!bos.output && tokens.indexOf(prev) === 1) {\r\n\t                bos.output = ONE_CHAR;\r\n\t              }\r\n\t              continue;\r\n\t            }\r\n\t          }\r\n\t        }\r\n\t      }\r\n\r\n\t      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\r\n\t        value = `\\\\${value}`;\r\n\t      }\r\n\r\n\t      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\r\n\t        value = `\\\\${value}`;\r\n\t      }\r\n\r\n\t      if (opts.posix === true && value === '!' && prev.value === '[') {\r\n\t        value = '^';\r\n\t      }\r\n\r\n\t      prev.value += value;\r\n\t      append({ value });\r\n\t      continue;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * If we're inside a quoted string, continue\r\n\t     * until we reach the closing double quote.\r\n\t     */\r\n\r\n\t    if (state.quotes === 1 && value !== '\"') {\r\n\t      value = utils.escapeRegex(value);\r\n\t      prev.value += value;\r\n\t      append({ value });\r\n\t      continue;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Double quotes\r\n\t     */\r\n\r\n\t    if (value === '\"') {\r\n\t      state.quotes = state.quotes === 1 ? 0 : 1;\r\n\t      if (opts.keepQuotes === true) {\r\n\t        push({ type: 'text', value });\r\n\t      }\r\n\t      continue;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Parentheses\r\n\t     */\r\n\r\n\t    if (value === '(') {\r\n\t      increment('parens');\r\n\t      push({ type: 'paren', value });\r\n\t      continue;\r\n\t    }\r\n\r\n\t    if (value === ')') {\r\n\t      if (state.parens === 0 && opts.strictBrackets === true) {\r\n\t        throw new SyntaxError(syntaxError('opening', '('));\r\n\t      }\r\n\r\n\t      const extglob = extglobs[extglobs.length - 1];\r\n\t      if (extglob && state.parens === extglob.parens + 1) {\r\n\t        extglobClose(extglobs.pop());\r\n\t        continue;\r\n\t      }\r\n\r\n\t      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\r\n\t      decrement('parens');\r\n\t      continue;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Square brackets\r\n\t     */\r\n\r\n\t    if (value === '[') {\r\n\t      if (opts.nobracket === true || !remaining().includes(']')) {\r\n\t        if (opts.nobracket !== true && opts.strictBrackets === true) {\r\n\t          throw new SyntaxError(syntaxError('closing', ']'));\r\n\t        }\r\n\r\n\t        value = `\\\\${value}`;\r\n\t      } else {\r\n\t        increment('brackets');\r\n\t      }\r\n\r\n\t      push({ type: 'bracket', value });\r\n\t      continue;\r\n\t    }\r\n\r\n\t    if (value === ']') {\r\n\t      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\r\n\t        push({ type: 'text', value, output: `\\\\${value}` });\r\n\t        continue;\r\n\t      }\r\n\r\n\t      if (state.brackets === 0) {\r\n\t        if (opts.strictBrackets === true) {\r\n\t          throw new SyntaxError(syntaxError('opening', '['));\r\n\t        }\r\n\r\n\t        push({ type: 'text', value, output: `\\\\${value}` });\r\n\t        continue;\r\n\t      }\r\n\r\n\t      decrement('brackets');\r\n\r\n\t      const prevValue = prev.value.slice(1);\r\n\t      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\r\n\t        value = `/${value}`;\r\n\t      }\r\n\r\n\t      prev.value += value;\r\n\t      append({ value });\r\n\r\n\t      // when literal brackets are explicitly disabled\r\n\t      // assume we should match with a regex character class\r\n\t      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\r\n\t        continue;\r\n\t      }\r\n\r\n\t      const escaped = utils.escapeRegex(prev.value);\r\n\t      state.output = state.output.slice(0, -prev.value.length);\r\n\r\n\t      // when literal brackets are explicitly enabled\r\n\t      // assume we should escape the brackets to match literal characters\r\n\t      if (opts.literalBrackets === true) {\r\n\t        state.output += escaped;\r\n\t        prev.value = escaped;\r\n\t        continue;\r\n\t      }\r\n\r\n\t      // when the user specifies nothing, try to match both\r\n\t      prev.value = `(${capture}${escaped}|${prev.value})`;\r\n\t      state.output += prev.value;\r\n\t      continue;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Braces\r\n\t     */\r\n\r\n\t    if (value === '{' && opts.nobrace !== true) {\r\n\t      increment('braces');\r\n\r\n\t      const open = {\r\n\t        type: 'brace',\r\n\t        value,\r\n\t        output: '(',\r\n\t        outputIndex: state.output.length,\r\n\t        tokensIndex: state.tokens.length\r\n\t      };\r\n\r\n\t      braces.push(open);\r\n\t      push(open);\r\n\t      continue;\r\n\t    }\r\n\r\n\t    if (value === '}') {\r\n\t      const brace = braces[braces.length - 1];\r\n\r\n\t      if (opts.nobrace === true || !brace) {\r\n\t        push({ type: 'text', value, output: value });\r\n\t        continue;\r\n\t      }\r\n\r\n\t      let output = ')';\r\n\r\n\t      if (brace.dots === true) {\r\n\t        const arr = tokens.slice();\r\n\t        const range = [];\r\n\r\n\t        for (let i = arr.length - 1; i >= 0; i--) {\r\n\t          tokens.pop();\r\n\t          if (arr[i].type === 'brace') {\r\n\t            break;\r\n\t          }\r\n\t          if (arr[i].type !== 'dots') {\r\n\t            range.unshift(arr[i].value);\r\n\t          }\r\n\t        }\r\n\r\n\t        output = expandRange(range, opts);\r\n\t        state.backtrack = true;\r\n\t      }\r\n\r\n\t      if (brace.comma !== true && brace.dots !== true) {\r\n\t        const out = state.output.slice(0, brace.outputIndex);\r\n\t        const toks = state.tokens.slice(brace.tokensIndex);\r\n\t        brace.value = brace.output = '\\\\{';\r\n\t        value = output = '\\\\}';\r\n\t        state.output = out;\r\n\t        for (const t of toks) {\r\n\t          state.output += (t.output || t.value);\r\n\t        }\r\n\t      }\r\n\r\n\t      push({ type: 'brace', value, output });\r\n\t      decrement('braces');\r\n\t      braces.pop();\r\n\t      continue;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Pipes\r\n\t     */\r\n\r\n\t    if (value === '|') {\r\n\t      if (extglobs.length > 0) {\r\n\t        extglobs[extglobs.length - 1].conditions++;\r\n\t      }\r\n\t      push({ type: 'text', value });\r\n\t      continue;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Commas\r\n\t     */\r\n\r\n\t    if (value === ',') {\r\n\t      let output = value;\r\n\r\n\t      const brace = braces[braces.length - 1];\r\n\t      if (brace && stack[stack.length - 1] === 'braces') {\r\n\t        brace.comma = true;\r\n\t        output = '|';\r\n\t      }\r\n\r\n\t      push({ type: 'comma', value, output });\r\n\t      continue;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Slashes\r\n\t     */\r\n\r\n\t    if (value === '/') {\r\n\t      // if the beginning of the glob is \"./\", advance the start\r\n\t      // to the current index, and don't add the \"./\" characters\r\n\t      // to the state. This greatly simplifies lookbehinds when\r\n\t      // checking for BOS characters like \"!\" and \".\" (not \"./\")\r\n\t      if (prev.type === 'dot' && state.index === state.start + 1) {\r\n\t        state.start = state.index + 1;\r\n\t        state.consumed = '';\r\n\t        state.output = '';\r\n\t        tokens.pop();\r\n\t        prev = bos; // reset \"prev\" to the first token\r\n\t        continue;\r\n\t      }\r\n\r\n\t      push({ type: 'slash', value, output: SLASH_LITERAL });\r\n\t      continue;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Dots\r\n\t     */\r\n\r\n\t    if (value === '.') {\r\n\t      if (state.braces > 0 && prev.type === 'dot') {\r\n\t        if (prev.value === '.') prev.output = DOT_LITERAL;\r\n\t        const brace = braces[braces.length - 1];\r\n\t        prev.type = 'dots';\r\n\t        prev.output += value;\r\n\t        prev.value += value;\r\n\t        brace.dots = true;\r\n\t        continue;\r\n\t      }\r\n\r\n\t      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\r\n\t        push({ type: 'text', value, output: DOT_LITERAL });\r\n\t        continue;\r\n\t      }\r\n\r\n\t      push({ type: 'dot', value, output: DOT_LITERAL });\r\n\t      continue;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Question marks\r\n\t     */\r\n\r\n\t    if (value === '?') {\r\n\t      const isGroup = prev && prev.value === '(';\r\n\t      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\r\n\t        extglobOpen('qmark', value);\r\n\t        continue;\r\n\t      }\r\n\r\n\t      if (prev && prev.type === 'paren') {\r\n\t        const next = peek();\r\n\t        let output = value;\r\n\r\n\t        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\r\n\t          output = `\\\\${value}`;\r\n\t        }\r\n\r\n\t        push({ type: 'text', value, output });\r\n\t        continue;\r\n\t      }\r\n\r\n\t      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\r\n\t        push({ type: 'qmark', value, output: QMARK_NO_DOT });\r\n\t        continue;\r\n\t      }\r\n\r\n\t      push({ type: 'qmark', value, output: QMARK });\r\n\t      continue;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Exclamation\r\n\t     */\r\n\r\n\t    if (value === '!') {\r\n\t      if (opts.noextglob !== true && peek() === '(') {\r\n\t        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\r\n\t          extglobOpen('negate', value);\r\n\t          continue;\r\n\t        }\r\n\t      }\r\n\r\n\t      if (opts.nonegate !== true && state.index === 0) {\r\n\t        negate();\r\n\t        continue;\r\n\t      }\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Plus\r\n\t     */\r\n\r\n\t    if (value === '+') {\r\n\t      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\r\n\t        extglobOpen('plus', value);\r\n\t        continue;\r\n\t      }\r\n\r\n\t      if ((prev && prev.value === '(') || opts.regex === false) {\r\n\t        push({ type: 'plus', value, output: PLUS_LITERAL });\r\n\t        continue;\r\n\t      }\r\n\r\n\t      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\r\n\t        push({ type: 'plus', value });\r\n\t        continue;\r\n\t      }\r\n\r\n\t      push({ type: 'plus', value: PLUS_LITERAL });\r\n\t      continue;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Plain text\r\n\t     */\r\n\r\n\t    if (value === '@') {\r\n\t      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\r\n\t        push({ type: 'at', extglob: true, value, output: '' });\r\n\t        continue;\r\n\t      }\r\n\r\n\t      push({ type: 'text', value });\r\n\t      continue;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Plain text\r\n\t     */\r\n\r\n\t    if (value !== '*') {\r\n\t      if (value === '$' || value === '^') {\r\n\t        value = `\\\\${value}`;\r\n\t      }\r\n\r\n\t      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\r\n\t      if (match) {\r\n\t        value += match[0];\r\n\t        state.index += match[0].length;\r\n\t      }\r\n\r\n\t      push({ type: 'text', value });\r\n\t      continue;\r\n\t    }\r\n\r\n\t    /**\r\n\t     * Stars\r\n\t     */\r\n\r\n\t    if (prev && (prev.type === 'globstar' || prev.star === true)) {\r\n\t      prev.type = 'star';\r\n\t      prev.star = true;\r\n\t      prev.value += value;\r\n\t      prev.output = star;\r\n\t      state.backtrack = true;\r\n\t      state.globstar = true;\r\n\t      consume(value);\r\n\t      continue;\r\n\t    }\r\n\r\n\t    let rest = remaining();\r\n\t    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\r\n\t      extglobOpen('star', value);\r\n\t      continue;\r\n\t    }\r\n\r\n\t    if (prev.type === 'star') {\r\n\t      if (opts.noglobstar === true) {\r\n\t        consume(value);\r\n\t        continue;\r\n\t      }\r\n\r\n\t      const prior = prev.prev;\r\n\t      const before = prior.prev;\r\n\t      const isStart = prior.type === 'slash' || prior.type === 'bos';\r\n\t      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\r\n\r\n\t      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\r\n\t        push({ type: 'star', value, output: '' });\r\n\t        continue;\r\n\t      }\r\n\r\n\t      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\r\n\t      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\r\n\t      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\r\n\t        push({ type: 'star', value, output: '' });\r\n\t        continue;\r\n\t      }\r\n\r\n\t      // strip consecutive `/**/`\r\n\t      while (rest.slice(0, 3) === '/**') {\r\n\t        const after = input[state.index + 4];\r\n\t        if (after && after !== '/') {\r\n\t          break;\r\n\t        }\r\n\t        rest = rest.slice(3);\r\n\t        consume('/**', 3);\r\n\t      }\r\n\r\n\t      if (prior.type === 'bos' && eos()) {\r\n\t        prev.type = 'globstar';\r\n\t        prev.value += value;\r\n\t        prev.output = globstar(opts);\r\n\t        state.output = prev.output;\r\n\t        state.globstar = true;\r\n\t        consume(value);\r\n\t        continue;\r\n\t      }\r\n\r\n\t      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\r\n\t        state.output = state.output.slice(0, -(prior.output + prev.output).length);\r\n\t        prior.output = `(?:${prior.output}`;\r\n\r\n\t        prev.type = 'globstar';\r\n\t        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\r\n\t        prev.value += value;\r\n\t        state.globstar = true;\r\n\t        state.output += prior.output + prev.output;\r\n\t        consume(value);\r\n\t        continue;\r\n\t      }\r\n\r\n\t      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\r\n\t        const end = rest[1] !== void 0 ? '|$' : '';\r\n\r\n\t        state.output = state.output.slice(0, -(prior.output + prev.output).length);\r\n\t        prior.output = `(?:${prior.output}`;\r\n\r\n\t        prev.type = 'globstar';\r\n\t        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\r\n\t        prev.value += value;\r\n\r\n\t        state.output += prior.output + prev.output;\r\n\t        state.globstar = true;\r\n\r\n\t        consume(value + advance());\r\n\r\n\t        push({ type: 'slash', value: '/', output: '' });\r\n\t        continue;\r\n\t      }\r\n\r\n\t      if (prior.type === 'bos' && rest[0] === '/') {\r\n\t        prev.type = 'globstar';\r\n\t        prev.value += value;\r\n\t        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\r\n\t        state.output = prev.output;\r\n\t        state.globstar = true;\r\n\t        consume(value + advance());\r\n\t        push({ type: 'slash', value: '/', output: '' });\r\n\t        continue;\r\n\t      }\r\n\r\n\t      // remove single star from output\r\n\t      state.output = state.output.slice(0, -prev.output.length);\r\n\r\n\t      // reset previous token to globstar\r\n\t      prev.type = 'globstar';\r\n\t      prev.output = globstar(opts);\r\n\t      prev.value += value;\r\n\r\n\t      // reset output with globstar\r\n\t      state.output += prev.output;\r\n\t      state.globstar = true;\r\n\t      consume(value);\r\n\t      continue;\r\n\t    }\r\n\r\n\t    const token = { type: 'star', value, output: star };\r\n\r\n\t    if (opts.bash === true) {\r\n\t      token.output = '.*?';\r\n\t      if (prev.type === 'bos' || prev.type === 'slash') {\r\n\t        token.output = nodot + token.output;\r\n\t      }\r\n\t      push(token);\r\n\t      continue;\r\n\t    }\r\n\r\n\t    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\r\n\t      token.output = value;\r\n\t      push(token);\r\n\t      continue;\r\n\t    }\r\n\r\n\t    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\r\n\t      if (prev.type === 'dot') {\r\n\t        state.output += NO_DOT_SLASH;\r\n\t        prev.output += NO_DOT_SLASH;\r\n\r\n\t      } else if (opts.dot === true) {\r\n\t        state.output += NO_DOTS_SLASH;\r\n\t        prev.output += NO_DOTS_SLASH;\r\n\r\n\t      } else {\r\n\t        state.output += nodot;\r\n\t        prev.output += nodot;\r\n\t      }\r\n\r\n\t      if (peek() !== '*') {\r\n\t        state.output += ONE_CHAR;\r\n\t        prev.output += ONE_CHAR;\r\n\t      }\r\n\t    }\r\n\r\n\t    push(token);\r\n\t  }\r\n\r\n\t  while (state.brackets > 0) {\r\n\t    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\r\n\t    state.output = utils.escapeLast(state.output, '[');\r\n\t    decrement('brackets');\r\n\t  }\r\n\r\n\t  while (state.parens > 0) {\r\n\t    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\r\n\t    state.output = utils.escapeLast(state.output, '(');\r\n\t    decrement('parens');\r\n\t  }\r\n\r\n\t  while (state.braces > 0) {\r\n\t    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\r\n\t    state.output = utils.escapeLast(state.output, '{');\r\n\t    decrement('braces');\r\n\t  }\r\n\r\n\t  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\r\n\t    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\r\n\t  }\r\n\r\n\t  // rebuild the output if we had to backtrack at any point\r\n\t  if (state.backtrack === true) {\r\n\t    state.output = '';\r\n\r\n\t    for (const token of state.tokens) {\r\n\t      state.output += token.output != null ? token.output : token.value;\r\n\r\n\t      if (token.suffix) {\r\n\t        state.output += token.suffix;\r\n\t      }\r\n\t    }\r\n\t  }\r\n\r\n\t  return state;\r\n\t};\r\n\r\n\t/**\r\n\t * Fast paths for creating regular expressions for common glob patterns.\r\n\t * This can significantly speed up processing and has very little downside\r\n\t * impact when none of the fast paths match.\r\n\t */\r\n\r\n\tparse.fastpaths = (input, options) => {\r\n\t  const opts = { ...options };\r\n\t  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\r\n\t  const len = input.length;\r\n\t  if (len > max) {\r\n\t    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\r\n\t  }\r\n\r\n\t  input = REPLACEMENTS[input] || input;\r\n\r\n\t  // create constants based on platform, for windows or posix\r\n\t  const {\r\n\t    DOT_LITERAL,\r\n\t    SLASH_LITERAL,\r\n\t    ONE_CHAR,\r\n\t    DOTS_SLASH,\r\n\t    NO_DOT,\r\n\t    NO_DOTS,\r\n\t    NO_DOTS_SLASH,\r\n\t    STAR,\r\n\t    START_ANCHOR\r\n\t  } = constants.globChars(opts.windows);\r\n\r\n\t  const nodot = opts.dot ? NO_DOTS : NO_DOT;\r\n\t  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\r\n\t  const capture = opts.capture ? '' : '?:';\r\n\t  const state = { negated: false, prefix: '' };\r\n\t  let star = opts.bash === true ? '.*?' : STAR;\r\n\r\n\t  if (opts.capture) {\r\n\t    star = `(${star})`;\r\n\t  }\r\n\r\n\t  const globstar = opts => {\r\n\t    if (opts.noglobstar === true) return star;\r\n\t    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\r\n\t  };\r\n\r\n\t  const create = str => {\r\n\t    switch (str) {\r\n\t      case '*':\r\n\t        return `${nodot}${ONE_CHAR}${star}`;\r\n\r\n\t      case '.*':\r\n\t        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\r\n\r\n\t      case '*.*':\r\n\t        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\r\n\r\n\t      case '*/*':\r\n\t        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\r\n\r\n\t      case '**':\r\n\t        return nodot + globstar(opts);\r\n\r\n\t      case '**/*':\r\n\t        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\r\n\r\n\t      case '**/*.*':\r\n\t        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\r\n\r\n\t      case '**/.*':\r\n\t        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\r\n\r\n\t      default: {\r\n\t        const match = /^(.*?)\\.(\\w+)$/.exec(str);\r\n\t        if (!match) return;\r\n\r\n\t        const source = create(match[1]);\r\n\t        if (!source) return;\r\n\r\n\t        return source + DOT_LITERAL + match[2];\r\n\t      }\r\n\t    }\r\n\t  };\r\n\r\n\t  const output = utils.removePrefix(input, state);\r\n\t  let source = create(output);\r\n\r\n\t  if (source && opts.strictSlashes !== true) {\r\n\t    source += `${SLASH_LITERAL}?`;\r\n\t  }\r\n\r\n\t  return source;\r\n\t};\r\n\r\n\tparse_1 = parse;\r\n\treturn parse_1;\r\n}\r\n\r\nvar picomatch_1$1;\r\nvar hasRequiredPicomatch$1;\r\n\r\nfunction requirePicomatch$1 () {\r\n\tif (hasRequiredPicomatch$1) return picomatch_1$1;\r\n\thasRequiredPicomatch$1 = 1;\r\n\r\n\tconst scan = /*@__PURE__*/ requireScan();\r\n\tconst parse = /*@__PURE__*/ requireParse();\r\n\tconst utils = /*@__PURE__*/ requireUtils();\r\n\tconst constants = /*@__PURE__*/ requireConstants();\r\n\tconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\r\n\r\n\t/**\r\n\t * Creates a matcher function from one or more glob patterns. The\r\n\t * returned function takes a string to match as its first argument,\r\n\t * and returns true if the string is a match. The returned matcher\r\n\t * function also takes a boolean as the second argument that, when true,\r\n\t * returns an object with additional information.\r\n\t *\r\n\t * ```js\r\n\t * const picomatch = require('picomatch');\r\n\t * // picomatch(glob[, options]);\r\n\t *\r\n\t * const isMatch = picomatch('*.!(*a)');\r\n\t * console.log(isMatch('a.a')); //=> false\r\n\t * console.log(isMatch('a.b')); //=> true\r\n\t * ```\r\n\t * @name picomatch\r\n\t * @param {String|Array} `globs` One or more glob patterns.\r\n\t * @param {Object=} `options`\r\n\t * @return {Function=} Returns a matcher function.\r\n\t * @api public\r\n\t */\r\n\r\n\tconst picomatch = (glob, options, returnState = false) => {\r\n\t  if (Array.isArray(glob)) {\r\n\t    const fns = glob.map(input => picomatch(input, options, returnState));\r\n\t    const arrayMatcher = str => {\r\n\t      for (const isMatch of fns) {\r\n\t        const state = isMatch(str);\r\n\t        if (state) return state;\r\n\t      }\r\n\t      return false;\r\n\t    };\r\n\t    return arrayMatcher;\r\n\t  }\r\n\r\n\t  const isState = isObject(glob) && glob.tokens && glob.input;\r\n\r\n\t  if (glob === '' || (typeof glob !== 'string' && !isState)) {\r\n\t    throw new TypeError('Expected pattern to be a non-empty string');\r\n\t  }\r\n\r\n\t  const opts = options || {};\r\n\t  const posix = opts.windows;\r\n\t  const regex = isState\r\n\t    ? picomatch.compileRe(glob, options)\r\n\t    : picomatch.makeRe(glob, options, false, true);\r\n\r\n\t  const state = regex.state;\r\n\t  delete regex.state;\r\n\r\n\t  let isIgnored = () => false;\r\n\t  if (opts.ignore) {\r\n\t    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\r\n\t    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\r\n\t  }\r\n\r\n\t  const matcher = (input, returnObject = false) => {\r\n\t    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\r\n\t    const result = { glob, state, regex, posix, input, output, match, isMatch };\r\n\r\n\t    if (typeof opts.onResult === 'function') {\r\n\t      opts.onResult(result);\r\n\t    }\r\n\r\n\t    if (isMatch === false) {\r\n\t      result.isMatch = false;\r\n\t      return returnObject ? result : false;\r\n\t    }\r\n\r\n\t    if (isIgnored(input)) {\r\n\t      if (typeof opts.onIgnore === 'function') {\r\n\t        opts.onIgnore(result);\r\n\t      }\r\n\t      result.isMatch = false;\r\n\t      return returnObject ? result : false;\r\n\t    }\r\n\r\n\t    if (typeof opts.onMatch === 'function') {\r\n\t      opts.onMatch(result);\r\n\t    }\r\n\t    return returnObject ? result : true;\r\n\t  };\r\n\r\n\t  if (returnState) {\r\n\t    matcher.state = state;\r\n\t  }\r\n\r\n\t  return matcher;\r\n\t};\r\n\r\n\t/**\r\n\t * Test `input` with the given `regex`. This is used by the main\r\n\t * `picomatch()` function to test the input string.\r\n\t *\r\n\t * ```js\r\n\t * const picomatch = require('picomatch');\r\n\t * // picomatch.test(input, regex[, options]);\r\n\t *\r\n\t * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\r\n\t * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\r\n\t * ```\r\n\t * @param {String} `input` String to test.\r\n\t * @param {RegExp} `regex`\r\n\t * @return {Object} Returns an object with matching info.\r\n\t * @api public\r\n\t */\r\n\r\n\tpicomatch.test = (input, regex, options, { glob, posix } = {}) => {\r\n\t  if (typeof input !== 'string') {\r\n\t    throw new TypeError('Expected input to be a string');\r\n\t  }\r\n\r\n\t  if (input === '') {\r\n\t    return { isMatch: false, output: '' };\r\n\t  }\r\n\r\n\t  const opts = options || {};\r\n\t  const format = opts.format || (posix ? utils.toPosixSlashes : null);\r\n\t  let match = input === glob;\r\n\t  let output = (match && format) ? format(input) : input;\r\n\r\n\t  if (match === false) {\r\n\t    output = format ? format(input) : input;\r\n\t    match = output === glob;\r\n\t  }\r\n\r\n\t  if (match === false || opts.capture === true) {\r\n\t    if (opts.matchBase === true || opts.basename === true) {\r\n\t      match = picomatch.matchBase(input, regex, options, posix);\r\n\t    } else {\r\n\t      match = regex.exec(output);\r\n\t    }\r\n\t  }\r\n\r\n\t  return { isMatch: Boolean(match), match, output };\r\n\t};\r\n\r\n\t/**\r\n\t * Match the basename of a filepath.\r\n\t *\r\n\t * ```js\r\n\t * const picomatch = require('picomatch');\r\n\t * // picomatch.matchBase(input, glob[, options]);\r\n\t * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\r\n\t * ```\r\n\t * @param {String} `input` String to test.\r\n\t * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\r\n\t * @return {Boolean}\r\n\t * @api public\r\n\t */\r\n\r\n\tpicomatch.matchBase = (input, glob, options) => {\r\n\t  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\r\n\t  return regex.test(utils.basename(input));\r\n\t};\r\n\r\n\t/**\r\n\t * Returns true if **any** of the given glob `patterns` match the specified `string`.\r\n\t *\r\n\t * ```js\r\n\t * const picomatch = require('picomatch');\r\n\t * // picomatch.isMatch(string, patterns[, options]);\r\n\t *\r\n\t * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\r\n\t * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\r\n\t * ```\r\n\t * @param {String|Array} str The string to test.\r\n\t * @param {String|Array} patterns One or more glob patterns to use for matching.\r\n\t * @param {Object} [options] See available [options](#options).\r\n\t * @return {Boolean} Returns true if any patterns match `str`\r\n\t * @api public\r\n\t */\r\n\r\n\tpicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\r\n\r\n\t/**\r\n\t * Parse a glob pattern to create the source string for a regular\r\n\t * expression.\r\n\t *\r\n\t * ```js\r\n\t * const picomatch = require('picomatch');\r\n\t * const result = picomatch.parse(pattern[, options]);\r\n\t * ```\r\n\t * @param {String} `pattern`\r\n\t * @param {Object} `options`\r\n\t * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\r\n\t * @api public\r\n\t */\r\n\r\n\tpicomatch.parse = (pattern, options) => {\r\n\t  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\r\n\t  return parse(pattern, { ...options, fastpaths: false });\r\n\t};\r\n\r\n\t/**\r\n\t * Scan a glob pattern to separate the pattern into segments.\r\n\t *\r\n\t * ```js\r\n\t * const picomatch = require('picomatch');\r\n\t * // picomatch.scan(input[, options]);\r\n\t *\r\n\t * const result = picomatch.scan('!./foo/*.js');\r\n\t * console.log(result);\r\n\t * { prefix: '!./',\r\n\t *   input: '!./foo/*.js',\r\n\t *   start: 3,\r\n\t *   base: 'foo',\r\n\t *   glob: '*.js',\r\n\t *   isBrace: false,\r\n\t *   isBracket: false,\r\n\t *   isGlob: true,\r\n\t *   isExtglob: false,\r\n\t *   isGlobstar: false,\r\n\t *   negated: true }\r\n\t * ```\r\n\t * @param {String} `input` Glob pattern to scan.\r\n\t * @param {Object} `options`\r\n\t * @return {Object} Returns an object with\r\n\t * @api public\r\n\t */\r\n\r\n\tpicomatch.scan = (input, options) => scan(input, options);\r\n\r\n\t/**\r\n\t * Compile a regular expression from the `state` object returned by the\r\n\t * [parse()](#parse) method.\r\n\t *\r\n\t * @param {Object} `state`\r\n\t * @param {Object} `options`\r\n\t * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\r\n\t * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\r\n\t * @return {RegExp}\r\n\t * @api public\r\n\t */\r\n\r\n\tpicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\r\n\t  if (returnOutput === true) {\r\n\t    return state.output;\r\n\t  }\r\n\r\n\t  const opts = options || {};\r\n\t  const prepend = opts.contains ? '' : '^';\r\n\t  const append = opts.contains ? '' : '$';\r\n\r\n\t  let source = `${prepend}(?:${state.output})${append}`;\r\n\t  if (state && state.negated === true) {\r\n\t    source = `^(?!${source}).*$`;\r\n\t  }\r\n\r\n\t  const regex = picomatch.toRegex(source, options);\r\n\t  if (returnState === true) {\r\n\t    regex.state = state;\r\n\t  }\r\n\r\n\t  return regex;\r\n\t};\r\n\r\n\t/**\r\n\t * Create a regular expression from a parsed glob pattern.\r\n\t *\r\n\t * ```js\r\n\t * const picomatch = require('picomatch');\r\n\t * const state = picomatch.parse('*.js');\r\n\t * // picomatch.compileRe(state[, options]);\r\n\t *\r\n\t * console.log(picomatch.compileRe(state));\r\n\t * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\r\n\t * ```\r\n\t * @param {String} `state` The object returned from the `.parse` method.\r\n\t * @param {Object} `options`\r\n\t * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\r\n\t * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\r\n\t * @return {RegExp} Returns a regex created from the given pattern.\r\n\t * @api public\r\n\t */\r\n\r\n\tpicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\r\n\t  if (!input || typeof input !== 'string') {\r\n\t    throw new TypeError('Expected a non-empty string');\r\n\t  }\r\n\r\n\t  let parsed = { negated: false, fastpaths: true };\r\n\r\n\t  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\r\n\t    parsed.output = parse.fastpaths(input, options);\r\n\t  }\r\n\r\n\t  if (!parsed.output) {\r\n\t    parsed = parse(input, options);\r\n\t  }\r\n\r\n\t  return picomatch.compileRe(parsed, options, returnOutput, returnState);\r\n\t};\r\n\r\n\t/**\r\n\t * Create a regular expression from the given regex source string.\r\n\t *\r\n\t * ```js\r\n\t * const picomatch = require('picomatch');\r\n\t * // picomatch.toRegex(source[, options]);\r\n\t *\r\n\t * const { output } = picomatch.parse('*.js');\r\n\t * console.log(picomatch.toRegex(output));\r\n\t * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\r\n\t * ```\r\n\t * @param {String} `source` Regular expression source string.\r\n\t * @param {Object} `options`\r\n\t * @return {RegExp}\r\n\t * @api public\r\n\t */\r\n\r\n\tpicomatch.toRegex = (source, options) => {\r\n\t  try {\r\n\t    const opts = options || {};\r\n\t    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\r\n\t  } catch (err) {\r\n\t    if (options && options.debug === true) throw err;\r\n\t    return /$^/;\r\n\t  }\r\n\t};\r\n\r\n\t/**\r\n\t * Picomatch constants.\r\n\t * @return {Object}\r\n\t */\r\n\r\n\tpicomatch.constants = constants;\r\n\r\n\t/**\r\n\t * Expose \"picomatch\"\r\n\t */\r\n\r\n\tpicomatch_1$1 = picomatch;\r\n\treturn picomatch_1$1;\r\n}\r\n\r\nvar picomatch_1;\r\nvar hasRequiredPicomatch;\r\n\r\nfunction requirePicomatch () {\r\n\tif (hasRequiredPicomatch) return picomatch_1;\r\n\thasRequiredPicomatch = 1;\r\n\r\n\tconst pico = /*@__PURE__*/ requirePicomatch$1();\r\n\tconst utils = /*@__PURE__*/ requireUtils();\r\n\r\n\tfunction picomatch(glob, options, returnState = false) {\r\n\t  // default to os.platform()\r\n\t  if (options && (options.windows === null || options.windows === undefined)) {\r\n\t    // don't mutate the original options object\r\n\t    options = { ...options, windows: utils.isWindows() };\r\n\t  }\r\n\r\n\t  return pico(glob, options, returnState);\r\n\t}\r\n\r\n\tObject.assign(picomatch, pico);\r\n\tpicomatch_1 = picomatch;\r\n\treturn picomatch_1;\r\n}\r\n\r\nvar picomatchExports = /*@__PURE__*/ requirePicomatch();\r\nconst picomatch = /*@__PURE__*/getDefaultExportFromCjs(picomatchExports);\r\n\r\nconst extractors = {\r\n    ArrayPattern(names, param) {\r\n        for (const element of param.elements) {\r\n            if (element)\r\n                extractors[element.type](names, element);\r\n        }\r\n    },\r\n    AssignmentPattern(names, param) {\r\n        extractors[param.left.type](names, param.left);\r\n    },\r\n    Identifier(names, param) {\r\n        names.push(param.name);\r\n    },\r\n    MemberExpression() { },\r\n    ObjectPattern(names, param) {\r\n        for (const prop of param.properties) {\r\n            // @ts-ignore Typescript reports that this is not a valid type\r\n            if (prop.type === 'RestElement') {\r\n                extractors.RestElement(names, prop);\r\n            }\r\n            else {\r\n                extractors[prop.value.type](names, prop.value);\r\n            }\r\n        }\r\n    },\r\n    RestElement(names, param) {\r\n        extractors[param.argument.type](names, param.argument);\r\n    }\r\n};\r\nconst extractAssignedNames = function extractAssignedNames(param) {\r\n    const names = [];\r\n    extractors[param.type](names, param);\r\n    return names;\r\n};\r\n\r\n// Helper since Typescript can't detect readonly arrays with Array.isArray\r\nfunction isArray(arg) {\r\n    return Array.isArray(arg);\r\n}\r\nfunction ensureArray$1(thing) {\r\n    if (isArray(thing))\r\n        return thing;\r\n    if (thing == null)\r\n        return [];\r\n    return [thing];\r\n}\r\n\r\nconst normalizePathRegExp = new RegExp(`\\\\${win32.sep}`, 'g');\r\nconst normalizePath = function normalizePath(filename) {\r\n    return filename.replace(normalizePathRegExp, posix.sep);\r\n};\r\n\r\nfunction getMatcherString$1(id, resolutionBase) {\r\n    if (resolutionBase === false || isAbsolute(id) || id.startsWith('**')) {\r\n        return normalizePath(id);\r\n    }\r\n    // resolve('') is valid and will default to process.cwd()\r\n    const basePath = normalizePath(resolve(resolutionBase || ''))\r\n        // escape all possible (posix + win) path characters that might interfere with regex\r\n        .replace(/[-^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n    // Note that we use posix.join because:\r\n    // 1. the basePath has been normalized to use /\r\n    // 2. the incoming glob (id) matcher, also uses /\r\n    // otherwise Node will force backslash (\\) on windows\r\n    return posix.join(basePath, normalizePath(id));\r\n}\r\nconst createFilter$1 = function createFilter(include, exclude, options) {\r\n    const resolutionBase = options && options.resolve;\r\n    const getMatcher = (id) => id instanceof RegExp\r\n        ? id\r\n        : {\r\n            test: (what) => {\r\n                // this refactor is a tad overly verbose but makes for easy debugging\r\n                const pattern = getMatcherString$1(id, resolutionBase);\r\n                const fn = picomatch(pattern, { dot: true });\r\n                const result = fn(what);\r\n                return result;\r\n            }\r\n        };\r\n    const includeMatchers = ensureArray$1(include).map(getMatcher);\r\n    const excludeMatchers = ensureArray$1(exclude).map(getMatcher);\r\n    if (!includeMatchers.length && !excludeMatchers.length)\r\n        return (id) => typeof id === 'string' && !id.includes('\\0');\r\n    return function result(id) {\r\n        if (typeof id !== 'string')\r\n            return false;\r\n        if (id.includes('\\0'))\r\n            return false;\r\n        const pathId = normalizePath(id);\r\n        for (let i = 0; i < excludeMatchers.length; ++i) {\r\n            const matcher = excludeMatchers[i];\r\n            if (matcher instanceof RegExp) {\r\n                matcher.lastIndex = 0;\r\n            }\r\n            if (matcher.test(pathId))\r\n                return false;\r\n        }\r\n        for (let i = 0; i < includeMatchers.length; ++i) {\r\n            const matcher = includeMatchers[i];\r\n            if (matcher instanceof RegExp) {\r\n                matcher.lastIndex = 0;\r\n            }\r\n            if (matcher.test(pathId))\r\n                return true;\r\n        }\r\n        return !includeMatchers.length;\r\n    };\r\n};\r\n\r\nconst reservedWords = 'break case class catch const continue debugger default delete do else export extends finally for function if import in instanceof let new return super switch this throw try typeof var void while with yield enum await implements package protected static interface private public';\r\nconst builtins = 'arguments Infinity NaN undefined null true false eval uneval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Symbol Error EvalError InternalError RangeError ReferenceError SyntaxError TypeError URIError Number Math Date String RegExp Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array Map Set WeakMap WeakSet SIMD ArrayBuffer DataView JSON Promise Generator GeneratorFunction Reflect Proxy Intl';\r\nconst forbiddenIdentifiers = new Set(`${reservedWords} ${builtins}`.split(' '));\r\nforbiddenIdentifiers.add('');\r\n\r\nclass ArrayPattern extends NodeBase {\r\n    addExportedVariables(variables, exportNamesByVariable) {\r\n        for (const element of this.elements) {\r\n            element?.addExportedVariables(variables, exportNamesByVariable);\r\n        }\r\n    }\r\n    declare(kind, destructuredInitPath, init) {\r\n        const variables = [];\r\n        const includedPatternPath = getIncludedPatternPath(destructuredInitPath);\r\n        for (const element of this.elements) {\r\n            if (element !== null) {\r\n                variables.push(...element.declare(kind, includedPatternPath, init));\r\n            }\r\n        }\r\n        return variables;\r\n    }\r\n    deoptimizeAssignment(destructuredInitPath, init) {\r\n        const includedPatternPath = getIncludedPatternPath(destructuredInitPath);\r\n        for (const element of this.elements) {\r\n            element?.deoptimizeAssignment(includedPatternPath, init);\r\n        }\r\n    }\r\n    // Patterns can only be deoptimized at the empty path at the moment\r\n    deoptimizePath() {\r\n        for (const element of this.elements) {\r\n            element?.deoptimizePath(EMPTY_PATH);\r\n        }\r\n    }\r\n    hasEffectsWhenDestructuring(context, destructuredInitPath, init) {\r\n        const includedPatternPath = getIncludedPatternPath(destructuredInitPath);\r\n        for (const element of this.elements) {\r\n            if (element?.hasEffectsWhenDestructuring(context, includedPatternPath, init)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    // Patterns are only checked at the empty path at the moment\r\n    hasEffectsOnInteractionAtPath(_path, interaction, context) {\r\n        for (const element of this.elements) {\r\n            if (element?.hasEffectsOnInteractionAtPath(EMPTY_PATH, interaction, context))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    includeDestructuredIfNecessary(context, destructuredInitPath, init) {\r\n        let included = false;\r\n        const includedPatternPath = getIncludedPatternPath(destructuredInitPath);\r\n        for (const element of [...this.elements].reverse()) {\r\n            if (element) {\r\n                if (included && !element.included) {\r\n                    element.includeNode(context);\r\n                }\r\n                included =\r\n                    element.includeDestructuredIfNecessary(context, includedPatternPath, init) || included;\r\n            }\r\n        }\r\n        if (!this.included && included) {\r\n            this.includeNode(context);\r\n        }\r\n        return this.included;\r\n    }\r\n    render(code, options) {\r\n        let removedStart = this.start + 1;\r\n        for (const element of this.elements) {\r\n            if (!element)\r\n                continue;\r\n            if (element.included) {\r\n                element.render(code, options);\r\n                removedStart = element.end;\r\n            }\r\n            else {\r\n                code.remove(removedStart, this.end - 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    markDeclarationReached() {\r\n        for (const element of this.elements) {\r\n            element?.markDeclarationReached();\r\n        }\r\n    }\r\n}\r\nArrayPattern.prototype.includeNode = onlyIncludeSelf;\r\nconst getIncludedPatternPath = (destructuredInitPath) => destructuredInitPath.at(-1) === UnknownKey\r\n    ? destructuredInitPath\r\n    : [...destructuredInitPath, UnknownInteger];\r\n\r\nclass ArrowFunctionExpression extends FunctionBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.objectEntity = null;\r\n    }\r\n    get expression() {\r\n        return isFlagSet(this.flags, 8388608 /* Flag.expression */);\r\n    }\r\n    set expression(value) {\r\n        this.flags = setFlag(this.flags, 8388608 /* Flag.expression */, value);\r\n    }\r\n    createScope(parentScope) {\r\n        this.scope = new ReturnValueScope(parentScope, false);\r\n    }\r\n    hasEffects() {\r\n        return false;\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        if (this.annotationNoSideEffects &&\r\n            path.length === 0 &&\r\n            interaction.type === INTERACTION_CALLED) {\r\n            return false;\r\n        }\r\n        if (super.hasEffectsOnInteractionAtPath(path, interaction, context)) {\r\n            return true;\r\n        }\r\n        if (interaction.type === INTERACTION_CALLED) {\r\n            const { ignore, brokenFlow } = context;\r\n            context.ignore = {\r\n                breaks: false,\r\n                continues: false,\r\n                labels: new Set(),\r\n                returnYield: true,\r\n                this: false\r\n            };\r\n            if (this.body.hasEffects(context))\r\n                return true;\r\n            context.ignore = ignore;\r\n            context.brokenFlow = brokenFlow;\r\n        }\r\n        return false;\r\n    }\r\n    onlyFunctionCallUsed() {\r\n        const isIIFE = this.parent.type === CallExpression$1 &&\r\n            this.parent.callee === this;\r\n        return isIIFE || super.onlyFunctionCallUsed();\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        super.include(context, includeChildrenRecursively);\r\n        for (const parameter of this.params) {\r\n            if (!(parameter instanceof Identifier)) {\r\n                parameter.include(context, includeChildrenRecursively);\r\n            }\r\n        }\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        this.body.includePath(UNKNOWN_PATH, context);\r\n        for (const parameter of this.params) {\r\n            if (!(parameter instanceof Identifier)) {\r\n                parameter.includePath(UNKNOWN_PATH, context);\r\n            }\r\n        }\r\n    }\r\n    getObjectEntity() {\r\n        if (this.objectEntity !== null) {\r\n            return this.objectEntity;\r\n        }\r\n        return (this.objectEntity = new ObjectEntity([], OBJECT_PROTOTYPE));\r\n    }\r\n}\r\n\r\nclass ObjectPattern extends NodeBase {\r\n    addExportedVariables(variables, exportNamesByVariable) {\r\n        for (const property of this.properties) {\r\n            if (property.type === Property$1) {\r\n                property.value.addExportedVariables(variables, exportNamesByVariable);\r\n            }\r\n            else {\r\n                property.argument.addExportedVariables(variables, exportNamesByVariable);\r\n            }\r\n        }\r\n    }\r\n    declare(kind, destructuredInitPath, init) {\r\n        const variables = [];\r\n        for (const property of this.properties) {\r\n            variables.push(...property.declare(kind, destructuredInitPath, init));\r\n        }\r\n        return variables;\r\n    }\r\n    deoptimizeAssignment(destructuredInitPath, init) {\r\n        for (const property of this.properties) {\r\n            property.deoptimizeAssignment(destructuredInitPath, init);\r\n        }\r\n    }\r\n    deoptimizePath(path) {\r\n        if (path.length === 0) {\r\n            for (const property of this.properties) {\r\n                property.deoptimizePath(path);\r\n            }\r\n        }\r\n    }\r\n    hasEffectsOnInteractionAtPath(\r\n    // At the moment, this is only triggered for assignment left-hand sides,\r\n    // where the path is empty\r\n    _path, interaction, context) {\r\n        for (const property of this.properties) {\r\n            if (property.hasEffectsOnInteractionAtPath(EMPTY_PATH, interaction, context))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    hasEffectsWhenDestructuring(context, destructuredInitPath, init) {\r\n        for (const property of this.properties) {\r\n            if (property.hasEffectsWhenDestructuring(context, destructuredInitPath, init))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    includeDestructuredIfNecessary(context, destructuredInitPath, init) {\r\n        if (!this.properties.length)\r\n            return this.included;\r\n        const lastProperty = this.properties.at(-1);\r\n        let included = lastProperty.includeDestructuredIfNecessary(context, destructuredInitPath, init);\r\n        const lastPropertyIsRestElement = lastProperty.type === RestElement$1;\r\n        for (const property of this.properties.slice(0, -1)) {\r\n            if (lastPropertyIsRestElement && included && !property.included) {\r\n                property.includeNode(context);\r\n            }\r\n            included =\r\n                property.includeDestructuredIfNecessary(context, destructuredInitPath, init) || included;\r\n        }\r\n        if (!this.included && included) {\r\n            this.includeNode(context);\r\n        }\r\n        return this.included;\r\n    }\r\n    markDeclarationReached() {\r\n        for (const property of this.properties) {\r\n            property.markDeclarationReached();\r\n        }\r\n    }\r\n    render(code, options) {\r\n        if (this.properties.length > 0) {\r\n            const separatedNodes = getCommaSeparatedNodesWithBoundaries(this.properties, code, this.start + 1, this.end - 1);\r\n            let lastSeparatorPos = null;\r\n            for (const { node, separator, start, end } of separatedNodes) {\r\n                if (!node.included) {\r\n                    treeshakeNode(node, code, start, end);\r\n                    continue;\r\n                }\r\n                lastSeparatorPos = separator;\r\n                node.render(code, options);\r\n            }\r\n            if (lastSeparatorPos) {\r\n                code.remove(lastSeparatorPos, this.end - 1);\r\n            }\r\n        }\r\n    }\r\n}\r\nObjectPattern.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nObjectPattern.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass AssignmentExpression extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.isConstReassignment = false;\r\n    }\r\n    hasEffects(context) {\r\n        const { deoptimized, isConstReassignment, left, operator, right } = this;\r\n        if (!deoptimized)\r\n            this.applyDeoptimizations();\r\n        // MemberExpressions do not access the property before assignments if the\r\n        // operator is '='.\r\n        return (isConstReassignment ||\r\n            right.hasEffects(context) ||\r\n            left.hasEffectsAsAssignmentTarget(context, operator !== '=') ||\r\n            this.left.hasEffectsWhenDestructuring?.(context, EMPTY_PATH, right));\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        return this.right.hasEffectsOnInteractionAtPath(path, interaction, context);\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        const { deoptimized, isConstReassignment, left, right, operator } = this;\r\n        if (!deoptimized)\r\n            this.applyDeoptimizations();\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        const hasEffectsContext = createHasEffectsContext();\r\n        if (includeChildrenRecursively ||\r\n            isConstReassignment ||\r\n            operator !== '=' ||\r\n            left.included ||\r\n            left.hasEffectsAsAssignmentTarget(hasEffectsContext, false) ||\r\n            left.hasEffectsWhenDestructuring?.(hasEffectsContext, EMPTY_PATH, right)) {\r\n            left.includeAsAssignmentTarget(context, includeChildrenRecursively, operator !== '=');\r\n        }\r\n        right.include(context, includeChildrenRecursively);\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        this.right.includePath(UNKNOWN_PATH, context);\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        if (this.left instanceof Identifier) {\r\n            const variable = this.scope.variables.get(this.left.name);\r\n            if (variable?.kind === 'const') {\r\n                this.isConstReassignment = true;\r\n                this.scope.context.log(LOGLEVEL_WARN, logConstVariableReassignError(), this.left.start);\r\n            }\r\n        }\r\n        this.left.setAssignedValue(this.right);\r\n    }\r\n    render(code, options, { preventASI, renderedParentType, renderedSurroundingElement } = BLANK) {\r\n        const { left, right, start, end, parent } = this;\r\n        if (left.included) {\r\n            left.render(code, options);\r\n            right.render(code, options);\r\n        }\r\n        else {\r\n            const inclusionStart = findNonWhiteSpace(code.original, findFirstOccurrenceOutsideComment(code.original, '=', left.end) + 1);\r\n            code.remove(start, inclusionStart);\r\n            if (preventASI) {\r\n                removeLineBreaks(code, inclusionStart, right.start);\r\n            }\r\n            right.render(code, options, {\r\n                renderedParentType: renderedParentType || parent.type,\r\n                renderedSurroundingElement: renderedSurroundingElement || parent.type\r\n            });\r\n        }\r\n        if (options.format === 'system') {\r\n            if (left instanceof Identifier) {\r\n                const variable = left.variable;\r\n                const exportNames = options.exportNamesByVariable.get(variable);\r\n                if (exportNames) {\r\n                    if (exportNames.length === 1) {\r\n                        renderSystemExportExpression(variable, start, end, code, options);\r\n                    }\r\n                    else {\r\n                        renderSystemExportSequenceAfterExpression(variable, start, end, parent.type !== ExpressionStatement$1, code, options);\r\n                    }\r\n                    return;\r\n                }\r\n            }\r\n            else {\r\n                const systemPatternExports = [];\r\n                left.addExportedVariables(systemPatternExports, options.exportNamesByVariable);\r\n                if (systemPatternExports.length > 0) {\r\n                    renderSystemExportFunction(systemPatternExports, start, end, renderedSurroundingElement === ExpressionStatement$1, code, options);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        if (left.included &&\r\n            left instanceof ObjectPattern &&\r\n            (renderedSurroundingElement === ExpressionStatement$1 ||\r\n                renderedSurroundingElement === ArrowFunctionExpression$1)) {\r\n            code.appendRight(start, '(');\r\n            code.prependLeft(end, ')');\r\n        }\r\n    }\r\n    applyDeoptimizations() {\r\n        this.deoptimized = true;\r\n        this.left.deoptimizeAssignment(EMPTY_PATH, this.right);\r\n        this.scope.context.requestTreeshakingPass();\r\n    }\r\n}\r\n\r\nclass AssignmentPattern extends NodeBase {\r\n    addExportedVariables(variables, exportNamesByVariable) {\r\n        this.left.addExportedVariables(variables, exportNamesByVariable);\r\n    }\r\n    declare(kind, destructuredInitPath, init) {\r\n        return this.left.declare(kind, destructuredInitPath, init);\r\n    }\r\n    deoptimizeAssignment(destructuredInitPath, init) {\r\n        this.left.deoptimizeAssignment(destructuredInitPath, init);\r\n    }\r\n    deoptimizePath(path) {\r\n        if (path.length === 0) {\r\n            this.left.deoptimizePath(path);\r\n        }\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        return (path.length > 0 || this.left.hasEffectsOnInteractionAtPath(EMPTY_PATH, interaction, context));\r\n    }\r\n    hasEffectsWhenDestructuring(context, destructuredInitPath, init) {\r\n        return this.left.hasEffectsWhenDestructuring(context, destructuredInitPath, init);\r\n    }\r\n    includeDestructuredIfNecessary(context, destructuredInitPath, init) {\r\n        let included = this.left.includeDestructuredIfNecessary(context, destructuredInitPath, init) ||\r\n            this.included;\r\n        if ((included ||= this.right.shouldBeIncluded(context))) {\r\n            this.right.include(context, false);\r\n            if (!this.left.included) {\r\n                this.left.includeNode(context);\r\n                // Unfortunately, we need to include the left side again now, so that\r\n                // any declared variables are properly included.\r\n                this.left.includeDestructuredIfNecessary(context, destructuredInitPath, init);\r\n            }\r\n        }\r\n        if (!this.included && included) {\r\n            this.includeNode(context);\r\n        }\r\n        return this.included;\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        this.right.includePath(UNKNOWN_PATH, context);\r\n    }\r\n    markDeclarationReached() {\r\n        this.left.markDeclarationReached();\r\n    }\r\n    render(code, options, { isShorthandProperty } = BLANK) {\r\n        this.left.render(code, options, { isShorthandProperty });\r\n        this.right.render(code, options);\r\n    }\r\n    applyDeoptimizations() {\r\n        this.deoptimized = true;\r\n        this.left.deoptimizePath(EMPTY_PATH);\r\n        this.right.deoptimizePath(UNKNOWN_PATH);\r\n        this.scope.context.requestTreeshakingPass();\r\n    }\r\n}\r\n\r\nclass AwaitExpression extends NodeBase {\r\n    hasEffects() {\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        return true;\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        let parent = this.parent;\r\n        do {\r\n            if (parent instanceof FunctionNode || parent instanceof ArrowFunctionExpression)\r\n                return;\r\n        } while ((parent = parent.parent));\r\n        this.scope.context.usesTopLevelAwait = true;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        this.argument.include(context, includeChildrenRecursively);\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        // Thenables need to be included\r\n        this.argument.includePath(THEN_PATH, context);\r\n    }\r\n    includePath(path, context) {\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        this.argument.includePath(path, context);\r\n    }\r\n}\r\nconst THEN_PATH = ['then'];\r\n\r\nfunction getRenderedLiteralValue(value) {\r\n    if (value === undefined) {\r\n        return 'void 0';\r\n    }\r\n    if (typeof value === 'boolean') {\r\n        return String(value);\r\n    }\r\n    if (typeof value === 'string') {\r\n        return JSON.stringify(value);\r\n    }\r\n    if (typeof value === 'number') {\r\n        return getSimplifiedNumber(value);\r\n    }\r\n    return UnknownValue;\r\n}\r\nfunction getSimplifiedNumber(value) {\r\n    if (Object.is(-0, value)) {\r\n        return '-0';\r\n    }\r\n    const exp = value.toExponential();\r\n    const [base, exponent] = exp.split('e');\r\n    const floatLength = base.split('.')[1]?.length || 0;\r\n    const finalizedExp = `${base.replace('.', '')}e${parseInt(exponent) - floatLength}`;\r\n    const stringifiedValue = String(value).replace('+', '');\r\n    return finalizedExp.length < stringifiedValue.length ? finalizedExp : stringifiedValue;\r\n}\r\n\r\nconst binaryOperators = {\r\n    '!=': (left, right) => left != right,\r\n    '!==': (left, right) => left !== right,\r\n    '%': (left, right) => left % right,\r\n    '&': (left, right) => left & right,\r\n    '*': (left, right) => left * right,\r\n    // At the moment, \"**\" will be transpiled to Math.pow\r\n    '**': (left, right) => left ** right,\r\n    '+': (left, right) => left + right,\r\n    '-': (left, right) => left - right,\r\n    '/': (left, right) => left / right,\r\n    '<': (left, right) => left < right,\r\n    '<<': (left, right) => left << right,\r\n    '<=': (left, right) => left <= right,\r\n    '==': (left, right) => left == right,\r\n    '===': (left, right) => left === right,\r\n    '>': (left, right) => left > right,\r\n    '>=': (left, right) => left >= right,\r\n    '>>': (left, right) => left >> right,\r\n    '>>>': (left, right) => left >>> right,\r\n    '^': (left, right) => left ^ right,\r\n    '|': (left, right) => left | right\r\n    // We use the fallback for cases where we return something unknown\r\n    // in: () => UnknownValue,\r\n    // instanceof: () => UnknownValue,\r\n};\r\nconst UNASSIGNED$1 = Symbol('Unassigned');\r\nclass BinaryExpression extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.renderedLiteralValue = UNASSIGNED$1;\r\n    }\r\n    deoptimizeCache() {\r\n        this.renderedLiteralValue = UnknownValue;\r\n    }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        if (path.length > 0)\r\n            return UnknownValue;\r\n        const leftValue = this.left.getLiteralValueAtPath(EMPTY_PATH, recursionTracker, origin);\r\n        if (typeof leftValue === 'symbol')\r\n            return UnknownValue;\r\n        // Optimize `'export' in namespace`\r\n        if (this.operator === 'in' && this.right.variable instanceof NamespaceVariable) {\r\n            const [variable] = this.right.variable.context.traceExport(String(leftValue));\r\n            if (variable instanceof ExternalVariable)\r\n                return UnknownValue;\r\n            if (variable instanceof SyntheticNamedExportVariable)\r\n                return UnknownValue;\r\n            return !!variable;\r\n        }\r\n        const rightValue = this.right.getLiteralValueAtPath(EMPTY_PATH, recursionTracker, origin);\r\n        if (typeof rightValue === 'symbol')\r\n            return UnknownValue;\r\n        const operatorFunction = binaryOperators[this.operator];\r\n        if (!operatorFunction)\r\n            return UnknownValue;\r\n        return operatorFunction(leftValue, rightValue);\r\n    }\r\n    getRenderedLiteralValue() {\r\n        // Only optimize `'export' in ns`\r\n        if (this.operator !== 'in' || !(this.right.variable instanceof NamespaceVariable)) {\r\n            return UnknownValue;\r\n        }\r\n        if (this.renderedLiteralValue !== UNASSIGNED$1)\r\n            return this.renderedLiteralValue;\r\n        return (this.renderedLiteralValue = getRenderedLiteralValue(this.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this)));\r\n    }\r\n    hasEffects(context) {\r\n        // support some implicit type coercion runtime errors\r\n        if (this.operator === '+' &&\r\n            this.parent instanceof ExpressionStatement &&\r\n            this.left.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this) === '') {\r\n            return true;\r\n        }\r\n        return super.hasEffects(context);\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, { type }) {\r\n        return type !== INTERACTION_ACCESSED || path.length > 1;\r\n    }\r\n    include(context, includeChildrenRecursively, options) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        if (typeof this.getRenderedLiteralValue() === 'symbol') {\r\n            this.left.include(context, includeChildrenRecursively, options);\r\n            this.right.include(context, includeChildrenRecursively, options);\r\n        }\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (this.operator === 'in' && typeof this.getRenderedLiteralValue() === 'symbol') {\r\n            this.right.includePath(UNKNOWN_PATH, context);\r\n        }\r\n    }\r\n    removeAnnotations(code) {\r\n        this.left.removeAnnotations(code);\r\n    }\r\n    render(code, options, { renderedSurroundingElement } = BLANK) {\r\n        const renderedLiteralValue = this.getRenderedLiteralValue();\r\n        if (typeof renderedLiteralValue !== 'symbol') {\r\n            code.overwrite(this.start, this.end, renderedLiteralValue);\r\n        }\r\n        else {\r\n            this.left.render(code, options, { renderedSurroundingElement });\r\n            this.right.render(code, options);\r\n        }\r\n    }\r\n}\r\nBinaryExpression.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass BreakStatement extends NodeBase {\r\n    hasEffects(context) {\r\n        if (this.label) {\r\n            if (!context.ignore.labels.has(this.label.name))\r\n                return true;\r\n            context.includedLabels.add(this.label.name);\r\n        }\r\n        else {\r\n            if (!context.ignore.breaks)\r\n                return true;\r\n            context.hasBreak = true;\r\n        }\r\n        context.brokenFlow = true;\r\n        return false;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        this.included = true;\r\n        if (this.label) {\r\n            this.label.include(context, includeChildrenRecursively);\r\n            context.includedLabels.add(this.label.name);\r\n        }\r\n        else {\r\n            context.hasBreak = true;\r\n        }\r\n        context.brokenFlow = true;\r\n    }\r\n}\r\nBreakStatement.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nBreakStatement.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nfunction renderCallArguments(code, options, node) {\r\n    if (node.arguments.length > 0) {\r\n        if (node.arguments[node.arguments.length - 1].included) {\r\n            for (const argument of node.arguments) {\r\n                argument.render(code, options);\r\n            }\r\n        }\r\n        else {\r\n            let lastIncludedIndex = node.arguments.length - 2;\r\n            while (lastIncludedIndex >= 0 && !node.arguments[lastIncludedIndex].included) {\r\n                lastIncludedIndex--;\r\n            }\r\n            if (lastIncludedIndex >= 0) {\r\n                for (let index = 0; index <= lastIncludedIndex; index++) {\r\n                    node.arguments[index].render(code, options);\r\n                }\r\n                code.remove(findFirstOccurrenceOutsideComment(code.original, ',', node.arguments[lastIncludedIndex].end), node.end - 1);\r\n            }\r\n            else {\r\n                code.remove(findFirstOccurrenceOutsideComment(code.original, '(', node.callee.end) + 1, node.end - 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass CallExpressionBase extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.returnExpression = null;\r\n        this.deoptimizableDependentExpressions = [];\r\n        this.expressionsToBeDeoptimized = new Set();\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        const { args } = interaction;\r\n        const [returnExpression, isPure] = this.getReturnExpression(recursionTracker);\r\n        if (isPure)\r\n            return;\r\n        const deoptimizedExpressions = args.filter(expression => !!expression && expression !== UNKNOWN_EXPRESSION);\r\n        if (deoptimizedExpressions.length === 0)\r\n            return;\r\n        if (returnExpression === UNKNOWN_EXPRESSION) {\r\n            for (const expression of deoptimizedExpressions) {\r\n                expression.deoptimizePath(UNKNOWN_PATH);\r\n            }\r\n        }\r\n        else {\r\n            recursionTracker.withTrackedEntityAtPath(path, returnExpression, () => {\r\n                for (const expression of deoptimizedExpressions) {\r\n                    this.expressionsToBeDeoptimized.add(expression);\r\n                }\r\n                returnExpression.deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n            }, null);\r\n        }\r\n    }\r\n    deoptimizeCache() {\r\n        if (this.returnExpression?.[0] !== UNKNOWN_EXPRESSION) {\r\n            this.returnExpression = UNKNOWN_RETURN_EXPRESSION;\r\n            const { deoptimizableDependentExpressions, expressionsToBeDeoptimized } = this;\r\n            this.expressionsToBeDeoptimized = EMPTY_SET;\r\n            this.deoptimizableDependentExpressions = EMPTY_ARRAY;\r\n            for (const expression of deoptimizableDependentExpressions) {\r\n                expression.deoptimizeCache();\r\n            }\r\n            for (const expression of expressionsToBeDeoptimized) {\r\n                expression.deoptimizePath(UNKNOWN_PATH);\r\n            }\r\n        }\r\n    }\r\n    deoptimizePath(path) {\r\n        if (path.length === 0 ||\r\n            this.scope.context.deoptimizationTracker.trackEntityAtPathAndGetIfTracked(path, this)) {\r\n            return;\r\n        }\r\n        const [returnExpression] = this.getReturnExpression();\r\n        if (returnExpression !== UNKNOWN_EXPRESSION) {\r\n            returnExpression.deoptimizePath(path);\r\n        }\r\n    }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        const [returnExpression] = this.getReturnExpression(recursionTracker);\r\n        if (returnExpression === UNKNOWN_EXPRESSION) {\r\n            return UnknownValue;\r\n        }\r\n        return recursionTracker.withTrackedEntityAtPath(path, returnExpression, () => {\r\n            this.deoptimizableDependentExpressions.push(origin);\r\n            return returnExpression.getLiteralValueAtPath(path, recursionTracker, origin);\r\n        }, UnknownValue);\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\r\n        const returnExpression = this.getReturnExpression(recursionTracker);\r\n        if (returnExpression[0] === UNKNOWN_EXPRESSION) {\r\n            return returnExpression;\r\n        }\r\n        return recursionTracker.withTrackedEntityAtPath(path, returnExpression, () => {\r\n            this.deoptimizableDependentExpressions.push(origin);\r\n            const [expression, isPure] = returnExpression[0].getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\r\n            return [expression, isPure || returnExpression[1]];\r\n        }, UNKNOWN_RETURN_EXPRESSION);\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        const { type } = interaction;\r\n        if (type === INTERACTION_CALLED) {\r\n            const { args, withNew } = interaction;\r\n            if ((withNew ? context.instantiated : context.called).trackEntityAtPathAndGetIfTracked(path, args, this)) {\r\n                return false;\r\n            }\r\n        }\r\n        else if ((type === INTERACTION_ASSIGNED\r\n            ? context.assigned\r\n            : context.accessed).trackEntityAtPathAndGetIfTracked(path, this)) {\r\n            return false;\r\n        }\r\n        const [returnExpression, isPure] = this.getReturnExpression();\r\n        return ((type === INTERACTION_ASSIGNED || !isPure) &&\r\n            returnExpression.hasEffectsOnInteractionAtPath(path, interaction, context));\r\n    }\r\n}\r\n\r\nclass CallExpression extends CallExpressionBase {\r\n    get hasCheckedForWarnings() {\r\n        return isFlagSet(this.flags, 134217728 /* Flag.checkedForWarnings */);\r\n    }\r\n    set hasCheckedForWarnings(value) {\r\n        this.flags = setFlag(this.flags, 134217728 /* Flag.checkedForWarnings */, value);\r\n    }\r\n    get optional() {\r\n        return isFlagSet(this.flags, 128 /* Flag.optional */);\r\n    }\r\n    set optional(value) {\r\n        this.flags = setFlag(this.flags, 128 /* Flag.optional */, value);\r\n    }\r\n    bind() {\r\n        super.bind();\r\n        this.interaction = {\r\n            args: [\r\n                this.callee instanceof MemberExpression && !this.callee.variable\r\n                    ? this.callee.object\r\n                    : null,\r\n                ...this.arguments\r\n            ],\r\n            type: INTERACTION_CALLED,\r\n            withNew: false\r\n        };\r\n    }\r\n    getLiteralValueAtPathAsChainElement(path, recursionTracker, origin) {\r\n        return getChainElementLiteralValueAtPath(this, this.callee, path, recursionTracker, origin);\r\n    }\r\n    hasEffects(context) {\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        for (const argument of this.arguments) {\r\n            if (argument.hasEffects(context))\r\n                return true;\r\n        }\r\n        if (this.annotationPure) {\r\n            return false;\r\n        }\r\n        return (this.callee.hasEffects(context) ||\r\n            this.callee.hasEffectsOnInteractionAtPath(EMPTY_PATH, this.interaction, context));\r\n    }\r\n    hasEffectsAsChainElement(context) {\r\n        const calleeHasEffects = 'hasEffectsAsChainElement' in this.callee\r\n            ? this.callee.hasEffectsAsChainElement(context)\r\n            : this.callee.hasEffects(context);\r\n        if (calleeHasEffects === IS_SKIPPED_CHAIN)\r\n            return IS_SKIPPED_CHAIN;\r\n        if (this.optional &&\r\n            this.callee.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this) == null) {\r\n            return (!this.annotationPure && calleeHasEffects) || IS_SKIPPED_CHAIN;\r\n        }\r\n        // We only apply deoptimizations lazily once we know we are not skipping\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        for (const argument of this.arguments) {\r\n            if (argument.hasEffects(context))\r\n                return true;\r\n        }\r\n        return (!this.annotationPure &&\r\n            (calleeHasEffects ||\r\n                this.callee.hasEffectsOnInteractionAtPath(EMPTY_PATH, this.interaction, context)));\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        if (includeChildrenRecursively) {\r\n            super.include(context, true);\r\n            if (includeChildrenRecursively === INCLUDE_PARAMETERS &&\r\n                this.callee instanceof Identifier &&\r\n                this.callee.variable) {\r\n                this.callee.variable.markCalledFromTryStatement();\r\n            }\r\n        }\r\n        else {\r\n            this.callee.include(context, false);\r\n            this.callee.includeCallArguments(this.interaction, context);\r\n        }\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        this.callee.includePath(UNKNOWN_PATH, context);\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        if (this.annotations &&\r\n            this.scope.context.options.treeshake.annotations) {\r\n            this.annotationPure = this.annotations.some(comment => comment.type === 'pure');\r\n        }\r\n    }\r\n    render(code, options, { renderedSurroundingElement } = BLANK) {\r\n        this.callee.render(code, options, {\r\n            isCalleeOfRenderedParent: true,\r\n            renderedSurroundingElement\r\n        });\r\n        renderCallArguments(code, options, this);\r\n        if (this.callee instanceof Identifier && !this.hasCheckedForWarnings) {\r\n            this.hasCheckedForWarnings = true;\r\n            const variable = this.scope.findVariable(this.callee.name);\r\n            if (variable.isNamespace) {\r\n                this.scope.context.log(LOGLEVEL_WARN, logCannotCallNamespace(this.callee.name), this.start);\r\n            }\r\n            if (this.callee.name === 'eval') {\r\n                this.scope.context.log(LOGLEVEL_WARN, logEval(this.scope.context.module.id), this.start);\r\n            }\r\n        }\r\n    }\r\n    applyDeoptimizations() {\r\n        this.deoptimized = true;\r\n        this.callee.deoptimizeArgumentsOnInteractionAtPath(this.interaction, EMPTY_PATH, SHARED_RECURSION_TRACKER);\r\n        this.scope.context.requestTreeshakingPass();\r\n    }\r\n    getReturnExpression(recursionTracker = SHARED_RECURSION_TRACKER) {\r\n        if (this.returnExpression === null) {\r\n            this.returnExpression = UNKNOWN_RETURN_EXPRESSION;\r\n            return (this.returnExpression = this.callee.getReturnExpressionWhenCalledAtPath(EMPTY_PATH, this.interaction, recursionTracker, this));\r\n        }\r\n        return this.returnExpression;\r\n    }\r\n}\r\n\r\nclass CatchClause extends NodeBase {\r\n    createScope(parentScope) {\r\n        this.scope = new ParameterScope(parentScope, true);\r\n    }\r\n    parseNode(esTreeNode) {\r\n        const { body, param, type } = esTreeNode;\r\n        this.type = type;\r\n        if (param) {\r\n            this.param = new (this.scope.context.getNodeConstructor(param.type))(this, this.scope).parseNode(param);\r\n            this.param.declare('parameter', EMPTY_PATH, UNKNOWN_EXPRESSION);\r\n        }\r\n        this.body = new BlockStatement(this, this.scope.bodyScope).parseNode(body);\r\n        return super.parseNode(esTreeNode);\r\n    }\r\n}\r\nCatchClause.prototype.preventChildBlockScope = true;\r\nCatchClause.prototype.includeNode = onlyIncludeSelf;\r\n\r\nclass ChainExpression extends NodeBase {\r\n    // deoptimizations are not relevant as we are not caching values\r\n    deoptimizeCache() { }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        const literalValue = this.expression.getLiteralValueAtPathAsChainElement(path, recursionTracker, origin);\r\n        return literalValue === IS_SKIPPED_CHAIN ? undefined : literalValue;\r\n    }\r\n    hasEffects(context) {\r\n        return this.expression.hasEffectsAsChainElement(context) === true;\r\n    }\r\n    includePath(path, context) {\r\n        this.included = true;\r\n        this.expression.includePath(path, context);\r\n    }\r\n    removeAnnotations(code) {\r\n        this.expression.removeAnnotations(code);\r\n    }\r\n}\r\nChainExpression.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nChainExpression.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass ClassBodyScope extends ChildScope {\r\n    constructor(parent, classNode) {\r\n        const { context } = parent;\r\n        super(parent, context);\r\n        this.variables.set('this', (this.thisVariable = new LocalVariable('this', null, classNode, EMPTY_PATH, context, 'other')));\r\n        this.instanceScope = new ChildScope(this, context);\r\n        this.instanceScope.variables.set('this', new ThisVariable(context));\r\n    }\r\n    findLexicalBoundary() {\r\n        return this;\r\n    }\r\n}\r\n\r\nclass ClassBody extends NodeBase {\r\n    createScope(parentScope) {\r\n        this.scope = new ClassBodyScope(parentScope, this.parent);\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        this.included = true;\r\n        this.scope.context.includeVariableInModule(this.scope.thisVariable, UNKNOWN_PATH, context);\r\n        for (const definition of this.body) {\r\n            definition.include(context, includeChildrenRecursively);\r\n        }\r\n    }\r\n    parseNode(esTreeNode) {\r\n        const body = (this.body = new Array(esTreeNode.body.length));\r\n        let index = 0;\r\n        for (const definition of esTreeNode.body) {\r\n            body[index++] = new (this.scope.context.getNodeConstructor(definition.type))(this, definition.static ? this.scope : this.scope.instanceScope).parseNode(definition);\r\n        }\r\n        return super.parseNode(esTreeNode);\r\n    }\r\n}\r\nClassBody.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nClassBody.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass ClassExpression extends ClassNode {\r\n    render(code, options, { renderedSurroundingElement } = BLANK) {\r\n        super.render(code, options);\r\n        if (renderedSurroundingElement === ExpressionStatement$1) {\r\n            code.appendRight(this.start, '(');\r\n            code.prependLeft(this.end, ')');\r\n        }\r\n    }\r\n}\r\n\r\nfunction tryCastLiteralValueToBoolean(literalValue) {\r\n    if (typeof literalValue === 'symbol') {\r\n        if (literalValue === UnknownFalsyValue) {\r\n            return false;\r\n        }\r\n        if (literalValue === UnknownTruthyValue) {\r\n            return true;\r\n        }\r\n        return UnknownValue;\r\n    }\r\n    return !!literalValue;\r\n}\r\n\r\nclass MultiExpression extends ExpressionEntity {\r\n    constructor(expressions) {\r\n        super();\r\n        this.expressions = expressions;\r\n    }\r\n    deoptimizePath(path) {\r\n        for (const expression of this.expressions) {\r\n            expression.deoptimizePath(path);\r\n        }\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\r\n        return [\r\n            new MultiExpression(this.expressions.map(expression => expression.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin)[0])),\r\n            false\r\n        ];\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        for (const expression of this.expressions) {\r\n            if (expression.hasEffectsOnInteractionAtPath(path, interaction, context))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nclass ConditionalExpression extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.expressionsToBeDeoptimized = [];\r\n        this.usedBranch = null;\r\n    }\r\n    get isBranchResolutionAnalysed() {\r\n        return isFlagSet(this.flags, 65536 /* Flag.isBranchResolutionAnalysed */);\r\n    }\r\n    set isBranchResolutionAnalysed(value) {\r\n        this.flags = setFlag(this.flags, 65536 /* Flag.isBranchResolutionAnalysed */, value);\r\n    }\r\n    get hasDeoptimizedCache() {\r\n        return isFlagSet(this.flags, 33554432 /* Flag.hasDeoptimizedCache */);\r\n    }\r\n    set hasDeoptimizedCache(value) {\r\n        this.flags = setFlag(this.flags, 33554432 /* Flag.hasDeoptimizedCache */, value);\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        this.consequent.deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n        this.alternate.deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n    }\r\n    deoptimizeCache() {\r\n        if (this.hasDeoptimizedCache)\r\n            return;\r\n        this.hasDeoptimizedCache = true;\r\n        if (this.usedBranch !== null) {\r\n            const unusedBranch = this.usedBranch === this.consequent ? this.alternate : this.consequent;\r\n            this.usedBranch = null;\r\n            unusedBranch.deoptimizePath(UNKNOWN_PATH);\r\n            if (this.included) {\r\n                unusedBranch.includePath(UNKNOWN_PATH, createInclusionContext());\r\n            }\r\n            const { expressionsToBeDeoptimized } = this;\r\n            this.expressionsToBeDeoptimized = EMPTY_ARRAY;\r\n            for (const expression of expressionsToBeDeoptimized) {\r\n                expression.deoptimizeCache();\r\n            }\r\n        }\r\n    }\r\n    deoptimizePath(path) {\r\n        const usedBranch = this.getUsedBranch();\r\n        if (usedBranch) {\r\n            usedBranch.deoptimizePath(path);\r\n        }\r\n        else {\r\n            this.consequent.deoptimizePath(path);\r\n            this.alternate.deoptimizePath(path);\r\n        }\r\n    }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        const usedBranch = this.getUsedBranch();\r\n        if (!usedBranch) {\r\n            if (this.hasDeoptimizedCache) {\r\n                return UnknownValue;\r\n            }\r\n            const consequentValue = this.consequent.getLiteralValueAtPath(path, recursionTracker, origin);\r\n            const castedConsequentValue = tryCastLiteralValueToBoolean(consequentValue);\r\n            if (castedConsequentValue === UnknownValue)\r\n                return UnknownValue;\r\n            const alternateValue = this.alternate.getLiteralValueAtPath(path, recursionTracker, origin);\r\n            const castedAlternateValue = tryCastLiteralValueToBoolean(alternateValue);\r\n            if (castedConsequentValue !== castedAlternateValue)\r\n                return UnknownValue;\r\n            this.expressionsToBeDeoptimized.push(origin);\r\n            if (consequentValue !== alternateValue)\r\n                return castedConsequentValue ? UnknownTruthyValue : UnknownFalsyValue;\r\n            return consequentValue;\r\n        }\r\n        this.expressionsToBeDeoptimized.push(origin);\r\n        return usedBranch.getLiteralValueAtPath(path, recursionTracker, origin);\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\r\n        const usedBranch = this.getUsedBranch();\r\n        if (!usedBranch)\r\n            return [\r\n                new MultiExpression([\r\n                    this.consequent.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin)[0],\r\n                    this.alternate.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin)[0]\r\n                ]),\r\n                false\r\n            ];\r\n        this.expressionsToBeDeoptimized.push(origin);\r\n        return usedBranch.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\r\n    }\r\n    hasEffects(context) {\r\n        if (this.test.hasEffects(context))\r\n            return true;\r\n        const usedBranch = this.getUsedBranch();\r\n        if (!usedBranch) {\r\n            return this.consequent.hasEffects(context) || this.alternate.hasEffects(context);\r\n        }\r\n        return usedBranch.hasEffects(context);\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        const usedBranch = this.getUsedBranch();\r\n        if (!usedBranch) {\r\n            return (this.consequent.hasEffectsOnInteractionAtPath(path, interaction, context) ||\r\n                this.alternate.hasEffectsOnInteractionAtPath(path, interaction, context));\r\n        }\r\n        return usedBranch.hasEffectsOnInteractionAtPath(path, interaction, context);\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        this.included = true;\r\n        const usedBranch = this.getUsedBranch();\r\n        if (usedBranch === null || includeChildrenRecursively || this.test.shouldBeIncluded(context)) {\r\n            this.test.include(context, includeChildrenRecursively);\r\n            this.consequent.include(context, includeChildrenRecursively);\r\n            this.alternate.include(context, includeChildrenRecursively);\r\n        }\r\n        else {\r\n            usedBranch.include(context, includeChildrenRecursively);\r\n        }\r\n    }\r\n    includePath(path, context) {\r\n        this.included = true;\r\n        const usedBranch = this.getUsedBranch();\r\n        if (usedBranch === null || this.test.shouldBeIncluded(context)) {\r\n            this.consequent.includePath(path, context);\r\n            this.alternate.includePath(path, context);\r\n        }\r\n        else {\r\n            usedBranch.includePath(path, context);\r\n        }\r\n    }\r\n    includeCallArguments(interaction, context) {\r\n        const usedBranch = this.getUsedBranch();\r\n        if (usedBranch) {\r\n            usedBranch.includeCallArguments(interaction, context);\r\n        }\r\n        else {\r\n            this.consequent.includeCallArguments(interaction, context);\r\n            this.alternate.includeCallArguments(interaction, context);\r\n        }\r\n    }\r\n    removeAnnotations(code) {\r\n        this.test.removeAnnotations(code);\r\n    }\r\n    render(code, options, { isCalleeOfRenderedParent, preventASI, renderedParentType, renderedSurroundingElement } = BLANK) {\r\n        if (this.test.included) {\r\n            this.test.render(code, options, { renderedSurroundingElement });\r\n            this.consequent.render(code, options);\r\n            this.alternate.render(code, options);\r\n        }\r\n        else {\r\n            const usedBranch = this.getUsedBranch();\r\n            const colonPos = findFirstOccurrenceOutsideComment(code.original, ':', this.consequent.end);\r\n            const inclusionStart = findNonWhiteSpace(code.original, (this.consequent.included\r\n                ? findFirstOccurrenceOutsideComment(code.original, '?', this.test.end)\r\n                : colonPos) + 1);\r\n            if (preventASI) {\r\n                removeLineBreaks(code, inclusionStart, usedBranch.start);\r\n            }\r\n            code.remove(this.start, inclusionStart);\r\n            if (this.consequent.included) {\r\n                code.remove(colonPos, this.end);\r\n            }\r\n            this.test.removeAnnotations(code);\r\n            usedBranch.render(code, options, {\r\n                isCalleeOfRenderedParent,\r\n                preventASI: true,\r\n                renderedParentType: renderedParentType || this.parent.type,\r\n                renderedSurroundingElement: renderedSurroundingElement || this.parent.type\r\n            });\r\n        }\r\n    }\r\n    getUsedBranch() {\r\n        if (this.isBranchResolutionAnalysed) {\r\n            return this.usedBranch;\r\n        }\r\n        this.isBranchResolutionAnalysed = true;\r\n        const testValue = tryCastLiteralValueToBoolean(this.test.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this));\r\n        return typeof testValue === 'symbol'\r\n            ? null\r\n            : (this.usedBranch = testValue ? this.consequent : this.alternate);\r\n    }\r\n}\r\nConditionalExpression.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nConditionalExpression.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass ContinueStatement extends NodeBase {\r\n    hasEffects(context) {\r\n        if (this.label) {\r\n            if (!context.ignore.labels.has(this.label.name))\r\n                return true;\r\n            context.includedLabels.add(this.label.name);\r\n        }\r\n        else {\r\n            if (!context.ignore.continues)\r\n                return true;\r\n            context.hasContinue = true;\r\n        }\r\n        context.brokenFlow = true;\r\n        return false;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        this.included = true;\r\n        if (this.label) {\r\n            this.label.include(context, includeChildrenRecursively);\r\n            context.includedLabels.add(this.label.name);\r\n        }\r\n        else {\r\n            context.hasContinue = true;\r\n        }\r\n        context.brokenFlow = true;\r\n    }\r\n}\r\nContinueStatement.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nContinueStatement.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass DebuggerStatement extends NodeBase {\r\n    hasEffects() {\r\n        return true;\r\n    }\r\n}\r\nDebuggerStatement.prototype.includeNode = onlyIncludeSelf;\r\n\r\nclass Decorator extends NodeBase {\r\n    hasEffects(context) {\r\n        return (this.expression.hasEffects(context) ||\r\n            this.expression.hasEffectsOnInteractionAtPath(EMPTY_PATH, NODE_INTERACTION_UNKNOWN_CALL, context));\r\n    }\r\n}\r\nDecorator.prototype.includeNode = onlyIncludeSelf;\r\n\r\nfunction hasLoopBodyEffects(context, body) {\r\n    const { brokenFlow, hasBreak, hasContinue, ignore } = context;\r\n    const { breaks, continues } = ignore;\r\n    ignore.breaks = true;\r\n    ignore.continues = true;\r\n    context.hasBreak = false;\r\n    context.hasContinue = false;\r\n    if (body.hasEffects(context))\r\n        return true;\r\n    ignore.breaks = breaks;\r\n    ignore.continues = continues;\r\n    context.hasBreak = hasBreak;\r\n    context.hasContinue = hasContinue;\r\n    context.brokenFlow = brokenFlow;\r\n    return false;\r\n}\r\nfunction includeLoopBody(context, body, includeChildrenRecursively) {\r\n    const { brokenFlow, hasBreak, hasContinue } = context;\r\n    context.hasBreak = false;\r\n    context.hasContinue = false;\r\n    body.include(context, includeChildrenRecursively, { asSingleStatement: true });\r\n    context.hasBreak = hasBreak;\r\n    context.hasContinue = hasContinue;\r\n    context.brokenFlow = brokenFlow;\r\n}\r\n\r\nclass DoWhileStatement extends NodeBase {\r\n    hasEffects(context) {\r\n        if (this.test.hasEffects(context))\r\n            return true;\r\n        return hasLoopBodyEffects(context, this.body);\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        this.included = true;\r\n        this.test.include(context, includeChildrenRecursively);\r\n        includeLoopBody(context, this.body, includeChildrenRecursively);\r\n    }\r\n}\r\nDoWhileStatement.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nDoWhileStatement.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass EmptyStatement extends NodeBase {\r\n    hasEffects() {\r\n        return false;\r\n    }\r\n}\r\nEmptyStatement.prototype.includeNode = onlyIncludeSelf;\r\n\r\nclass ExportAllDeclaration extends NodeBase {\r\n    hasEffects() {\r\n        return false;\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        this.scope.context.addExport(this);\r\n    }\r\n    render(code, _options, nodeRenderOptions) {\r\n        code.remove(nodeRenderOptions.start, nodeRenderOptions.end);\r\n    }\r\n}\r\nExportAllDeclaration.prototype.needsBoundaries = true;\r\nExportAllDeclaration.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nExportAllDeclaration.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass ExportNamedDeclaration extends NodeBase {\r\n    bind() {\r\n        // Do not bind specifiers\r\n        this.declaration?.bind();\r\n    }\r\n    hasEffects(context) {\r\n        return !!this.declaration?.hasEffects(context);\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        this.scope.context.addExport(this);\r\n    }\r\n    removeAnnotations(code) {\r\n        this.declaration?.removeAnnotations(code);\r\n    }\r\n    render(code, options, nodeRenderOptions) {\r\n        const { start, end } = nodeRenderOptions;\r\n        if (this.declaration === null) {\r\n            code.remove(start, end);\r\n        }\r\n        else {\r\n            let endBoundary = this.declaration.start;\r\n            // the start of the decorator may be before the start of the class declaration\r\n            if (this.declaration instanceof ClassDeclaration) {\r\n                const decorators = this.declaration.decorators;\r\n                for (const decorator of decorators) {\r\n                    endBoundary = Math.min(endBoundary, decorator.start);\r\n                }\r\n                if (endBoundary <= this.start) {\r\n                    endBoundary = this.declaration.start;\r\n                }\r\n            }\r\n            code.remove(this.start, endBoundary);\r\n            this.declaration.render(code, options, { end, start });\r\n        }\r\n    }\r\n}\r\nExportNamedDeclaration.prototype.needsBoundaries = true;\r\nExportNamedDeclaration.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nExportNamedDeclaration.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass ExportSpecifier extends NodeBase {\r\n}\r\nExportSpecifier.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nExportSpecifier.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass ForInStatement extends NodeBase {\r\n    createScope(parentScope) {\r\n        this.scope = new BlockScope(parentScope);\r\n    }\r\n    hasEffects(context) {\r\n        const { body, deoptimized, left, right } = this;\r\n        if (!deoptimized)\r\n            this.applyDeoptimizations();\r\n        if (left.hasEffectsAsAssignmentTarget(context, false) || right.hasEffects(context))\r\n            return true;\r\n        return hasLoopBodyEffects(context, body);\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        const { body, deoptimized, left, right } = this;\r\n        if (!deoptimized)\r\n            this.applyDeoptimizations();\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        left.includeAsAssignmentTarget(context, includeChildrenRecursively || true, false);\r\n        right.include(context, includeChildrenRecursively);\r\n        includeLoopBody(context, body, includeChildrenRecursively);\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        this.right.includePath(UNKNOWN_PATH, context);\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        this.left.setAssignedValue(UNKNOWN_EXPRESSION);\r\n    }\r\n    render(code, options) {\r\n        this.left.render(code, options, NO_SEMICOLON);\r\n        this.right.render(code, options, NO_SEMICOLON);\r\n        // handle no space between \"in\" and the right side\r\n        if (code.original.charCodeAt(this.right.start - 1) === 110 /* n */) {\r\n            code.prependLeft(this.right.start, ' ');\r\n        }\r\n        this.body.render(code, options);\r\n    }\r\n    applyDeoptimizations() {\r\n        this.deoptimized = true;\r\n        this.left.deoptimizePath(EMPTY_PATH);\r\n        this.scope.context.requestTreeshakingPass();\r\n    }\r\n}\r\n\r\nclass ForOfStatement extends NodeBase {\r\n    get await() {\r\n        return isFlagSet(this.flags, 131072 /* Flag.await */);\r\n    }\r\n    set await(value) {\r\n        this.flags = setFlag(this.flags, 131072 /* Flag.await */, value);\r\n    }\r\n    createScope(parentScope) {\r\n        this.scope = new BlockScope(parentScope);\r\n    }\r\n    hasEffects() {\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        // Placeholder until proper Symbol.Iterator support\r\n        return true;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        const { body, deoptimized, left, right } = this;\r\n        if (!deoptimized)\r\n            this.applyDeoptimizations();\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        left.includeAsAssignmentTarget(context, includeChildrenRecursively || true, false);\r\n        right.include(context, includeChildrenRecursively);\r\n        includeLoopBody(context, body, includeChildrenRecursively);\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        this.right.includePath(UNKNOWN_PATH, context);\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        this.left.setAssignedValue(UNKNOWN_EXPRESSION);\r\n    }\r\n    render(code, options) {\r\n        this.left.render(code, options, NO_SEMICOLON);\r\n        this.right.render(code, options, NO_SEMICOLON);\r\n        // handle no space between \"of\" and the right side\r\n        if (code.original.charCodeAt(this.right.start - 1) === 102 /* f */) {\r\n            code.prependLeft(this.right.start, ' ');\r\n        }\r\n        this.body.render(code, options);\r\n    }\r\n    applyDeoptimizations() {\r\n        this.deoptimized = true;\r\n        this.left.deoptimizePath(EMPTY_PATH);\r\n        this.right.deoptimizePath(UNKNOWN_PATH);\r\n        this.scope.context.requestTreeshakingPass();\r\n    }\r\n}\r\n\r\nclass ForStatement extends NodeBase {\r\n    createScope(parentScope) {\r\n        this.scope = new BlockScope(parentScope);\r\n    }\r\n    hasEffects(context) {\r\n        if (this.init?.hasEffects(context) ||\r\n            this.test?.hasEffects(context) ||\r\n            this.update?.hasEffects(context)) {\r\n            return true;\r\n        }\r\n        return hasLoopBodyEffects(context, this.body);\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        this.included = true;\r\n        this.init?.include(context, includeChildrenRecursively, {\r\n            asSingleStatement: true\r\n        });\r\n        this.test?.include(context, includeChildrenRecursively);\r\n        this.update?.include(context, includeChildrenRecursively);\r\n        includeLoopBody(context, this.body, includeChildrenRecursively);\r\n    }\r\n    render(code, options) {\r\n        this.init?.render(code, options, NO_SEMICOLON);\r\n        this.test?.render(code, options, NO_SEMICOLON);\r\n        this.update?.render(code, options, NO_SEMICOLON);\r\n        this.body.render(code, options);\r\n    }\r\n}\r\nForStatement.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nForStatement.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass FunctionExpression extends FunctionNode {\r\n    createScope(parentScope) {\r\n        super.createScope((this.idScope = new ChildScope(parentScope, parentScope.context)));\r\n    }\r\n    parseNode(esTreeNode) {\r\n        if (esTreeNode.id !== null) {\r\n            this.id = new Identifier(this, this.idScope).parseNode(esTreeNode.id);\r\n        }\r\n        return super.parseNode(esTreeNode);\r\n    }\r\n    onlyFunctionCallUsed() {\r\n        const isIIFE = this.parent.type === CallExpression$1 &&\r\n            this.parent.callee === this &&\r\n            (this.id === null || this.id.variable.getOnlyFunctionCallUsed());\r\n        return isIIFE || super.onlyFunctionCallUsed();\r\n    }\r\n    render(code, options, { renderedSurroundingElement } = BLANK) {\r\n        super.render(code, options);\r\n        if (renderedSurroundingElement === ExpressionStatement$1) {\r\n            code.appendRight(this.start, '(');\r\n            code.prependLeft(this.end, ')');\r\n        }\r\n    }\r\n}\r\n\r\nclass TrackingScope extends BlockScope {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.hoistedDeclarations = [];\r\n    }\r\n    addDeclaration(identifier, context, init, destructuredInitPath, kind) {\r\n        this.hoistedDeclarations.push(identifier);\r\n        return super.addDeclaration(identifier, context, init, destructuredInitPath, kind);\r\n    }\r\n}\r\n\r\nconst unset = Symbol('unset');\r\nclass IfStatement extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.testValue = unset;\r\n    }\r\n    deoptimizeCache() {\r\n        this.testValue = UnknownValue;\r\n    }\r\n    hasEffects(context) {\r\n        if (this.test.hasEffects(context)) {\r\n            return true;\r\n        }\r\n        const testValue = this.getTestValue();\r\n        if (typeof testValue === 'symbol') {\r\n            const { brokenFlow } = context;\r\n            if (this.consequent.hasEffects(context))\r\n                return true;\r\n            const consequentBrokenFlow = context.brokenFlow;\r\n            context.brokenFlow = brokenFlow;\r\n            if (this.alternate === null)\r\n                return false;\r\n            if (this.alternate.hasEffects(context))\r\n                return true;\r\n            context.brokenFlow = context.brokenFlow && consequentBrokenFlow;\r\n            return false;\r\n        }\r\n        return testValue ? this.consequent.hasEffects(context) : !!this.alternate?.hasEffects(context);\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        this.included = true;\r\n        if (includeChildrenRecursively) {\r\n            this.includeRecursively(includeChildrenRecursively, context);\r\n        }\r\n        else {\r\n            const testValue = this.getTestValue();\r\n            if (typeof testValue === 'symbol') {\r\n                this.includeUnknownTest(context);\r\n            }\r\n            else {\r\n                this.includeKnownTest(context, testValue);\r\n            }\r\n        }\r\n    }\r\n    parseNode(esTreeNode) {\r\n        this.consequent = new (this.scope.context.getNodeConstructor(esTreeNode.consequent.type))(this, (this.consequentScope = new TrackingScope(this.scope))).parseNode(esTreeNode.consequent);\r\n        if (esTreeNode.alternate) {\r\n            this.alternate = new (this.scope.context.getNodeConstructor(esTreeNode.alternate.type))(this, (this.alternateScope = new TrackingScope(this.scope))).parseNode(esTreeNode.alternate);\r\n        }\r\n        return super.parseNode(esTreeNode);\r\n    }\r\n    render(code, options) {\r\n        const { snippets: { getPropertyAccess } } = options;\r\n        // Note that unknown test values are always included\r\n        const testValue = this.getTestValue();\r\n        const hoistedDeclarations = [];\r\n        const includesIfElse = this.test.included;\r\n        const noTreeshake = !this.scope.context.options.treeshake;\r\n        if (includesIfElse) {\r\n            this.test.render(code, options);\r\n        }\r\n        else {\r\n            code.remove(this.start, this.consequent.start);\r\n        }\r\n        if (this.consequent.included && (noTreeshake || typeof testValue === 'symbol' || testValue)) {\r\n            this.consequent.render(code, options);\r\n        }\r\n        else {\r\n            code.overwrite(this.consequent.start, this.consequent.end, includesIfElse ? ';' : '');\r\n            hoistedDeclarations.push(...this.consequentScope.hoistedDeclarations);\r\n        }\r\n        if (this.alternate) {\r\n            if (this.alternate.included && (noTreeshake || typeof testValue === 'symbol' || !testValue)) {\r\n                if (includesIfElse) {\r\n                    if (code.original.charCodeAt(this.alternate.start - 1) === 101) {\r\n                        code.prependLeft(this.alternate.start, ' ');\r\n                    }\r\n                }\r\n                else {\r\n                    code.remove(this.consequent.end, this.alternate.start);\r\n                }\r\n                this.alternate.render(code, options);\r\n            }\r\n            else {\r\n                if (includesIfElse && this.shouldKeepAlternateBranch()) {\r\n                    code.overwrite(this.alternate.start, this.end, ';');\r\n                }\r\n                else {\r\n                    code.remove(this.consequent.end, this.end);\r\n                }\r\n                hoistedDeclarations.push(...this.alternateScope.hoistedDeclarations);\r\n            }\r\n        }\r\n        this.renderHoistedDeclarations(hoistedDeclarations, code, getPropertyAccess);\r\n    }\r\n    getTestValue() {\r\n        if (this.testValue === unset) {\r\n            return (this.testValue = tryCastLiteralValueToBoolean(this.test.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this)));\r\n        }\r\n        return this.testValue;\r\n    }\r\n    includeKnownTest(context, testValue) {\r\n        if (this.test.shouldBeIncluded(context)) {\r\n            this.test.include(context, false);\r\n        }\r\n        if (testValue && this.consequent.shouldBeIncluded(context)) {\r\n            this.consequent.include(context, false, { asSingleStatement: true });\r\n        }\r\n        if (!testValue && this.alternate?.shouldBeIncluded(context)) {\r\n            this.alternate.include(context, false, { asSingleStatement: true });\r\n        }\r\n    }\r\n    includeRecursively(includeChildrenRecursively, context) {\r\n        this.test.include(context, includeChildrenRecursively);\r\n        this.consequent.include(context, includeChildrenRecursively);\r\n        this.alternate?.include(context, includeChildrenRecursively);\r\n    }\r\n    includeUnknownTest(context) {\r\n        this.test.include(context, false);\r\n        const { brokenFlow } = context;\r\n        let consequentBrokenFlow = false;\r\n        if (this.consequent.shouldBeIncluded(context)) {\r\n            this.consequent.include(context, false, { asSingleStatement: true });\r\n            consequentBrokenFlow = context.brokenFlow;\r\n            context.brokenFlow = brokenFlow;\r\n        }\r\n        if (this.alternate?.shouldBeIncluded(context)) {\r\n            this.alternate.include(context, false, { asSingleStatement: true });\r\n            context.brokenFlow = context.brokenFlow && consequentBrokenFlow;\r\n        }\r\n    }\r\n    renderHoistedDeclarations(hoistedDeclarations, code, getPropertyAccess) {\r\n        const hoistedVariables = [\r\n            ...new Set(hoistedDeclarations.map(identifier => {\r\n                const variable = identifier.variable;\r\n                return variable.included ? variable.getName(getPropertyAccess) : '';\r\n            }))\r\n        ]\r\n            .filter(Boolean)\r\n            .join(', ');\r\n        if (hoistedVariables) {\r\n            const parentType = this.parent.type;\r\n            const needsBraces = parentType !== Program$1 && parentType !== BlockStatement$1;\r\n            code.prependRight(this.start, `${needsBraces ? '{ ' : ''}var ${hoistedVariables}; `);\r\n            if (needsBraces) {\r\n                code.appendLeft(this.end, ` }`);\r\n            }\r\n        }\r\n    }\r\n    shouldKeepAlternateBranch() {\r\n        let currentParent = this.parent;\r\n        do {\r\n            if (currentParent instanceof IfStatement && currentParent.alternate) {\r\n                return true;\r\n            }\r\n            if (currentParent instanceof BlockStatement) {\r\n                return false;\r\n            }\r\n            currentParent = currentParent.parent;\r\n        } while (currentParent);\r\n        return false;\r\n    }\r\n}\r\nIfStatement.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nIfStatement.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass ImportAttribute extends NodeBase {\r\n}\r\n\r\nclass ImportDeclaration extends NodeBase {\r\n    // Do not bind specifiers or attributes\r\n    bind() { }\r\n    hasEffects() {\r\n        return false;\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        this.scope.context.addImport(this);\r\n    }\r\n    render(code, _options, nodeRenderOptions) {\r\n        code.remove(nodeRenderOptions.start, nodeRenderOptions.end);\r\n    }\r\n}\r\nImportDeclaration.prototype.needsBoundaries = true;\r\nImportDeclaration.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nImportDeclaration.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass ImportDefaultSpecifier extends NodeBase {\r\n}\r\nImportDefaultSpecifier.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nImportDefaultSpecifier.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nfunction isReassignedExportsMember(variable, exportNamesByVariable) {\r\n    return (variable.renderBaseName !== null && exportNamesByVariable.has(variable) && variable.isReassigned);\r\n}\r\n\r\nclass VariableDeclarator extends NodeBase {\r\n    declareDeclarator(kind, isUsingDeclaration) {\r\n        this.isUsingDeclaration = isUsingDeclaration;\r\n        this.id.declare(kind, EMPTY_PATH, this.init || UNDEFINED_EXPRESSION);\r\n    }\r\n    deoptimizePath(path) {\r\n        this.id.deoptimizePath(path);\r\n    }\r\n    hasEffects(context) {\r\n        const initEffect = this.init?.hasEffects(context);\r\n        this.id.markDeclarationReached();\r\n        return (initEffect ||\r\n            this.isUsingDeclaration ||\r\n            this.id.hasEffects(context) ||\r\n            (this.scope.context.options.treeshake\r\n                .propertyReadSideEffects &&\r\n                this.id.hasEffectsWhenDestructuring(context, EMPTY_PATH, this.init || UNDEFINED_EXPRESSION)));\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        const { id, init } = this;\r\n        if (!this.included)\r\n            this.includeNode();\r\n        init?.include(context, includeChildrenRecursively);\r\n        id.markDeclarationReached();\r\n        if (includeChildrenRecursively) {\r\n            id.include(context, includeChildrenRecursively);\r\n        }\r\n        else {\r\n            id.includeDestructuredIfNecessary(context, EMPTY_PATH, init || UNDEFINED_EXPRESSION);\r\n        }\r\n    }\r\n    removeAnnotations(code) {\r\n        this.init?.removeAnnotations(code);\r\n    }\r\n    render(code, options) {\r\n        const { exportNamesByVariable, snippets: { _, getPropertyAccess } } = options;\r\n        const { end, id, init, start } = this;\r\n        const renderId = id.included || this.isUsingDeclaration;\r\n        if (renderId) {\r\n            id.render(code, options);\r\n        }\r\n        else {\r\n            const operatorPos = findFirstOccurrenceOutsideComment(code.original, '=', id.end);\r\n            code.remove(start, findNonWhiteSpace(code.original, operatorPos + 1));\r\n        }\r\n        if (init) {\r\n            if (id instanceof Identifier && init instanceof ClassExpression && !init.id) {\r\n                const renderedVariable = id.variable.getName(getPropertyAccess);\r\n                if (renderedVariable !== id.name) {\r\n                    code.appendLeft(init.start + 5, ` ${id.name}`);\r\n                }\r\n            }\r\n            init.render(code, options, renderId ? BLANK : { renderedSurroundingElement: ExpressionStatement$1 });\r\n        }\r\n        else if (id instanceof Identifier &&\r\n            isReassignedExportsMember(id.variable, exportNamesByVariable)) {\r\n            code.appendLeft(end, `${_}=${_}void 0`);\r\n        }\r\n    }\r\n    includeNode() {\r\n        this.included = true;\r\n        const { id, init } = this;\r\n        if (init && id instanceof Identifier && init instanceof ClassExpression && !init.id) {\r\n            const { name, variable } = id;\r\n            for (const accessedVariable of init.scope.accessedOutsideVariables.values()) {\r\n                if (accessedVariable !== variable) {\r\n                    accessedVariable.forbidName(name);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nVariableDeclarator.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nfunction getChunkInfoWithPath(chunk) {\r\n    return { fileName: chunk.getFileName(), ...chunk.getPreRenderedChunkInfo() };\r\n}\r\nclass ImportExpression extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.inlineNamespace = null;\r\n        this.hasUnknownAccessedKey = false;\r\n        this.accessedPropKey = new Set();\r\n        this.attributes = null;\r\n        this.mechanism = null;\r\n        this.namespaceExportName = undefined;\r\n        this.resolution = null;\r\n        this.resolutionString = null;\r\n    }\r\n    get shouldIncludeDynamicAttributes() {\r\n        return isFlagSet(this.flags, 268435456 /* Flag.shouldIncludeDynamicAttributes */);\r\n    }\r\n    set shouldIncludeDynamicAttributes(value) {\r\n        this.flags = setFlag(this.flags, 268435456 /* Flag.shouldIncludeDynamicAttributes */, value);\r\n    }\r\n    bind() {\r\n        this.source.bind();\r\n        this.options?.bind();\r\n    }\r\n    /**\r\n     * Get imported variables for deterministic usage, valid cases are:\r\n     *\r\n     * 1. `const { foo } = await import('bar')`.\r\n     * 2. `(await import('bar')).foo`\r\n     * 3. `import('bar').then(({ foo }) => {})`\r\n     *\r\n     * Returns empty array if it's side-effect only import.\r\n     * Returns undefined if it's not fully deterministic.\r\n     */\r\n    getDeterministicImportedNames() {\r\n        const parent1 = this.parent;\r\n        // Side-effect only: import('bar')\r\n        if (parent1 instanceof ExpressionStatement) {\r\n            return EMPTY_ARRAY;\r\n        }\r\n        if (parent1 instanceof AwaitExpression) {\r\n            const parent2 = parent1.parent;\r\n            // Side effect only: await import('bar')\r\n            if (parent2 instanceof ExpressionStatement) {\r\n                return EMPTY_ARRAY;\r\n            }\r\n            // Case 1: const { foo } / module = await import('bar')\r\n            if (parent2 instanceof VariableDeclarator) {\r\n                const declaration = parent2.id;\r\n                if (declaration instanceof Identifier) {\r\n                    return this.hasUnknownAccessedKey ? undefined : [...this.accessedPropKey];\r\n                }\r\n                if (declaration instanceof ObjectPattern) {\r\n                    return getDeterministicObjectDestructure(declaration);\r\n                }\r\n            }\r\n            // Case 2: (await import('bar')).foo\r\n            if (parent2 instanceof MemberExpression) {\r\n                const id = parent2.property;\r\n                if (!parent2.computed && id instanceof Identifier) {\r\n                    return [id.name];\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (parent1 instanceof MemberExpression) {\r\n            const callExpression = parent1.parent;\r\n            const property = parent1.property;\r\n            if (!(callExpression instanceof CallExpression) || !(property instanceof Identifier)) {\r\n                return;\r\n            }\r\n            const memberName = property.name;\r\n            // side-effect only, when only chaining .catch or .finally\r\n            if (callExpression.parent instanceof ExpressionStatement &&\r\n                ['catch', 'finally'].includes(memberName)) {\r\n                return EMPTY_ARRAY;\r\n            }\r\n            if (memberName !== 'then')\r\n                return;\r\n            // Side-effect only: import('bar').then()\r\n            if (callExpression.arguments.length === 0) {\r\n                return EMPTY_ARRAY;\r\n            }\r\n            const thenCallback = callExpression.arguments[0];\r\n            if (callExpression.arguments.length !== 1 ||\r\n                !(thenCallback instanceof ArrowFunctionExpression ||\r\n                    thenCallback instanceof FunctionExpression)) {\r\n                return;\r\n            }\r\n            // Side-effect only: import('bar').then(() => {})\r\n            if (thenCallback.params.length === 0) {\r\n                return EMPTY_ARRAY;\r\n            }\r\n            const declaration = thenCallback.params[0];\r\n            if (thenCallback.params.length === 1 && declaration instanceof ObjectPattern) {\r\n                return getDeterministicObjectDestructure(declaration);\r\n            }\r\n            return this.hasUnknownAccessedKey ? undefined : [...this.accessedPropKey];\r\n        }\r\n    }\r\n    hasEffects() {\r\n        return true;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        this.source.include(context, includeChildrenRecursively);\r\n        if (this.shouldIncludeDynamicAttributes)\r\n            this.options?.include(context, includeChildrenRecursively);\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (this.shouldIncludeDynamicAttributes)\r\n            this.options?.includePath(UNKNOWN_PATH, context);\r\n        this.scope.context.includeDynamicImport(this);\r\n        this.scope.addAccessedDynamicImport(this);\r\n    }\r\n    includePath(path, context) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        // Technically, this is not correct as dynamic imports return a Promise.\r\n        if (this.hasUnknownAccessedKey)\r\n            return;\r\n        if (path[0] === UnknownKey) {\r\n            this.hasUnknownAccessedKey = true;\r\n        }\r\n        else if (typeof path[0] === 'string') {\r\n            this.accessedPropKey.add(path[0]);\r\n        }\r\n        // Update included paths\r\n        this.scope.context.includeDynamicImport(this);\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        this.scope.context.addDynamicImport(this);\r\n    }\r\n    parseNode(esTreeNode) {\r\n        this.sourceAstNode = esTreeNode.source;\r\n        return super.parseNode(esTreeNode);\r\n    }\r\n    render(code, options) {\r\n        const { snippets: { _, getDirectReturnFunction, getObject, getPropertyAccess }, importAttributesKey } = options;\r\n        if (this.inlineNamespace) {\r\n            const [left, right] = getDirectReturnFunction([], {\r\n                functionReturn: true,\r\n                lineBreakIndent: null,\r\n                name: null\r\n            });\r\n            code.overwrite(this.start, this.end, `Promise.resolve().then(${left}${this.inlineNamespace.getName(getPropertyAccess)}${right})`);\r\n            return;\r\n        }\r\n        if (this.mechanism) {\r\n            code.overwrite(this.start, findFirstOccurrenceOutsideComment(code.original, '(', this.start + 6) + 1, this.mechanism.left);\r\n            code.overwrite(this.end - 1, this.end, this.mechanism.right);\r\n        }\r\n        if (this.resolutionString) {\r\n            code.overwrite(this.source.start, this.source.end, this.resolutionString);\r\n            if (this.namespaceExportName) {\r\n                const [left, right] = getDirectReturnFunction(['n'], {\r\n                    functionReturn: true,\r\n                    lineBreakIndent: null,\r\n                    name: null\r\n                });\r\n                code.prependLeft(this.end, `.then(${left}n.${this.namespaceExportName}${right})`);\r\n            }\r\n        }\r\n        else {\r\n            this.source.render(code, options);\r\n        }\r\n        if (this.attributes !== true) {\r\n            if (this.options) {\r\n                code.overwrite(this.source.end, this.end - 1, '', { contentOnly: true });\r\n            }\r\n            if (this.attributes) {\r\n                code.appendLeft(this.end - 1, `,${_}${getObject([[importAttributesKey, this.attributes]], {\r\n                    lineBreakIndent: null\r\n                })}`);\r\n            }\r\n        }\r\n    }\r\n    setExternalResolution(exportMode, resolution, options, snippets, pluginDriver, accessedGlobalsByScope, resolutionString, namespaceExportName, attributes, ownChunk, targetChunk) {\r\n        const { format } = options;\r\n        this.inlineNamespace = null;\r\n        this.resolution = resolution;\r\n        this.resolutionString = resolutionString;\r\n        this.namespaceExportName = namespaceExportName;\r\n        this.attributes = attributes;\r\n        const accessedGlobals = [...(accessedImportGlobals[format] || [])];\r\n        let helper;\r\n        ({ helper, mechanism: this.mechanism } = this.getDynamicImportMechanismAndHelper(resolution, exportMode, options, snippets, pluginDriver, ownChunk, targetChunk));\r\n        if (helper) {\r\n            accessedGlobals.push(helper);\r\n        }\r\n        if (accessedGlobals.length > 0) {\r\n            this.scope.addAccessedGlobals(accessedGlobals, accessedGlobalsByScope);\r\n        }\r\n    }\r\n    setInternalResolution(inlineNamespace) {\r\n        this.inlineNamespace = inlineNamespace;\r\n    }\r\n    getDynamicImportMechanismAndHelper(resolution, exportMode, { compact, dynamicImportInCjs, format, generatedCode: { arrowFunctions }, interop }, { _, getDirectReturnFunction, getDirectReturnIifeLeft }, pluginDriver, ownChunk, targetChunk) {\r\n        const mechanism = pluginDriver.hookFirstSync('renderDynamicImport', [\r\n            {\r\n                chunk: getChunkInfoWithPath(ownChunk),\r\n                customResolution: typeof this.resolution === 'string' ? this.resolution : null,\r\n                format,\r\n                getTargetChunkImports() {\r\n                    if (targetChunk === null)\r\n                        return null;\r\n                    const chunkInfos = [];\r\n                    const importerPath = ownChunk.getFileName();\r\n                    for (const dep of targetChunk.dependencies) {\r\n                        const resolvedImportPath = `'${dep.getImportPath(importerPath)}'`;\r\n                        if (dep instanceof ExternalChunk) {\r\n                            chunkInfos.push({\r\n                                fileName: dep.getFileName(),\r\n                                resolvedImportPath,\r\n                                type: 'external'\r\n                            });\r\n                        }\r\n                        else {\r\n                            chunkInfos.push({\r\n                                chunk: dep.getPreRenderedChunkInfo(),\r\n                                fileName: dep.getFileName(),\r\n                                resolvedImportPath,\r\n                                type: 'internal'\r\n                            });\r\n                        }\r\n                    }\r\n                    return chunkInfos;\r\n                },\r\n                moduleId: this.scope.context.module.id,\r\n                targetChunk: targetChunk ? getChunkInfoWithPath(targetChunk) : null,\r\n                targetModuleId: this.resolution && typeof this.resolution !== 'string' ? this.resolution.id : null\r\n            }\r\n        ]);\r\n        if (mechanism) {\r\n            return { helper: null, mechanism };\r\n        }\r\n        const hasDynamicTarget = !this.resolution || typeof this.resolution === 'string';\r\n        switch (format) {\r\n            case 'cjs': {\r\n                if (dynamicImportInCjs &&\r\n                    (!resolution || typeof resolution === 'string' || resolution instanceof ExternalModule)) {\r\n                    return { helper: null, mechanism: null };\r\n                }\r\n                const helper = getInteropHelper(resolution, exportMode, interop);\r\n                let left = `require(`;\r\n                let right = `)`;\r\n                if (helper) {\r\n                    left = `/*#__PURE__*/${helper}(${left}`;\r\n                    right += ')';\r\n                }\r\n                const [functionLeft, functionRight] = getDirectReturnFunction([], {\r\n                    functionReturn: true,\r\n                    lineBreakIndent: null,\r\n                    name: null\r\n                });\r\n                left = `Promise.resolve().then(${functionLeft}${left}`;\r\n                right += `${functionRight})`;\r\n                if (!arrowFunctions && hasDynamicTarget) {\r\n                    left = getDirectReturnIifeLeft(['t'], `${left}t${right}`, {\r\n                        needsArrowReturnParens: false,\r\n                        needsWrappedFunction: true\r\n                    });\r\n                    right = ')';\r\n                }\r\n                return {\r\n                    helper,\r\n                    mechanism: { left, right }\r\n                };\r\n            }\r\n            case 'amd': {\r\n                const resolve = compact ? 'c' : 'resolve';\r\n                const reject = compact ? 'e' : 'reject';\r\n                const helper = getInteropHelper(resolution, exportMode, interop);\r\n                const [resolveLeft, resolveRight] = getDirectReturnFunction(['m'], {\r\n                    functionReturn: false,\r\n                    lineBreakIndent: null,\r\n                    name: null\r\n                });\r\n                const resolveNamespace = helper\r\n                    ? `${resolveLeft}${resolve}(/*#__PURE__*/${helper}(m))${resolveRight}`\r\n                    : resolve;\r\n                const [handlerLeft, handlerRight] = getDirectReturnFunction([resolve, reject], {\r\n                    functionReturn: false,\r\n                    lineBreakIndent: null,\r\n                    name: null\r\n                });\r\n                let left = `new Promise(${handlerLeft}require([`;\r\n                let right = `],${_}${resolveNamespace},${_}${reject})${handlerRight})`;\r\n                if (!arrowFunctions && hasDynamicTarget) {\r\n                    left = getDirectReturnIifeLeft(['t'], `${left}t${right}`, {\r\n                        needsArrowReturnParens: false,\r\n                        needsWrappedFunction: true\r\n                    });\r\n                    right = ')';\r\n                }\r\n                return {\r\n                    helper,\r\n                    mechanism: { left, right }\r\n                };\r\n            }\r\n            case 'system': {\r\n                return {\r\n                    helper: null,\r\n                    mechanism: {\r\n                        left: 'module.import(',\r\n                        right: ')'\r\n                    }\r\n                };\r\n            }\r\n        }\r\n        return { helper: null, mechanism: null };\r\n    }\r\n}\r\nImportExpression.prototype.applyDeoptimizations = doNotDeoptimize;\r\nfunction getInteropHelper(resolution, exportMode, interop) {\r\n    return exportMode === 'external'\r\n        ? namespaceInteropHelpersByInteropType[interop(resolution instanceof ExternalModule ? resolution.id : null)]\r\n        : exportMode === 'default'\r\n            ? INTEROP_NAMESPACE_DEFAULT_ONLY_VARIABLE\r\n            : null;\r\n}\r\nconst accessedImportGlobals = {\r\n    amd: ['require'],\r\n    cjs: ['require'],\r\n    system: ['module']\r\n};\r\nfunction getDeterministicObjectDestructure(objectPattern) {\r\n    const variables = [];\r\n    for (const property of objectPattern.properties) {\r\n        if (property.type === 'RestElement' || property.computed || property.key.type !== 'Identifier')\r\n            return;\r\n        variables.push(property.key.name);\r\n    }\r\n    return variables;\r\n}\r\n\r\nclass ImportNamespaceSpecifier extends NodeBase {\r\n}\r\nImportNamespaceSpecifier.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nImportNamespaceSpecifier.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass ImportSpecifier extends NodeBase {\r\n}\r\nImportSpecifier.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nImportSpecifier.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass JSXIdentifier extends IdentifierBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.isNativeElement = false;\r\n    }\r\n    bind() {\r\n        const type = this.getType();\r\n        if (type === 0 /* IdentifierType.Reference */) {\r\n            this.variable = this.scope.findVariable(this.name);\r\n            this.variable.addReference(this);\r\n        }\r\n        else if (type === 1 /* IdentifierType.NativeElementName */) {\r\n            this.isNativeElement = true;\r\n        }\r\n    }\r\n    include(context) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        if (this.variable !== null) {\r\n            this.scope.context.includeVariableInModule(this.variable, EMPTY_PATH, context);\r\n        }\r\n    }\r\n    includePath(path, context) {\r\n        if (!this.included) {\r\n            this.included = true;\r\n            if (this.variable !== null) {\r\n                this.scope.context.includeVariableInModule(this.variable, path, context);\r\n            }\r\n        }\r\n        else if (path.length > 0) {\r\n            this.variable?.includePath(path, context);\r\n        }\r\n    }\r\n    render(code, { snippets: { getPropertyAccess }, useOriginalName }) {\r\n        if (this.variable) {\r\n            const name = this.variable.getName(getPropertyAccess, useOriginalName);\r\n            if (name !== this.name) {\r\n                code.overwrite(this.start, this.end, name, {\r\n                    contentOnly: true,\r\n                    storeName: true\r\n                });\r\n            }\r\n        }\r\n        else if (this.isNativeElement &&\r\n            this.scope.context.options.jsx.mode !== 'preserve') {\r\n            code.update(this.start, this.end, JSON.stringify(this.name));\r\n        }\r\n    }\r\n    getType() {\r\n        switch (this.parent.type) {\r\n            case 'JSXOpeningElement':\r\n            case 'JSXClosingElement': {\r\n                return this.name.startsWith(this.name.charAt(0).toUpperCase())\r\n                    ? 0 /* IdentifierType.Reference */\r\n                    : 1 /* IdentifierType.NativeElementName */;\r\n            }\r\n            case 'JSXMemberExpression': {\r\n                return this.parent.object === this\r\n                    ? 0 /* IdentifierType.Reference */\r\n                    : 2 /* IdentifierType.Other */;\r\n            }\r\n            case 'JSXAttribute':\r\n            case 'JSXNamespacedName': {\r\n                return 2 /* IdentifierType.Other */;\r\n            }\r\n            default: {\r\n                /* istanbul ignore next */\r\n                throw new Error(`Unexpected parent node type for JSXIdentifier: ${this.parent.type}`);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass JSXAttribute extends NodeBase {\r\n    render(code, options, { jsxMode } = BLANK) {\r\n        super.render(code, options);\r\n        if (['classic', 'automatic'].includes(jsxMode)) {\r\n            const { name, value } = this;\r\n            const key = name instanceof JSXIdentifier ? name.name : `${name.namespace.name}:${name.name.name}`;\r\n            if (!(jsxMode === 'automatic' && key === 'key')) {\r\n                const safeKey = stringifyObjectKeyIfNeeded(key);\r\n                if (key !== safeKey) {\r\n                    code.overwrite(name.start, name.end, safeKey, { contentOnly: true });\r\n                }\r\n                if (value) {\r\n                    code.overwrite(name.end, value.start, ': ', { contentOnly: true });\r\n                    // foo=\"aa \\n aa\"\r\n                    if (value instanceof Literal &&\r\n                        typeof value.value === 'string' &&\r\n                        value.value.includes('\\n')) {\r\n                        code.overwrite(value.start, value.end, JSON.stringify(value.value), {\r\n                            contentOnly: true\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    code.appendLeft(name.end, ': true');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nJSXAttribute.prototype.includeNode = onlyIncludeSelf;\r\n\r\nclass JSXClosingBase extends NodeBase {\r\n    render(code, options) {\r\n        const { mode } = this.scope.context.options.jsx;\r\n        if (mode !== 'preserve') {\r\n            code.overwrite(this.start, this.end, ')', { contentOnly: true });\r\n        }\r\n        else {\r\n            super.render(code, options);\r\n        }\r\n    }\r\n}\r\nJSXClosingBase.prototype.includeNode = onlyIncludeSelf;\r\n\r\nclass JSXClosingElement extends JSXClosingBase {\r\n}\r\n\r\nclass JSXClosingFragment extends JSXClosingBase {\r\n}\r\n\r\nclass JSXSpreadAttribute extends NodeBase {\r\n    render(code, options) {\r\n        this.argument.render(code, options);\r\n        const { mode } = this.scope.context.options.jsx;\r\n        if (mode !== 'preserve') {\r\n            code.overwrite(this.start, this.argument.start, '', { contentOnly: true });\r\n            code.overwrite(this.argument.end, this.end, '', { contentOnly: true });\r\n        }\r\n    }\r\n}\r\n\r\nclass JSXEmptyExpression extends NodeBase {\r\n}\r\nJSXEmptyExpression.prototype.includeNode = onlyIncludeSelf;\r\n\r\nclass JSXExpressionContainer extends NodeBase {\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        this.expression.includePath(UNKNOWN_PATH, context);\r\n    }\r\n    render(code, options) {\r\n        const { mode } = this.scope.context.options.jsx;\r\n        if (mode !== 'preserve') {\r\n            code.remove(this.start, this.expression.start);\r\n            code.remove(this.expression.end, this.end);\r\n        }\r\n        this.expression.render(code, options);\r\n    }\r\n}\r\n\r\nconst RE_WHITESPACE_TRIM = /^[ \\t]*\\r?\\n[ \\t\\r\\n]*|[ \\t]*\\r?\\n[ \\t\\r\\n]*$/g;\r\nconst RE_WHITESPACE_MERGE = /[ \\t]*\\r?\\n[ \\t\\r\\n]*/g;\r\nclass JSXText extends NodeBase {\r\n    shouldRender() {\r\n        return !!this.getRenderedText();\r\n    }\r\n    render(code) {\r\n        const { mode } = this.scope.context.options.jsx;\r\n        if (mode !== 'preserve') {\r\n            code.overwrite(this.start, this.end, JSON.stringify(this.getRenderedText()), {\r\n                contentOnly: true\r\n            });\r\n        }\r\n    }\r\n    getRenderedText() {\r\n        if (this.renderedText === undefined)\r\n            this.renderedText = this.value\r\n                .replace(RE_WHITESPACE_TRIM, '')\r\n                .replace(RE_WHITESPACE_MERGE, ' ');\r\n        return this.renderedText;\r\n    }\r\n}\r\nJSXText.prototype.includeNode = onlyIncludeSelf;\r\n\r\nfunction getRenderedJsxChildren(children) {\r\n    let renderedChildren = 0;\r\n    for (const child of children) {\r\n        if (!(child instanceof JSXExpressionContainer && child.expression instanceof JSXEmptyExpression) &&\r\n            (!(child instanceof JSXText) || child.shouldRender())) {\r\n            renderedChildren++;\r\n        }\r\n    }\r\n    return renderedChildren;\r\n}\r\n\r\nfunction getAndIncludeFactoryVariable(factory, preserve, importSource, node, context) {\r\n    const [baseName, nestedName] = factory.split('.');\r\n    let factoryVariable;\r\n    if (importSource) {\r\n        factoryVariable = node.scope.context.getImportedJsxFactoryVariable(nestedName ? 'default' : baseName, node.start, importSource);\r\n        if (preserve) {\r\n            // This pretends we are accessing an included global variable of the same name\r\n            const globalVariable = node.scope.findGlobal(baseName);\r\n            globalVariable.includePath(UNKNOWN_PATH, context);\r\n            // This excludes this variable from renaming\r\n            factoryVariable.globalName = baseName;\r\n        }\r\n    }\r\n    else {\r\n        factoryVariable = node.scope.findGlobal(baseName);\r\n    }\r\n    node.scope.context.includeVariableInModule(factoryVariable, UNKNOWN_PATH, context);\r\n    if (factoryVariable instanceof LocalVariable) {\r\n        factoryVariable.consolidateInitializers();\r\n        factoryVariable.addUsedPlace(node);\r\n        node.scope.context.requestTreeshakingPass();\r\n    }\r\n    return factoryVariable;\r\n}\r\n\r\nclass JSXElementBase extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.factoryVariable = null;\r\n        this.factory = null;\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        const { importSource } = (this.jsxMode = this.getRenderingMode());\r\n        if (importSource) {\r\n            this.scope.context.addImportSource(importSource);\r\n        }\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        for (const child of this.children) {\r\n            child.include(context, includeChildrenRecursively);\r\n        }\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        const { factory, importSource, mode } = this.jsxMode;\r\n        if (factory) {\r\n            this.factory = factory;\r\n            this.factoryVariable = getAndIncludeFactoryVariable(factory, mode === 'preserve', importSource, this, context);\r\n        }\r\n    }\r\n    getRenderingMode() {\r\n        const jsx = this.scope.context.options.jsx;\r\n        const { mode, factory, importSource } = jsx;\r\n        if (mode === 'automatic') {\r\n            return {\r\n                factory: getRenderedJsxChildren(this.children) > 1 ? 'jsxs' : 'jsx',\r\n                importSource: jsx.jsxImportSource,\r\n                mode\r\n            };\r\n        }\r\n        return { factory, importSource, mode };\r\n    }\r\n    renderChildren(code, options, openingEnd) {\r\n        const { children } = this;\r\n        let hasMultipleChildren = false;\r\n        let childrenEnd = openingEnd;\r\n        let firstChild = null;\r\n        for (const child of children) {\r\n            if ((child instanceof JSXExpressionContainer &&\r\n                child.expression instanceof JSXEmptyExpression) ||\r\n                (child instanceof JSXText && !child.shouldRender())) {\r\n                code.remove(childrenEnd, child.end);\r\n            }\r\n            else {\r\n                code.appendLeft(childrenEnd, ', ');\r\n                child.render(code, options);\r\n                if (firstChild) {\r\n                    hasMultipleChildren = true;\r\n                }\r\n                else {\r\n                    firstChild = child;\r\n                }\r\n            }\r\n            childrenEnd = child.end;\r\n        }\r\n        return { childrenEnd, firstChild, hasMultipleChildren };\r\n    }\r\n}\r\nJSXElementBase.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass JSXElement extends JSXElementBase {\r\n    include(context, includeChildrenRecursively) {\r\n        super.include(context, includeChildrenRecursively);\r\n        this.openingElement.include(context, includeChildrenRecursively);\r\n        this.closingElement?.include(context, includeChildrenRecursively);\r\n    }\r\n    render(code, options) {\r\n        switch (this.jsxMode.mode) {\r\n            case 'classic': {\r\n                this.renderClassicMode(code, options);\r\n                break;\r\n            }\r\n            case 'automatic': {\r\n                this.renderAutomaticMode(code, options);\r\n                break;\r\n            }\r\n            default: {\r\n                super.render(code, options);\r\n            }\r\n        }\r\n    }\r\n    getRenderingMode() {\r\n        const jsx = this.scope.context.options.jsx;\r\n        const { mode, factory, importSource } = jsx;\r\n        if (mode === 'automatic') {\r\n            // In the case there is a key after a spread attribute, we fall back to\r\n            // classic mode, see https://github.com/facebook/react/issues/20031#issuecomment-710346866\r\n            // for reasoning.\r\n            let hasSpread = false;\r\n            for (const attribute of this.openingElement.attributes) {\r\n                if (attribute instanceof JSXSpreadAttribute) {\r\n                    hasSpread = true;\r\n                }\r\n                else if (hasSpread && attribute.name.name === 'key') {\r\n                    return { factory, importSource, mode: 'classic' };\r\n                }\r\n            }\r\n        }\r\n        return super.getRenderingMode();\r\n    }\r\n    renderClassicMode(code, options) {\r\n        const { snippets: { getPropertyAccess }, useOriginalName } = options;\r\n        const { closingElement, end, factory, factoryVariable, openingElement: { end: openingEnd, selfClosing } } = this;\r\n        const [, ...nestedName] = factory.split('.');\r\n        const { firstAttribute, hasAttributes, hasSpread, inObject, previousEnd } = this.renderAttributes(code, options, [factoryVariable.getName(getPropertyAccess, useOriginalName), ...nestedName].join('.'), false);\r\n        this.wrapAttributes(code, inObject, hasAttributes, hasSpread, firstAttribute, 'null', previousEnd);\r\n        this.renderChildren(code, options, openingEnd);\r\n        if (selfClosing) {\r\n            code.appendLeft(end, ')');\r\n        }\r\n        else {\r\n            closingElement.render(code, options);\r\n        }\r\n    }\r\n    renderAutomaticMode(code, options) {\r\n        const { snippets: { getPropertyAccess }, useOriginalName } = options;\r\n        const { closingElement, end, factoryVariable, openingElement: { end: openindEnd, selfClosing } } = this;\r\n        let { firstAttribute, hasAttributes, hasSpread, inObject, keyAttribute, previousEnd } = this.renderAttributes(code, options, factoryVariable.getName(getPropertyAccess, useOriginalName), true);\r\n        const { firstChild, hasMultipleChildren, childrenEnd } = this.renderChildren(code, options, openindEnd);\r\n        if (firstChild) {\r\n            code.prependRight(firstChild.start, `children: ${hasMultipleChildren ? '[' : ''}`);\r\n            if (!inObject) {\r\n                code.prependRight(firstChild.start, '{ ');\r\n                inObject = true;\r\n            }\r\n            previousEnd = closingElement.start;\r\n            if (hasMultipleChildren) {\r\n                code.appendLeft(previousEnd, ']');\r\n            }\r\n        }\r\n        this.wrapAttributes(code, inObject, hasAttributes || !!firstChild, hasSpread, firstAttribute || firstChild, '{}', childrenEnd);\r\n        if (keyAttribute) {\r\n            const { value } = keyAttribute;\r\n            // This will appear to the left of the moved code...\r\n            code.appendLeft(childrenEnd, ', ');\r\n            if (value) {\r\n                code.move(value.start, value.end, childrenEnd);\r\n            }\r\n            else {\r\n                code.appendLeft(childrenEnd, 'true');\r\n            }\r\n        }\r\n        if (selfClosing) {\r\n            // Moving the key attribute will also move the parenthesis to the right position\r\n            code.appendLeft(keyAttribute?.value?.end || end, ')');\r\n        }\r\n        else {\r\n            closingElement.render(code, options);\r\n        }\r\n    }\r\n    renderAttributes(code, options, factoryName, extractKeyAttribute) {\r\n        const { jsxMode: { mode }, openingElement } = this;\r\n        const { attributes, end: openingEnd, start: openingStart, name: { start: nameStart, end: nameEnd } } = openingElement;\r\n        code.update(openingStart, nameStart, `/*#__PURE__*/${factoryName}(`);\r\n        openingElement.render(code, options, { jsxMode: mode });\r\n        let keyAttribute = null;\r\n        let hasSpread = false;\r\n        let inObject = false;\r\n        let previousEnd = nameEnd;\r\n        let hasAttributes = false;\r\n        let firstAttribute = null;\r\n        for (const attribute of attributes) {\r\n            if (attribute instanceof JSXAttribute) {\r\n                if (extractKeyAttribute && attribute.name.name === 'key') {\r\n                    keyAttribute = attribute;\r\n                    code.remove(previousEnd, attribute.value?.start || attribute.end);\r\n                    continue;\r\n                }\r\n                code.appendLeft(previousEnd, ',');\r\n                if (!inObject) {\r\n                    code.prependRight(attribute.start, '{ ');\r\n                    inObject = true;\r\n                }\r\n                hasAttributes = true;\r\n            }\r\n            else {\r\n                if (inObject) {\r\n                    if (hasAttributes) {\r\n                        code.appendLeft(previousEnd, ' ');\r\n                    }\r\n                    code.appendLeft(previousEnd, '},');\r\n                    inObject = false;\r\n                }\r\n                else {\r\n                    code.appendLeft(previousEnd, ',');\r\n                }\r\n                hasSpread = true;\r\n            }\r\n            previousEnd = attribute.end;\r\n            if (!firstAttribute) {\r\n                firstAttribute = attribute;\r\n            }\r\n        }\r\n        code.remove(attributes.at(-1)?.end || previousEnd, openingEnd);\r\n        return { firstAttribute, hasAttributes, hasSpread, inObject, keyAttribute, previousEnd };\r\n    }\r\n    wrapAttributes(code, inObject, hasAttributes, hasSpread, firstAttribute, missingAttributesFallback, attributesEnd) {\r\n        if (inObject) {\r\n            code.appendLeft(attributesEnd, ' }');\r\n        }\r\n        if (hasSpread) {\r\n            if (hasAttributes) {\r\n                const { start } = firstAttribute;\r\n                if (firstAttribute instanceof JSXSpreadAttribute) {\r\n                    code.prependRight(start, '{}, ');\r\n                }\r\n                code.prependRight(start, 'Object.assign(');\r\n                code.appendLeft(attributesEnd, ')');\r\n            }\r\n        }\r\n        else if (!hasAttributes) {\r\n            code.appendLeft(attributesEnd, `, ${missingAttributesFallback}`);\r\n        }\r\n    }\r\n}\r\n\r\nclass JSXFragment extends JSXElementBase {\r\n    include(context, includeChildrenRecursively) {\r\n        super.include(context, includeChildrenRecursively);\r\n        this.openingFragment.include(context, includeChildrenRecursively);\r\n        this.closingFragment.include(context, includeChildrenRecursively);\r\n    }\r\n    render(code, options) {\r\n        switch (this.jsxMode.mode) {\r\n            case 'classic': {\r\n                this.renderClassicMode(code, options);\r\n                break;\r\n            }\r\n            case 'automatic': {\r\n                this.renderAutomaticMode(code, options);\r\n                break;\r\n            }\r\n            default: {\r\n                super.render(code, options);\r\n            }\r\n        }\r\n    }\r\n    renderClassicMode(code, options) {\r\n        const { snippets: { getPropertyAccess }, useOriginalName } = options;\r\n        const { closingFragment, factory, factoryVariable, openingFragment, start } = this;\r\n        const [, ...nestedName] = factory.split('.');\r\n        openingFragment.render(code, options);\r\n        code.prependRight(start, `/*#__PURE__*/${[\r\n            factoryVariable.getName(getPropertyAccess, useOriginalName),\r\n            ...nestedName\r\n        ].join('.')}(`);\r\n        code.appendLeft(openingFragment.end, ', null');\r\n        this.renderChildren(code, options, openingFragment.end);\r\n        closingFragment.render(code, options);\r\n    }\r\n    renderAutomaticMode(code, options) {\r\n        const { snippets: { getPropertyAccess }, useOriginalName } = options;\r\n        const { closingFragment, factoryVariable, openingFragment, start } = this;\r\n        openingFragment.render(code, options);\r\n        code.prependRight(start, `/*#__PURE__*/${factoryVariable.getName(getPropertyAccess, useOriginalName)}(`);\r\n        const { firstChild, hasMultipleChildren, childrenEnd } = this.renderChildren(code, options, openingFragment.end);\r\n        if (firstChild) {\r\n            code.prependRight(firstChild.start, `{ children: ${hasMultipleChildren ? '[' : ''}`);\r\n            if (hasMultipleChildren) {\r\n                code.appendLeft(closingFragment.start, ']');\r\n            }\r\n            code.appendLeft(childrenEnd, ' }');\r\n        }\r\n        else {\r\n            code.appendLeft(openingFragment.end, ', {}');\r\n        }\r\n        closingFragment.render(code, options);\r\n    }\r\n}\r\n\r\nclass JSXMemberExpression extends NodeBase {\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        this.object.includePath([this.property.name], context);\r\n    }\r\n    includePath(path, context) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        this.object.includePath([this.property.name, ...path], context);\r\n    }\r\n}\r\n\r\nclass JSXNamespacedName extends NodeBase {\r\n}\r\nJSXNamespacedName.prototype.includeNode = onlyIncludeSelf;\r\n\r\nclass JSXOpeningElement extends NodeBase {\r\n    render(code, options, { jsxMode = this.scope.context.options.jsx.mode } = {}) {\r\n        this.name.render(code, options);\r\n        for (const attribute of this.attributes) {\r\n            attribute.render(code, options, { jsxMode });\r\n        }\r\n    }\r\n}\r\nJSXOpeningElement.prototype.includeNode = onlyIncludeSelf;\r\n\r\nclass JSXOpeningFragment extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.fragment = null;\r\n        this.fragmentVariable = null;\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        const jsx = this.scope.context.options.jsx;\r\n        if (jsx.mode === 'automatic') {\r\n            this.fragment = 'Fragment';\r\n            this.fragmentVariable = getAndIncludeFactoryVariable('Fragment', false, jsx.jsxImportSource, this, context);\r\n        }\r\n        else {\r\n            const { fragment, importSource, mode } = jsx;\r\n            if (fragment != null) {\r\n                this.fragment = fragment;\r\n                this.fragmentVariable = getAndIncludeFactoryVariable(fragment, mode === 'preserve', importSource, this, context);\r\n            }\r\n        }\r\n    }\r\n    render(code, options) {\r\n        const { mode } = this.scope.context.options.jsx;\r\n        if (mode !== 'preserve') {\r\n            const { snippets: { getPropertyAccess }, useOriginalName } = options;\r\n            const [, ...nestedFragment] = this.fragment.split('.');\r\n            const fragment = [\r\n                this.fragmentVariable.getName(getPropertyAccess, useOriginalName),\r\n                ...nestedFragment\r\n            ].join('.');\r\n            code.update(this.start, this.end, fragment);\r\n        }\r\n    }\r\n}\r\n\r\nclass JSXSpreadChild extends NodeBase {\r\n    render(code, options) {\r\n        super.render(code, options);\r\n        const { mode } = this.scope.context.options.jsx;\r\n        if (mode !== 'preserve') {\r\n            code.overwrite(this.start, this.expression.start, '...', { contentOnly: true });\r\n            code.overwrite(this.expression.end, this.end, '', { contentOnly: true });\r\n        }\r\n    }\r\n}\r\n\r\nclass LabeledStatement extends NodeBase {\r\n    hasEffects(context) {\r\n        const { brokenFlow, includedLabels } = context;\r\n        context.ignore.labels.add(this.label.name);\r\n        context.includedLabels = new Set();\r\n        let bodyHasEffects = false;\r\n        if (this.body.hasEffects(context)) {\r\n            bodyHasEffects = true;\r\n        }\r\n        else {\r\n            context.ignore.labels.delete(this.label.name);\r\n            if (context.includedLabels.has(this.label.name)) {\r\n                context.includedLabels.delete(this.label.name);\r\n                context.brokenFlow = brokenFlow;\r\n            }\r\n        }\r\n        context.includedLabels = new Set([...includedLabels, ...context.includedLabels]);\r\n        return bodyHasEffects;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        const { brokenFlow, includedLabels } = context;\r\n        context.includedLabels = new Set();\r\n        this.body.include(context, includeChildrenRecursively);\r\n        if (includeChildrenRecursively || context.includedLabels.has(this.label.name)) {\r\n            this.label.include(context, includeChildrenRecursively);\r\n            context.includedLabels.delete(this.label.name);\r\n            context.brokenFlow = brokenFlow;\r\n        }\r\n        context.includedLabels = new Set([...includedLabels, ...context.includedLabels]);\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        this.body.includePath(UNKNOWN_PATH, context);\r\n    }\r\n    render(code, options) {\r\n        if (this.label.included) {\r\n            this.label.render(code, options);\r\n        }\r\n        else {\r\n            code.remove(this.start, findNonWhiteSpace(code.original, findFirstOccurrenceOutsideComment(code.original, ':', this.label.end) + 1));\r\n        }\r\n        this.body.render(code, options);\r\n    }\r\n}\r\nLabeledStatement.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass LogicalExpression extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        // We collect deoptimization information if usedBranch !== null\r\n        this.expressionsToBeDeoptimized = [];\r\n        this.usedBranch = null;\r\n    }\r\n    //private isBranchResolutionAnalysed = false;\r\n    get isBranchResolutionAnalysed() {\r\n        return isFlagSet(this.flags, 65536 /* Flag.isBranchResolutionAnalysed */);\r\n    }\r\n    set isBranchResolutionAnalysed(value) {\r\n        this.flags = setFlag(this.flags, 65536 /* Flag.isBranchResolutionAnalysed */, value);\r\n    }\r\n    get hasDeoptimizedCache() {\r\n        return isFlagSet(this.flags, 33554432 /* Flag.hasDeoptimizedCache */);\r\n    }\r\n    set hasDeoptimizedCache(value) {\r\n        this.flags = setFlag(this.flags, 33554432 /* Flag.hasDeoptimizedCache */, value);\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        this.left.deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n        this.right.deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n    }\r\n    deoptimizeCache() {\r\n        if (this.hasDeoptimizedCache)\r\n            return;\r\n        this.hasDeoptimizedCache = true;\r\n        if (this.usedBranch) {\r\n            const unusedBranch = this.usedBranch === this.left ? this.right : this.left;\r\n            this.usedBranch = null;\r\n            unusedBranch.deoptimizePath(UNKNOWN_PATH);\r\n            if (this.included) {\r\n                // As we are not tracking inclusions, we just include everything\r\n                unusedBranch.includePath(UNKNOWN_PATH, createInclusionContext());\r\n            }\r\n        }\r\n        const { scope: { context }, expressionsToBeDeoptimized } = this;\r\n        this.expressionsToBeDeoptimized = EMPTY_ARRAY;\r\n        for (const expression of expressionsToBeDeoptimized) {\r\n            expression.deoptimizeCache();\r\n        }\r\n        // Request another pass because we need to ensure \"include\" runs again if\r\n        // it is rendered\r\n        context.requestTreeshakingPass();\r\n    }\r\n    deoptimizePath(path) {\r\n        const usedBranch = this.getUsedBranch();\r\n        if (usedBranch) {\r\n            usedBranch.deoptimizePath(path);\r\n        }\r\n        else {\r\n            this.left.deoptimizePath(path);\r\n            this.right.deoptimizePath(path);\r\n        }\r\n    }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        if (origin === this)\r\n            return UnknownValue;\r\n        const usedBranch = this.getUsedBranch();\r\n        if (usedBranch) {\r\n            this.expressionsToBeDeoptimized.push(origin);\r\n            return usedBranch.getLiteralValueAtPath(path, recursionTracker, origin);\r\n        }\r\n        else if (!this.hasDeoptimizedCache && !path.length) {\r\n            const rightValue = this.right.getLiteralValueAtPath(path, recursionTracker, origin);\r\n            const booleanOrUnknown = tryCastLiteralValueToBoolean(rightValue);\r\n            if (typeof booleanOrUnknown !== 'symbol') {\r\n                if (!booleanOrUnknown && this.operator === '&&') {\r\n                    this.expressionsToBeDeoptimized.push(origin);\r\n                    return UnknownFalsyValue;\r\n                }\r\n                if (booleanOrUnknown && this.operator === '||') {\r\n                    this.expressionsToBeDeoptimized.push(origin);\r\n                    return UnknownTruthyValue;\r\n                }\r\n            }\r\n        }\r\n        return UnknownValue;\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\r\n        const usedBranch = this.getUsedBranch();\r\n        if (usedBranch) {\r\n            this.expressionsToBeDeoptimized.push(origin);\r\n            return usedBranch.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\r\n        }\r\n        return [\r\n            new MultiExpression([\r\n                this.left.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin)[0],\r\n                this.right.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin)[0]\r\n            ]),\r\n            false\r\n        ];\r\n    }\r\n    hasEffects(context) {\r\n        if (this.left.hasEffects(context)) {\r\n            return true;\r\n        }\r\n        if (this.getUsedBranch() !== this.left) {\r\n            return this.right.hasEffects(context);\r\n        }\r\n        return false;\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        const usedBranch = this.getUsedBranch();\r\n        if (usedBranch) {\r\n            return usedBranch.hasEffectsOnInteractionAtPath(path, interaction, context);\r\n        }\r\n        return (this.left.hasEffectsOnInteractionAtPath(path, interaction, context) ||\r\n            this.right.hasEffectsOnInteractionAtPath(path, interaction, context));\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        this.included = true;\r\n        const usedBranch = this.getUsedBranch();\r\n        if (includeChildrenRecursively ||\r\n            !usedBranch ||\r\n            (usedBranch === this.right && this.left.shouldBeIncluded(context))) {\r\n            this.left.include(context, includeChildrenRecursively);\r\n            this.right.include(context, includeChildrenRecursively);\r\n        }\r\n        else {\r\n            usedBranch.include(context, includeChildrenRecursively);\r\n        }\r\n    }\r\n    includePath(path, context) {\r\n        this.included = true;\r\n        const usedBranch = this.getUsedBranch();\r\n        if (!usedBranch || (usedBranch === this.right && this.left.shouldBeIncluded(context))) {\r\n            this.left.includePath(path, context);\r\n            this.right.includePath(path, context);\r\n        }\r\n        else {\r\n            usedBranch.includePath(path, context);\r\n        }\r\n    }\r\n    removeAnnotations(code) {\r\n        this.left.removeAnnotations(code);\r\n    }\r\n    render(code, options, { isCalleeOfRenderedParent, preventASI, renderedParentType, renderedSurroundingElement } = BLANK) {\r\n        if (!this.left.included || !this.right.included) {\r\n            const operatorPos = findFirstOccurrenceOutsideComment(code.original, this.operator, this.left.end);\r\n            if (this.right.included) {\r\n                const removePos = findNonWhiteSpace(code.original, operatorPos + 2);\r\n                code.remove(this.start, removePos);\r\n                if (preventASI) {\r\n                    removeLineBreaks(code, removePos, this.right.start);\r\n                }\r\n                this.left.removeAnnotations(code);\r\n            }\r\n            else {\r\n                code.remove(findLastWhiteSpaceReverse(code.original, this.left.end, operatorPos), this.end);\r\n            }\r\n            this.getUsedBranch().render(code, options, {\r\n                isCalleeOfRenderedParent,\r\n                preventASI,\r\n                renderedParentType: renderedParentType || this.parent.type,\r\n                renderedSurroundingElement: renderedSurroundingElement || this.parent.type\r\n            });\r\n        }\r\n        else {\r\n            this.left.render(code, options, {\r\n                preventASI,\r\n                renderedSurroundingElement\r\n            });\r\n            this.right.render(code, options);\r\n        }\r\n    }\r\n    getUsedBranch() {\r\n        if (!this.isBranchResolutionAnalysed) {\r\n            this.isBranchResolutionAnalysed = true;\r\n            const leftValue = this.left.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this);\r\n            const booleanOrUnknown = tryCastLiteralValueToBoolean(leftValue);\r\n            if (typeof booleanOrUnknown === 'symbol' ||\r\n                (this.operator === '??' && typeof leftValue === 'symbol')) {\r\n                return null;\r\n            }\r\n            else {\r\n                this.usedBranch =\r\n                    (this.operator === '||' && booleanOrUnknown) ||\r\n                        (this.operator === '&&' && !booleanOrUnknown) ||\r\n                        (this.operator === '??' && leftValue != null)\r\n                        ? this.left\r\n                        : this.right;\r\n            }\r\n        }\r\n        return this.usedBranch;\r\n    }\r\n}\r\nLogicalExpression.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nLogicalExpression.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass NewExpression extends NodeBase {\r\n    hasEffects(context) {\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        for (const argument of this.arguments) {\r\n            if (argument.hasEffects(context))\r\n                return true;\r\n        }\r\n        if (this.annotationPure) {\r\n            return false;\r\n        }\r\n        return (this.callee.hasEffects(context) ||\r\n            this.callee.hasEffectsOnInteractionAtPath(EMPTY_PATH, this.interaction, context));\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, { type }) {\r\n        return path.length > 0 || type !== INTERACTION_ACCESSED;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        if (includeChildrenRecursively) {\r\n            super.include(context, true);\r\n        }\r\n        else {\r\n            this.callee.include(context, false);\r\n            this.callee.includeCallArguments(this.interaction, context);\r\n        }\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        this.callee.includePath(UNKNOWN_PATH, context);\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        this.interaction = {\r\n            args: [null, ...this.arguments],\r\n            type: INTERACTION_CALLED,\r\n            withNew: true\r\n        };\r\n        if (this.annotations &&\r\n            this.scope.context.options.treeshake.annotations) {\r\n            this.annotationPure = this.annotations.some(comment => comment.type === 'pure');\r\n        }\r\n    }\r\n    render(code, options) {\r\n        this.callee.render(code, options);\r\n        renderCallArguments(code, options, this);\r\n    }\r\n    applyDeoptimizations() {\r\n        this.deoptimized = true;\r\n        this.callee.deoptimizeArgumentsOnInteractionAtPath(this.interaction, EMPTY_PATH, SHARED_RECURSION_TRACKER);\r\n        this.scope.context.requestTreeshakingPass();\r\n    }\r\n}\r\n\r\nclass ObjectExpression extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.objectEntity = null;\r\n        this.protoProp = null;\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        this.getObjectEntity().deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n    }\r\n    deoptimizeCache() {\r\n        this.getObjectEntity().deoptimizeAllProperties();\r\n    }\r\n    deoptimizePath(path) {\r\n        this.getObjectEntity().deoptimizePath(path);\r\n    }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        return this.getObjectEntity().getLiteralValueAtPath(path, recursionTracker, origin);\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\r\n        return this.getObjectEntity().getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin);\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        return this.getObjectEntity().hasEffectsOnInteractionAtPath(path, interaction, context);\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        this.getObjectEntity().include(context, includeChildrenRecursively);\r\n        this.protoProp?.include(context, includeChildrenRecursively);\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        this.protoProp?.includePath(UNKNOWN_PATH, context);\r\n    }\r\n    includePath(path, context) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        this.getObjectEntity().includePath(path, context);\r\n    }\r\n    render(code, options, { renderedSurroundingElement } = BLANK) {\r\n        if (renderedSurroundingElement === ExpressionStatement$1 ||\r\n            renderedSurroundingElement === ArrowFunctionExpression$1) {\r\n            code.appendRight(this.start, '(');\r\n            code.prependLeft(this.end, ')');\r\n        }\r\n        if (this.properties.length > 0) {\r\n            const separatedNodes = getCommaSeparatedNodesWithBoundaries(this.properties, code, this.start + 1, this.end - 1);\r\n            let lastSeparatorPos = null;\r\n            for (const { node, separator, start, end } of separatedNodes) {\r\n                if (!node.included) {\r\n                    treeshakeNode(node, code, start, end);\r\n                    continue;\r\n                }\r\n                lastSeparatorPos = separator;\r\n                node.render(code, options);\r\n            }\r\n            if (lastSeparatorPos) {\r\n                code.remove(lastSeparatorPos, this.end - 1);\r\n            }\r\n        }\r\n    }\r\n    getObjectEntity() {\r\n        if (this.objectEntity !== null) {\r\n            return this.objectEntity;\r\n        }\r\n        let prototype = OBJECT_PROTOTYPE;\r\n        const properties = [];\r\n        for (const property of this.properties) {\r\n            if (property instanceof SpreadElement) {\r\n                properties.push({ key: UnknownKey, kind: 'init', property });\r\n                continue;\r\n            }\r\n            let key;\r\n            if (property.computed) {\r\n                const keyValue = property.key.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this);\r\n                if (typeof keyValue === 'symbol') {\r\n                    properties.push({ key: UnknownKey, kind: property.kind, property });\r\n                    continue;\r\n                }\r\n                else {\r\n                    key = String(keyValue);\r\n                }\r\n            }\r\n            else {\r\n                key =\r\n                    property.key instanceof Identifier\r\n                        ? property.key.name\r\n                        : String(property.key.value);\r\n                if (key === '__proto__' && property.kind === 'init') {\r\n                    this.protoProp = property;\r\n                    prototype =\r\n                        property.value instanceof Literal && property.value.value === null\r\n                            ? null\r\n                            : property.value;\r\n                    continue;\r\n                }\r\n            }\r\n            properties.push({ key, kind: property.kind, property });\r\n        }\r\n        return (this.objectEntity = new ObjectEntity(properties, prototype));\r\n    }\r\n}\r\nObjectExpression.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass PanicError extends NodeBase {\r\n    initialise() {\r\n        const id = this.scope.context.module.id;\r\n        // This simulates the current nested error structure. We could also just\r\n        // replace it with a flat error.\r\n        const parseError = getRollupError(logParseError(this.message));\r\n        const moduleParseError = logModuleParseError(parseError, id);\r\n        return error(moduleParseError);\r\n    }\r\n}\r\n\r\nclass ParseError extends NodeBase {\r\n    initialise() {\r\n        const pos = this.start;\r\n        const id = this.scope.context.module.id;\r\n        // This simulates the current nested error structure. We could also just\r\n        // replace it with a flat error.\r\n        const parseError = getRollupError(logParseError(this.message, pos));\r\n        const moduleParseError = logModuleParseError(parseError, id);\r\n        this.scope.context.error(moduleParseError, pos);\r\n    }\r\n}\r\n\r\nclass PrivateIdentifier extends NodeBase {\r\n}\r\nPrivateIdentifier.prototype.includeNode = onlyIncludeSelf;\r\n\r\nclass Program extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.hasCachedEffect = null;\r\n        this.hasLoggedEffect = false;\r\n    }\r\n    hasCachedEffects() {\r\n        if (!this.included) {\r\n            return false;\r\n        }\r\n        return this.hasCachedEffect === null\r\n            ? (this.hasCachedEffect = this.hasEffects(createHasEffectsContext()))\r\n            : this.hasCachedEffect;\r\n    }\r\n    hasEffects(context) {\r\n        for (const node of this.body) {\r\n            if (node.hasEffects(context)) {\r\n                if (this.scope.context.options.experimentalLogSideEffects && !this.hasLoggedEffect) {\r\n                    this.hasLoggedEffect = true;\r\n                    const { code, log, module } = this.scope.context;\r\n                    log(LOGLEVEL_INFO, logFirstSideEffect(code, module.id, locate(code, node.start, { offsetLine: 1 })), node.start);\r\n                }\r\n                return (this.hasCachedEffect = true);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        this.included = true;\r\n        for (const node of this.body) {\r\n            if (includeChildrenRecursively || node.shouldBeIncluded(context)) {\r\n                node.include(context, includeChildrenRecursively);\r\n            }\r\n        }\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        if (this.invalidAnnotations)\r\n            for (const { start, end, type } of this.invalidAnnotations) {\r\n                this.scope.context.magicString.remove(start, end);\r\n                if (type === 'pure' || type === 'noSideEffects') {\r\n                    this.scope.context.log(LOGLEVEL_WARN, logInvalidAnnotation(this.scope.context.code.slice(start, end), this.scope.context.module.id, type), start);\r\n                }\r\n            }\r\n    }\r\n    render(code, options) {\r\n        let start = this.start;\r\n        if (code.original.startsWith('#!')) {\r\n            start = Math.min(code.original.indexOf('\\n') + 1, this.end);\r\n            code.remove(0, start);\r\n        }\r\n        if (this.body.length > 0) {\r\n            // Keep all consecutive lines that start with a comment\r\n            while (code.original[start] === '/' && /[*/]/.test(code.original[start + 1])) {\r\n                const firstLineBreak = findFirstLineBreakOutsideComment(code.original.slice(start, this.body[0].start));\r\n                if (firstLineBreak[0] === -1) {\r\n                    break;\r\n                }\r\n                start += firstLineBreak[1];\r\n            }\r\n            renderStatementList(this.body, code, start, this.end, options);\r\n        }\r\n        else {\r\n            super.render(code, options);\r\n        }\r\n    }\r\n}\r\nProgram.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nProgram.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass Property extends MethodBase {\r\n    //declare method: boolean;\r\n    get method() {\r\n        return isFlagSet(this.flags, 262144 /* Flag.method */);\r\n    }\r\n    set method(value) {\r\n        this.flags = setFlag(this.flags, 262144 /* Flag.method */, value);\r\n    }\r\n    //declare shorthand: boolean;\r\n    get shorthand() {\r\n        return isFlagSet(this.flags, 524288 /* Flag.shorthand */);\r\n    }\r\n    set shorthand(value) {\r\n        this.flags = setFlag(this.flags, 524288 /* Flag.shorthand */, value);\r\n    }\r\n    declare(kind, destructuredInitPath, init) {\r\n        return this.value.declare(kind, this.getPathInProperty(destructuredInitPath), init);\r\n    }\r\n    deoptimizeAssignment(destructuredInitPath, init) {\r\n        this.value.deoptimizeAssignment?.(this.getPathInProperty(destructuredInitPath), init);\r\n    }\r\n    hasEffects(context) {\r\n        return this.key.hasEffects(context) || this.value.hasEffects(context);\r\n    }\r\n    hasEffectsWhenDestructuring(context, destructuredInitPath, init) {\r\n        return this.value.hasEffectsWhenDestructuring?.(context, this.getPathInProperty(destructuredInitPath), init);\r\n    }\r\n    includeDestructuredIfNecessary(context, destructuredInitPath, init) {\r\n        const path = this.getPathInProperty(destructuredInitPath);\r\n        let included = this.value.includeDestructuredIfNecessary(context, path, init) ||\r\n            this.included;\r\n        if ((included ||= this.key.hasEffects(createHasEffectsContext()))) {\r\n            this.key.include(context, false);\r\n            if (!this.value.included) {\r\n                this.value.includeNode(context);\r\n                // Unfortunately, we need to include the value again now, so that any\r\n                // declared variables are properly included.\r\n                this.value.includeDestructuredIfNecessary(context, path, init);\r\n            }\r\n        }\r\n        if (!this.included && included) {\r\n            this.includeNode(context);\r\n        }\r\n        return this.included;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        this.included = true;\r\n        this.key.include(context, includeChildrenRecursively);\r\n        this.value.include(context, includeChildrenRecursively);\r\n    }\r\n    includePath(path, context) {\r\n        this.included = true;\r\n        this.value.includePath(path, context);\r\n    }\r\n    markDeclarationReached() {\r\n        this.value.markDeclarationReached();\r\n    }\r\n    render(code, options) {\r\n        if (!this.shorthand) {\r\n            this.key.render(code, options);\r\n        }\r\n        this.value.render(code, options, { isShorthandProperty: this.shorthand });\r\n    }\r\n    getPathInProperty(destructuredInitPath) {\r\n        return destructuredInitPath.at(-1) === UnknownKey\r\n            ? destructuredInitPath\r\n            : // For now, we only consider static paths as we do not know how to\r\n                // deoptimize the path in the dynamic case.\r\n                this.computed\r\n                    ? [...destructuredInitPath, UnknownKey]\r\n                    : this.key instanceof Identifier\r\n                        ? [...destructuredInitPath, this.key.name]\r\n                        : [...destructuredInitPath, String(this.key.value)];\r\n    }\r\n}\r\nProperty.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nProperty.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass PropertyDefinition extends NodeBase {\r\n    get computed() {\r\n        return isFlagSet(this.flags, 1024 /* Flag.computed */);\r\n    }\r\n    set computed(value) {\r\n        this.flags = setFlag(this.flags, 1024 /* Flag.computed */, value);\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        this.value?.deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n    }\r\n    deoptimizePath(path) {\r\n        this.value?.deoptimizePath(path);\r\n    }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        return this.value\r\n            ? this.value.getLiteralValueAtPath(path, recursionTracker, origin)\r\n            : UnknownValue;\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin) {\r\n        return this.value\r\n            ? this.value.getReturnExpressionWhenCalledAtPath(path, interaction, recursionTracker, origin)\r\n            : UNKNOWN_RETURN_EXPRESSION;\r\n    }\r\n    hasEffects(context) {\r\n        return (this.key.hasEffects(context) ||\r\n            (this.static && !!this.value?.hasEffects(context)) ||\r\n            checkEffectForNodes(this.decorators, context));\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        return !this.value || this.value.hasEffectsOnInteractionAtPath(path, interaction, context);\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        this.value?.includePath(UNKNOWN_PATH, context);\r\n        for (const decorator of this.decorators) {\r\n            decorator.includePath(UNKNOWN_PATH, context);\r\n        }\r\n    }\r\n}\r\nPropertyDefinition.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass ReturnStatement extends NodeBase {\r\n    hasEffects(context) {\r\n        if (!context.ignore.returnYield || this.argument?.hasEffects(context))\r\n            return true;\r\n        context.brokenFlow = true;\r\n        return false;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        this.argument?.include(context, includeChildrenRecursively);\r\n        context.brokenFlow = true;\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        this.argument?.includePath(UNKNOWN_PATH, context);\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        this.scope.addReturnExpression(this.argument || UNKNOWN_EXPRESSION);\r\n    }\r\n    render(code, options) {\r\n        if (this.argument) {\r\n            this.argument.render(code, options, { preventASI: true });\r\n            if (this.argument.start === this.start + 6 /* 'return'.length */) {\r\n                code.prependLeft(this.start + 6, ' ');\r\n            }\r\n        }\r\n    }\r\n}\r\nReturnStatement.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass SequenceExpression extends NodeBase {\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        this.expressions[this.expressions.length - 1].deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n    }\r\n    deoptimizePath(path) {\r\n        this.expressions[this.expressions.length - 1].deoptimizePath(path);\r\n    }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        return this.expressions[this.expressions.length - 1].getLiteralValueAtPath(path, recursionTracker, origin);\r\n    }\r\n    hasEffects(context) {\r\n        for (const expression of this.expressions) {\r\n            if (expression.hasEffects(context))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        return this.expressions[this.expressions.length - 1].hasEffectsOnInteractionAtPath(path, interaction, context);\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        this.included = true;\r\n        const lastExpression = this.expressions[this.expressions.length - 1];\r\n        for (const expression of this.expressions) {\r\n            if (includeChildrenRecursively ||\r\n                (expression === lastExpression && !(this.parent instanceof ExpressionStatement)) ||\r\n                expression.shouldBeIncluded(context)) {\r\n                expression.include(context, includeChildrenRecursively);\r\n            }\r\n        }\r\n    }\r\n    includePath(path, context) {\r\n        this.included = true;\r\n        this.expressions[this.expressions.length - 1].includePath(path, context);\r\n    }\r\n    removeAnnotations(code) {\r\n        this.expressions[0].removeAnnotations(code);\r\n    }\r\n    render(code, options, { renderedParentType, isCalleeOfRenderedParent, preventASI } = BLANK) {\r\n        let includedNodes = 0;\r\n        let lastSeparatorPos = null;\r\n        const lastNode = this.expressions[this.expressions.length - 1];\r\n        for (const { node, separator, start, end } of getCommaSeparatedNodesWithBoundaries(this.expressions, code, this.start, this.end)) {\r\n            if (!node.included) {\r\n                treeshakeNode(node, code, start, end);\r\n                continue;\r\n            }\r\n            includedNodes++;\r\n            lastSeparatorPos = separator;\r\n            if (includedNodes === 1 && preventASI) {\r\n                removeLineBreaks(code, start, node.start);\r\n            }\r\n            if (includedNodes === 1) {\r\n                const parentType = renderedParentType || this.parent.type;\r\n                node.render(code, options, {\r\n                    isCalleeOfRenderedParent: isCalleeOfRenderedParent && node === lastNode,\r\n                    renderedParentType: parentType,\r\n                    renderedSurroundingElement: parentType\r\n                });\r\n            }\r\n            else {\r\n                node.render(code, options);\r\n            }\r\n        }\r\n        if (lastSeparatorPos) {\r\n            code.remove(lastSeparatorPos, this.end);\r\n        }\r\n    }\r\n}\r\nSequenceExpression.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nSequenceExpression.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass Super extends NodeBase {\r\n    bind() {\r\n        this.variable = this.scope.findVariable('this');\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        this.variable.deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n    }\r\n    deoptimizePath(path) {\r\n        this.variable.deoptimizePath(path);\r\n    }\r\n    include(context) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        this.scope.context.includeVariableInModule(this.variable, EMPTY_PATH, context);\r\n    }\r\n}\r\n\r\nclass SwitchCase extends NodeBase {\r\n    hasEffects(context) {\r\n        if (this.test?.hasEffects(context))\r\n            return true;\r\n        for (const node of this.consequent) {\r\n            if (context.brokenFlow)\r\n                break;\r\n            if (node.hasEffects(context))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        this.included = true;\r\n        this.test?.include(context, includeChildrenRecursively);\r\n        for (const node of this.consequent) {\r\n            if (includeChildrenRecursively || node.shouldBeIncluded(context))\r\n                node.include(context, includeChildrenRecursively);\r\n        }\r\n    }\r\n    render(code, options, nodeRenderOptions) {\r\n        if (this.test) {\r\n            this.test.render(code, options);\r\n            if (this.test.start === this.start + 4) {\r\n                code.prependLeft(this.test.start, ' ');\r\n            }\r\n        }\r\n        if (this.consequent.length > 0) {\r\n            const testEnd = this.test\r\n                ? this.test.end\r\n                : findFirstOccurrenceOutsideComment(code.original, 'default', this.start) + 7;\r\n            const consequentStart = findFirstOccurrenceOutsideComment(code.original, ':', testEnd) + 1;\r\n            renderStatementList(this.consequent, code, consequentStart, nodeRenderOptions.end, options);\r\n        }\r\n    }\r\n}\r\nSwitchCase.prototype.needsBoundaries = true;\r\nSwitchCase.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nSwitchCase.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass SwitchStatement extends NodeBase {\r\n    createScope(parentScope) {\r\n        this.parentScope = parentScope;\r\n        this.scope = new BlockScope(parentScope);\r\n    }\r\n    hasEffects(context) {\r\n        if (this.discriminant.hasEffects(context))\r\n            return true;\r\n        const { brokenFlow, hasBreak, ignore } = context;\r\n        const { breaks } = ignore;\r\n        ignore.breaks = true;\r\n        context.hasBreak = false;\r\n        let onlyHasBrokenFlow = true;\r\n        for (const switchCase of this.cases) {\r\n            if (switchCase.hasEffects(context))\r\n                return true;\r\n            onlyHasBrokenFlow &&= context.brokenFlow && !context.hasBreak;\r\n            context.hasBreak = false;\r\n            context.brokenFlow = brokenFlow;\r\n        }\r\n        if (this.defaultCase !== null) {\r\n            context.brokenFlow = onlyHasBrokenFlow;\r\n        }\r\n        ignore.breaks = breaks;\r\n        context.hasBreak = hasBreak;\r\n        return false;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        this.included = true;\r\n        this.discriminant.include(context, includeChildrenRecursively);\r\n        const { brokenFlow, hasBreak } = context;\r\n        context.hasBreak = false;\r\n        let onlyHasBrokenFlow = true;\r\n        let isCaseIncluded = includeChildrenRecursively ||\r\n            (this.defaultCase !== null && this.defaultCase < this.cases.length - 1);\r\n        for (let caseIndex = this.cases.length - 1; caseIndex >= 0; caseIndex--) {\r\n            const switchCase = this.cases[caseIndex];\r\n            if (switchCase.included) {\r\n                isCaseIncluded = true;\r\n            }\r\n            if (!isCaseIncluded) {\r\n                const hasEffectsContext = createHasEffectsContext();\r\n                hasEffectsContext.ignore.breaks = true;\r\n                isCaseIncluded = switchCase.hasEffects(hasEffectsContext);\r\n            }\r\n            if (isCaseIncluded) {\r\n                switchCase.include(context, includeChildrenRecursively);\r\n                onlyHasBrokenFlow &&= context.brokenFlow && !context.hasBreak;\r\n                context.hasBreak = false;\r\n                context.brokenFlow = brokenFlow;\r\n            }\r\n            else {\r\n                onlyHasBrokenFlow = brokenFlow;\r\n            }\r\n        }\r\n        if (isCaseIncluded && this.defaultCase !== null) {\r\n            context.brokenFlow = onlyHasBrokenFlow;\r\n        }\r\n        context.hasBreak = hasBreak;\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        for (let caseIndex = 0; caseIndex < this.cases.length; caseIndex++) {\r\n            if (this.cases[caseIndex].test === null) {\r\n                this.defaultCase = caseIndex;\r\n                return;\r\n            }\r\n        }\r\n        this.defaultCase = null;\r\n    }\r\n    parseNode(esTreeNode) {\r\n        this.discriminant = new (this.scope.context.getNodeConstructor(esTreeNode.discriminant.type))(this, this.parentScope).parseNode(esTreeNode.discriminant);\r\n        return super.parseNode(esTreeNode);\r\n    }\r\n    render(code, options) {\r\n        this.discriminant.render(code, options);\r\n        if (this.cases.length > 0) {\r\n            renderStatementList(this.cases, code, this.cases[0].start, this.end - 1, options);\r\n        }\r\n    }\r\n}\r\nSwitchStatement.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nSwitchStatement.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass TaggedTemplateExpression extends CallExpressionBase {\r\n    get hasCheckedForWarnings() {\r\n        return isFlagSet(this.flags, 134217728 /* Flag.checkedForWarnings */);\r\n    }\r\n    set hasCheckedForWarnings(value) {\r\n        this.flags = setFlag(this.flags, 134217728 /* Flag.checkedForWarnings */, value);\r\n    }\r\n    bind() {\r\n        super.bind();\r\n    }\r\n    hasEffects(context) {\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        for (const argument of this.quasi.expressions) {\r\n            if (argument.hasEffects(context))\r\n                return true;\r\n        }\r\n        return (this.tag.hasEffects(context) ||\r\n            this.tag.hasEffectsOnInteractionAtPath(EMPTY_PATH, this.interaction, context));\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        if (includeChildrenRecursively) {\r\n            super.include(context, true);\r\n        }\r\n        else {\r\n            this.quasi.include(context, false);\r\n            this.tag.include(context, false);\r\n            this.tag.includeCallArguments(this.interaction, context);\r\n        }\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        this.args = [UNKNOWN_EXPRESSION, ...this.quasi.expressions];\r\n        this.interaction = {\r\n            args: [\r\n                this.tag instanceof MemberExpression && !this.tag.variable ? this.tag.object : null,\r\n                ...this.args\r\n            ],\r\n            type: INTERACTION_CALLED,\r\n            withNew: false\r\n        };\r\n    }\r\n    render(code, options) {\r\n        this.tag.render(code, options, { isCalleeOfRenderedParent: true });\r\n        this.quasi.render(code, options);\r\n        if (!this.hasCheckedForWarnings && this.tag.type === Identifier$1) {\r\n            this.hasCheckedForWarnings = true;\r\n            const name = this.tag.name;\r\n            const variable = this.scope.findVariable(name);\r\n            if (variable.isNamespace) {\r\n                this.scope.context.log(LOGLEVEL_WARN, logCannotCallNamespace(name), this.start);\r\n            }\r\n        }\r\n    }\r\n    applyDeoptimizations() {\r\n        this.deoptimized = true;\r\n        this.tag.deoptimizeArgumentsOnInteractionAtPath(this.interaction, EMPTY_PATH, SHARED_RECURSION_TRACKER);\r\n        this.scope.context.requestTreeshakingPass();\r\n    }\r\n    getReturnExpression(recursionTracker = SHARED_RECURSION_TRACKER) {\r\n        if (this.returnExpression === null) {\r\n            this.returnExpression = UNKNOWN_RETURN_EXPRESSION;\r\n            return (this.returnExpression = this.tag.getReturnExpressionWhenCalledAtPath(EMPTY_PATH, this.interaction, recursionTracker, this));\r\n        }\r\n        return this.returnExpression;\r\n    }\r\n}\r\nTaggedTemplateExpression.prototype.includeNode = onlyIncludeSelf;\r\n\r\nclass TemplateElement extends NodeBase {\r\n    get tail() {\r\n        return isFlagSet(this.flags, 1048576 /* Flag.tail */);\r\n    }\r\n    set tail(value) {\r\n        this.flags = setFlag(this.flags, 1048576 /* Flag.tail */, value);\r\n    }\r\n    // Do not try to bind value\r\n    bind() { }\r\n    hasEffects() {\r\n        return false;\r\n    }\r\n    parseNode(esTreeNode) {\r\n        this.value = esTreeNode.value;\r\n        return super.parseNode(esTreeNode);\r\n    }\r\n    render() { }\r\n}\r\nTemplateElement.prototype.includeNode = onlyIncludeSelf;\r\n\r\nclass TemplateLiteral extends NodeBase {\r\n    deoptimizeArgumentsOnInteractionAtPath() { }\r\n    getLiteralValueAtPath(path) {\r\n        if (path.length > 0 || this.quasis.length !== 1) {\r\n            return UnknownValue;\r\n        }\r\n        return this.quasis[0].value.cooked;\r\n    }\r\n    getReturnExpressionWhenCalledAtPath(path) {\r\n        if (path.length !== 1) {\r\n            return UNKNOWN_RETURN_EXPRESSION;\r\n        }\r\n        return getMemberReturnExpressionWhenCalled(literalStringMembers, path[0]);\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        if (interaction.type === INTERACTION_ACCESSED) {\r\n            return path.length > 1;\r\n        }\r\n        if (interaction.type === INTERACTION_CALLED && path.length === 1) {\r\n            return hasMemberEffectWhenCalled(literalStringMembers, path[0], interaction, context);\r\n        }\r\n        return true;\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        for (const node of this.expressions) {\r\n            node.includePath(UNKNOWN_PATH, context);\r\n        }\r\n    }\r\n    render(code, options) {\r\n        code.indentExclusionRanges.push([this.start, this.end]);\r\n        super.render(code, options);\r\n    }\r\n}\r\n\r\nclass ModuleScope extends ChildScope {\r\n    constructor(parent, context) {\r\n        super(parent, context);\r\n        this.variables.set('this', new LocalVariable('this', null, UNDEFINED_EXPRESSION, EMPTY_PATH, context, 'other'));\r\n    }\r\n    addDeclaration(identifier, context, init, destructuredInitPath, kind) {\r\n        if (this.context.module.importDescriptions.has(identifier.name)) {\r\n            context.error(logRedeclarationError(identifier.name), identifier.start);\r\n        }\r\n        return super.addDeclaration(identifier, context, init, destructuredInitPath, kind);\r\n    }\r\n    addExportDefaultDeclaration(name, exportDefaultDeclaration, context) {\r\n        const variable = new ExportDefaultVariable(name, exportDefaultDeclaration, context);\r\n        this.variables.set('default', variable);\r\n        return variable;\r\n    }\r\n    addNamespaceMemberAccess() { }\r\n    deconflict(format, exportNamesByVariable, accessedGlobalsByScope) {\r\n        // all module level variables are already deconflicted when deconflicting the chunk\r\n        for (const scope of this.children)\r\n            scope.deconflict(format, exportNamesByVariable, accessedGlobalsByScope);\r\n    }\r\n    findLexicalBoundary() {\r\n        return this;\r\n    }\r\n    findVariable(name) {\r\n        const knownVariable = this.variables.get(name) || this.accessedOutsideVariables.get(name);\r\n        if (knownVariable) {\r\n            return knownVariable;\r\n        }\r\n        const variable = this.context.traceVariable(name) || this.parent.findVariable(name);\r\n        if (variable instanceof GlobalVariable) {\r\n            this.accessedOutsideVariables.set(name, variable);\r\n        }\r\n        return variable;\r\n    }\r\n}\r\n\r\nclass ThisExpression extends NodeBase {\r\n    bind() {\r\n        this.variable = this.scope.findVariable('this');\r\n    }\r\n    deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker) {\r\n        this.variable.deoptimizeArgumentsOnInteractionAtPath(interaction, path, recursionTracker);\r\n    }\r\n    deoptimizePath(path) {\r\n        this.variable.deoptimizePath(path);\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, interaction, context) {\r\n        if (path.length === 0) {\r\n            return interaction.type !== INTERACTION_ACCESSED;\r\n        }\r\n        return this.variable.hasEffectsOnInteractionAtPath(path, interaction, context);\r\n    }\r\n    include(context) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        this.scope.context.includeVariableInModule(this.variable, EMPTY_PATH, context);\r\n    }\r\n    includePath(path, context) {\r\n        if (!this.included) {\r\n            this.included = true;\r\n            this.scope.context.includeVariableInModule(this.variable, path, context);\r\n        }\r\n        else if (path.length > 0) {\r\n            this.variable.includePath(path, context);\r\n        }\r\n        const functionScope = findFunctionScope(this.scope, this.variable);\r\n        if (functionScope &&\r\n            functionScope.functionNode.parent instanceof Property &&\r\n            functionScope.functionNode.parent.parent instanceof ObjectExpression) {\r\n            functionScope.functionNode.parent.parent.includePath(path, context);\r\n        }\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        this.alias =\r\n            this.scope.findLexicalBoundary() instanceof ModuleScope\r\n                ? this.scope.context.moduleContext\r\n                : null;\r\n        if (this.alias === 'undefined') {\r\n            this.scope.context.log(LOGLEVEL_WARN, logThisIsUndefined(), this.start);\r\n        }\r\n    }\r\n    render(code) {\r\n        if (this.alias !== null) {\r\n            code.overwrite(this.start, this.end, this.alias, {\r\n                contentOnly: false,\r\n                storeName: true\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction findFunctionScope(scope, thisVariable) {\r\n    while (!(scope instanceof FunctionScope && scope.thisVariable === thisVariable)) {\r\n        if (!(scope instanceof ChildScope)) {\r\n            return null;\r\n        }\r\n        scope = scope.parent;\r\n    }\r\n    return scope;\r\n}\r\n\r\nclass ThrowStatement extends NodeBase {\r\n    hasEffects() {\r\n        return true;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        this.argument.include(context, includeChildrenRecursively);\r\n        context.brokenFlow = true;\r\n    }\r\n    includeNode(context) {\r\n        if (!this.included) {\r\n            this.included = true;\r\n            this.argument.includePath(UNKNOWN_PATH, context);\r\n        }\r\n    }\r\n    render(code, options) {\r\n        this.argument.render(code, options, { preventASI: true });\r\n        if (this.argument.start === this.start + 5 /* 'throw'.length */) {\r\n            code.prependLeft(this.start + 5, ' ');\r\n        }\r\n    }\r\n}\r\n\r\nclass TryStatement extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.directlyIncluded = false;\r\n        this.includedLabelsAfterBlock = null;\r\n    }\r\n    hasEffects(context) {\r\n        return ((this.scope.context.options.treeshake.tryCatchDeoptimization\r\n            ? this.block.body.length > 0\r\n            : this.block.hasEffects(context)) || !!this.finalizer?.hasEffects(context));\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        const tryCatchDeoptimization = this.scope.context.options.treeshake?.tryCatchDeoptimization;\r\n        const { brokenFlow, includedLabels } = context;\r\n        if (!this.directlyIncluded || !tryCatchDeoptimization) {\r\n            this.included = true;\r\n            this.directlyIncluded = true;\r\n            this.block.include(context, tryCatchDeoptimization ? INCLUDE_PARAMETERS : includeChildrenRecursively);\r\n            if (includedLabels.size > 0) {\r\n                this.includedLabelsAfterBlock = [...includedLabels];\r\n            }\r\n            context.brokenFlow = brokenFlow;\r\n        }\r\n        else if (this.includedLabelsAfterBlock) {\r\n            for (const label of this.includedLabelsAfterBlock) {\r\n                includedLabels.add(label);\r\n            }\r\n        }\r\n        if (this.handler !== null) {\r\n            this.handler.include(context, includeChildrenRecursively);\r\n            context.brokenFlow = brokenFlow;\r\n        }\r\n        this.finalizer?.include(context, includeChildrenRecursively);\r\n    }\r\n}\r\nTryStatement.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nTryStatement.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nconst unaryOperators = {\r\n    '!': value => !value,\r\n    '+': value => +value,\r\n    '-': value => -value,\r\n    delete: () => UnknownValue,\r\n    typeof: value => typeof value,\r\n    void: () => undefined,\r\n    '~': value => ~value\r\n};\r\nconst UNASSIGNED = Symbol('Unassigned');\r\nclass UnaryExpression extends NodeBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.renderedLiteralValue = UNASSIGNED;\r\n    }\r\n    get prefix() {\r\n        return isFlagSet(this.flags, 2097152 /* Flag.prefix */);\r\n    }\r\n    set prefix(value) {\r\n        this.flags = setFlag(this.flags, 2097152 /* Flag.prefix */, value);\r\n    }\r\n    deoptimizeCache() {\r\n        this.renderedLiteralValue = UnknownValue;\r\n    }\r\n    getLiteralValueAtPath(path, recursionTracker, origin) {\r\n        if (path.length > 0)\r\n            return UnknownValue;\r\n        const argumentValue = this.argument.getLiteralValueAtPath(EMPTY_PATH, recursionTracker, origin);\r\n        if (typeof argumentValue === 'symbol') {\r\n            if (this.operator === 'void')\r\n                return undefined;\r\n            if (this.operator === '!') {\r\n                if (argumentValue === UnknownFalsyValue)\r\n                    return true;\r\n                if (argumentValue === UnknownTruthyValue)\r\n                    return false;\r\n            }\r\n            return UnknownValue;\r\n        }\r\n        return unaryOperators[this.operator](argumentValue);\r\n    }\r\n    hasEffects(context) {\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        if (this.operator === 'typeof' && this.argument instanceof Identifier)\r\n            return false;\r\n        return (this.argument.hasEffects(context) ||\r\n            (this.operator === 'delete' &&\r\n                this.argument.hasEffectsOnInteractionAtPath(EMPTY_PATH, NODE_INTERACTION_UNKNOWN_ASSIGNMENT, context)));\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, { type }) {\r\n        return type !== INTERACTION_ACCESSED || path.length > (this.operator === 'void' ? 0 : 1);\r\n    }\r\n    applyDeoptimizations() {\r\n        this.deoptimized = true;\r\n        if (this.operator === 'delete') {\r\n            this.argument.deoptimizePath(EMPTY_PATH);\r\n            this.scope.context.requestTreeshakingPass();\r\n        }\r\n    }\r\n    getRenderedLiteralValue(includeChildrenRecursively) {\r\n        if (this.renderedLiteralValue !== UNASSIGNED)\r\n            return this.renderedLiteralValue;\r\n        return (this.renderedLiteralValue = includeChildrenRecursively\r\n            ? UnknownValue\r\n            : getRenderedLiteralValue(this.getLiteralValueAtPath(EMPTY_PATH, SHARED_RECURSION_TRACKER, this)));\r\n    }\r\n    include(context, includeChildrenRecursively, _options) {\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        this.included = true;\r\n        // Check if the argument is an identifier that should be preserved as a reference for readability\r\n        const shouldPreserveArgument = this.argument instanceof Identifier && this.argument.variable?.included;\r\n        if (typeof this.getRenderedLiteralValue(includeChildrenRecursively) === 'symbol' ||\r\n            this.argument.shouldBeIncluded(context) ||\r\n            shouldPreserveArgument) {\r\n            this.argument.include(context, includeChildrenRecursively);\r\n            this.renderedLiteralValue = UnknownValue;\r\n        }\r\n    }\r\n    render(code, options) {\r\n        if (typeof this.renderedLiteralValue === 'symbol') {\r\n            super.render(code, options);\r\n        }\r\n        else {\r\n            let value = this.renderedLiteralValue;\r\n            if (!CHARACTERS_THAT_DO_NOT_REQUIRE_SPACE.test(code.original[this.start - 1])) {\r\n                value = ` ${value}`;\r\n            }\r\n            code.overwrite(this.start, this.end, value);\r\n        }\r\n    }\r\n}\r\nconst CHARACTERS_THAT_DO_NOT_REQUIRE_SPACE = /[\\s([=%&*+-/<>^|,?:;]/;\r\nUnaryExpression.prototype.includeNode = onlyIncludeSelf;\r\n\r\nclass UpdateExpression extends NodeBase {\r\n    hasEffects(context) {\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        return this.argument.hasEffectsAsAssignmentTarget(context, true);\r\n    }\r\n    hasEffectsOnInteractionAtPath(path, { type }) {\r\n        return path.length > 1 || type !== INTERACTION_ACCESSED;\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        if (!this.included)\r\n            this.includeNode(context);\r\n        this.argument.includeAsAssignmentTarget(context, includeChildrenRecursively, true);\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        this.argument.setAssignedValue(UNKNOWN_EXPRESSION);\r\n    }\r\n    render(code, options) {\r\n        const { exportNamesByVariable, format, snippets: { _ } } = options;\r\n        this.argument.render(code, options);\r\n        if (format === 'system') {\r\n            const variable = this.argument.variable;\r\n            const exportNames = exportNamesByVariable.get(variable);\r\n            if (exportNames) {\r\n                if (this.prefix) {\r\n                    if (exportNames.length === 1) {\r\n                        renderSystemExportExpression(variable, this.start, this.end, code, options);\r\n                    }\r\n                    else {\r\n                        renderSystemExportSequenceAfterExpression(variable, this.start, this.end, this.parent.type !== ExpressionStatement$1, code, options);\r\n                    }\r\n                }\r\n                else {\r\n                    const operator = this.operator[0];\r\n                    renderSystemExportSequenceBeforeExpression(variable, this.start, this.end, this.parent.type !== ExpressionStatement$1, code, options, `${_}${operator}${_}1`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    applyDeoptimizations() {\r\n        this.deoptimized = true;\r\n        this.argument.deoptimizePath(EMPTY_PATH);\r\n        if (this.argument instanceof Identifier) {\r\n            const variable = this.scope.findVariable(this.argument.name);\r\n            variable.markReassigned();\r\n        }\r\n        this.scope.context.requestTreeshakingPass();\r\n    }\r\n}\r\nUpdateExpression.prototype.includeNode = onlyIncludeSelf;\r\n\r\nfunction areAllDeclarationsIncludedAndNotExported(declarations, exportNamesByVariable) {\r\n    for (const declarator of declarations) {\r\n        if (!declarator.id.included)\r\n            return false;\r\n        if (declarator.id.type === Identifier$1) {\r\n            if (exportNamesByVariable.has(declarator.id.variable))\r\n                return false;\r\n        }\r\n        else {\r\n            const exportedVariables = [];\r\n            declarator.id.addExportedVariables(exportedVariables, exportNamesByVariable);\r\n            if (exportedVariables.length > 0)\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nclass VariableDeclaration extends NodeBase {\r\n    deoptimizePath() {\r\n        for (const declarator of this.declarations) {\r\n            declarator.deoptimizePath(EMPTY_PATH);\r\n        }\r\n    }\r\n    hasEffectsOnInteractionAtPath() {\r\n        return false;\r\n    }\r\n    include(context, includeChildrenRecursively, { asSingleStatement } = BLANK) {\r\n        this.included = true;\r\n        for (const declarator of this.declarations) {\r\n            if (includeChildrenRecursively || declarator.shouldBeIncluded(context)) {\r\n                declarator.include(context, includeChildrenRecursively);\r\n            }\r\n            const { id, init } = declarator;\r\n            if (asSingleStatement) {\r\n                id.include(context, includeChildrenRecursively);\r\n            }\r\n            if (init &&\r\n                id.included &&\r\n                !init.included &&\r\n                (id instanceof ObjectPattern || id instanceof ArrayPattern)) {\r\n                init.include(context, includeChildrenRecursively);\r\n            }\r\n        }\r\n    }\r\n    initialise() {\r\n        super.initialise();\r\n        this.isUsingDeclaration = this.kind === 'await using' || this.kind === 'using';\r\n        for (const declarator of this.declarations) {\r\n            declarator.declareDeclarator(this.kind, this.isUsingDeclaration);\r\n        }\r\n    }\r\n    removeAnnotations(code) {\r\n        this.declarations[0].removeAnnotations(code);\r\n    }\r\n    render(code, options, nodeRenderOptions = BLANK) {\r\n        if (this.isUsingDeclaration ||\r\n            areAllDeclarationsIncludedAndNotExported(this.declarations, options.exportNamesByVariable)) {\r\n            for (const declarator of this.declarations) {\r\n                declarator.render(code, options);\r\n            }\r\n            if (!nodeRenderOptions.isNoStatement &&\r\n                code.original.charCodeAt(this.end - 1) !== 59 /*\";\"*/) {\r\n                code.appendLeft(this.end, ';');\r\n            }\r\n        }\r\n        else {\r\n            this.renderReplacedDeclarations(code, options);\r\n        }\r\n    }\r\n    renderDeclarationEnd(code, separatorString, lastSeparatorPos, actualContentEnd, renderedContentEnd, systemPatternExports, options) {\r\n        if (code.original.charCodeAt(this.end - 1) === 59 /*\";\"*/) {\r\n            code.remove(this.end - 1, this.end);\r\n        }\r\n        separatorString += ';';\r\n        if (lastSeparatorPos === null) {\r\n            code.appendLeft(renderedContentEnd, separatorString);\r\n        }\r\n        else {\r\n            if (code.original.charCodeAt(actualContentEnd - 1) === 10 /*\"\\n\"*/ &&\r\n                (code.original.charCodeAt(this.end) === 10 /*\"\\n\"*/ ||\r\n                    code.original.charCodeAt(this.end) === 13) /*\"\\r\"*/) {\r\n                actualContentEnd--;\r\n                if (code.original.charCodeAt(actualContentEnd) === 13 /*\"\\r\"*/) {\r\n                    actualContentEnd--;\r\n                }\r\n            }\r\n            if (actualContentEnd === lastSeparatorPos + 1) {\r\n                code.overwrite(lastSeparatorPos, renderedContentEnd, separatorString);\r\n            }\r\n            else {\r\n                code.overwrite(lastSeparatorPos, lastSeparatorPos + 1, separatorString);\r\n                code.remove(actualContentEnd, renderedContentEnd);\r\n            }\r\n        }\r\n        if (systemPatternExports.length > 0) {\r\n            code.appendLeft(renderedContentEnd, ` ${getSystemExportStatement(systemPatternExports, options)};`);\r\n        }\r\n    }\r\n    renderReplacedDeclarations(code, options) {\r\n        const separatedNodes = getCommaSeparatedNodesWithBoundaries(this.declarations, code, this.start + this.kind.length, this.end - (code.original.charCodeAt(this.end - 1) === 59 /*\";\"*/ ? 1 : 0));\r\n        let actualContentEnd, renderedContentEnd;\r\n        renderedContentEnd = findNonWhiteSpace(code.original, this.start + this.kind.length);\r\n        let lastSeparatorPos = renderedContentEnd - 1;\r\n        code.remove(this.start, lastSeparatorPos);\r\n        let isInDeclaration = false;\r\n        let hasRenderedContent = false;\r\n        let separatorString = '', leadingString, nextSeparatorString;\r\n        const aggregatedSystemExports = [];\r\n        const singleSystemExport = gatherSystemExportsAndGetSingleExport(separatedNodes, options, aggregatedSystemExports);\r\n        for (const { node, start, separator, contentEnd, end } of separatedNodes) {\r\n            if (!node.included) {\r\n                treeshakeNode(node, code, start, end);\r\n                continue;\r\n            }\r\n            node.render(code, options);\r\n            leadingString = '';\r\n            nextSeparatorString = '';\r\n            if (!node.id.included ||\r\n                (node.id instanceof Identifier &&\r\n                    isReassignedExportsMember(node.id.variable, options.exportNamesByVariable))) {\r\n                if (hasRenderedContent) {\r\n                    separatorString += ';';\r\n                }\r\n                isInDeclaration = false;\r\n            }\r\n            else {\r\n                if (singleSystemExport && singleSystemExport === node.id.variable) {\r\n                    const operatorPos = findFirstOccurrenceOutsideComment(code.original, '=', node.id.end);\r\n                    renderSystemExportExpression(singleSystemExport, findNonWhiteSpace(code.original, operatorPos + 1), separator === null ? contentEnd : separator, code, options);\r\n                }\r\n                if (isInDeclaration) {\r\n                    separatorString += ',';\r\n                }\r\n                else {\r\n                    if (hasRenderedContent) {\r\n                        separatorString += ';';\r\n                    }\r\n                    leadingString += `${this.kind} `;\r\n                    isInDeclaration = true;\r\n                }\r\n            }\r\n            if (renderedContentEnd === lastSeparatorPos + 1) {\r\n                code.overwrite(lastSeparatorPos, renderedContentEnd, separatorString + leadingString);\r\n            }\r\n            else {\r\n                code.overwrite(lastSeparatorPos, lastSeparatorPos + 1, separatorString);\r\n                code.appendLeft(renderedContentEnd, leadingString);\r\n            }\r\n            actualContentEnd = contentEnd;\r\n            renderedContentEnd = end;\r\n            hasRenderedContent = true;\r\n            lastSeparatorPos = separator;\r\n            separatorString = nextSeparatorString;\r\n        }\r\n        this.renderDeclarationEnd(code, separatorString, lastSeparatorPos, actualContentEnd, renderedContentEnd, aggregatedSystemExports, options);\r\n    }\r\n}\r\nfunction gatherSystemExportsAndGetSingleExport(separatedNodes, options, aggregatedSystemExports) {\r\n    let singleSystemExport = null;\r\n    if (options.format === 'system') {\r\n        for (const { node } of separatedNodes) {\r\n            if (node.id instanceof Identifier &&\r\n                node.init &&\r\n                aggregatedSystemExports.length === 0 &&\r\n                options.exportNamesByVariable.get(node.id.variable)?.length === 1) {\r\n                singleSystemExport = node.id.variable;\r\n                aggregatedSystemExports.push(singleSystemExport);\r\n            }\r\n            else {\r\n                node.id.addExportedVariables(aggregatedSystemExports, options.exportNamesByVariable);\r\n            }\r\n        }\r\n        if (aggregatedSystemExports.length > 1) {\r\n            singleSystemExport = null;\r\n        }\r\n        else if (singleSystemExport) {\r\n            aggregatedSystemExports.length = 0;\r\n        }\r\n    }\r\n    return singleSystemExport;\r\n}\r\nVariableDeclaration.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nVariableDeclaration.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass WhileStatement extends NodeBase {\r\n    hasEffects(context) {\r\n        if (this.test.hasEffects(context))\r\n            return true;\r\n        return hasLoopBodyEffects(context, this.body);\r\n    }\r\n    include(context, includeChildrenRecursively) {\r\n        this.included = true;\r\n        this.test.include(context, includeChildrenRecursively);\r\n        includeLoopBody(context, this.body, includeChildrenRecursively);\r\n    }\r\n}\r\nWhileStatement.prototype.includeNode = onlyIncludeSelfNoDeoptimize;\r\nWhileStatement.prototype.applyDeoptimizations = doNotDeoptimize;\r\n\r\nclass YieldExpression extends NodeBase {\r\n    applyDeoptimizations() {\r\n        this.deoptimized = true;\r\n        this.argument?.deoptimizePath(UNKNOWN_PATH);\r\n    }\r\n    hasEffects(context) {\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        return !(context.ignore.returnYield && !this.argument?.hasEffects(context));\r\n    }\r\n    includeNode(context) {\r\n        this.included = true;\r\n        if (!this.deoptimized)\r\n            this.applyDeoptimizations();\r\n        this.argument?.includePath(UNKNOWN_PATH, context);\r\n    }\r\n    render(code, options) {\r\n        if (this.argument) {\r\n            this.argument.render(code, options, { preventASI: true });\r\n            if (this.argument.start === this.start + 5 /* 'yield'.length */) {\r\n                code.prependLeft(this.start + 5, ' ');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// This file is generated by scripts/generate-buffer-parsers.js.\r\n// Do not edit this file directly.\r\nfunction convertProgram(buffer, parent, parentScope) {\r\n    return convertNode(parent, parentScope, 0, getAstBuffer(buffer));\r\n}\r\nconst nodeTypeStrings = [\r\n    'PanicError',\r\n    'ParseError',\r\n    'ArrayExpression',\r\n    'ArrayPattern',\r\n    'ArrowFunctionExpression',\r\n    'AssignmentExpression',\r\n    'AssignmentPattern',\r\n    'AwaitExpression',\r\n    'BinaryExpression',\r\n    'BlockStatement',\r\n    'BreakStatement',\r\n    'CallExpression',\r\n    'CatchClause',\r\n    'ChainExpression',\r\n    'ClassBody',\r\n    'ClassDeclaration',\r\n    'ClassExpression',\r\n    'ConditionalExpression',\r\n    'ContinueStatement',\r\n    'DebuggerStatement',\r\n    'Decorator',\r\n    'ExpressionStatement',\r\n    'DoWhileStatement',\r\n    'EmptyStatement',\r\n    'ExportAllDeclaration',\r\n    'ExportDefaultDeclaration',\r\n    'ExportNamedDeclaration',\r\n    'ExportSpecifier',\r\n    'ExpressionStatement',\r\n    'ForInStatement',\r\n    'ForOfStatement',\r\n    'ForStatement',\r\n    'FunctionDeclaration',\r\n    'FunctionExpression',\r\n    'Identifier',\r\n    'IfStatement',\r\n    'ImportAttribute',\r\n    'ImportDeclaration',\r\n    'ImportDefaultSpecifier',\r\n    'ImportExpression',\r\n    'ImportNamespaceSpecifier',\r\n    'ImportSpecifier',\r\n    'JSXAttribute',\r\n    'JSXClosingElement',\r\n    'JSXClosingFragment',\r\n    'JSXElement',\r\n    'JSXEmptyExpression',\r\n    'JSXExpressionContainer',\r\n    'JSXFragment',\r\n    'JSXIdentifier',\r\n    'JSXMemberExpression',\r\n    'JSXNamespacedName',\r\n    'JSXOpeningElement',\r\n    'JSXOpeningFragment',\r\n    'JSXSpreadAttribute',\r\n    'JSXSpreadChild',\r\n    'JSXText',\r\n    'LabeledStatement',\r\n    'Literal',\r\n    'Literal',\r\n    'Literal',\r\n    'Literal',\r\n    'Literal',\r\n    'Literal',\r\n    'LogicalExpression',\r\n    'MemberExpression',\r\n    'MetaProperty',\r\n    'MethodDefinition',\r\n    'NewExpression',\r\n    'ObjectExpression',\r\n    'ObjectPattern',\r\n    'PrivateIdentifier',\r\n    'Program',\r\n    'Property',\r\n    'PropertyDefinition',\r\n    'RestElement',\r\n    'ReturnStatement',\r\n    'SequenceExpression',\r\n    'SpreadElement',\r\n    'StaticBlock',\r\n    'Super',\r\n    'SwitchCase',\r\n    'SwitchStatement',\r\n    'TaggedTemplateExpression',\r\n    'TemplateElement',\r\n    'TemplateLiteral',\r\n    'ThisExpression',\r\n    'ThrowStatement',\r\n    'TryStatement',\r\n    'UnaryExpression',\r\n    'UpdateExpression',\r\n    'VariableDeclaration',\r\n    'VariableDeclarator',\r\n    'WhileStatement',\r\n    'YieldExpression'\r\n];\r\nconst nodeConstructors$1 = [\r\n    PanicError,\r\n    ParseError,\r\n    ArrayExpression,\r\n    ArrayPattern,\r\n    ArrowFunctionExpression,\r\n    AssignmentExpression,\r\n    AssignmentPattern,\r\n    AwaitExpression,\r\n    BinaryExpression,\r\n    BlockStatement,\r\n    BreakStatement,\r\n    CallExpression,\r\n    CatchClause,\r\n    ChainExpression,\r\n    ClassBody,\r\n    ClassDeclaration,\r\n    ClassExpression,\r\n    ConditionalExpression,\r\n    ContinueStatement,\r\n    DebuggerStatement,\r\n    Decorator,\r\n    ExpressionStatement,\r\n    DoWhileStatement,\r\n    EmptyStatement,\r\n    ExportAllDeclaration,\r\n    ExportDefaultDeclaration,\r\n    ExportNamedDeclaration,\r\n    ExportSpecifier,\r\n    ExpressionStatement,\r\n    ForInStatement,\r\n    ForOfStatement,\r\n    ForStatement,\r\n    FunctionDeclaration,\r\n    FunctionExpression,\r\n    Identifier,\r\n    IfStatement,\r\n    ImportAttribute,\r\n    ImportDeclaration,\r\n    ImportDefaultSpecifier,\r\n    ImportExpression,\r\n    ImportNamespaceSpecifier,\r\n    ImportSpecifier,\r\n    JSXAttribute,\r\n    JSXClosingElement,\r\n    JSXClosingFragment,\r\n    JSXElement,\r\n    JSXEmptyExpression,\r\n    JSXExpressionContainer,\r\n    JSXFragment,\r\n    JSXIdentifier,\r\n    JSXMemberExpression,\r\n    JSXNamespacedName,\r\n    JSXOpeningElement,\r\n    JSXOpeningFragment,\r\n    JSXSpreadAttribute,\r\n    JSXSpreadChild,\r\n    JSXText,\r\n    LabeledStatement,\r\n    Literal,\r\n    Literal,\r\n    Literal,\r\n    Literal,\r\n    Literal,\r\n    Literal,\r\n    LogicalExpression,\r\n    MemberExpression,\r\n    MetaProperty,\r\n    MethodDefinition,\r\n    NewExpression,\r\n    ObjectExpression,\r\n    ObjectPattern,\r\n    PrivateIdentifier,\r\n    Program,\r\n    Property,\r\n    PropertyDefinition,\r\n    RestElement,\r\n    ReturnStatement,\r\n    SequenceExpression,\r\n    SpreadElement,\r\n    StaticBlock,\r\n    Super,\r\n    SwitchCase,\r\n    SwitchStatement,\r\n    TaggedTemplateExpression,\r\n    TemplateElement,\r\n    TemplateLiteral,\r\n    ThisExpression,\r\n    ThrowStatement,\r\n    TryStatement,\r\n    UnaryExpression,\r\n    UpdateExpression,\r\n    VariableDeclaration,\r\n    VariableDeclarator,\r\n    WhileStatement,\r\n    YieldExpression\r\n];\r\nconst bufferParsers = [\r\n    function panicError(node, position, buffer) {\r\n        node.message = buffer.convertString(buffer[position]);\r\n    },\r\n    function parseError(node, position, buffer) {\r\n        node.message = buffer.convertString(buffer[position]);\r\n    },\r\n    function arrayExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.elements = convertNodeList(node, scope, buffer[position], buffer);\r\n    },\r\n    function arrayPattern(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.elements = convertNodeList(node, scope, buffer[position], buffer);\r\n    },\r\n    function arrowFunctionExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        const flags = buffer[position];\r\n        node.async = (flags & 1) === 1;\r\n        node.expression = (flags & 2) === 2;\r\n        node.generator = (flags & 4) === 4;\r\n        const annotations = (node.annotations = convertAnnotations(buffer[position + 1], buffer));\r\n        node.annotationNoSideEffects = annotations.some(comment => comment.type === 'noSideEffects');\r\n        const parameters = (node.params = convertNodeList(node, scope, buffer[position + 2], buffer));\r\n        scope.addParameterVariables(parameters.map(parameter => parameter.declare('parameter', EMPTY_PATH, UNKNOWN_EXPRESSION)), parameters[parameters.length - 1] instanceof RestElement);\r\n        node.body = convertNode(node, scope.bodyScope, buffer[position + 3], buffer);\r\n    },\r\n    function assignmentExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.operator = FIXED_STRINGS[buffer[position]];\r\n        node.left = convertNode(node, scope, buffer[position + 1], buffer);\r\n        node.right = convertNode(node, scope, buffer[position + 2], buffer);\r\n    },\r\n    function assignmentPattern(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.left = convertNode(node, scope, buffer[position], buffer);\r\n        node.right = convertNode(node, scope, buffer[position + 1], buffer);\r\n    },\r\n    function awaitExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.argument = convertNode(node, scope, buffer[position], buffer);\r\n    },\r\n    function binaryExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.operator = FIXED_STRINGS[buffer[position]];\r\n        node.left = convertNode(node, scope, buffer[position + 1], buffer);\r\n        node.right = convertNode(node, scope, buffer[position + 2], buffer);\r\n    },\r\n    function blockStatement(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.body = convertNodeList(node, scope, buffer[position], buffer);\r\n    },\r\n    function breakStatement(node, position, buffer) {\r\n        const { scope } = node;\r\n        const labelPosition = buffer[position];\r\n        node.label = labelPosition === 0 ? null : convertNode(node, scope, labelPosition, buffer);\r\n    },\r\n    function callExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        const flags = buffer[position];\r\n        node.optional = (flags & 1) === 1;\r\n        node.annotations = convertAnnotations(buffer[position + 1], buffer);\r\n        node.callee = convertNode(node, scope, buffer[position + 2], buffer);\r\n        node.arguments = convertNodeList(node, scope, buffer[position + 3], buffer);\r\n    },\r\n    function catchClause(node, position, buffer) {\r\n        const { scope } = node;\r\n        const parameterPosition = buffer[position];\r\n        const parameter = (node.param =\r\n            parameterPosition === 0 ? null : convertNode(node, scope, parameterPosition, buffer));\r\n        parameter?.declare('parameter', EMPTY_PATH, UNKNOWN_EXPRESSION);\r\n        node.body = convertNode(node, scope.bodyScope, buffer[position + 1], buffer);\r\n    },\r\n    function chainExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.expression = convertNode(node, scope, buffer[position], buffer);\r\n    },\r\n    function classBody(node, position, buffer) {\r\n        const { scope } = node;\r\n        const bodyPosition = buffer[position];\r\n        if (bodyPosition) {\r\n            const length = buffer[bodyPosition];\r\n            const body = (node.body = new Array(length));\r\n            for (let index = 0; index < length; index++) {\r\n                const nodePosition = buffer[bodyPosition + 1 + index];\r\n                body[index] = convertNode(node, buffer[nodePosition] !== 79 &&\r\n                    (buffer[nodePosition + 3] & /* the static flag is always first */ 1) === 0\r\n                    ? scope.instanceScope\r\n                    : scope, nodePosition, buffer);\r\n            }\r\n        }\r\n        else {\r\n            node.body = [];\r\n        }\r\n    },\r\n    function classDeclaration(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.decorators = convertNodeList(node, scope, buffer[position], buffer);\r\n        const idPosition = buffer[position + 1];\r\n        node.id =\r\n            idPosition === 0 ? null : convertNode(node, scope.parent, idPosition, buffer);\r\n        const superClassPosition = buffer[position + 2];\r\n        node.superClass =\r\n            superClassPosition === 0 ? null : convertNode(node, scope, superClassPosition, buffer);\r\n        node.body = convertNode(node, scope, buffer[position + 3], buffer);\r\n    },\r\n    function classExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.decorators = convertNodeList(node, scope, buffer[position], buffer);\r\n        const idPosition = buffer[position + 1];\r\n        node.id = idPosition === 0 ? null : convertNode(node, scope, idPosition, buffer);\r\n        const superClassPosition = buffer[position + 2];\r\n        node.superClass =\r\n            superClassPosition === 0 ? null : convertNode(node, scope, superClassPosition, buffer);\r\n        node.body = convertNode(node, scope, buffer[position + 3], buffer);\r\n    },\r\n    function conditionalExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.test = convertNode(node, scope, buffer[position], buffer);\r\n        node.consequent = convertNode(node, scope, buffer[position + 1], buffer);\r\n        node.alternate = convertNode(node, scope, buffer[position + 2], buffer);\r\n    },\r\n    function continueStatement(node, position, buffer) {\r\n        const { scope } = node;\r\n        const labelPosition = buffer[position];\r\n        node.label = labelPosition === 0 ? null : convertNode(node, scope, labelPosition, buffer);\r\n    },\r\n    function debuggerStatement() { },\r\n    function decorator(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.expression = convertNode(node, scope, buffer[position], buffer);\r\n    },\r\n    function directive(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.directive = buffer.convertString(buffer[position]);\r\n        node.expression = convertNode(node, scope, buffer[position + 1], buffer);\r\n    },\r\n    function doWhileStatement(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.body = convertNode(node, scope, buffer[position], buffer);\r\n        node.test = convertNode(node, scope, buffer[position + 1], buffer);\r\n    },\r\n    function emptyStatement() { },\r\n    function exportAllDeclaration(node, position, buffer) {\r\n        const { scope } = node;\r\n        const exportedPosition = buffer[position];\r\n        node.exported =\r\n            exportedPosition === 0 ? null : convertNode(node, scope, exportedPosition, buffer);\r\n        node.source = convertNode(node, scope, buffer[position + 1], buffer);\r\n        node.attributes = convertNodeList(node, scope, buffer[position + 2], buffer);\r\n    },\r\n    function exportDefaultDeclaration(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.declaration = convertNode(node, scope, buffer[position], buffer);\r\n    },\r\n    function exportNamedDeclaration(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.specifiers = convertNodeList(node, scope, buffer[position], buffer);\r\n        const sourcePosition = buffer[position + 1];\r\n        node.source = sourcePosition === 0 ? null : convertNode(node, scope, sourcePosition, buffer);\r\n        node.attributes = convertNodeList(node, scope, buffer[position + 2], buffer);\r\n        const declarationPosition = buffer[position + 3];\r\n        node.declaration =\r\n            declarationPosition === 0 ? null : convertNode(node, scope, declarationPosition, buffer);\r\n    },\r\n    function exportSpecifier(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.local = convertNode(node, scope, buffer[position], buffer);\r\n        const exportedPosition = buffer[position + 1];\r\n        node.exported =\r\n            exportedPosition === 0 ? node.local : convertNode(node, scope, exportedPosition, buffer);\r\n    },\r\n    function expressionStatement(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.expression = convertNode(node, scope, buffer[position], buffer);\r\n    },\r\n    function forInStatement(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.left = convertNode(node, scope, buffer[position], buffer);\r\n        node.right = convertNode(node, scope, buffer[position + 1], buffer);\r\n        node.body = convertNode(node, scope, buffer[position + 2], buffer);\r\n    },\r\n    function forOfStatement(node, position, buffer) {\r\n        const { scope } = node;\r\n        const flags = buffer[position];\r\n        node.await = (flags & 1) === 1;\r\n        node.left = convertNode(node, scope, buffer[position + 1], buffer);\r\n        node.right = convertNode(node, scope, buffer[position + 2], buffer);\r\n        node.body = convertNode(node, scope, buffer[position + 3], buffer);\r\n    },\r\n    function forStatement(node, position, buffer) {\r\n        const { scope } = node;\r\n        const initPosition = buffer[position];\r\n        node.init = initPosition === 0 ? null : convertNode(node, scope, initPosition, buffer);\r\n        const testPosition = buffer[position + 1];\r\n        node.test = testPosition === 0 ? null : convertNode(node, scope, testPosition, buffer);\r\n        const updatePosition = buffer[position + 2];\r\n        node.update = updatePosition === 0 ? null : convertNode(node, scope, updatePosition, buffer);\r\n        node.body = convertNode(node, scope, buffer[position + 3], buffer);\r\n    },\r\n    function functionDeclaration(node, position, buffer) {\r\n        const { scope } = node;\r\n        const flags = buffer[position];\r\n        node.async = (flags & 1) === 1;\r\n        node.generator = (flags & 2) === 2;\r\n        const annotations = (node.annotations = convertAnnotations(buffer[position + 1], buffer));\r\n        node.annotationNoSideEffects = annotations.some(comment => comment.type === 'noSideEffects');\r\n        const idPosition = buffer[position + 2];\r\n        node.id =\r\n            idPosition === 0 ? null : convertNode(node, scope.parent, idPosition, buffer);\r\n        const parameters = (node.params = convertNodeList(node, scope, buffer[position + 3], buffer));\r\n        scope.addParameterVariables(parameters.map(parameter => parameter.declare('parameter', EMPTY_PATH, UNKNOWN_EXPRESSION)), parameters[parameters.length - 1] instanceof RestElement);\r\n        node.body = convertNode(node, scope.bodyScope, buffer[position + 4], buffer);\r\n    },\r\n    function functionExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        const flags = buffer[position];\r\n        node.async = (flags & 1) === 1;\r\n        node.generator = (flags & 2) === 2;\r\n        const annotations = (node.annotations = convertAnnotations(buffer[position + 1], buffer));\r\n        node.annotationNoSideEffects = annotations.some(comment => comment.type === 'noSideEffects');\r\n        const idPosition = buffer[position + 2];\r\n        node.id = idPosition === 0 ? null : convertNode(node, node.idScope, idPosition, buffer);\r\n        const parameters = (node.params = convertNodeList(node, scope, buffer[position + 3], buffer));\r\n        scope.addParameterVariables(parameters.map(parameter => parameter.declare('parameter', EMPTY_PATH, UNKNOWN_EXPRESSION)), parameters[parameters.length - 1] instanceof RestElement);\r\n        node.body = convertNode(node, scope.bodyScope, buffer[position + 4], buffer);\r\n    },\r\n    function identifier(node, position, buffer) {\r\n        node.name = buffer.convertString(buffer[position]);\r\n    },\r\n    function ifStatement(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.test = convertNode(node, scope, buffer[position], buffer);\r\n        node.consequent = convertNode(node, (node.consequentScope = new TrackingScope(scope)), buffer[position + 1], buffer);\r\n        const alternatePosition = buffer[position + 2];\r\n        node.alternate =\r\n            alternatePosition === 0\r\n                ? null\r\n                : convertNode(node, (node.alternateScope = new TrackingScope(scope)), alternatePosition, buffer);\r\n    },\r\n    function importAttribute(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.key = convertNode(node, scope, buffer[position], buffer);\r\n        node.value = convertNode(node, scope, buffer[position + 1], buffer);\r\n    },\r\n    function importDeclaration(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.specifiers = convertNodeList(node, scope, buffer[position], buffer);\r\n        node.source = convertNode(node, scope, buffer[position + 1], buffer);\r\n        node.attributes = convertNodeList(node, scope, buffer[position + 2], buffer);\r\n    },\r\n    function importDefaultSpecifier(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.local = convertNode(node, scope, buffer[position], buffer);\r\n    },\r\n    function importExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.source = convertNode(node, scope, buffer[position], buffer);\r\n        node.sourceAstNode = convertNode$1(buffer[position], buffer);\r\n        const optionsPosition = buffer[position + 1];\r\n        node.options = optionsPosition === 0 ? null : convertNode(node, scope, optionsPosition, buffer);\r\n    },\r\n    function importNamespaceSpecifier(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.local = convertNode(node, scope, buffer[position], buffer);\r\n    },\r\n    function importSpecifier(node, position, buffer) {\r\n        const { scope } = node;\r\n        const importedPosition = buffer[position];\r\n        node.local = convertNode(node, scope, buffer[position + 1], buffer);\r\n        node.imported =\r\n            importedPosition === 0 ? node.local : convertNode(node, scope, importedPosition, buffer);\r\n    },\r\n    function jsxAttribute(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.name = convertNode(node, scope, buffer[position], buffer);\r\n        const valuePosition = buffer[position + 1];\r\n        node.value = valuePosition === 0 ? null : convertNode(node, scope, valuePosition, buffer);\r\n    },\r\n    function jsxClosingElement(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.name = convertNode(node, scope, buffer[position], buffer);\r\n    },\r\n    function jsxClosingFragment() { },\r\n    function jsxElement(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.openingElement = convertNode(node, scope, buffer[position], buffer);\r\n        node.children = convertNodeList(node, scope, buffer[position + 1], buffer);\r\n        const closingElementPosition = buffer[position + 2];\r\n        node.closingElement =\r\n            closingElementPosition === 0\r\n                ? null\r\n                : convertNode(node, scope, closingElementPosition, buffer);\r\n    },\r\n    function jsxEmptyExpression() { },\r\n    function jsxExpressionContainer(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.expression = convertNode(node, scope, buffer[position], buffer);\r\n    },\r\n    function jsxFragment(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.openingFragment = convertNode(node, scope, buffer[position], buffer);\r\n        node.children = convertNodeList(node, scope, buffer[position + 1], buffer);\r\n        node.closingFragment = convertNode(node, scope, buffer[position + 2], buffer);\r\n    },\r\n    function jsxIdentifier(node, position, buffer) {\r\n        node.name = buffer.convertString(buffer[position]);\r\n    },\r\n    function jsxMemberExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.object = convertNode(node, scope, buffer[position], buffer);\r\n        node.property = convertNode(node, scope, buffer[position + 1], buffer);\r\n    },\r\n    function jsxNamespacedName(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.namespace = convertNode(node, scope, buffer[position], buffer);\r\n        node.name = convertNode(node, scope, buffer[position + 1], buffer);\r\n    },\r\n    function jsxOpeningElement(node, position, buffer) {\r\n        const { scope } = node;\r\n        const flags = buffer[position];\r\n        node.selfClosing = (flags & 1) === 1;\r\n        node.name = convertNode(node, scope, buffer[position + 1], buffer);\r\n        node.attributes = convertNodeList(node, scope, buffer[position + 2], buffer);\r\n    },\r\n    function jsxOpeningFragment(node) {\r\n        node.attributes = [];\r\n        node.selfClosing = false;\r\n    },\r\n    function jsxSpreadAttribute(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.argument = convertNode(node, scope, buffer[position], buffer);\r\n    },\r\n    function jsxSpreadChild(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.expression = convertNode(node, scope, buffer[position], buffer);\r\n    },\r\n    function jsxText(node, position, buffer) {\r\n        node.value = buffer.convertString(buffer[position]);\r\n        node.raw = buffer.convertString(buffer[position + 1]);\r\n    },\r\n    function labeledStatement(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.label = convertNode(node, scope, buffer[position], buffer);\r\n        node.body = convertNode(node, scope, buffer[position + 1], buffer);\r\n    },\r\n    function literalBigInt(node, position, buffer) {\r\n        const bigint = (node.bigint = buffer.convertString(buffer[position]));\r\n        node.raw = buffer.convertString(buffer[position + 1]);\r\n        node.value = BigInt(bigint);\r\n    },\r\n    function literalBoolean(node, position, buffer) {\r\n        const flags = buffer[position];\r\n        const value = (node.value = (flags & 1) === 1);\r\n        node.raw = value ? 'true' : 'false';\r\n    },\r\n    function literalNull(node) {\r\n        node.value = null;\r\n    },\r\n    function literalNumber(node, position, buffer) {\r\n        const rawPosition = buffer[position];\r\n        node.raw = rawPosition === 0 ? undefined : buffer.convertString(rawPosition);\r\n        node.value = new DataView(buffer.buffer).getFloat64((position + 1) << 2, true);\r\n    },\r\n    function literalRegExp(node, position, buffer) {\r\n        const flags = buffer.convertString(buffer[position]);\r\n        const pattern = buffer.convertString(buffer[position + 1]);\r\n        node.raw = `/${pattern}/${flags}`;\r\n        node.regex = { flags, pattern };\r\n        node.value = new RegExp(pattern, flags);\r\n    },\r\n    function literalString(node, position, buffer) {\r\n        node.value = buffer.convertString(buffer[position]);\r\n        const rawPosition = buffer[position + 1];\r\n        node.raw = rawPosition === 0 ? undefined : buffer.convertString(rawPosition);\r\n    },\r\n    function logicalExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.operator = FIXED_STRINGS[buffer[position]];\r\n        node.left = convertNode(node, scope, buffer[position + 1], buffer);\r\n        node.right = convertNode(node, scope, buffer[position + 2], buffer);\r\n    },\r\n    function memberExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        const flags = buffer[position];\r\n        node.computed = (flags & 1) === 1;\r\n        node.optional = (flags & 2) === 2;\r\n        node.object = convertNode(node, scope, buffer[position + 1], buffer);\r\n        node.property = convertNode(node, scope, buffer[position + 2], buffer);\r\n    },\r\n    function metaProperty(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.meta = convertNode(node, scope, buffer[position], buffer);\r\n        node.property = convertNode(node, scope, buffer[position + 1], buffer);\r\n    },\r\n    function methodDefinition(node, position, buffer) {\r\n        const { scope } = node;\r\n        const flags = buffer[position];\r\n        node.static = (flags & 1) === 1;\r\n        node.computed = (flags & 2) === 2;\r\n        node.decorators = convertNodeList(node, scope, buffer[position + 1], buffer);\r\n        node.key = convertNode(node, scope, buffer[position + 2], buffer);\r\n        node.value = convertNode(node, scope, buffer[position + 3], buffer);\r\n        node.kind = FIXED_STRINGS[buffer[position + 4]];\r\n    },\r\n    function newExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.annotations = convertAnnotations(buffer[position], buffer);\r\n        node.callee = convertNode(node, scope, buffer[position + 1], buffer);\r\n        node.arguments = convertNodeList(node, scope, buffer[position + 2], buffer);\r\n    },\r\n    function objectExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.properties = convertNodeList(node, scope, buffer[position], buffer);\r\n    },\r\n    function objectPattern(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.properties = convertNodeList(node, scope, buffer[position], buffer);\r\n    },\r\n    function privateIdentifier(node, position, buffer) {\r\n        node.name = buffer.convertString(buffer[position]);\r\n    },\r\n    function program(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.body = convertNodeList(node, scope, buffer[position], buffer);\r\n        node.invalidAnnotations = convertAnnotations(buffer[position + 1], buffer);\r\n    },\r\n    function property(node, position, buffer) {\r\n        const { scope } = node;\r\n        const flags = buffer[position];\r\n        node.method = (flags & 1) === 1;\r\n        node.shorthand = (flags & 2) === 2;\r\n        node.computed = (flags & 4) === 4;\r\n        const keyPosition = buffer[position + 1];\r\n        node.value = convertNode(node, scope, buffer[position + 2], buffer);\r\n        node.kind = FIXED_STRINGS[buffer[position + 3]];\r\n        node.key = keyPosition === 0 ? node.value : convertNode(node, scope, keyPosition, buffer);\r\n    },\r\n    function propertyDefinition(node, position, buffer) {\r\n        const { scope } = node;\r\n        const flags = buffer[position];\r\n        node.static = (flags & 1) === 1;\r\n        node.computed = (flags & 2) === 2;\r\n        node.decorators = convertNodeList(node, scope, buffer[position + 1], buffer);\r\n        node.key = convertNode(node, scope, buffer[position + 2], buffer);\r\n        const valuePosition = buffer[position + 3];\r\n        node.value = valuePosition === 0 ? null : convertNode(node, scope, valuePosition, buffer);\r\n    },\r\n    function restElement(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.argument = convertNode(node, scope, buffer[position], buffer);\r\n    },\r\n    function returnStatement(node, position, buffer) {\r\n        const { scope } = node;\r\n        const argumentPosition = buffer[position];\r\n        node.argument =\r\n            argumentPosition === 0 ? null : convertNode(node, scope, argumentPosition, buffer);\r\n    },\r\n    function sequenceExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.expressions = convertNodeList(node, scope, buffer[position], buffer);\r\n    },\r\n    function spreadElement(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.argument = convertNode(node, scope, buffer[position], buffer);\r\n    },\r\n    function staticBlock(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.body = convertNodeList(node, scope, buffer[position], buffer);\r\n    },\r\n    function superElement() { },\r\n    function switchCase(node, position, buffer) {\r\n        const { scope } = node;\r\n        const testPosition = buffer[position];\r\n        node.test = testPosition === 0 ? null : convertNode(node, scope, testPosition, buffer);\r\n        node.consequent = convertNodeList(node, scope, buffer[position + 1], buffer);\r\n    },\r\n    function switchStatement(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.discriminant = convertNode(node, node.parentScope, buffer[position], buffer);\r\n        node.cases = convertNodeList(node, scope, buffer[position + 1], buffer);\r\n    },\r\n    function taggedTemplateExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.tag = convertNode(node, scope, buffer[position], buffer);\r\n        node.quasi = convertNode(node, scope, buffer[position + 1], buffer);\r\n    },\r\n    function templateElement(node, position, buffer) {\r\n        const flags = buffer[position];\r\n        node.tail = (flags & 1) === 1;\r\n        const cookedPosition = buffer[position + 1];\r\n        const cooked = cookedPosition === 0 ? undefined : buffer.convertString(cookedPosition);\r\n        const raw = buffer.convertString(buffer[position + 2]);\r\n        node.value = { cooked, raw };\r\n    },\r\n    function templateLiteral(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.quasis = convertNodeList(node, scope, buffer[position], buffer);\r\n        node.expressions = convertNodeList(node, scope, buffer[position + 1], buffer);\r\n    },\r\n    function thisExpression() { },\r\n    function throwStatement(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.argument = convertNode(node, scope, buffer[position], buffer);\r\n    },\r\n    function tryStatement(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.block = convertNode(node, scope, buffer[position], buffer);\r\n        const handlerPosition = buffer[position + 1];\r\n        node.handler = handlerPosition === 0 ? null : convertNode(node, scope, handlerPosition, buffer);\r\n        const finalizerPosition = buffer[position + 2];\r\n        node.finalizer =\r\n            finalizerPosition === 0 ? null : convertNode(node, scope, finalizerPosition, buffer);\r\n    },\r\n    function unaryExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.operator = FIXED_STRINGS[buffer[position]];\r\n        node.argument = convertNode(node, scope, buffer[position + 1], buffer);\r\n    },\r\n    function updateExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        const flags = buffer[position];\r\n        node.prefix = (flags & 1) === 1;\r\n        node.operator = FIXED_STRINGS[buffer[position + 1]];\r\n        node.argument = convertNode(node, scope, buffer[position + 2], buffer);\r\n    },\r\n    function variableDeclaration(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.kind = FIXED_STRINGS[buffer[position]];\r\n        node.declarations = convertNodeList(node, scope, buffer[position + 1], buffer);\r\n    },\r\n    function variableDeclarator(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.id = convertNode(node, scope, buffer[position], buffer);\r\n        const initPosition = buffer[position + 1];\r\n        node.init = initPosition === 0 ? null : convertNode(node, scope, initPosition, buffer);\r\n    },\r\n    function whileStatement(node, position, buffer) {\r\n        const { scope } = node;\r\n        node.test = convertNode(node, scope, buffer[position], buffer);\r\n        node.body = convertNode(node, scope, buffer[position + 1], buffer);\r\n    },\r\n    function yieldExpression(node, position, buffer) {\r\n        const { scope } = node;\r\n        const flags = buffer[position];\r\n        node.delegate = (flags & 1) === 1;\r\n        const argumentPosition = buffer[position + 1];\r\n        node.argument =\r\n            argumentPosition === 0 ? null : convertNode(node, scope, argumentPosition, buffer);\r\n    }\r\n];\r\nfunction convertNode(parent, parentScope, position, buffer) {\r\n    const nodeType = buffer[position];\r\n    const NodeConstructor = nodeConstructors$1[nodeType];\r\n    /* istanbul ignore if: This should never be executed but is a safeguard against faulty buffers */\r\n    if (!NodeConstructor) {\r\n        console.trace();\r\n        throw new Error(`Unknown node type: ${nodeType}`);\r\n    }\r\n    const node = new NodeConstructor(parent, parentScope);\r\n    node.type = nodeTypeStrings[nodeType];\r\n    node.start = buffer[position + 1];\r\n    node.end = buffer[position + 2];\r\n    bufferParsers[nodeType](node, position + 3, buffer);\r\n    node.initialise();\r\n    return node;\r\n}\r\nfunction convertNodeList(parent, parentScope, position, buffer) {\r\n    if (position === 0)\r\n        return EMPTY_ARRAY;\r\n    const length = buffer[position++];\r\n    const list = new Array(length);\r\n    for (let index = 0; index < length; index++) {\r\n        const nodePosition = buffer[position++];\r\n        list[index] = nodePosition ? convertNode(parent, parentScope, nodePosition, buffer) : null;\r\n    }\r\n    return list;\r\n}\r\n\r\nclass UnknownNode extends NodeBase {\r\n    hasEffects() {\r\n        return true;\r\n    }\r\n    include(context) {\r\n        super.include(context, true);\r\n    }\r\n}\r\n\r\n// This file is generated by scripts/generate-node-index.js.\r\n// Do not edit this file directly.\r\nconst nodeConstructors = {\r\n    ArrayExpression,\r\n    ArrayPattern,\r\n    ArrowFunctionExpression,\r\n    AssignmentExpression,\r\n    AssignmentPattern,\r\n    AwaitExpression,\r\n    BinaryExpression,\r\n    BlockStatement,\r\n    BreakStatement,\r\n    CallExpression,\r\n    CatchClause,\r\n    ChainExpression,\r\n    ClassBody,\r\n    ClassDeclaration,\r\n    ClassExpression,\r\n    ConditionalExpression,\r\n    ContinueStatement,\r\n    DebuggerStatement,\r\n    Decorator,\r\n    DoWhileStatement,\r\n    EmptyStatement,\r\n    ExportAllDeclaration,\r\n    ExportDefaultDeclaration,\r\n    ExportNamedDeclaration,\r\n    ExportSpecifier,\r\n    ExpressionStatement,\r\n    ForInStatement,\r\n    ForOfStatement,\r\n    ForStatement,\r\n    FunctionDeclaration,\r\n    FunctionExpression,\r\n    Identifier,\r\n    IfStatement,\r\n    ImportAttribute,\r\n    ImportDeclaration,\r\n    ImportDefaultSpecifier,\r\n    ImportExpression,\r\n    ImportNamespaceSpecifier,\r\n    ImportSpecifier,\r\n    JSXAttribute,\r\n    JSXClosingElement,\r\n    JSXClosingFragment,\r\n    JSXElement,\r\n    JSXEmptyExpression,\r\n    JSXExpressionContainer,\r\n    JSXFragment,\r\n    JSXIdentifier,\r\n    JSXMemberExpression,\r\n    JSXNamespacedName,\r\n    JSXOpeningElement,\r\n    JSXOpeningFragment,\r\n    JSXSpreadAttribute,\r\n    JSXSpreadChild,\r\n    JSXText,\r\n    LabeledStatement,\r\n    Literal,\r\n    LogicalExpression,\r\n    MemberExpression,\r\n    MetaProperty,\r\n    MethodDefinition,\r\n    NewExpression,\r\n    ObjectExpression,\r\n    ObjectPattern,\r\n    PanicError,\r\n    ParseError,\r\n    PrivateIdentifier,\r\n    Program,\r\n    Property,\r\n    PropertyDefinition,\r\n    RestElement,\r\n    ReturnStatement,\r\n    SequenceExpression,\r\n    SpreadElement,\r\n    StaticBlock,\r\n    Super,\r\n    SwitchCase,\r\n    SwitchStatement,\r\n    TaggedTemplateExpression,\r\n    TemplateElement,\r\n    TemplateLiteral,\r\n    ThisExpression,\r\n    ThrowStatement,\r\n    TryStatement,\r\n    UnaryExpression,\r\n    UnknownNode,\r\n    UpdateExpression,\r\n    VariableDeclaration,\r\n    VariableDeclarator,\r\n    WhileStatement,\r\n    YieldExpression\r\n};\r\n\r\nclass ExportShimVariable extends Variable {\r\n    constructor(module) {\r\n        super(MISSING_EXPORT_SHIM_VARIABLE);\r\n        this.module = module;\r\n    }\r\n    includePath(path, context) {\r\n        super.includePath(path, context);\r\n        this.module.needsExportShim = true;\r\n    }\r\n}\r\n\r\nvar BuildPhase;\r\n(function (BuildPhase) {\r\n    BuildPhase[BuildPhase[\"LOAD_AND_PARSE\"] = 0] = \"LOAD_AND_PARSE\";\r\n    BuildPhase[BuildPhase[\"ANALYSE\"] = 1] = \"ANALYSE\";\r\n    BuildPhase[BuildPhase[\"GENERATE\"] = 2] = \"GENERATE\";\r\n})(BuildPhase || (BuildPhase = {}));\r\n\r\nconst sourceMapCache = new WeakMap();\r\n/**\r\n * This clears the decoded array and falls back to the encoded string form.\r\n * Sourcemap mappings arrays can be very large and holding on to them for longer\r\n * than is necessary leads to poor heap utilization.\r\n */\r\nfunction resetCacheToEncoded(cache) {\r\n    if (cache.encodedMappings === undefined && cache.decodedMappings) {\r\n        cache.encodedMappings = encode(cache.decodedMappings);\r\n    }\r\n    cache.decodedMappings = undefined;\r\n}\r\nfunction resetSourcemapCache(map, sourcemapChain) {\r\n    if (map) {\r\n        const cache = sourceMapCache.get(map);\r\n        if (cache) {\r\n            resetCacheToEncoded(cache);\r\n        }\r\n    }\r\n    if (!sourcemapChain) {\r\n        return;\r\n    }\r\n    for (const map of sourcemapChain) {\r\n        if (map.missing)\r\n            continue;\r\n        resetSourcemapCache(map);\r\n    }\r\n}\r\nfunction decodedSourcemap(map) {\r\n    if (!map)\r\n        return null;\r\n    if (typeof map === 'string') {\r\n        map = JSON.parse(map);\r\n    }\r\n    if (!map.mappings) {\r\n        return {\r\n            mappings: [],\r\n            names: [],\r\n            sources: [],\r\n            version: 3\r\n        };\r\n    }\r\n    const originalMappings = map.mappings;\r\n    const isAlreadyDecoded = Array.isArray(originalMappings);\r\n    const cache = {\r\n        decodedMappings: isAlreadyDecoded ? originalMappings : undefined,\r\n        encodedMappings: isAlreadyDecoded ? undefined : originalMappings\r\n    };\r\n    const decodedMap = {\r\n        ...map,\r\n        // By moving mappings behind an accessor, we can avoid unneeded computation for cases\r\n        // where the mappings field is never actually accessed. This appears to greatly reduce\r\n        // the overhead of sourcemap decoding in terms of both compute time and memory usage.\r\n        get mappings() {\r\n            if (cache.decodedMappings) {\r\n                return cache.decodedMappings;\r\n            }\r\n            // If decodedMappings doesn't exist then encodedMappings should.\r\n            // The only scenario where cache.encodedMappings should be undefined is if the map\r\n            // this was constructed from was already decoded, or if mappings was set to a new\r\n            // decoded string. In either case, this line shouldn't get hit.\r\n            cache.decodedMappings = cache.encodedMappings ? decode(cache.encodedMappings) : [];\r\n            cache.encodedMappings = undefined;\r\n            return cache.decodedMappings;\r\n        }\r\n    };\r\n    sourceMapCache.set(decodedMap, cache);\r\n    return decodedMap;\r\n}\r\n\r\nfunction getId(m) {\r\n    return m.id;\r\n}\r\n\r\nfunction getOriginalLocation(sourcemapChain, location) {\r\n    const filteredSourcemapChain = sourcemapChain.filter((sourcemap) => !sourcemap.missing);\r\n    traceSourcemap: while (filteredSourcemapChain.length > 0) {\r\n        const sourcemap = filteredSourcemapChain.pop();\r\n        const line = sourcemap.mappings[location.line - 1];\r\n        if (line) {\r\n            const filteredLine = line.filter((segment) => segment.length > 1);\r\n            const lastSegment = filteredLine[filteredLine.length - 1];\r\n            let previousSegment = filteredLine[0];\r\n            for (let segment of filteredLine) {\r\n                if (segment[0] >= location.column || segment === lastSegment) {\r\n                    const notMatched = segment[0] !== location.column;\r\n                    segment = notMatched ? previousSegment : segment;\r\n                    location = {\r\n                        column: segment[3],\r\n                        line: segment[2] + 1\r\n                    };\r\n                    continue traceSourcemap;\r\n                }\r\n                previousSegment = segment;\r\n            }\r\n        }\r\n        throw new Error(\"Can't resolve original location of error.\");\r\n    }\r\n    return location;\r\n}\r\n\r\nconst ATTRIBUTE_KEYWORDS = new Set(['assert', 'with']);\r\nfunction getAttributesFromImportExpression(node) {\r\n    const { scope: { context }, options, start } = node;\r\n    if (!(options instanceof ObjectExpression)) {\r\n        if (options) {\r\n            context.module.log(LOGLEVEL_WARN, logImportAttributeIsInvalid(context.module.id), start);\r\n        }\r\n        return EMPTY_OBJECT;\r\n    }\r\n    const assertProperty = options.properties.find((property) => ATTRIBUTE_KEYWORDS.has(getPropertyKey(property)))?.value;\r\n    if (!assertProperty) {\r\n        return EMPTY_OBJECT;\r\n    }\r\n    if (!(assertProperty instanceof ObjectExpression)) {\r\n        context.module.log(LOGLEVEL_WARN, logImportOptionsAreInvalid(context.module.id), start);\r\n        return EMPTY_OBJECT;\r\n    }\r\n    const assertFields = assertProperty.properties\r\n        .map(property => {\r\n        const key = getPropertyKey(property);\r\n        if (typeof key === 'string' &&\r\n            typeof property.value.value === 'string') {\r\n            return [key, property.value.value];\r\n        }\r\n        context.module.log(LOGLEVEL_WARN, logImportAttributeIsInvalid(context.module.id), property.start);\r\n        return null;\r\n    })\r\n        .filter((property) => !!property);\r\n    if (assertFields.length > 0) {\r\n        return Object.fromEntries(assertFields);\r\n    }\r\n    return EMPTY_OBJECT;\r\n}\r\nconst getPropertyKey = (property) => {\r\n    const key = property.key;\r\n    return (key &&\r\n        !property.computed &&\r\n        (key.name || key.value));\r\n};\r\nfunction getAttributesFromImportExportDeclaration(attributes) {\r\n    return attributes?.length\r\n        ? Object.fromEntries(attributes.map(assertion => [getPropertyKey(assertion), assertion.value.value]))\r\n        : EMPTY_OBJECT;\r\n}\r\nfunction doAttributesDiffer(assertionA, assertionB) {\r\n    const keysA = Object.keys(assertionA);\r\n    return (keysA.length !== Object.keys(assertionB).length ||\r\n        keysA.some(key => assertionA[key] !== assertionB[key]));\r\n}\r\n\r\nlet timers = new Map();\r\nfunction getPersistedLabel(label, level) {\r\n    switch (level) {\r\n        case 1: {\r\n            return `# ${label}`;\r\n        }\r\n        case 2: {\r\n            return `## ${label}`;\r\n        }\r\n        case 3: {\r\n            return label;\r\n        }\r\n        default: {\r\n            return `- ${label}`;\r\n        }\r\n    }\r\n}\r\nfunction timeStartImpl(label, level = 3) {\r\n    label = getPersistedLabel(label, level);\r\n    const startMemory = process$1.memoryUsage().heapUsed;\r\n    const startTime = performance.now();\r\n    const timer = timers.get(label);\r\n    if (timer === undefined) {\r\n        timers.set(label, {\r\n            memory: 0,\r\n            startMemory,\r\n            startTime,\r\n            time: 0,\r\n            totalMemory: 0\r\n        });\r\n    }\r\n    else {\r\n        timer.startMemory = startMemory;\r\n        timer.startTime = startTime;\r\n    }\r\n}\r\nfunction timeEndImpl(label, level = 3) {\r\n    label = getPersistedLabel(label, level);\r\n    const timer = timers.get(label);\r\n    if (timer !== undefined) {\r\n        const currentMemory = process$1.memoryUsage().heapUsed;\r\n        timer.memory += currentMemory - timer.startMemory;\r\n        timer.time += performance.now() - timer.startTime;\r\n        timer.totalMemory = Math.max(timer.totalMemory, currentMemory);\r\n    }\r\n}\r\nfunction getTimings() {\r\n    const newTimings = {};\r\n    for (const [label, { memory, time, totalMemory }] of timers) {\r\n        newTimings[label] = [time, memory, totalMemory];\r\n    }\r\n    return newTimings;\r\n}\r\nlet timeStart = doNothing;\r\nlet timeEnd = doNothing;\r\nconst TIMED_PLUGIN_HOOKS = [\r\n    'augmentChunkHash',\r\n    'buildEnd',\r\n    'buildStart',\r\n    'generateBundle',\r\n    'load',\r\n    'moduleParsed',\r\n    'options',\r\n    'outputOptions',\r\n    'renderChunk',\r\n    'renderDynamicImport',\r\n    'renderStart',\r\n    'resolveDynamicImport',\r\n    'resolveFileUrl',\r\n    'resolveId',\r\n    'resolveImportMeta',\r\n    'shouldTransformCachedModule',\r\n    'transform',\r\n    'writeBundle'\r\n];\r\nfunction getPluginWithTimers(plugin, index) {\r\n    if (plugin._hasTimer)\r\n        return plugin;\r\n    plugin._hasTimer = true;\r\n    for (const hook of TIMED_PLUGIN_HOOKS) {\r\n        if (hook in plugin) {\r\n            let timerLabel = `plugin ${index}`;\r\n            if (plugin.name) {\r\n                timerLabel += ` (${plugin.name})`;\r\n            }\r\n            timerLabel += ` - ${hook}`;\r\n            const handler = function (...parameters) {\r\n                timeStart(timerLabel, 4);\r\n                const result = hookFunction.apply(this, parameters);\r\n                timeEnd(timerLabel, 4);\r\n                return result;\r\n            };\r\n            let hookFunction;\r\n            if (typeof plugin[hook].handler === 'function') {\r\n                hookFunction = plugin[hook].handler;\r\n                plugin[hook].handler = handler;\r\n            }\r\n            else {\r\n                hookFunction = plugin[hook];\r\n                plugin[hook] = handler;\r\n            }\r\n        }\r\n    }\r\n    return plugin;\r\n}\r\nfunction initialiseTimers(inputOptions) {\r\n    if (inputOptions.perf) {\r\n        timers = new Map();\r\n        timeStart = timeStartImpl;\r\n        timeEnd = timeEndImpl;\r\n        inputOptions.plugins = inputOptions.plugins.map(getPluginWithTimers);\r\n    }\r\n    else {\r\n        timeStart = doNothing;\r\n        timeEnd = doNothing;\r\n    }\r\n}\r\n\r\nconst MISSING_EXPORT_SHIM_DESCRIPTION = {\r\n    identifier: null,\r\n    localName: MISSING_EXPORT_SHIM_VARIABLE\r\n};\r\nfunction getVariableForExportNameRecursive(target, name, importerForSideEffects, isExportAllSearch, searchedNamesAndModules = new Map()) {\r\n    const searchedModules = searchedNamesAndModules.get(name);\r\n    if (searchedModules) {\r\n        if (searchedModules.has(target)) {\r\n            return isExportAllSearch ? [null] : error(logCircularReexport(name, target.id));\r\n        }\r\n        searchedModules.add(target);\r\n    }\r\n    else {\r\n        searchedNamesAndModules.set(name, new Set([target]));\r\n    }\r\n    return target.getVariableForExportName(name, {\r\n        importerForSideEffects,\r\n        isExportAllSearch,\r\n        searchedNamesAndModules\r\n    });\r\n}\r\nfunction getAndExtendSideEffectModules(variable, module) {\r\n    const sideEffectModules = getOrCreate(module.sideEffectDependenciesByVariable, variable, (getNewSet));\r\n    let currentVariable = variable;\r\n    const referencedVariables = new Set([currentVariable]);\r\n    while (true) {\r\n        const importingModule = currentVariable.module;\r\n        currentVariable =\r\n            currentVariable instanceof ExportDefaultVariable\r\n                ? currentVariable.getDirectOriginalVariable()\r\n                : currentVariable instanceof SyntheticNamedExportVariable\r\n                    ? currentVariable.syntheticNamespace\r\n                    : null;\r\n        if (!currentVariable || referencedVariables.has(currentVariable)) {\r\n            break;\r\n        }\r\n        referencedVariables.add(currentVariable);\r\n        sideEffectModules.add(importingModule);\r\n        const originalSideEffects = importingModule.sideEffectDependenciesByVariable.get(currentVariable);\r\n        if (originalSideEffects) {\r\n            for (const module of originalSideEffects) {\r\n                sideEffectModules.add(module);\r\n            }\r\n        }\r\n    }\r\n    return sideEffectModules;\r\n}\r\nclass Module {\r\n    constructor(graph, id, options, isEntry, moduleSideEffects, syntheticNamedExports, meta, attributes) {\r\n        this.graph = graph;\r\n        this.id = id;\r\n        this.options = options;\r\n        this.alternativeReexportModules = new Map();\r\n        this.chunkFileNames = new Set();\r\n        this.chunkNames = [];\r\n        this.cycles = new Set();\r\n        this.dependencies = new Set();\r\n        this.dynamicDependencies = new Set();\r\n        this.dynamicImporters = [];\r\n        this.dynamicImports = [];\r\n        this.execIndex = Infinity;\r\n        this.hasTreeShakingPassStarted = false;\r\n        this.implicitlyLoadedAfter = new Set();\r\n        this.implicitlyLoadedBefore = new Set();\r\n        this.importDescriptions = new Map();\r\n        this.importMetas = [];\r\n        this.importedFromNotTreeshaken = false;\r\n        this.importers = [];\r\n        this.includedDynamicImporters = [];\r\n        this.includedTopLevelAwaitingDynamicImporters = new Set();\r\n        this.includedImports = new Set();\r\n        this.isExecuted = false;\r\n        this.isUserDefinedEntryPoint = false;\r\n        this.needsExportShim = false;\r\n        this.sideEffectDependenciesByVariable = new Map();\r\n        this.sourcesWithAttributes = new Map();\r\n        this.allExportNames = null;\r\n        this.allExportsIncluded = false;\r\n        this.ast = null;\r\n        this.exportAllModules = [];\r\n        this.exportAllSources = new Set();\r\n        this.exportNamesByVariable = null;\r\n        this.exportShimVariable = new ExportShimVariable(this);\r\n        this.exports = new Map();\r\n        this.namespaceReexportsByName = new Map();\r\n        this.reexportDescriptions = new Map();\r\n        this.relevantDependencies = null;\r\n        this.syntheticExports = new Map();\r\n        this.syntheticNamespace = null;\r\n        this.transformDependencies = [];\r\n        this.transitiveReexports = null;\r\n        this.excludeFromSourcemap = /\\0/.test(id);\r\n        this.context = options.moduleContext(id);\r\n        this.preserveSignature = this.options.preserveEntrySignatures;\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        const module = this;\r\n        const { dynamicImports, dynamicImporters, exportAllSources, exports, implicitlyLoadedAfter, implicitlyLoadedBefore, importers, reexportDescriptions, sourcesWithAttributes } = this;\r\n        this.info = {\r\n            ast: null,\r\n            attributes,\r\n            code: null,\r\n            get dynamicallyImportedIdResolutions() {\r\n                return dynamicImports\r\n                    .map(({ argument }) => typeof argument === 'string' && module.resolvedIds[argument])\r\n                    .filter(Boolean);\r\n            },\r\n            get dynamicallyImportedIds() {\r\n                // We cannot use this.dynamicDependencies because this is needed before\r\n                // dynamicDependencies are populated\r\n                return dynamicImports.map(({ id }) => id).filter((id) => id != null);\r\n            },\r\n            get dynamicImporters() {\r\n                return dynamicImporters.sort();\r\n            },\r\n            get exportedBindings() {\r\n                const exportBindings = { '.': [...exports.keys()] };\r\n                for (const [name, { source }] of reexportDescriptions) {\r\n                    (exportBindings[source] ??= []).push(name);\r\n                }\r\n                for (const source of exportAllSources) {\r\n                    (exportBindings[source] ??= []).push('*');\r\n                }\r\n                return exportBindings;\r\n            },\r\n            get exports() {\r\n                return [\r\n                    ...exports.keys(),\r\n                    ...reexportDescriptions.keys(),\r\n                    ...[...exportAllSources].map(() => '*')\r\n                ];\r\n            },\r\n            get hasDefaultExport() {\r\n                // This information is only valid after parsing\r\n                if (!module.ast) {\r\n                    return null;\r\n                }\r\n                return module.exports.has('default') || reexportDescriptions.has('default');\r\n            },\r\n            id,\r\n            get implicitlyLoadedAfterOneOf() {\r\n                return Array.from(implicitlyLoadedAfter, getId).sort();\r\n            },\r\n            get implicitlyLoadedBefore() {\r\n                return Array.from(implicitlyLoadedBefore, getId).sort();\r\n            },\r\n            get importedIdResolutions() {\r\n                return Array.from(sourcesWithAttributes.keys(), source => module.resolvedIds[source]).filter(Boolean);\r\n            },\r\n            get importedIds() {\r\n                // We cannot use this.dependencies because this is needed before\r\n                // dependencies are populated\r\n                return Array.from(sourcesWithAttributes.keys(), source => module.resolvedIds[source]?.id).filter(Boolean);\r\n            },\r\n            get importers() {\r\n                return importers.sort();\r\n            },\r\n            isEntry,\r\n            isExternal: false,\r\n            get isIncluded() {\r\n                if (graph.phase !== BuildPhase.GENERATE) {\r\n                    return null;\r\n                }\r\n                return module.isIncluded();\r\n            },\r\n            meta: { ...meta },\r\n            moduleSideEffects,\r\n            syntheticNamedExports\r\n        };\r\n    }\r\n    basename() {\r\n        const base = basename(this.id);\r\n        const extension = extname(this.id);\r\n        return makeLegal(extension ? base.slice(0, -extension.length) : base);\r\n    }\r\n    bindReferences() {\r\n        this.ast.bind();\r\n    }\r\n    cacheInfoGetters() {\r\n        cacheObjectGetters(this.info, [\r\n            'dynamicallyImportedIdResolutions',\r\n            'dynamicallyImportedIds',\r\n            'dynamicImporters',\r\n            'exportedBindings',\r\n            'exports',\r\n            'hasDefaultExport',\r\n            'implicitlyLoadedAfterOneOf',\r\n            'implicitlyLoadedBefore',\r\n            'importedIdResolutions',\r\n            'importedIds',\r\n            'importers'\r\n        ]);\r\n    }\r\n    error(properties, pos) {\r\n        if (pos !== undefined) {\r\n            this.addLocationToLogProps(properties, pos);\r\n        }\r\n        return error(properties);\r\n    }\r\n    // sum up the length of all ast nodes that are included\r\n    estimateSize() {\r\n        let size = 0;\r\n        for (const node of this.ast.body) {\r\n            if (node.included) {\r\n                size += node.end - node.start;\r\n            }\r\n        }\r\n        return size;\r\n    }\r\n    getAllExportNames() {\r\n        if (this.allExportNames) {\r\n            return this.allExportNames;\r\n        }\r\n        this.allExportNames = new Set([...this.exports.keys(), ...this.reexportDescriptions.keys()]);\r\n        for (const module of this.exportAllModules) {\r\n            if (module instanceof ExternalModule) {\r\n                this.allExportNames.add(`*${module.id}`);\r\n                continue;\r\n            }\r\n            for (const name of module.getAllExportNames()) {\r\n                if (name !== 'default')\r\n                    this.allExportNames.add(name);\r\n            }\r\n        }\r\n        // We do not count the synthetic namespace as a regular export to hide it\r\n        // from entry signatures and namespace objects\r\n        if (typeof this.info.syntheticNamedExports === 'string') {\r\n            this.allExportNames.delete(this.info.syntheticNamedExports);\r\n        }\r\n        return this.allExportNames;\r\n    }\r\n    getDependenciesToBeIncluded() {\r\n        if (this.relevantDependencies)\r\n            return this.relevantDependencies;\r\n        this.relevantDependencies = new Set();\r\n        const necessaryDependencies = new Set();\r\n        const alwaysCheckedDependencies = new Set();\r\n        const dependencyVariables = new Set(this.includedImports);\r\n        if (this.info.isEntry ||\r\n            this.includedDynamicImporters.length > 0 ||\r\n            this.namespace.included ||\r\n            this.implicitlyLoadedAfter.size > 0) {\r\n            for (const exportName of [...this.getReexports(), ...this.getExports()]) {\r\n                const [exportedVariable] = this.getVariableForExportName(exportName);\r\n                if (exportedVariable?.included) {\r\n                    dependencyVariables.add(exportedVariable);\r\n                }\r\n            }\r\n        }\r\n        for (let variable of dependencyVariables) {\r\n            const sideEffectDependencies = this.sideEffectDependenciesByVariable.get(variable);\r\n            if (sideEffectDependencies) {\r\n                for (const module of sideEffectDependencies) {\r\n                    alwaysCheckedDependencies.add(module);\r\n                }\r\n            }\r\n            if (variable instanceof SyntheticNamedExportVariable) {\r\n                variable = variable.getBaseVariable();\r\n            }\r\n            else if (variable instanceof ExportDefaultVariable) {\r\n                variable = variable.getOriginalVariable();\r\n            }\r\n            necessaryDependencies.add(variable.module);\r\n        }\r\n        if (!this.options.treeshake || this.info.moduleSideEffects === 'no-treeshake') {\r\n            for (const dependency of this.dependencies) {\r\n                this.relevantDependencies.add(dependency);\r\n            }\r\n        }\r\n        else {\r\n            this.addRelevantSideEffectDependencies(this.relevantDependencies, necessaryDependencies, alwaysCheckedDependencies);\r\n        }\r\n        for (const dependency of necessaryDependencies) {\r\n            this.relevantDependencies.add(dependency);\r\n        }\r\n        return this.relevantDependencies;\r\n    }\r\n    getExportNamesByVariable() {\r\n        if (this.exportNamesByVariable) {\r\n            return this.exportNamesByVariable;\r\n        }\r\n        const exportNamesByVariable = new Map();\r\n        for (const exportName of this.getAllExportNames()) {\r\n            let [tracedVariable] = this.getVariableForExportName(exportName);\r\n            if (tracedVariable instanceof ExportDefaultVariable) {\r\n                tracedVariable = tracedVariable.getOriginalVariable();\r\n            }\r\n            if (!tracedVariable ||\r\n                !(tracedVariable.included || tracedVariable instanceof ExternalVariable)) {\r\n                continue;\r\n            }\r\n            const existingExportNames = exportNamesByVariable.get(tracedVariable);\r\n            if (existingExportNames) {\r\n                existingExportNames.push(exportName);\r\n            }\r\n            else {\r\n                exportNamesByVariable.set(tracedVariable, [exportName]);\r\n            }\r\n        }\r\n        return (this.exportNamesByVariable = exportNamesByVariable);\r\n    }\r\n    getExports() {\r\n        return [...this.exports.keys()];\r\n    }\r\n    getReexports() {\r\n        if (this.transitiveReexports) {\r\n            return this.transitiveReexports;\r\n        }\r\n        // to avoid infinite recursion when using circular `export * from X`\r\n        this.transitiveReexports = [];\r\n        const reexports = new Set(this.reexportDescriptions.keys());\r\n        for (const module of this.exportAllModules) {\r\n            if (module instanceof ExternalModule) {\r\n                reexports.add(`*${module.id}`);\r\n            }\r\n            else {\r\n                for (const name of [...module.getReexports(), ...module.getExports()]) {\r\n                    if (name !== 'default')\r\n                        reexports.add(name);\r\n                }\r\n            }\r\n        }\r\n        return (this.transitiveReexports = [...reexports]);\r\n    }\r\n    getRenderedExports() {\r\n        // only direct exports are counted here, not reexports at all\r\n        const renderedExports = [];\r\n        const removedExports = [];\r\n        for (const exportName of this.exports.keys()) {\r\n            const [variable] = this.getVariableForExportName(exportName);\r\n            (variable?.included ? renderedExports : removedExports).push(exportName);\r\n        }\r\n        return { removedExports, renderedExports };\r\n    }\r\n    getSyntheticNamespace() {\r\n        if (this.syntheticNamespace === null) {\r\n            this.syntheticNamespace = undefined;\r\n            [this.syntheticNamespace] = this.getVariableForExportName(typeof this.info.syntheticNamedExports === 'string'\r\n                ? this.info.syntheticNamedExports\r\n                : 'default', { onlyExplicit: true });\r\n        }\r\n        if (!this.syntheticNamespace) {\r\n            return error(logSyntheticNamedExportsNeedNamespaceExport(this.id, this.info.syntheticNamedExports));\r\n        }\r\n        return this.syntheticNamespace;\r\n    }\r\n    getVariableForExportName(name, { importerForSideEffects, isExportAllSearch, onlyExplicit, searchedNamesAndModules } = EMPTY_OBJECT) {\r\n        if (name[0] === '*') {\r\n            if (name.length === 1) {\r\n                // export * from './other'\r\n                return [this.namespace];\r\n            }\r\n            // export * from 'external'\r\n            const module = this.graph.modulesById.get(name.slice(1));\r\n            return module.getVariableForExportName('*');\r\n        }\r\n        // export { foo } from './other'\r\n        const reexportDeclaration = this.reexportDescriptions.get(name);\r\n        if (reexportDeclaration) {\r\n            const [variable, options] = getVariableForExportNameRecursive(reexportDeclaration.module, reexportDeclaration.localName, importerForSideEffects, false, searchedNamesAndModules);\r\n            if (!variable) {\r\n                return this.error(logMissingExport(reexportDeclaration.localName, this.id, reexportDeclaration.module.id, !!options?.missingButExportExists), reexportDeclaration.start);\r\n            }\r\n            if (importerForSideEffects) {\r\n                setAlternativeExporterIfCyclic(variable, importerForSideEffects, this);\r\n                if (this.info.moduleSideEffects) {\r\n                    getOrCreate(importerForSideEffects.sideEffectDependenciesByVariable, variable, (getNewSet)).add(this);\r\n                }\r\n            }\r\n            return [variable];\r\n        }\r\n        const exportDeclaration = this.exports.get(name);\r\n        if (exportDeclaration) {\r\n            if (exportDeclaration === MISSING_EXPORT_SHIM_DESCRIPTION) {\r\n                return [this.exportShimVariable];\r\n            }\r\n            const name = exportDeclaration.localName;\r\n            const variable = this.traceVariable(name, {\r\n                importerForSideEffects,\r\n                searchedNamesAndModules\r\n            });\r\n            if (!variable) {\r\n                return [null, { missingButExportExists: true }];\r\n            }\r\n            if (importerForSideEffects) {\r\n                setAlternativeExporterIfCyclic(variable, importerForSideEffects, this);\r\n                getOrCreate(importerForSideEffects.sideEffectDependenciesByVariable, variable, (getNewSet)).add(this);\r\n            }\r\n            return [variable];\r\n        }\r\n        if (onlyExplicit) {\r\n            return [null];\r\n        }\r\n        if (name !== 'default') {\r\n            const foundNamespaceReexport = this.namespaceReexportsByName.get(name) ??\r\n                this.getVariableFromNamespaceReexports(name, importerForSideEffects, searchedNamesAndModules);\r\n            this.namespaceReexportsByName.set(name, foundNamespaceReexport);\r\n            if (foundNamespaceReexport[0]) {\r\n                return foundNamespaceReexport;\r\n            }\r\n        }\r\n        if (this.info.syntheticNamedExports) {\r\n            return [\r\n                getOrCreate(this.syntheticExports, name, () => new SyntheticNamedExportVariable(this.astContext, name, this.getSyntheticNamespace()))\r\n            ];\r\n        }\r\n        // we don't want to create shims when we are just\r\n        // probing export * modules for exports\r\n        if (!isExportAllSearch && this.options.shimMissingExports) {\r\n            this.shimMissingExport(name);\r\n            return [this.exportShimVariable];\r\n        }\r\n        return [null];\r\n    }\r\n    hasEffects() {\r\n        return this.info.moduleSideEffects === 'no-treeshake' || this.ast.hasCachedEffects();\r\n    }\r\n    include() {\r\n        const context = createInclusionContext();\r\n        if (this.ast.shouldBeIncluded(context))\r\n            this.ast.include(context, false);\r\n    }\r\n    includeAllExports(includeNamespaceMembers) {\r\n        if (includeNamespaceMembers) {\r\n            this.namespace.setMergedNamespaces(this.includeAndGetAdditionalMergedNamespaces());\r\n        }\r\n        if (this.allExportsIncluded)\r\n            return;\r\n        this.allExportsIncluded = true;\r\n        if (!this.isExecuted) {\r\n            markModuleAndImpureDependenciesAsExecuted(this);\r\n            this.graph.needsTreeshakingPass = true;\r\n        }\r\n        const inclusionContext = createInclusionContext();\r\n        for (const exportName of this.exports.keys()) {\r\n            if (includeNamespaceMembers || exportName !== this.info.syntheticNamedExports) {\r\n                const variable = this.getVariableForExportName(exportName)[0];\r\n                if (!variable) {\r\n                    return error(logMissingEntryExport(exportName, this.id));\r\n                }\r\n                this.includeVariable(variable, UNKNOWN_PATH, inclusionContext);\r\n                variable.deoptimizePath(UNKNOWN_PATH);\r\n            }\r\n        }\r\n        for (const name of this.getReexports()) {\r\n            const [variable] = this.getVariableForExportName(name);\r\n            if (variable) {\r\n                variable.deoptimizePath(UNKNOWN_PATH);\r\n                this.includeVariable(variable, UNKNOWN_PATH, inclusionContext);\r\n                if (variable instanceof ExternalVariable) {\r\n                    variable.module.reexported = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    includeAllInBundle() {\r\n        this.ast.include(createInclusionContext(), true);\r\n        this.includeAllExports(false);\r\n    }\r\n    includeExportsByNames(names) {\r\n        if (!this.isExecuted) {\r\n            markModuleAndImpureDependenciesAsExecuted(this);\r\n            this.graph.needsTreeshakingPass = true;\r\n        }\r\n        let includeNamespaceMembers = false;\r\n        const inclusionContext = createInclusionContext();\r\n        for (const name of names) {\r\n            const variable = this.getVariableForExportName(name)[0];\r\n            if (variable) {\r\n                variable.deoptimizePath(UNKNOWN_PATH);\r\n                this.includeVariable(variable, UNKNOWN_PATH, inclusionContext);\r\n            }\r\n            if (!this.exports.has(name) && !this.reexportDescriptions.has(name)) {\r\n                includeNamespaceMembers = true;\r\n            }\r\n        }\r\n        if (includeNamespaceMembers) {\r\n            this.namespace.setMergedNamespaces(this.includeAndGetAdditionalMergedNamespaces());\r\n        }\r\n    }\r\n    isIncluded() {\r\n        // Modules where this.ast is missing have been loaded via this.load and are\r\n        // not yet fully processed, hence they cannot be included.\r\n        return (this.ast &&\r\n            (this.ast.included ||\r\n                this.namespace.included ||\r\n                this.importedFromNotTreeshaken ||\r\n                this.exportShimVariable.included));\r\n    }\r\n    linkImports() {\r\n        this.addModulesToImportDescriptions(this.importDescriptions);\r\n        this.addModulesToImportDescriptions(this.reexportDescriptions);\r\n        const externalExportAllModules = [];\r\n        for (const source of this.exportAllSources) {\r\n            const module = this.graph.modulesById.get(this.resolvedIds[source].id);\r\n            if (module instanceof ExternalModule) {\r\n                externalExportAllModules.push(module);\r\n                continue;\r\n            }\r\n            this.exportAllModules.push(module);\r\n        }\r\n        this.exportAllModules.push(...externalExportAllModules);\r\n    }\r\n    log(level, properties, pos) {\r\n        this.addLocationToLogProps(properties, pos);\r\n        this.options.onLog(level, properties);\r\n    }\r\n    render(options) {\r\n        const source = this.magicString.clone();\r\n        this.ast.render(source, options);\r\n        source.trim();\r\n        const { usesTopLevelAwait } = this.astContext;\r\n        if (usesTopLevelAwait && options.format !== 'es' && options.format !== 'system') {\r\n            return error(logInvalidFormatForTopLevelAwait(this.id, options.format));\r\n        }\r\n        return { source, usesTopLevelAwait };\r\n    }\r\n    async setSource({ ast, code, customTransformCache, originalCode, originalSourcemap, resolvedIds, sourcemapChain, transformDependencies, transformFiles, ...moduleOptions }) {\r\n        timeStart('generate ast', 3);\r\n        if (code.startsWith('#!')) {\r\n            const shebangEndPosition = code.indexOf('\\n');\r\n            this.shebang = code.slice(2, shebangEndPosition);\r\n        }\r\n        this.info.code = code;\r\n        this.originalCode = originalCode;\r\n        // We need to call decodedSourcemap on the input in case they were hydrated from json in the cache and don't\r\n        // have the lazy evaluation cache configured. Right now this isn't enforced by the type system because the\r\n        // RollupCache stores `ExistingDecodedSourcemap` instead of `ExistingRawSourcemap`\r\n        this.originalSourcemap = decodedSourcemap(originalSourcemap);\r\n        this.sourcemapChain = sourcemapChain.map(mapOrMissing => mapOrMissing.missing ? mapOrMissing : decodedSourcemap(mapOrMissing));\r\n        // If coming from cache and this value is already fully decoded, we want to re-encode here to save memory.\r\n        resetSourcemapCache(this.originalSourcemap, this.sourcemapChain);\r\n        if (transformFiles) {\r\n            this.transformFiles = transformFiles;\r\n        }\r\n        this.transformDependencies = transformDependencies;\r\n        this.customTransformCache = customTransformCache;\r\n        this.updateOptions(moduleOptions);\r\n        this.resolvedIds = resolvedIds ?? Object.create(null);\r\n        // By default, `id` is the file name. Custom resolvers and loaders\r\n        // can change that, but it makes sense to use it for the source file name\r\n        const fileName = this.id;\r\n        this.magicString = new MagicString(code, {\r\n            filename: (this.excludeFromSourcemap ? null : fileName), // don't include plugin helpers in sourcemap\r\n            indentExclusionRanges: []\r\n        });\r\n        this.astContext = {\r\n            addDynamicImport: this.addDynamicImport.bind(this),\r\n            addExport: this.addExport.bind(this),\r\n            addImport: this.addImport.bind(this),\r\n            addImportMeta: this.addImportMeta.bind(this),\r\n            addImportSource: this.addImportSource.bind(this),\r\n            code, // Only needed for debugging\r\n            deoptimizationTracker: this.graph.deoptimizationTracker,\r\n            error: this.error.bind(this),\r\n            fileName, // Needed for warnings\r\n            getExports: this.getExports.bind(this),\r\n            getImportedJsxFactoryVariable: this.getImportedJsxFactoryVariable.bind(this),\r\n            getModuleExecIndex: () => this.execIndex,\r\n            getModuleName: this.basename.bind(this),\r\n            getNodeConstructor: (name) => nodeConstructors[name] || nodeConstructors.UnknownNode,\r\n            getReexports: this.getReexports.bind(this),\r\n            importDescriptions: this.importDescriptions,\r\n            includeAllExports: () => this.includeAllExports(true),\r\n            includeDynamicImport: this.includeDynamicImport.bind(this),\r\n            includeVariableInModule: this.includeVariableInModule.bind(this),\r\n            log: this.log.bind(this),\r\n            magicString: this.magicString,\r\n            manualPureFunctions: this.graph.pureFunctions,\r\n            module: this,\r\n            moduleContext: this.context,\r\n            newlyIncludedVariableInits: this.graph.newlyIncludedVariableInits,\r\n            options: this.options,\r\n            requestTreeshakingPass: () => (this.graph.needsTreeshakingPass = true),\r\n            traceExport: (name) => this.getVariableForExportName(name),\r\n            traceVariable: this.traceVariable.bind(this),\r\n            usesTopLevelAwait: false\r\n        };\r\n        this.scope = new ModuleScope(this.graph.scope, this.astContext);\r\n        this.namespace = new NamespaceVariable(this.astContext);\r\n        const programParent = { context: this.astContext, type: 'Module' };\r\n        if (ast) {\r\n            this.ast = new nodeConstructors[ast.type](programParent, this.scope).parseNode(ast);\r\n            this.info.ast = ast;\r\n        }\r\n        else {\r\n            // Measuring asynchronous code does not provide reasonable results\r\n            timeEnd('generate ast', 3);\r\n            const astBuffer = await parseAsync(code, false, this.options.jsx !== false);\r\n            timeStart('generate ast', 3);\r\n            this.ast = convertProgram(astBuffer, programParent, this.scope);\r\n            // Make lazy and apply LRU cache to not hog the memory\r\n            Object.defineProperty(this.info, 'ast', {\r\n                get: () => {\r\n                    if (this.graph.astLru.has(fileName)) {\r\n                        return this.graph.astLru.get(fileName);\r\n                    }\r\n                    else {\r\n                        const parsedAst = this.tryParse();\r\n                        // If the cache is not disabled, we need to keep the AST in memory\r\n                        // until the end when the cache is generated\r\n                        if (this.options.cache !== false) {\r\n                            Object.defineProperty(this.info, 'ast', {\r\n                                value: parsedAst\r\n                            });\r\n                            return parsedAst;\r\n                        }\r\n                        // Otherwise, we keep it in a small LRU cache to not hog too much\r\n                        // memory but allow the same AST to be requested several times.\r\n                        this.graph.astLru.set(fileName, parsedAst);\r\n                        return parsedAst;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        timeEnd('generate ast', 3);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            ast: this.info.ast,\r\n            attributes: this.info.attributes,\r\n            code: this.info.code,\r\n            customTransformCache: this.customTransformCache,\r\n            dependencies: Array.from(this.dependencies, getId),\r\n            id: this.id,\r\n            meta: this.info.meta,\r\n            moduleSideEffects: this.info.moduleSideEffects,\r\n            originalCode: this.originalCode,\r\n            originalSourcemap: this.originalSourcemap,\r\n            resolvedIds: this.resolvedIds,\r\n            sourcemapChain: this.sourcemapChain,\r\n            syntheticNamedExports: this.info.syntheticNamedExports,\r\n            transformDependencies: this.transformDependencies,\r\n            transformFiles: this.transformFiles\r\n        };\r\n    }\r\n    traceVariable(name, { importerForSideEffects, isExportAllSearch, searchedNamesAndModules } = EMPTY_OBJECT) {\r\n        const localVariable = this.scope.variables.get(name);\r\n        if (localVariable) {\r\n            return localVariable;\r\n        }\r\n        const importDescription = this.importDescriptions.get(name);\r\n        if (importDescription) {\r\n            const otherModule = importDescription.module;\r\n            if (otherModule instanceof Module && importDescription.name === '*') {\r\n                return otherModule.namespace;\r\n            }\r\n            const [declaration, options] = getVariableForExportNameRecursive(otherModule, importDescription.name, importerForSideEffects || this, isExportAllSearch, searchedNamesAndModules);\r\n            if (!declaration) {\r\n                return this.error(logMissingExport(importDescription.name, this.id, otherModule.id, !!options?.missingButExportExists), importDescription.start);\r\n            }\r\n            return declaration;\r\n        }\r\n        return null;\r\n    }\r\n    updateOptions({ meta, moduleSideEffects, syntheticNamedExports }) {\r\n        if (moduleSideEffects != null) {\r\n            this.info.moduleSideEffects = moduleSideEffects;\r\n        }\r\n        if (syntheticNamedExports != null) {\r\n            this.info.syntheticNamedExports = syntheticNamedExports;\r\n        }\r\n        if (meta != null) {\r\n            Object.assign(this.info.meta, meta);\r\n        }\r\n    }\r\n    addDynamicImport(node) {\r\n        let argument = node.sourceAstNode;\r\n        if (argument.type === TemplateLiteral$1) {\r\n            if (argument.quasis.length === 1 &&\r\n                typeof argument.quasis[0].value.cooked === 'string') {\r\n                argument = argument.quasis[0].value.cooked;\r\n            }\r\n        }\r\n        else if (argument.type === Literal$1 &&\r\n            typeof argument.value === 'string') {\r\n            argument = argument.value;\r\n        }\r\n        this.dynamicImports.push({ argument, id: null, node, resolution: null });\r\n    }\r\n    assertUniqueExportName(name, nodeStart) {\r\n        if (this.exports.has(name) || this.reexportDescriptions.has(name)) {\r\n            this.error(logDuplicateExportError(name), nodeStart);\r\n        }\r\n    }\r\n    addExport(node) {\r\n        if (node instanceof ExportDefaultDeclaration) {\r\n            // export default foo;\r\n            this.assertUniqueExportName('default', node.start);\r\n            this.exports.set('default', {\r\n                identifier: node.variable.getAssignedVariableName(),\r\n                localName: 'default'\r\n            });\r\n        }\r\n        else if (node instanceof ExportAllDeclaration) {\r\n            const source = node.source.value;\r\n            this.addSource(source, node);\r\n            if (node.exported) {\r\n                // export * as name from './other'\r\n                const name = node.exported instanceof Literal ? node.exported.value : node.exported.name;\r\n                this.assertUniqueExportName(name, node.exported.start);\r\n                this.reexportDescriptions.set(name, {\r\n                    localName: '*',\r\n                    module: null, // filled in later,\r\n                    source,\r\n                    start: node.start\r\n                });\r\n            }\r\n            else {\r\n                // export * from './other'\r\n                this.exportAllSources.add(source);\r\n            }\r\n        }\r\n        else if (node.source instanceof Literal) {\r\n            // export { name } from './other'\r\n            const source = node.source.value;\r\n            this.addSource(source, node);\r\n            for (const { exported, local, start } of node.specifiers) {\r\n                const name = exported instanceof Literal ? exported.value : exported.name;\r\n                this.assertUniqueExportName(name, start);\r\n                this.reexportDescriptions.set(name, {\r\n                    localName: local instanceof Literal ? local.value : local.name,\r\n                    module: null, // filled in later,\r\n                    source,\r\n                    start\r\n                });\r\n            }\r\n        }\r\n        else if (node.declaration) {\r\n            const declaration = node.declaration;\r\n            if (declaration instanceof VariableDeclaration) {\r\n                // export var { foo, bar } = ...\r\n                // export var foo = 1, bar = 2;\r\n                for (const declarator of declaration.declarations) {\r\n                    for (const localName of extractAssignedNames(declarator.id)) {\r\n                        this.assertUniqueExportName(localName, declarator.id.start);\r\n                        this.exports.set(localName, { identifier: null, localName });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // export function foo () {}\r\n                const localName = declaration.id.name;\r\n                this.assertUniqueExportName(localName, declaration.id.start);\r\n                this.exports.set(localName, { identifier: null, localName });\r\n            }\r\n        }\r\n        else {\r\n            // export { foo, bar, baz }\r\n            for (const { local, exported } of node.specifiers) {\r\n                // except for reexports, local must be an Identifier\r\n                const localName = local.name;\r\n                const exportedName = exported instanceof Identifier ? exported.name : exported.value;\r\n                this.assertUniqueExportName(exportedName, exported.start);\r\n                this.exports.set(exportedName, { identifier: null, localName });\r\n            }\r\n        }\r\n    }\r\n    addImport(node) {\r\n        const source = node.source.value;\r\n        this.addSource(source, node);\r\n        for (const specifier of node.specifiers) {\r\n            const localName = specifier.local.name;\r\n            if (this.scope.variables.has(localName) || this.importDescriptions.has(localName)) {\r\n                this.error(logRedeclarationError(localName), specifier.local.start);\r\n            }\r\n            const name = specifier instanceof ImportDefaultSpecifier\r\n                ? 'default'\r\n                : specifier instanceof ImportNamespaceSpecifier\r\n                    ? '*'\r\n                    : specifier.imported instanceof Identifier\r\n                        ? specifier.imported.name\r\n                        : specifier.imported.value;\r\n            this.importDescriptions.set(localName, {\r\n                module: null, // filled in later\r\n                name,\r\n                source,\r\n                start: specifier.start\r\n            });\r\n        }\r\n    }\r\n    addImportSource(importSource) {\r\n        if (importSource && !this.sourcesWithAttributes.has(importSource)) {\r\n            this.sourcesWithAttributes.set(importSource, EMPTY_OBJECT);\r\n        }\r\n    }\r\n    addImportMeta(node) {\r\n        this.importMetas.push(node);\r\n    }\r\n    addLocationToLogProps(properties, pos) {\r\n        properties.id = this.id;\r\n        properties.pos = pos;\r\n        let code = this.info.code;\r\n        const location = locate(code, pos, { offsetLine: 1 });\r\n        if (location) {\r\n            let { column, line } = location;\r\n            try {\r\n                ({ column, line } = getOriginalLocation(this.sourcemapChain, { column, line }));\r\n                code = this.originalCode;\r\n            }\r\n            catch (error_) {\r\n                this.options.onLog(LOGLEVEL_WARN, logInvalidSourcemapForError(error_, this.id, column, line, pos));\r\n            }\r\n            augmentCodeLocation(properties, { column, line }, code, this.id);\r\n        }\r\n    }\r\n    addModulesToImportDescriptions(importDescription) {\r\n        for (const specifier of importDescription.values()) {\r\n            const { id } = this.resolvedIds[specifier.source];\r\n            specifier.module = this.graph.modulesById.get(id);\r\n        }\r\n    }\r\n    addRelevantSideEffectDependencies(relevantDependencies, necessaryDependencies, alwaysCheckedDependencies) {\r\n        const handledDependencies = new Set();\r\n        const addSideEffectDependencies = (possibleDependencies) => {\r\n            for (const dependency of possibleDependencies) {\r\n                if (handledDependencies.has(dependency)) {\r\n                    continue;\r\n                }\r\n                handledDependencies.add(dependency);\r\n                if (necessaryDependencies.has(dependency)) {\r\n                    relevantDependencies.add(dependency);\r\n                    continue;\r\n                }\r\n                if (!(dependency.info.moduleSideEffects || alwaysCheckedDependencies.has(dependency))) {\r\n                    continue;\r\n                }\r\n                if (dependency instanceof ExternalModule || dependency.hasEffects()) {\r\n                    relevantDependencies.add(dependency);\r\n                    continue;\r\n                }\r\n                addSideEffectDependencies(dependency.dependencies);\r\n            }\r\n        };\r\n        addSideEffectDependencies(this.dependencies);\r\n        addSideEffectDependencies(alwaysCheckedDependencies);\r\n    }\r\n    addSource(source, declaration) {\r\n        const parsedAttributes = getAttributesFromImportExportDeclaration(declaration.attributes);\r\n        const existingAttributes = this.sourcesWithAttributes.get(source);\r\n        if (existingAttributes) {\r\n            if (doAttributesDiffer(existingAttributes, parsedAttributes)) {\r\n                this.log(LOGLEVEL_WARN, logInconsistentImportAttributes(existingAttributes, parsedAttributes, source, this.id), declaration.start);\r\n            }\r\n        }\r\n        else {\r\n            this.sourcesWithAttributes.set(source, parsedAttributes);\r\n        }\r\n    }\r\n    getImportedJsxFactoryVariable(baseName, nodeStart, importSource) {\r\n        const { id } = this.resolvedIds[importSource];\r\n        const module = this.graph.modulesById.get(id);\r\n        const [variable] = module.getVariableForExportName(baseName);\r\n        if (!variable) {\r\n            return this.error(logMissingJsxExport(baseName, id, this.id), nodeStart);\r\n        }\r\n        return variable;\r\n    }\r\n    getVariableFromNamespaceReexports(name, importerForSideEffects, searchedNamesAndModules) {\r\n        let foundSyntheticDeclaration = null;\r\n        const foundInternalDeclarations = new Map();\r\n        const foundExternalDeclarations = new Set();\r\n        for (const module of this.exportAllModules) {\r\n            // Synthetic namespaces should not hide \"regular\" exports of the same name\r\n            if (module.info.syntheticNamedExports === name) {\r\n                continue;\r\n            }\r\n            const [variable, options] = getVariableForExportNameRecursive(module, name, importerForSideEffects, true, \r\n            // We are creating a copy to handle the case where the same binding is\r\n            // imported through different namespace reexports gracefully\r\n            copyNameToModulesMap(searchedNamesAndModules));\r\n            if (module instanceof ExternalModule || options?.indirectExternal) {\r\n                foundExternalDeclarations.add(variable);\r\n            }\r\n            else if (variable instanceof SyntheticNamedExportVariable) {\r\n                if (!foundSyntheticDeclaration) {\r\n                    foundSyntheticDeclaration = variable;\r\n                }\r\n            }\r\n            else if (variable) {\r\n                foundInternalDeclarations.set(variable, module);\r\n            }\r\n        }\r\n        if (foundInternalDeclarations.size > 0) {\r\n            const foundDeclarationList = [...foundInternalDeclarations];\r\n            const usedDeclaration = foundDeclarationList[0][0];\r\n            if (foundDeclarationList.length === 1) {\r\n                return [usedDeclaration];\r\n            }\r\n            this.options.onLog(LOGLEVEL_WARN, logNamespaceConflict(name, this.id, foundDeclarationList.map(([, module]) => module.id)));\r\n            // TODO we are pretending it was not found while it should behave like \"undefined\"\r\n            return [null];\r\n        }\r\n        if (foundExternalDeclarations.size > 0) {\r\n            const foundDeclarationList = [...foundExternalDeclarations];\r\n            const usedDeclaration = foundDeclarationList[0];\r\n            if (foundDeclarationList.length > 1) {\r\n                this.options.onLog(LOGLEVEL_WARN, logAmbiguousExternalNamespaces(name, this.id, usedDeclaration.module.id, foundDeclarationList.map(declaration => declaration.module.id)));\r\n            }\r\n            return [usedDeclaration, { indirectExternal: true }];\r\n        }\r\n        if (foundSyntheticDeclaration) {\r\n            return [foundSyntheticDeclaration];\r\n        }\r\n        return [null];\r\n    }\r\n    includeAndGetAdditionalMergedNamespaces() {\r\n        const externalNamespaces = new Set();\r\n        const syntheticNamespaces = new Set();\r\n        for (const module of [this, ...this.exportAllModules]) {\r\n            if (module instanceof ExternalModule) {\r\n                const [externalVariable] = module.getVariableForExportName('*');\r\n                externalVariable.includePath(UNKNOWN_PATH, createInclusionContext());\r\n                this.includedImports.add(externalVariable);\r\n                externalNamespaces.add(externalVariable);\r\n            }\r\n            else if (module.info.syntheticNamedExports) {\r\n                const syntheticNamespace = module.getSyntheticNamespace();\r\n                syntheticNamespace.includePath(UNKNOWN_PATH, createInclusionContext());\r\n                this.includedImports.add(syntheticNamespace);\r\n                syntheticNamespaces.add(syntheticNamespace);\r\n            }\r\n        }\r\n        return [...syntheticNamespaces, ...externalNamespaces];\r\n    }\r\n    includeDynamicImport(node) {\r\n        const resolution = this.dynamicImports.find(dynamicImport => dynamicImport.node === node).resolution;\r\n        if (resolution instanceof Module) {\r\n            if (!resolution.includedDynamicImporters.includes(this)) {\r\n                resolution.includedDynamicImporters.push(this);\r\n                // If a module has a top-level await, removing this entry can create\r\n                // deadlocks.\r\n                if (this.astContext.usesTopLevelAwait) {\r\n                    resolution.includedTopLevelAwaitingDynamicImporters.add(this);\r\n                }\r\n            }\r\n            const importedNames = this.options.treeshake\r\n                ? node.getDeterministicImportedNames()\r\n                : undefined;\r\n            if (importedNames) {\r\n                resolution.includeExportsByNames(importedNames);\r\n            }\r\n            else {\r\n                resolution.includeAllExports(true);\r\n            }\r\n        }\r\n    }\r\n    includeVariable(variable, path, context) {\r\n        const { included, module: variableModule } = variable;\r\n        variable.includePath(path, context);\r\n        if (included) {\r\n            if (variableModule instanceof Module && variableModule !== this) {\r\n                getAndExtendSideEffectModules(variable, this);\r\n            }\r\n        }\r\n        else {\r\n            this.graph.needsTreeshakingPass = true;\r\n            if (variableModule instanceof Module) {\r\n                if (!variableModule.isExecuted) {\r\n                    markModuleAndImpureDependenciesAsExecuted(variableModule);\r\n                }\r\n                if (variableModule !== this) {\r\n                    const sideEffectModules = getAndExtendSideEffectModules(variable, this);\r\n                    for (const module of sideEffectModules) {\r\n                        if (!module.isExecuted) {\r\n                            markModuleAndImpureDependenciesAsExecuted(module);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    includeVariableInModule(variable, path, context) {\r\n        this.includeVariable(variable, path, context);\r\n        const variableModule = variable.module;\r\n        if (variableModule && variableModule !== this) {\r\n            this.includedImports.add(variable);\r\n        }\r\n    }\r\n    shimMissingExport(name) {\r\n        this.options.onLog(LOGLEVEL_WARN, logShimmedExport(this.id, name));\r\n        this.exports.set(name, MISSING_EXPORT_SHIM_DESCRIPTION);\r\n    }\r\n    tryParse() {\r\n        try {\r\n            return parseAst(this.info.code, { jsx: this.options.jsx !== false });\r\n        }\r\n        catch (error_) {\r\n            return this.error(logModuleParseError(error_, this.id), error_.pos);\r\n        }\r\n    }\r\n}\r\n// if there is a cyclic import in the reexport chain, we should not\r\n// import from the original module but from the cyclic module to not\r\n// mess up execution order.\r\nfunction setAlternativeExporterIfCyclic(variable, importer, reexporter) {\r\n    if (variable.module instanceof Module && variable.module !== reexporter) {\r\n        const exporterCycles = variable.module.cycles;\r\n        if (exporterCycles.size > 0) {\r\n            const importerCycles = reexporter.cycles;\r\n            for (const cycleSymbol of importerCycles) {\r\n                if (exporterCycles.has(cycleSymbol)) {\r\n                    importer.alternativeReexportModules.set(variable, reexporter);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst copyNameToModulesMap = (searchedNamesAndModules) => searchedNamesAndModules &&\r\n    new Map(Array.from(searchedNamesAndModules, ([name, modules]) => [name, new Set(modules)]));\r\n\r\nconst concatSeparator = (out, next) => (next ? `${out}\\n${next}` : out);\r\nconst concatDblSeparator = (out, next) => (next ? `${out}\\n\\n${next}` : out);\r\nasync function createAddons(options, outputPluginDriver, chunk) {\r\n    try {\r\n        let [banner, footer, intro, outro] = await Promise.all([\r\n            outputPluginDriver.hookReduceValue('banner', options.banner(chunk), [chunk], concatSeparator),\r\n            outputPluginDriver.hookReduceValue('footer', options.footer(chunk), [chunk], concatSeparator),\r\n            outputPluginDriver.hookReduceValue('intro', options.intro(chunk), [chunk], concatDblSeparator),\r\n            outputPluginDriver.hookReduceValue('outro', options.outro(chunk), [chunk], concatDblSeparator)\r\n        ]);\r\n        if (intro)\r\n            intro += '\\n\\n';\r\n        if (outro)\r\n            outro = `\\n\\n${outro}`;\r\n        if (banner)\r\n            banner += '\\n';\r\n        if (footer)\r\n            footer = '\\n' + footer;\r\n        return { banner, footer, intro, outro };\r\n    }\r\n    catch (error_) {\r\n        return error(logAddonNotGenerated(error_.message, error_.hook, error_.plugin));\r\n    }\r\n}\r\n\r\nconst DECONFLICT_IMPORTED_VARIABLES_BY_FORMAT = {\r\n    amd: deconflictImportsOther,\r\n    cjs: deconflictImportsOther,\r\n    es: deconflictImportsEsmOrSystem,\r\n    iife: deconflictImportsOther,\r\n    system: deconflictImportsEsmOrSystem,\r\n    umd: deconflictImportsOther\r\n};\r\nfunction deconflictChunk(modules, dependenciesToBeDeconflicted, imports, usedNames, format, interop, preserveModules, externalLiveBindings, chunkByModule, externalChunkByModule, syntheticExports, exportNamesByVariable, accessedGlobalsByScope, includedNamespaces) {\r\n    const reversedModules = [...modules].reverse();\r\n    for (const module of reversedModules) {\r\n        module.scope.addUsedOutsideNames(usedNames, format, exportNamesByVariable, accessedGlobalsByScope);\r\n    }\r\n    deconflictTopLevelVariables(usedNames, reversedModules, includedNamespaces);\r\n    DECONFLICT_IMPORTED_VARIABLES_BY_FORMAT[format](usedNames, imports, dependenciesToBeDeconflicted, interop, preserveModules, externalLiveBindings, chunkByModule, externalChunkByModule, syntheticExports);\r\n    for (const module of reversedModules) {\r\n        module.scope.deconflict(format, exportNamesByVariable, accessedGlobalsByScope);\r\n    }\r\n}\r\nfunction deconflictImportsEsmOrSystem(usedNames, imports, dependenciesToBeDeconflicted, _interop, preserveModules, _externalLiveBindings, chunkByModule, externalChunkByModule, syntheticExports) {\r\n    // This is needed for namespace reexports\r\n    for (const dependency of dependenciesToBeDeconflicted.dependencies) {\r\n        if (preserveModules || dependency instanceof ExternalChunk) {\r\n            dependency.variableName = getSafeName(dependency.suggestedVariableName, usedNames, null);\r\n        }\r\n    }\r\n    for (const variable of imports) {\r\n        const module = variable.module;\r\n        const name = variable.name;\r\n        if (variable.isNamespace && (preserveModules || module instanceof ExternalModule)) {\r\n            variable.setRenderNames(null, (module instanceof ExternalModule\r\n                ? externalChunkByModule.get(module)\r\n                : chunkByModule.get(module)).variableName);\r\n        }\r\n        else if (module instanceof ExternalModule && name === 'default') {\r\n            variable.setRenderNames(null, getSafeName([...module.exportedVariables].some(([exportedVariable, exportedName]) => exportedName === '*' && exportedVariable.included)\r\n                ? module.suggestedVariableName + '__default'\r\n                : module.suggestedVariableName, usedNames, variable.forbiddenNames));\r\n        }\r\n        else {\r\n            variable.setRenderNames(null, getSafeName(makeLegal(name), usedNames, variable.forbiddenNames));\r\n        }\r\n    }\r\n    for (const variable of syntheticExports) {\r\n        variable.setRenderNames(null, getSafeName(variable.name, usedNames, variable.forbiddenNames));\r\n    }\r\n}\r\nfunction deconflictImportsOther(usedNames, imports, { deconflictedDefault, deconflictedNamespace, dependencies }, interop, preserveModules, externalLiveBindings, chunkByModule, externalChunkByModule) {\r\n    for (const chunk of dependencies) {\r\n        chunk.variableName = getSafeName(chunk.suggestedVariableName, usedNames, null);\r\n    }\r\n    for (const chunk of deconflictedNamespace) {\r\n        chunk.namespaceVariableName = getSafeName(`${chunk.suggestedVariableName}__namespace`, usedNames, null);\r\n    }\r\n    for (const externalModule of deconflictedDefault) {\r\n        externalModule.defaultVariableName =\r\n            deconflictedNamespace.has(externalModule) &&\r\n                canDefaultBeTakenFromNamespace(interop(externalModule.id), externalLiveBindings)\r\n                ? externalModule.namespaceVariableName\r\n                : getSafeName(`${externalModule.suggestedVariableName}__default`, usedNames, null);\r\n    }\r\n    for (const variable of imports) {\r\n        const module = variable.module;\r\n        if (module instanceof ExternalModule) {\r\n            const chunk = externalChunkByModule.get(module);\r\n            const name = variable.name;\r\n            if (name === 'default') {\r\n                const moduleInterop = interop(module.id);\r\n                const variableName = defaultInteropHelpersByInteropType[moduleInterop]\r\n                    ? chunk.defaultVariableName\r\n                    : chunk.variableName;\r\n                if (isDefaultAProperty(moduleInterop, externalLiveBindings)) {\r\n                    variable.setRenderNames(variableName, 'default');\r\n                }\r\n                else {\r\n                    variable.setRenderNames(null, variableName);\r\n                }\r\n            }\r\n            else if (name === '*') {\r\n                variable.setRenderNames(null, namespaceInteropHelpersByInteropType[interop(module.id)]\r\n                    ? chunk.namespaceVariableName\r\n                    : chunk.variableName);\r\n            }\r\n            else {\r\n                // if the second parameter is `null`, it uses its \"name\" for the property name\r\n                variable.setRenderNames(chunk.variableName, null);\r\n            }\r\n        }\r\n        else {\r\n            const chunk = chunkByModule.get(module);\r\n            if (preserveModules && variable.isNamespace) {\r\n                variable.setRenderNames(null, chunk.exportMode === 'default' ? chunk.namespaceVariableName : chunk.variableName);\r\n            }\r\n            else if (chunk.exportMode === 'default') {\r\n                variable.setRenderNames(null, chunk.variableName);\r\n            }\r\n            else {\r\n                variable.setRenderNames(chunk.variableName, chunk.getVariableExportName(variable));\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction deconflictTopLevelVariables(usedNames, modules, includedNamespaces) {\r\n    for (const module of modules) {\r\n        for (const variable of module.scope.variables.values()) {\r\n            if (variable.included &&\r\n                // this will only happen for exports in some formats\r\n                !(variable.renderBaseName ||\r\n                    (variable instanceof ExportDefaultVariable && variable.getOriginalVariable() !== variable))) {\r\n                variable.setRenderNames(null, getSafeName(variable.name, usedNames, variable.forbiddenNames));\r\n            }\r\n        }\r\n        if (includedNamespaces.has(module)) {\r\n            const namespace = module.namespace;\r\n            namespace.setRenderNames(null, getSafeName(namespace.name, usedNames, namespace.forbiddenNames));\r\n        }\r\n    }\r\n}\r\n\r\nfunction assignExportsToMangledNames(exports, exportsByName, exportNamesByVariable) {\r\n    let nameIndex = 0;\r\n    for (const variable of exports) {\r\n        let [exportName] = variable.name;\r\n        if (exportsByName.has(exportName)) {\r\n            do {\r\n                exportName = toBase64(++nameIndex);\r\n                // skip past leading number identifiers\r\n                if (exportName.charCodeAt(0) === 49 /* '1' */) {\r\n                    nameIndex += 9 * 64 ** (exportName.length - 1);\r\n                    exportName = toBase64(nameIndex);\r\n                }\r\n            } while (RESERVED_NAMES.has(exportName) || exportsByName.has(exportName));\r\n        }\r\n        exportsByName.set(exportName, variable);\r\n        exportNamesByVariable.set(variable, [exportName]);\r\n    }\r\n}\r\nfunction assignExportsToNames(exports, exportsByName, exportNamesByVariable) {\r\n    for (const variable of exports) {\r\n        let nameIndex = 0;\r\n        let exportName = variable.name;\r\n        while (exportsByName.has(exportName)) {\r\n            exportName = variable.name + '$' + ++nameIndex;\r\n        }\r\n        exportsByName.set(exportName, variable);\r\n        exportNamesByVariable.set(variable, [exportName]);\r\n    }\r\n}\r\n\r\nfunction getExportMode(chunk, { exports: exportMode, name, format }, facadeModuleId, log) {\r\n    const exportKeys = chunk.getExportNames();\r\n    if (exportMode === 'default') {\r\n        if (exportKeys.length !== 1 || exportKeys[0] !== 'default') {\r\n            return error(logIncompatibleExportOptionValue('default', exportKeys, facadeModuleId));\r\n        }\r\n    }\r\n    else if (exportMode === 'none' && exportKeys.length > 0) {\r\n        return error(logIncompatibleExportOptionValue('none', exportKeys, facadeModuleId));\r\n    }\r\n    if (exportMode === 'auto') {\r\n        if (exportKeys.length === 0) {\r\n            exportMode = 'none';\r\n        }\r\n        else if (exportKeys.length === 1 && exportKeys[0] === 'default') {\r\n            exportMode = 'default';\r\n        }\r\n        else {\r\n            if (format !== 'es' && format !== 'system' && exportKeys.includes('default')) {\r\n                log(LOGLEVEL_WARN, logMixedExport(facadeModuleId, name));\r\n            }\r\n            exportMode = 'named';\r\n        }\r\n    }\r\n    return exportMode;\r\n}\r\n\r\nfunction guessIndentString(code) {\r\n    const lines = code.split('\\n');\r\n    const tabbed = lines.filter(line => /^\\t+/.test(line));\r\n    const spaced = lines.filter(line => /^ {2,}/.test(line));\r\n    if (tabbed.length === 0 && spaced.length === 0) {\r\n        return null;\r\n    }\r\n    // More lines tabbed than spaced? Assume tabs, and\r\n    // default to tabs in the case of a tie (or nothing\r\n    // to go on)\r\n    if (tabbed.length >= spaced.length) {\r\n        return '\\t';\r\n    }\r\n    // Otherwise, we need to guess the multiple\r\n    const min = spaced.reduce((previous, current) => {\r\n        const numberSpaces = /^ +/.exec(current)[0].length;\r\n        return Math.min(numberSpaces, previous);\r\n    }, Infinity);\r\n    return ' '.repeat(min);\r\n}\r\nfunction getIndentString(modules, options) {\r\n    if (options.indent !== true)\r\n        return options.indent;\r\n    for (const module of modules) {\r\n        const indent = guessIndentString(module.originalCode);\r\n        if (indent !== null)\r\n            return indent;\r\n    }\r\n    return '\\t';\r\n}\r\n\r\nfunction getStaticDependencies(chunk, orderedModules, chunkByModule, externalChunkByModule) {\r\n    const staticDependencyBlocks = [];\r\n    const handledDependencies = new Set();\r\n    for (let modulePos = orderedModules.length - 1; modulePos >= 0; modulePos--) {\r\n        const module = orderedModules[modulePos];\r\n        if (!handledDependencies.has(module)) {\r\n            const staticDependencies = [];\r\n            addStaticDependencies(module, staticDependencies, handledDependencies, chunk, chunkByModule, externalChunkByModule);\r\n            staticDependencyBlocks.unshift(staticDependencies);\r\n        }\r\n    }\r\n    const dependencies = new Set();\r\n    for (const block of staticDependencyBlocks) {\r\n        for (const dependency of block) {\r\n            dependencies.add(dependency);\r\n        }\r\n    }\r\n    return dependencies;\r\n}\r\nfunction addStaticDependencies(module, staticDependencies, handledModules, chunk, chunkByModule, externalChunkByModule) {\r\n    const dependencies = module.getDependenciesToBeIncluded();\r\n    for (const dependency of dependencies) {\r\n        if (dependency instanceof ExternalModule) {\r\n            staticDependencies.push(externalChunkByModule.get(dependency));\r\n            continue;\r\n        }\r\n        const dependencyChunk = chunkByModule.get(dependency);\r\n        if (dependencyChunk !== chunk) {\r\n            staticDependencies.push(dependencyChunk);\r\n            continue;\r\n        }\r\n        if (!handledModules.has(dependency)) {\r\n            handledModules.add(dependency);\r\n            addStaticDependencies(dependency, staticDependencies, handledModules, chunk, chunkByModule, externalChunkByModule);\r\n        }\r\n    }\r\n}\r\n\r\n// Four random characters from the private use area to minimize risk of\r\n// conflicts\r\nconst hashPlaceholderLeft = '!~{';\r\nconst hashPlaceholderRight = '}~';\r\nconst hashPlaceholderOverhead = hashPlaceholderLeft.length + hashPlaceholderRight.length;\r\n// This is the size of a 128-bits xxhash with base64url encoding\r\nconst MAX_HASH_SIZE = 21;\r\nconst DEFAULT_HASH_SIZE = 8;\r\nconst getHashPlaceholderGenerator = () => {\r\n    let nextIndex = 0;\r\n    return (optionName, hashSize) => {\r\n        if (hashSize > MAX_HASH_SIZE) {\r\n            return error(logFailedValidation(`Hashes cannot be longer than ${MAX_HASH_SIZE} characters, received ${hashSize}. Check the \"${optionName}\" option.`));\r\n        }\r\n        const placeholder = `${hashPlaceholderLeft}${toBase64(++nextIndex).padStart(hashSize - hashPlaceholderOverhead, '0')}${hashPlaceholderRight}`;\r\n        if (placeholder.length > hashSize) {\r\n            return error(logFailedValidation(`To generate hashes for this number of chunks (currently ${nextIndex}), you need a minimum hash size of ${placeholder.length}, received ${hashSize}. Check the \"${optionName}\" option.`));\r\n        }\r\n        return placeholder;\r\n    };\r\n};\r\nconst REPLACER_REGEX = new RegExp(`${hashPlaceholderLeft}[0-9a-zA-Z_$]{1,${MAX_HASH_SIZE - hashPlaceholderOverhead}}${hashPlaceholderRight}`, 'g');\r\nconst replacePlaceholders = (code, hashesByPlaceholder) => code.replace(REPLACER_REGEX, placeholder => hashesByPlaceholder.get(placeholder) || placeholder);\r\nconst replaceSinglePlaceholder = (code, placeholder, value) => code.replace(REPLACER_REGEX, match => (match === placeholder ? value : match));\r\nconst replacePlaceholdersWithDefaultAndGetContainedPlaceholders = (code, placeholders) => {\r\n    const containedPlaceholders = new Set();\r\n    const transformedCode = code.replace(REPLACER_REGEX, placeholder => {\r\n        if (placeholders.has(placeholder)) {\r\n            containedPlaceholders.add(placeholder);\r\n            return `${hashPlaceholderLeft}${'0'.repeat(placeholder.length - hashPlaceholderOverhead)}${hashPlaceholderRight}`;\r\n        }\r\n        return placeholder;\r\n    });\r\n    return { containedPlaceholders, transformedCode };\r\n};\r\n\r\nconst lowercaseBundleKeys = Symbol('bundleKeys');\r\nconst FILE_PLACEHOLDER = {\r\n    type: 'placeholder'\r\n};\r\nconst getOutputBundle = (outputBundleBase) => {\r\n    const reservedLowercaseBundleKeys = new Set();\r\n    return new Proxy(outputBundleBase, {\r\n        deleteProperty(target, key) {\r\n            if (typeof key === 'string') {\r\n                reservedLowercaseBundleKeys.delete(key.toLowerCase());\r\n            }\r\n            return Reflect.deleteProperty(target, key);\r\n        },\r\n        get(target, key) {\r\n            if (key === lowercaseBundleKeys) {\r\n                return reservedLowercaseBundleKeys;\r\n            }\r\n            return Reflect.get(target, key);\r\n        },\r\n        set(target, key, value) {\r\n            if (typeof key === 'string') {\r\n                reservedLowercaseBundleKeys.add(key.toLowerCase());\r\n            }\r\n            return Reflect.set(target, key, value);\r\n        }\r\n    });\r\n};\r\nconst removeUnreferencedAssets = (outputBundle) => {\r\n    const unreferencedAssets = new Set();\r\n    const bundleEntries = Object.values(outputBundle);\r\n    for (const asset of bundleEntries) {\r\n        if (asset.type === 'asset' && asset.needsCodeReference) {\r\n            unreferencedAssets.add(asset.fileName);\r\n        }\r\n    }\r\n    for (const chunk of bundleEntries) {\r\n        if (chunk.type === 'chunk') {\r\n            for (const referencedFile of chunk.referencedFiles) {\r\n                if (unreferencedAssets.has(referencedFile)) {\r\n                    unreferencedAssets.delete(referencedFile);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for (const file of unreferencedAssets) {\r\n        delete outputBundle[file];\r\n    }\r\n};\r\n\r\nfunction renderNamePattern(pattern, patternName, replacements) {\r\n    if (isPathFragment(pattern))\r\n        return error(logFailedValidation(`Invalid pattern \"${pattern}\" for \"${patternName}\", patterns can be neither absolute nor relative paths. If you want your files to be stored in a subdirectory, write its name without a leading slash like this: subdirectory/pattern.`));\r\n    return pattern.replace(/\\[(\\w+)(:\\d+)?]/g, (_match, type, size) => {\r\n        if (!replacements.hasOwnProperty(type) || (size && type !== 'hash')) {\r\n            return error(logFailedValidation(`\"[${type}${size || ''}]\" is not a valid placeholder in the \"${patternName}\" pattern.`));\r\n        }\r\n        const replacement = replacements[type](size && Number.parseInt(size.slice(1)));\r\n        if (isPathFragment(replacement))\r\n            return error(logFailedValidation(`Invalid substitution \"${replacement}\" for placeholder \"[${type}]\" in \"${patternName}\" pattern, can be neither absolute nor relative path.`));\r\n        return replacement;\r\n    });\r\n}\r\nfunction makeUnique(name, { [lowercaseBundleKeys]: reservedLowercaseBundleKeys }) {\r\n    if (!reservedLowercaseBundleKeys.has(name.toLowerCase()))\r\n        return name;\r\n    const extension = extname(name);\r\n    name = name.slice(0, Math.max(0, name.length - extension.length));\r\n    let uniqueName, uniqueIndex = 1;\r\n    while (reservedLowercaseBundleKeys.has((uniqueName = name + ++uniqueIndex + extension).toLowerCase()))\r\n        ;\r\n    return uniqueName;\r\n}\r\n\r\nconst NON_ASSET_EXTENSIONS = new Set([\r\n    '.js',\r\n    '.jsx',\r\n    '.ts',\r\n    '.tsx',\r\n    '.mjs',\r\n    '.mts',\r\n    '.cjs',\r\n    '.cts'\r\n]);\r\nfunction getGlobalName(chunk, globals, hasExports, log) {\r\n    const globalName = typeof globals === 'function' ? globals(chunk.id) : globals[chunk.id];\r\n    if (globalName) {\r\n        return globalName;\r\n    }\r\n    if (hasExports) {\r\n        log(LOGLEVEL_WARN, logMissingGlobalName(chunk.id, chunk.variableName));\r\n        return chunk.variableName;\r\n    }\r\n}\r\nclass Chunk {\r\n    constructor(orderedModules, inputOptions, outputOptions, unsetOptions, pluginDriver, modulesById, chunkByModule, externalChunkByModule, facadeChunkByModule, includedNamespaces, manualChunkAlias, getPlaceholder, bundle, inputBase, snippets) {\r\n        this.orderedModules = orderedModules;\r\n        this.inputOptions = inputOptions;\r\n        this.outputOptions = outputOptions;\r\n        this.unsetOptions = unsetOptions;\r\n        this.pluginDriver = pluginDriver;\r\n        this.modulesById = modulesById;\r\n        this.chunkByModule = chunkByModule;\r\n        this.externalChunkByModule = externalChunkByModule;\r\n        this.facadeChunkByModule = facadeChunkByModule;\r\n        this.includedNamespaces = includedNamespaces;\r\n        this.manualChunkAlias = manualChunkAlias;\r\n        this.getPlaceholder = getPlaceholder;\r\n        this.bundle = bundle;\r\n        this.inputBase = inputBase;\r\n        this.snippets = snippets;\r\n        this.dependencies = new Set();\r\n        this.entryModules = [];\r\n        this.exportMode = 'named';\r\n        this.facadeModule = null;\r\n        this.namespaceVariableName = '';\r\n        this.variableName = '';\r\n        this.accessedGlobalsByScope = new Map();\r\n        this.dynamicEntryModules = [];\r\n        this.dynamicName = null;\r\n        this.exportNamesByVariable = new Map();\r\n        this.exports = new Set();\r\n        this.exportsByName = new Map();\r\n        this.fileName = null;\r\n        this.implicitEntryModules = [];\r\n        this.implicitlyLoadedBefore = new Set();\r\n        this.imports = new Set();\r\n        this.includedDynamicImports = null;\r\n        this.includedReexportsByModule = new Map();\r\n        // This may be updated in the constructor\r\n        this.isEmpty = true;\r\n        this.name = null;\r\n        this.needsExportsShim = false;\r\n        this.preRenderedChunkInfo = null;\r\n        this.preliminaryFileName = null;\r\n        this.preliminarySourcemapFileName = null;\r\n        this.renderedChunkInfo = null;\r\n        this.renderedDependencies = null;\r\n        this.renderedModules = Object.create(null);\r\n        this.sortedExportNames = null;\r\n        this.strictFacade = false;\r\n        /** Modules with 'allow-extension' that should have preserved exports within the chunk */\r\n        this.allowExtensionModules = new Set();\r\n        this.execIndex = orderedModules.length > 0 ? orderedModules[0].execIndex : Infinity;\r\n        const chunkModules = new Set(orderedModules);\r\n        for (const module of orderedModules) {\r\n            chunkByModule.set(module, this);\r\n            if (module.namespace.included && !outputOptions.preserveModules) {\r\n                includedNamespaces.add(module);\r\n            }\r\n            if (this.isEmpty && module.isIncluded()) {\r\n                this.isEmpty = false;\r\n            }\r\n            if (module.info.isEntry || outputOptions.preserveModules) {\r\n                this.entryModules.push(module);\r\n            }\r\n            for (const importer of module.includedDynamicImporters) {\r\n                if (!chunkModules.has(importer)) {\r\n                    this.dynamicEntryModules.push(module);\r\n                    // Modules with synthetic exports need an artificial namespace for dynamic imports\r\n                    if (module.info.syntheticNamedExports) {\r\n                        includedNamespaces.add(module);\r\n                        this.exports.add(module.namespace);\r\n                    }\r\n                }\r\n            }\r\n            if (module.implicitlyLoadedAfter.size > 0) {\r\n                this.implicitEntryModules.push(module);\r\n            }\r\n        }\r\n        this.suggestedVariableName = makeLegal(this.generateVariableName());\r\n    }\r\n    static generateFacade(inputOptions, outputOptions, unsetOptions, pluginDriver, modulesById, chunkByModule, externalChunkByModule, facadeChunkByModule, includedNamespaces, facadedModule, facadeName, getPlaceholder, bundle, inputBase, snippets) {\r\n        const chunk = new Chunk([], inputOptions, outputOptions, unsetOptions, pluginDriver, modulesById, chunkByModule, externalChunkByModule, facadeChunkByModule, includedNamespaces, null, getPlaceholder, bundle, inputBase, snippets);\r\n        chunk.assignFacadeName(facadeName, facadedModule);\r\n        if (!facadeChunkByModule.has(facadedModule)) {\r\n            facadeChunkByModule.set(facadedModule, chunk);\r\n        }\r\n        for (const dependency of facadedModule.getDependenciesToBeIncluded()) {\r\n            chunk.dependencies.add(dependency instanceof Module\r\n                ? chunkByModule.get(dependency)\r\n                : externalChunkByModule.get(dependency));\r\n        }\r\n        if (!chunk.dependencies.has(chunkByModule.get(facadedModule)) &&\r\n            facadedModule.info.moduleSideEffects &&\r\n            facadedModule.hasEffects()) {\r\n            chunk.dependencies.add(chunkByModule.get(facadedModule));\r\n        }\r\n        chunk.ensureReexportsAreAvailableForModule(facadedModule);\r\n        chunk.facadeModule = facadedModule;\r\n        chunk.strictFacade = true;\r\n        return chunk;\r\n    }\r\n    canModuleBeFacade(module, exposedVariables) {\r\n        const moduleExportNamesByVariable = module.getExportNamesByVariable();\r\n        // All exports of this chunk need to be exposed by the candidate module\r\n        for (const exposedVariable of this.exports) {\r\n            if (!moduleExportNamesByVariable.has(exposedVariable)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Additionally, we need to expose namespaces of dynamic entries that are not the facade module and exports from other entry modules\r\n        for (const exposedVariable of exposedVariables) {\r\n            if (!(exposedVariable.module === module ||\r\n                moduleExportNamesByVariable.has(exposedVariable) ||\r\n                (exposedVariable instanceof SyntheticNamedExportVariable &&\r\n                    moduleExportNamesByVariable.has(exposedVariable.getBaseVariable())))) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    finalizeChunk(code, map, sourcemapFileName, hashesByPlaceholder) {\r\n        const renderedChunkInfo = this.getRenderedChunkInfo();\r\n        const finalize = (code) => replacePlaceholders(code, hashesByPlaceholder);\r\n        const preliminaryFileName = renderedChunkInfo.fileName;\r\n        const fileName = (this.fileName = finalize(preliminaryFileName));\r\n        return {\r\n            ...renderedChunkInfo,\r\n            code,\r\n            dynamicImports: renderedChunkInfo.dynamicImports.map(finalize),\r\n            fileName,\r\n            implicitlyLoadedBefore: renderedChunkInfo.implicitlyLoadedBefore.map(finalize),\r\n            importedBindings: Object.fromEntries(Object.entries(renderedChunkInfo.importedBindings).map(([fileName, bindings]) => [\r\n                finalize(fileName),\r\n                bindings\r\n            ])),\r\n            imports: renderedChunkInfo.imports.map(finalize),\r\n            map,\r\n            preliminaryFileName,\r\n            referencedFiles: renderedChunkInfo.referencedFiles.map(finalize),\r\n            sourcemapFileName\r\n        };\r\n    }\r\n    generateExports() {\r\n        this.sortedExportNames = null;\r\n        const remainingExports = new Set(this.exports);\r\n        if (this.facadeModule !== null &&\r\n            (this.facadeModule.preserveSignature !== false || this.strictFacade)) {\r\n            const exportNamesByVariable = this.facadeModule.getExportNamesByVariable();\r\n            for (const [variable, exportNames] of exportNamesByVariable) {\r\n                this.exportNamesByVariable.set(variable, [...exportNames]);\r\n                for (const exportName of exportNames) {\r\n                    this.exportsByName.set(exportName, variable);\r\n                }\r\n                remainingExports.delete(variable);\r\n            }\r\n        }\r\n        for (const module of this.allowExtensionModules) {\r\n            const exportNamesByVariable = module.getExportNamesByVariable();\r\n            for (const [variable, exportNames] of exportNamesByVariable) {\r\n                this.exportNamesByVariable.set(variable, [...exportNames]);\r\n                for (const exportName of exportNames) {\r\n                    this.exportsByName.set(exportName, variable);\r\n                }\r\n                remainingExports.delete(variable);\r\n            }\r\n        }\r\n        if (this.outputOptions.minifyInternalExports) {\r\n            assignExportsToMangledNames(remainingExports, this.exportsByName, this.exportNamesByVariable);\r\n        }\r\n        else {\r\n            assignExportsToNames(remainingExports, this.exportsByName, this.exportNamesByVariable);\r\n        }\r\n        if (this.outputOptions.preserveModules || (this.facadeModule && this.facadeModule.info.isEntry))\r\n            this.exportMode = getExportMode(this, this.outputOptions, this.facadeModule.id, this.inputOptions.onLog);\r\n    }\r\n    generateFacades() {\r\n        const facades = [];\r\n        const entryModules = new Set([...this.entryModules, ...this.implicitEntryModules]);\r\n        const exposedVariables = new Set(this.dynamicEntryModules.map(({ namespace }) => namespace));\r\n        for (const module of entryModules) {\r\n            if (module.preserveSignature === 'allow-extension') {\r\n                const canPreserveExports = this.canPreserveModuleExports(module);\r\n                if (canPreserveExports &&\r\n                    !module.chunkFileNames.size &&\r\n                    module.chunkNames.every(({ isUserDefined }) => !isUserDefined)) {\r\n                    this.allowExtensionModules.add(module);\r\n                    if (!this.facadeModule) {\r\n                        this.facadeModule = module;\r\n                        this.strictFacade = false;\r\n                        this.assignFacadeName({}, module, this.outputOptions.preserveModules);\r\n                    }\r\n                    this.facadeChunkByModule.set(module, this);\r\n                    continue;\r\n                }\r\n            }\r\n            const requiredFacades = Array.from(new Set(module.chunkNames.filter(({ isUserDefined }) => isUserDefined).map(({ name }) => name)), \r\n            // mapping must run after Set 'name' dedupe\r\n            name => ({\r\n                name\r\n            }));\r\n            if (requiredFacades.length === 0 && module.isUserDefinedEntryPoint) {\r\n                requiredFacades.push({});\r\n            }\r\n            requiredFacades.push(...Array.from(module.chunkFileNames, fileName => ({ fileName })));\r\n            if (requiredFacades.length === 0) {\r\n                requiredFacades.push({});\r\n            }\r\n            if (!this.facadeModule) {\r\n                const needsStrictFacade = !this.outputOptions.preserveModules &&\r\n                    (module.preserveSignature === 'strict' ||\r\n                        (module.preserveSignature === 'exports-only' &&\r\n                            module.getExportNamesByVariable().size > 0));\r\n                if (!needsStrictFacade || this.canModuleBeFacade(module, exposedVariables)) {\r\n                    this.facadeModule = module;\r\n                    this.facadeChunkByModule.set(module, this);\r\n                    if (module.preserveSignature) {\r\n                        this.strictFacade = needsStrictFacade;\r\n                    }\r\n                    this.assignFacadeName(requiredFacades.shift(), module, this.outputOptions.preserveModules);\r\n                }\r\n            }\r\n            for (const facadeName of requiredFacades) {\r\n                facades.push(Chunk.generateFacade(this.inputOptions, this.outputOptions, this.unsetOptions, this.pluginDriver, this.modulesById, this.chunkByModule, this.externalChunkByModule, this.facadeChunkByModule, this.includedNamespaces, module, facadeName, this.getPlaceholder, this.bundle, this.inputBase, this.snippets));\r\n            }\r\n        }\r\n        for (const module of this.dynamicEntryModules) {\r\n            if (module.info.syntheticNamedExports)\r\n                continue;\r\n            if (!this.facadeModule && this.canModuleBeFacade(module, exposedVariables)) {\r\n                this.facadeModule = module;\r\n                this.facadeChunkByModule.set(module, this);\r\n                this.strictFacade = true;\r\n                this.dynamicName = getChunkNameFromModule(module);\r\n            }\r\n            else if (this.facadeModule === module &&\r\n                !this.strictFacade &&\r\n                this.canModuleBeFacade(module, exposedVariables)) {\r\n                this.strictFacade = true;\r\n            }\r\n            else if (!this.facadeChunkByModule.get(module)?.strictFacade) {\r\n                this.includedNamespaces.add(module);\r\n                this.exports.add(module.namespace);\r\n            }\r\n        }\r\n        if (!this.outputOptions.preserveModules) {\r\n            this.addNecessaryImportsForFacades();\r\n        }\r\n        return facades;\r\n    }\r\n    canPreserveModuleExports(module) {\r\n        const exportNamesByVariable = module.getExportNamesByVariable();\r\n        // Check for conflicts - an export name is a conflict if it points to a different module or definition\r\n        for (const [variable, exportNames] of exportNamesByVariable) {\r\n            for (const exportName of exportNames) {\r\n                const existingVariable = this.exportsByName.get(exportName);\r\n                // It's ok if the same export name in two modules references the exact same variable\r\n                if (existingVariable && existingVariable !== variable) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        // No actual conflicts found, add export names for future conflict checks\r\n        for (const [variable, exportNames] of exportNamesByVariable) {\r\n            for (const exportName of exportNames) {\r\n                this.exportsByName.set(exportName, variable);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    getChunkName() {\r\n        return (this.name ??= this.outputOptions.sanitizeFileName(this.getFallbackChunkName()));\r\n    }\r\n    getExportNames() {\r\n        return (this.sortedExportNames ??= [...this.exportsByName.keys()].sort());\r\n    }\r\n    getFileName() {\r\n        return this.fileName || this.getPreliminaryFileName().fileName;\r\n    }\r\n    getImportPath(importer) {\r\n        return escapeId(getImportPath(importer, this.getFileName(), this.outputOptions.format === 'amd' && !this.outputOptions.amd.forceJsExtensionForImports, true));\r\n    }\r\n    getPreliminaryFileName() {\r\n        if (this.preliminaryFileName) {\r\n            return this.preliminaryFileName;\r\n        }\r\n        let fileName;\r\n        let hashPlaceholder = null;\r\n        const { chunkFileNames, entryFileNames, file, format, preserveModules } = this.outputOptions;\r\n        if (file) {\r\n            fileName = basename(file);\r\n        }\r\n        else if (this.fileName === null) {\r\n            const [pattern, patternName] = preserveModules || this.facadeModule?.isUserDefinedEntryPoint\r\n                ? [entryFileNames, 'output.entryFileNames']\r\n                : [chunkFileNames, 'output.chunkFileNames'];\r\n            fileName = renderNamePattern(typeof pattern === 'function' ? pattern(this.getPreRenderedChunkInfo()) : pattern, patternName, {\r\n                format: () => format,\r\n                hash: size => hashPlaceholder ||\r\n                    (hashPlaceholder = this.getPlaceholder(patternName, size || DEFAULT_HASH_SIZE)),\r\n                name: () => this.getChunkName()\r\n            });\r\n            if (!hashPlaceholder) {\r\n                fileName = makeUnique(fileName, this.bundle);\r\n            }\r\n        }\r\n        else {\r\n            fileName = this.fileName;\r\n        }\r\n        if (!hashPlaceholder) {\r\n            this.bundle[fileName] = FILE_PLACEHOLDER;\r\n        }\r\n        // Caching is essential to not conflict with the file name reservation above\r\n        return (this.preliminaryFileName = { fileName, hashPlaceholder });\r\n    }\r\n    getPreliminarySourcemapFileName() {\r\n        if (this.preliminarySourcemapFileName) {\r\n            return this.preliminarySourcemapFileName;\r\n        }\r\n        let sourcemapFileName = null;\r\n        let hashPlaceholder = null;\r\n        const { sourcemapFileNames, format } = this.outputOptions;\r\n        if (sourcemapFileNames) {\r\n            const [pattern, patternName] = [sourcemapFileNames, 'output.sourcemapFileNames'];\r\n            sourcemapFileName = renderNamePattern(typeof pattern === 'function' ? pattern(this.getPreRenderedChunkInfo()) : pattern, patternName, {\r\n                chunkhash: () => this.getPreliminaryFileName().hashPlaceholder || '',\r\n                format: () => format,\r\n                hash: size => hashPlaceholder ||\r\n                    (hashPlaceholder = this.getPlaceholder(patternName, size || DEFAULT_HASH_SIZE)),\r\n                name: () => this.getChunkName()\r\n            });\r\n            if (!hashPlaceholder) {\r\n                sourcemapFileName = makeUnique(sourcemapFileName, this.bundle);\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n        return (this.preliminarySourcemapFileName = { fileName: sourcemapFileName, hashPlaceholder });\r\n    }\r\n    getRenderedChunkInfo() {\r\n        if (this.renderedChunkInfo) {\r\n            return this.renderedChunkInfo;\r\n        }\r\n        return (this.renderedChunkInfo = {\r\n            ...this.getPreRenderedChunkInfo(),\r\n            dynamicImports: this.getDynamicDependencies().map(resolveFileName),\r\n            fileName: this.getFileName(),\r\n            implicitlyLoadedBefore: Array.from(this.implicitlyLoadedBefore, resolveFileName),\r\n            importedBindings: getImportedBindingsPerDependency(this.getRenderedDependencies(), resolveFileName),\r\n            imports: Array.from(this.dependencies, resolveFileName),\r\n            modules: this.renderedModules,\r\n            referencedFiles: this.getReferencedFiles()\r\n        });\r\n    }\r\n    getVariableExportName(variable) {\r\n        if (this.outputOptions.preserveModules && variable instanceof NamespaceVariable) {\r\n            return '*';\r\n        }\r\n        return this.exportNamesByVariable.get(variable)[0];\r\n    }\r\n    link() {\r\n        this.dependencies = getStaticDependencies(this, this.orderedModules, this.chunkByModule, this.externalChunkByModule);\r\n        for (const module of this.orderedModules) {\r\n            this.addImplicitlyLoadedBeforeFromModule(module);\r\n            this.setUpChunkImportsAndExportsForModule(module);\r\n        }\r\n    }\r\n    inlineTransitiveImports() {\r\n        const { facadeModule, dependencies, outputOptions } = this;\r\n        const { hoistTransitiveImports, preserveModules } = outputOptions;\r\n        // for static and dynamic entry points, add transitive dependencies to this\r\n        // chunk's dependencies to avoid loading latency\r\n        if (hoistTransitiveImports && !preserveModules && facadeModule !== null) {\r\n            for (const dep of dependencies) {\r\n                if (dep instanceof Chunk)\r\n                    this.inlineChunkDependencies(dep);\r\n            }\r\n        }\r\n    }\r\n    async render() {\r\n        const { exportMode, facadeModule, inputOptions: { onLog }, outputOptions, pluginDriver, snippets } = this;\r\n        const { format, preserveModules } = outputOptions;\r\n        const preliminaryFileName = this.getPreliminaryFileName();\r\n        const preliminarySourcemapFileName = this.getPreliminarySourcemapFileName();\r\n        const { accessedGlobals, indent, magicString, renderedSource, usedModules, usesTopLevelAwait } = this.renderModules(preliminaryFileName.fileName);\r\n        const renderedDependencies = [...this.getRenderedDependencies().values()];\r\n        const renderedExports = exportMode === 'none' ? [] : this.getChunkExportDeclarations(format);\r\n        let hasExports = renderedExports.length > 0;\r\n        let hasDefaultExport = false;\r\n        for (const renderedDependency of renderedDependencies) {\r\n            const { reexports } = renderedDependency;\r\n            if (reexports?.length) {\r\n                hasExports = true;\r\n                if (!hasDefaultExport && reexports.some(reexport => reexport.reexported === 'default')) {\r\n                    hasDefaultExport = true;\r\n                }\r\n                if (format === 'es') {\r\n                    renderedDependency.reexports = reexports.filter(({ reexported }) => !renderedExports.find(({ exported }) => exported === reexported));\r\n                }\r\n            }\r\n        }\r\n        if (!hasDefaultExport) {\r\n            for (const { exported } of renderedExports) {\r\n                if (exported === 'default') {\r\n                    hasDefaultExport = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const { intro, outro, banner, footer } = await createAddons(outputOptions, pluginDriver, this.getRenderedChunkInfo());\r\n        finalisers[format](renderedSource, {\r\n            accessedGlobals,\r\n            dependencies: renderedDependencies,\r\n            exports: renderedExports,\r\n            hasDefaultExport,\r\n            hasExports,\r\n            id: preliminaryFileName.fileName,\r\n            indent,\r\n            intro,\r\n            isEntryFacade: preserveModules || (facadeModule !== null && facadeModule.info.isEntry),\r\n            isModuleFacade: facadeModule !== null,\r\n            log: onLog,\r\n            namedExportsMode: exportMode !== 'default',\r\n            outro,\r\n            snippets,\r\n            usesTopLevelAwait\r\n        }, outputOptions);\r\n        if (banner)\r\n            magicString.prepend(banner);\r\n        if (format === 'es' || format === 'cjs') {\r\n            const shebang = facadeModule !== null && facadeModule.info.isEntry && facadeModule.shebang;\r\n            if (shebang) {\r\n                magicString.prepend(`#!${shebang}\\n`);\r\n            }\r\n        }\r\n        if (footer)\r\n            magicString.append(footer);\r\n        return {\r\n            chunk: this,\r\n            magicString,\r\n            preliminaryFileName,\r\n            preliminarySourcemapFileName,\r\n            usedModules\r\n        };\r\n    }\r\n    addImplicitlyLoadedBeforeFromModule(baseModule) {\r\n        const { chunkByModule, implicitlyLoadedBefore } = this;\r\n        for (const module of baseModule.implicitlyLoadedBefore) {\r\n            const chunk = chunkByModule.get(module);\r\n            if (chunk && chunk !== this) {\r\n                implicitlyLoadedBefore.add(chunk);\r\n            }\r\n        }\r\n    }\r\n    addNecessaryImportsForFacades() {\r\n        for (const [module, variables] of this.includedReexportsByModule) {\r\n            if (this.includedNamespaces.has(module)) {\r\n                for (const variable of variables) {\r\n                    this.imports.add(variable);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    assignFacadeName({ fileName, name }, facadedModule, preservePath) {\r\n        if (fileName) {\r\n            this.fileName = fileName;\r\n        }\r\n        else {\r\n            this.name = this.outputOptions.sanitizeFileName(name ||\r\n                (preservePath\r\n                    ? this.getPreserveModulesChunkNameFromModule(facadedModule)\r\n                    : getChunkNameFromModule(facadedModule)));\r\n        }\r\n    }\r\n    checkCircularDependencyImport(variable, importingModule) {\r\n        const variableModule = variable.module;\r\n        if (variableModule instanceof Module) {\r\n            const exportChunk = this.chunkByModule.get(variableModule);\r\n            let alternativeReexportModule;\r\n            do {\r\n                alternativeReexportModule = importingModule.alternativeReexportModules.get(variable);\r\n                if (alternativeReexportModule) {\r\n                    const exportingChunk = this.chunkByModule.get(alternativeReexportModule);\r\n                    if (exportingChunk !== exportChunk) {\r\n                        this.inputOptions.onLog(LOGLEVEL_WARN, logCyclicCrossChunkReexport(\r\n                        // Namespaces do not have an export name\r\n                        variableModule.getExportNamesByVariable().get(variable)?.[0] || '*', variableModule.id, alternativeReexportModule.id, importingModule.id, this.outputOptions.preserveModules));\r\n                    }\r\n                    importingModule = alternativeReexportModule;\r\n                }\r\n            } while (alternativeReexportModule);\r\n        }\r\n    }\r\n    ensureReexportsAreAvailableForModule(module) {\r\n        const includedReexports = [];\r\n        const map = module.getExportNamesByVariable();\r\n        for (const exportedVariable of map.keys()) {\r\n            const isSynthetic = exportedVariable instanceof SyntheticNamedExportVariable;\r\n            const importedVariable = isSynthetic ? exportedVariable.getBaseVariable() : exportedVariable;\r\n            this.checkCircularDependencyImport(importedVariable, module);\r\n            // When preserving modules, we do not create namespace objects but directly\r\n            // use the actual namespaces, which would be broken by this logic.\r\n            if (!(importedVariable instanceof NamespaceVariable && this.outputOptions.preserveModules)) {\r\n                const exportingModule = importedVariable.module;\r\n                if (exportingModule instanceof Module) {\r\n                    const chunk = this.chunkByModule.get(exportingModule);\r\n                    if (chunk && chunk !== this) {\r\n                        chunk.exports.add(importedVariable);\r\n                        includedReexports.push(importedVariable);\r\n                        if (isSynthetic) {\r\n                            this.imports.add(importedVariable);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (includedReexports.length > 0) {\r\n            this.includedReexportsByModule.set(module, includedReexports);\r\n        }\r\n    }\r\n    generateVariableName() {\r\n        if (this.manualChunkAlias) {\r\n            return this.manualChunkAlias;\r\n        }\r\n        const moduleForNaming = this.entryModules[0] ||\r\n            this.implicitEntryModules[0] ||\r\n            this.dynamicEntryModules[0] ||\r\n            this.orderedModules[this.orderedModules.length - 1];\r\n        if (moduleForNaming) {\r\n            return getChunkNameFromModule(moduleForNaming);\r\n        }\r\n        return 'chunk';\r\n    }\r\n    getChunkExportDeclarations(format) {\r\n        const exports = [];\r\n        for (const exportName of this.getExportNames()) {\r\n            if (exportName[0] === '*')\r\n                continue;\r\n            const variable = this.exportsByName.get(exportName);\r\n            if (!(variable instanceof SyntheticNamedExportVariable)) {\r\n                const module = variable.module;\r\n                if (module) {\r\n                    const chunk = this.chunkByModule.get(module);\r\n                    if (chunk !== this) {\r\n                        if (!chunk || format !== 'es') {\r\n                            continue;\r\n                        }\r\n                        const chunkDep = this.renderedDependencies.get(chunk);\r\n                        if (!chunkDep) {\r\n                            continue;\r\n                        }\r\n                        const { imports, reexports } = chunkDep;\r\n                        const importedByReexported = reexports?.find(({ reexported }) => reexported === exportName);\r\n                        const isImported = imports?.find(({ imported }) => imported === importedByReexported?.imported);\r\n                        if (!isImported) {\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            let expression = null;\r\n            let hoisted = false;\r\n            let local = variable.getName(this.snippets.getPropertyAccess);\r\n            if (variable instanceof LocalVariable) {\r\n                for (const declaration of variable.declarations) {\r\n                    if (declaration.parent instanceof FunctionDeclaration ||\r\n                        (declaration instanceof ExportDefaultDeclaration &&\r\n                            declaration.declaration instanceof FunctionDeclaration)) {\r\n                        hoisted = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else if (variable instanceof SyntheticNamedExportVariable) {\r\n                expression = local;\r\n                if (format === 'es') {\r\n                    local = variable.renderName;\r\n                }\r\n            }\r\n            exports.push({\r\n                exported: exportName,\r\n                expression,\r\n                hoisted,\r\n                local\r\n            });\r\n        }\r\n        return exports;\r\n    }\r\n    getDependenciesToBeDeconflicted(addNonNamespacesAndInteropHelpers, addDependenciesWithoutBindings, interop) {\r\n        const dependencies = new Set();\r\n        const deconflictedDefault = new Set();\r\n        const deconflictedNamespace = new Set();\r\n        for (const variable of [...this.exportNamesByVariable.keys(), ...this.imports]) {\r\n            if (addNonNamespacesAndInteropHelpers || variable.isNamespace) {\r\n                const module = variable.module;\r\n                if (module instanceof ExternalModule) {\r\n                    const chunk = this.externalChunkByModule.get(module);\r\n                    dependencies.add(chunk);\r\n                    if (addNonNamespacesAndInteropHelpers) {\r\n                        if (variable.name === 'default') {\r\n                            if (defaultInteropHelpersByInteropType[interop(module.id)]) {\r\n                                deconflictedDefault.add(chunk);\r\n                            }\r\n                        }\r\n                        else if (variable.isNamespace &&\r\n                            namespaceInteropHelpersByInteropType[interop(module.id)] &&\r\n                            (this.imports.has(variable) ||\r\n                                !this.exportNamesByVariable.get(variable)?.every(name => name[0] === '*'))) {\r\n                            // We only need to deconflict it if the namespace is actually\r\n                            // created as a variable, i.e. because it is used internally or\r\n                            // because it is reexported as an object\r\n                            deconflictedNamespace.add(chunk);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    const chunk = this.chunkByModule.get(module);\r\n                    if (chunk !== this) {\r\n                        dependencies.add(chunk);\r\n                        if (addNonNamespacesAndInteropHelpers &&\r\n                            chunk.exportMode === 'default' &&\r\n                            variable.isNamespace) {\r\n                            deconflictedNamespace.add(chunk);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (addDependenciesWithoutBindings) {\r\n            for (const dependency of this.dependencies) {\r\n                dependencies.add(dependency);\r\n            }\r\n        }\r\n        return { deconflictedDefault, deconflictedNamespace, dependencies };\r\n    }\r\n    getDynamicDependencies() {\r\n        return this.getIncludedDynamicImports()\r\n            .map(resolvedDynamicImport => resolvedDynamicImport.facadeChunk ||\r\n            resolvedDynamicImport.chunk ||\r\n            resolvedDynamicImport.externalChunk ||\r\n            resolvedDynamicImport.resolution)\r\n            .filter((resolution) => resolution !== this &&\r\n            (resolution instanceof Chunk || resolution instanceof ExternalChunk));\r\n    }\r\n    getDynamicImportStringAndAttributes(resolution, fileName, node) {\r\n        const { externalImportAttributes } = this.outputOptions;\r\n        const keepExternalImportAttributes = ['es', 'cjs'].includes(this.outputOptions.format) && externalImportAttributes;\r\n        if (resolution instanceof ExternalModule) {\r\n            const chunk = this.externalChunkByModule.get(resolution);\r\n            const dynamicAttributes = chunk.getImportAttributes(this.snippets);\r\n            return [\r\n                `'${chunk.getImportPath(fileName)}'`,\r\n                dynamicAttributes || (keepExternalImportAttributes ? true : null)\r\n            ];\r\n        }\r\n        let attributes = null;\r\n        if (keepExternalImportAttributes) {\r\n            const attributesFromImportAttributes = getAttributesFromImportExpression(node);\r\n            attributes =\r\n                attributesFromImportAttributes === EMPTY_OBJECT\r\n                    ? true\r\n                    : formatAttributes(attributesFromImportAttributes, this.snippets);\r\n        }\r\n        return [resolution || '', attributes];\r\n    }\r\n    getFallbackChunkName() {\r\n        if (this.manualChunkAlias) {\r\n            return this.manualChunkAlias;\r\n        }\r\n        if (this.dynamicName) {\r\n            return this.dynamicName;\r\n        }\r\n        if (this.fileName) {\r\n            return getAliasName(this.fileName);\r\n        }\r\n        return getAliasName(this.orderedModules[this.orderedModules.length - 1].id);\r\n    }\r\n    getImportSpecifiers() {\r\n        const { interop } = this.outputOptions;\r\n        const importsByDependency = new Map();\r\n        for (const variable of this.imports) {\r\n            const module = variable.module;\r\n            let dependency;\r\n            let imported;\r\n            if (module instanceof ExternalModule) {\r\n                dependency = this.externalChunkByModule.get(module);\r\n                imported = variable.name;\r\n                if (imported !== 'default' && imported !== '*' && interop(module.id) === 'defaultOnly') {\r\n                    return error(logUnexpectedNamedImport(module.id, imported, false));\r\n                }\r\n            }\r\n            else {\r\n                dependency = this.chunkByModule.get(module);\r\n                imported = dependency.getVariableExportName(variable);\r\n            }\r\n            getOrCreate(importsByDependency, dependency, getNewArray).push({\r\n                imported,\r\n                local: variable.getName(this.snippets.getPropertyAccess)\r\n            });\r\n        }\r\n        return importsByDependency;\r\n    }\r\n    getIncludedDynamicImports() {\r\n        if (this.includedDynamicImports) {\r\n            return this.includedDynamicImports;\r\n        }\r\n        const includedDynamicImports = [];\r\n        for (const module of this.orderedModules) {\r\n            for (const { node, resolution } of module.dynamicImports) {\r\n                if (!node.included) {\r\n                    continue;\r\n                }\r\n                includedDynamicImports.push(resolution instanceof Module\r\n                    ? {\r\n                        chunk: this.chunkByModule.get(resolution),\r\n                        externalChunk: null,\r\n                        facadeChunk: this.facadeChunkByModule.get(resolution),\r\n                        node,\r\n                        resolution\r\n                    }\r\n                    : resolution instanceof ExternalModule\r\n                        ? {\r\n                            chunk: null,\r\n                            externalChunk: this.externalChunkByModule.get(resolution),\r\n                            facadeChunk: null,\r\n                            node,\r\n                            resolution\r\n                        }\r\n                        : { chunk: null, externalChunk: null, facadeChunk: null, node, resolution });\r\n            }\r\n        }\r\n        return (this.includedDynamicImports = includedDynamicImports);\r\n    }\r\n    getPreRenderedChunkInfo() {\r\n        if (this.preRenderedChunkInfo) {\r\n            return this.preRenderedChunkInfo;\r\n        }\r\n        const { dynamicEntryModules, facadeModule, implicitEntryModules, orderedModules } = this;\r\n        return (this.preRenderedChunkInfo = {\r\n            exports: this.getExportNames(),\r\n            facadeModuleId: facadeModule && facadeModule.id,\r\n            isDynamicEntry: dynamicEntryModules.length > 0,\r\n            isEntry: !!facadeModule?.info.isEntry,\r\n            isImplicitEntry: implicitEntryModules.length > 0,\r\n            moduleIds: orderedModules.map(({ id }) => id),\r\n            name: this.getChunkName(),\r\n            type: 'chunk'\r\n        });\r\n    }\r\n    getPreserveModulesChunkNameFromModule(module) {\r\n        const predefinedChunkName = getPredefinedChunkNameFromModule(module);\r\n        if (predefinedChunkName)\r\n            return predefinedChunkName;\r\n        const { preserveModulesRoot, sanitizeFileName } = this.outputOptions;\r\n        const sanitizedId = sanitizeFileName(normalize(module.id.split(QUERY_HASH_REGEX, 1)[0]));\r\n        const extensionName = extname(sanitizedId);\r\n        const idWithoutExtension = NON_ASSET_EXTENSIONS.has(extensionName)\r\n            ? sanitizedId.slice(0, -extensionName.length)\r\n            : sanitizedId;\r\n        if (isAbsolute$1(idWithoutExtension)) {\r\n            if (preserveModulesRoot && resolve$1(idWithoutExtension).startsWith(preserveModulesRoot)) {\r\n                return idWithoutExtension.slice(preserveModulesRoot.length).replace(/^[/\\\\]/, '');\r\n            }\r\n            else {\r\n                // handle edge case in Windows\r\n                if (this.inputBase === '/' && idWithoutExtension[0] !== '/') {\r\n                    return relative$1(this.inputBase, idWithoutExtension.replace(/^[a-zA-Z]:[/\\\\]/, '/'));\r\n                }\r\n                return relative$1(this.inputBase, idWithoutExtension);\r\n            }\r\n        }\r\n        else {\r\n            return (this.outputOptions.virtualDirname.replace(/\\/$/, '') + '/' + basename(idWithoutExtension));\r\n        }\r\n    }\r\n    getReexportSpecifiers() {\r\n        const { externalLiveBindings, interop } = this.outputOptions;\r\n        const reexportSpecifiers = new Map();\r\n        for (let exportName of this.getExportNames()) {\r\n            let dependency;\r\n            let imported;\r\n            let needsLiveBinding = false;\r\n            if (exportName[0] === '*') {\r\n                const id = exportName.slice(1);\r\n                if (interop(id) === 'defaultOnly') {\r\n                    this.inputOptions.onLog(LOGLEVEL_WARN, logUnexpectedNamespaceReexport(id));\r\n                }\r\n                needsLiveBinding = externalLiveBindings;\r\n                dependency = this.externalChunkByModule.get(this.modulesById.get(id));\r\n                imported = exportName = '*';\r\n            }\r\n            else {\r\n                const variable = this.exportsByName.get(exportName);\r\n                if (variable instanceof SyntheticNamedExportVariable)\r\n                    continue;\r\n                const module = variable.module;\r\n                if (module instanceof Module) {\r\n                    dependency = this.chunkByModule.get(module);\r\n                    if (dependency === this)\r\n                        continue;\r\n                    imported = dependency.getVariableExportName(variable);\r\n                    needsLiveBinding = variable.isReassigned;\r\n                }\r\n                else {\r\n                    dependency = this.externalChunkByModule.get(module);\r\n                    imported = variable.name;\r\n                    if (imported !== 'default' && imported !== '*' && interop(module.id) === 'defaultOnly') {\r\n                        return error(logUnexpectedNamedImport(module.id, imported, true));\r\n                    }\r\n                    needsLiveBinding =\r\n                        externalLiveBindings &&\r\n                            (imported !== 'default' || isDefaultAProperty(interop(module.id), true));\r\n                }\r\n            }\r\n            getOrCreate(reexportSpecifiers, dependency, getNewArray).push({\r\n                imported,\r\n                needsLiveBinding,\r\n                reexported: exportName\r\n            });\r\n        }\r\n        return reexportSpecifiers;\r\n    }\r\n    getReferencedFiles() {\r\n        const referencedFiles = new Set();\r\n        for (const module of this.orderedModules) {\r\n            for (const meta of module.importMetas) {\r\n                const fileName = meta.getReferencedFileName(this.pluginDriver);\r\n                if (fileName) {\r\n                    referencedFiles.add(fileName);\r\n                }\r\n            }\r\n        }\r\n        return [...referencedFiles];\r\n    }\r\n    getRenderedDependencies() {\r\n        if (this.renderedDependencies) {\r\n            return this.renderedDependencies;\r\n        }\r\n        const importSpecifiers = this.getImportSpecifiers();\r\n        const reexportSpecifiers = this.getReexportSpecifiers();\r\n        const renderedDependencies = new Map();\r\n        const fileName = this.getFileName();\r\n        for (const dependency of this.dependencies) {\r\n            const imports = importSpecifiers.get(dependency) || null;\r\n            const reexports = reexportSpecifiers.get(dependency) || null;\r\n            const namedExportsMode = dependency instanceof ExternalChunk || dependency.exportMode !== 'default';\r\n            const importPath = dependency.getImportPath(fileName);\r\n            renderedDependencies.set(dependency, {\r\n                attributes: dependency instanceof ExternalChunk\r\n                    ? dependency.getImportAttributes(this.snippets)\r\n                    : null,\r\n                defaultVariableName: dependency.defaultVariableName,\r\n                globalName: dependency instanceof ExternalChunk &&\r\n                    (this.outputOptions.format === 'umd' || this.outputOptions.format === 'iife') &&\r\n                    getGlobalName(dependency, this.outputOptions.globals, (imports || reexports) !== null, this.inputOptions.onLog),\r\n                importPath,\r\n                imports,\r\n                isChunk: dependency instanceof Chunk,\r\n                name: dependency.variableName,\r\n                namedExportsMode,\r\n                namespaceVariableName: dependency.namespaceVariableName,\r\n                reexports\r\n            });\r\n        }\r\n        return (this.renderedDependencies = renderedDependencies);\r\n    }\r\n    inlineChunkDependencies(chunk) {\r\n        for (const dep of chunk.dependencies) {\r\n            if (this.dependencies.has(dep))\r\n                continue;\r\n            this.dependencies.add(dep);\r\n            if (dep instanceof Chunk) {\r\n                this.inlineChunkDependencies(dep);\r\n            }\r\n        }\r\n    }\r\n    // This method changes properties on the AST before rendering and must not be async\r\n    renderModules(fileName) {\r\n        const { accessedGlobalsByScope, dependencies, exportNamesByVariable, includedNamespaces, inputOptions: { onLog }, isEmpty, orderedModules, outputOptions, pluginDriver, renderedModules, snippets } = this;\r\n        const { compact, format, freeze, generatedCode: { symbols }, importAttributesKey } = outputOptions;\r\n        const { _, cnst, n } = snippets;\r\n        this.setDynamicImportResolutions(fileName);\r\n        this.setImportMetaResolutions(fileName);\r\n        this.setIdentifierRenderResolutions();\r\n        const magicString = new Bundle$1({ separator: `${n}${n}` });\r\n        const indent = getIndentString(orderedModules, outputOptions);\r\n        const usedModules = [];\r\n        let hoistedSource = '';\r\n        const accessedGlobals = new Set();\r\n        const renderedModuleSources = new Map();\r\n        const renderOptions = {\r\n            accessedDocumentCurrentScript: false,\r\n            exportNamesByVariable,\r\n            format,\r\n            freeze,\r\n            importAttributesKey,\r\n            indent,\r\n            pluginDriver,\r\n            snippets,\r\n            symbols,\r\n            useOriginalName: null\r\n        };\r\n        let usesTopLevelAwait = false;\r\n        for (const module of orderedModules) {\r\n            let renderedLength = 0;\r\n            let source;\r\n            if (module.isIncluded() || includedNamespaces.has(module)) {\r\n                const rendered = module.render(renderOptions);\r\n                if (!renderOptions.accessedDocumentCurrentScript &&\r\n                    formatsMaybeAccessDocumentCurrentScript.includes(format)) {\r\n                    this.accessedGlobalsByScope.get(module.scope)?.delete(DOCUMENT_CURRENT_SCRIPT);\r\n                }\r\n                renderOptions.accessedDocumentCurrentScript = false;\r\n                ({ source } = rendered);\r\n                usesTopLevelAwait ||= rendered.usesTopLevelAwait;\r\n                renderedLength = source.length();\r\n                if (renderedLength) {\r\n                    if (compact && source.lastLine().includes('//'))\r\n                        source.append('\\n');\r\n                    renderedModuleSources.set(module, source);\r\n                    magicString.addSource(source);\r\n                    usedModules.push(module);\r\n                }\r\n                const namespace = module.namespace;\r\n                if (includedNamespaces.has(module)) {\r\n                    const rendered = namespace.renderBlock(renderOptions);\r\n                    if (namespace.renderFirst())\r\n                        hoistedSource += n + rendered;\r\n                    else\r\n                        magicString.addSource(new MagicString(rendered));\r\n                }\r\n                const accessedGlobalVariables = accessedGlobalsByScope.get(module.scope);\r\n                if (accessedGlobalVariables) {\r\n                    for (const name of accessedGlobalVariables) {\r\n                        accessedGlobals.add(name);\r\n                    }\r\n                }\r\n            }\r\n            const { renderedExports, removedExports } = module.getRenderedExports();\r\n            renderedModules[module.id] = {\r\n                get code() {\r\n                    return source?.toString() ?? null;\r\n                },\r\n                originalLength: module.originalCode.length,\r\n                removedExports,\r\n                renderedExports,\r\n                renderedLength\r\n            };\r\n        }\r\n        if (hoistedSource)\r\n            magicString.prepend(hoistedSource + n + n);\r\n        if (this.needsExportsShim) {\r\n            magicString.prepend(`${n}${cnst} ${MISSING_EXPORT_SHIM_VARIABLE}${_}=${_}void 0;${n}${n}`);\r\n        }\r\n        const renderedSource = compact ? magicString : magicString.trim();\r\n        if (isEmpty && this.getExportNames().length === 0 && dependencies.size === 0) {\r\n            onLog(LOGLEVEL_WARN, logEmptyChunk(this.getChunkName()));\r\n        }\r\n        return { accessedGlobals, indent, magicString, renderedSource, usedModules, usesTopLevelAwait };\r\n    }\r\n    setDynamicImportResolutions(fileName) {\r\n        const { accessedGlobalsByScope, outputOptions, pluginDriver, snippets } = this;\r\n        for (const resolvedDynamicImport of this.getIncludedDynamicImports()) {\r\n            if (resolvedDynamicImport.chunk) {\r\n                const { chunk, facadeChunk, node, resolution } = resolvedDynamicImport;\r\n                if (chunk === this) {\r\n                    node.setInternalResolution(resolution.namespace);\r\n                }\r\n                else {\r\n                    node.setExternalResolution((facadeChunk || chunk).exportMode, resolution, outputOptions, snippets, pluginDriver, accessedGlobalsByScope, `'${(facadeChunk || chunk).getImportPath(fileName)}'`, !facadeChunk?.strictFacade && chunk.exportNamesByVariable.get(resolution.namespace)[0], null, this, facadeChunk || chunk);\r\n                }\r\n            }\r\n            else {\r\n                const { node, resolution } = resolvedDynamicImport;\r\n                const [resolutionString, attributes] = this.getDynamicImportStringAndAttributes(resolution, fileName, node);\r\n                node.setExternalResolution('external', resolution, outputOptions, snippets, pluginDriver, accessedGlobalsByScope, resolutionString, false, attributes, this, null);\r\n            }\r\n        }\r\n    }\r\n    setIdentifierRenderResolutions() {\r\n        const { format, generatedCode: { symbols }, interop, preserveModules, externalLiveBindings } = this.outputOptions;\r\n        const syntheticExports = new Set();\r\n        for (const exportName of this.getExportNames()) {\r\n            const exportVariable = this.exportsByName.get(exportName);\r\n            if (format !== 'es' &&\r\n                format !== 'system' &&\r\n                exportVariable.isReassigned &&\r\n                !exportVariable.isId) {\r\n                exportVariable.setRenderNames('exports', exportName);\r\n            }\r\n            else if (exportVariable instanceof SyntheticNamedExportVariable) {\r\n                syntheticExports.add(exportVariable);\r\n            }\r\n            else {\r\n                exportVariable.setRenderNames(null, null);\r\n            }\r\n        }\r\n        for (const module of this.orderedModules) {\r\n            if (module.needsExportShim) {\r\n                this.needsExportsShim = true;\r\n                break;\r\n            }\r\n        }\r\n        const usedNames = new Set(['Object', 'Promise']);\r\n        if (this.needsExportsShim) {\r\n            usedNames.add(MISSING_EXPORT_SHIM_VARIABLE);\r\n        }\r\n        if (symbols) {\r\n            usedNames.add('Symbol');\r\n        }\r\n        switch (format) {\r\n            case 'system': {\r\n                usedNames.add('module').add('exports');\r\n                break;\r\n            }\r\n            case 'es': {\r\n                break;\r\n            }\r\n            case 'cjs': {\r\n                usedNames.add('module').add('require').add('__filename').add('__dirname');\r\n            }\r\n            // fallthrough\r\n            default: {\r\n                usedNames.add('exports');\r\n                for (const helper of HELPER_NAMES) {\r\n                    usedNames.add(helper);\r\n                }\r\n            }\r\n        }\r\n        deconflictChunk(this.orderedModules, this.getDependenciesToBeDeconflicted(format !== 'es' && format !== 'system', format === 'amd' || format === 'umd' || format === 'iife', interop), this.imports, usedNames, format, interop, preserveModules, externalLiveBindings, this.chunkByModule, this.externalChunkByModule, syntheticExports, this.exportNamesByVariable, this.accessedGlobalsByScope, this.includedNamespaces);\r\n    }\r\n    setImportMetaResolutions(fileName) {\r\n        const { accessedGlobalsByScope, includedNamespaces, orderedModules, outputOptions: { format } } = this;\r\n        for (const module of orderedModules) {\r\n            for (const importMeta of module.importMetas) {\r\n                importMeta.setResolution(format, accessedGlobalsByScope, fileName);\r\n            }\r\n            if (includedNamespaces.has(module)) {\r\n                module.namespace.prepare(accessedGlobalsByScope);\r\n            }\r\n        }\r\n    }\r\n    setUpChunkImportsAndExportsForModule(module) {\r\n        const moduleImports = new Set(module.includedImports);\r\n        // when we are not preserving modules, we need to make all namespace variables available for\r\n        // rendering the namespace object\r\n        if (!this.outputOptions.preserveModules && this.includedNamespaces.has(module)) {\r\n            const memberVariables = module.namespace.getMemberVariables();\r\n            for (const variable of Object.values(memberVariables)) {\r\n                if (variable.included) {\r\n                    moduleImports.add(variable);\r\n                }\r\n            }\r\n        }\r\n        for (let variable of moduleImports) {\r\n            if (variable instanceof ExportDefaultVariable) {\r\n                variable = variable.getOriginalVariable();\r\n            }\r\n            if (variable instanceof SyntheticNamedExportVariable) {\r\n                variable = variable.getBaseVariable();\r\n            }\r\n            const chunk = this.chunkByModule.get(variable.module);\r\n            if (chunk !== this) {\r\n                this.imports.add(variable);\r\n                if (variable.module instanceof Module) {\r\n                    this.checkCircularDependencyImport(variable, module);\r\n                    // When preserving modules, we do not create namespace objects but directly\r\n                    // use the actual namespaces, which would be broken by this logic.\r\n                    if (!(variable instanceof NamespaceVariable && this.outputOptions.preserveModules)) {\r\n                        chunk.exports.add(variable);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.includedNamespaces.has(module) ||\r\n            (module.info.isEntry && module.preserveSignature !== false) ||\r\n            module.includedDynamicImporters.some(importer => this.chunkByModule.get(importer) !== this)) {\r\n            this.ensureReexportsAreAvailableForModule(module);\r\n        }\r\n        for (const { node, resolution } of module.dynamicImports) {\r\n            if (node.included &&\r\n                resolution instanceof Module &&\r\n                this.chunkByModule.get(resolution) === this &&\r\n                !this.includedNamespaces.has(resolution)) {\r\n                this.includedNamespaces.add(resolution);\r\n                this.ensureReexportsAreAvailableForModule(resolution);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction getChunkNameFromModule(module) {\r\n    return getPredefinedChunkNameFromModule(module) ?? getAliasName(module.id);\r\n}\r\nfunction getPredefinedChunkNameFromModule(module) {\r\n    return (module.chunkNames.find(({ isUserDefined }) => isUserDefined)?.name ?? module.chunkNames[0]?.name);\r\n}\r\nfunction getImportedBindingsPerDependency(renderedDependencies, resolveFileName) {\r\n    const importedBindingsPerDependency = {};\r\n    for (const [dependency, declaration] of renderedDependencies) {\r\n        const specifiers = new Set();\r\n        if (declaration.imports) {\r\n            for (const { imported } of declaration.imports) {\r\n                specifiers.add(imported);\r\n            }\r\n        }\r\n        if (declaration.reexports) {\r\n            for (const { imported } of declaration.reexports) {\r\n                specifiers.add(imported);\r\n            }\r\n        }\r\n        importedBindingsPerDependency[resolveFileName(dependency)] = [...specifiers];\r\n    }\r\n    return importedBindingsPerDependency;\r\n}\r\nconst QUERY_HASH_REGEX = /[#?]/;\r\nconst resolveFileName = (dependency) => dependency.getFileName();\r\n\r\n/**\r\n * Concatenate a number of iterables to a new iterable without fully evaluating\r\n * their iterators. Useful when e.g. working with large sets or lists and when\r\n * there is a chance that the iterators will not be fully exhausted.\r\n */\r\nfunction* concatLazy(iterables) {\r\n    for (const iterable of iterables) {\r\n        yield* iterable;\r\n    }\r\n}\r\n\r\n/**\r\n * At its core, the algorithm first starts from each static or dynamic entry\r\n * point and then assigns that entry point to all modules than can be reached\r\n * via static imports. We call this the *dependent entry points* of that\r\n * module.\r\n *\r\n * Then we group all modules with the same dependent entry points into chunks\r\n * as those modules will always be loaded together.\r\n *\r\n * One non-trivial optimization we can apply is that dynamic entries are\r\n * different from static entries in so far as when a dynamic import occurs,\r\n * some modules are already in memory. If some of these modules are also\r\n * dependencies of the dynamic entry, then it does not make sense to create a\r\n * separate chunk for them. Instead, the dynamic import target can load them\r\n * from the importing chunk.\r\n *\r\n * With regard to chunking, if B is implicitly loaded after A, then this can be\r\n * handled the same way as if there was a dynamic import A => B.\r\n *\r\n * Example:\r\n * Assume A -> B (A imports B), A => C (A dynamically imports C) and C -> B.\r\n * Then the initial algorithm would assign A into the A chunk, C into the C\r\n * chunk and B into the AC chunk, i.e. the chunk with the dependent entry\r\n * points A and C.\r\n * However we know that C can only be loaded from A, so A and its dependency B\r\n * must already be in memory when C is loaded. So it is enough to create only\r\n * two chunks A containing [AB] and C containing [C].\r\n *\r\n * So we do not assign the dynamic entry C as dependent entry point to modules\r\n * that are already loaded.\r\n *\r\n * In a more complex example, let us assume that we have entry points X and Y.\r\n * Further, let us assume\r\n * X -> A, X -> B, X -> C,\r\n * Y -> A, Y -> B,\r\n * A => D,\r\n * D -> B, D -> C\r\n * So without dynamic import optimization, the dependent entry points are\r\n * A: XY, B: DXY, C: DX, D: D, X: X, Y: Y, so we would for now create six\r\n * chunks.\r\n *\r\n * Now D is loaded only after A is loaded. But A is loaded if either X is\r\n * loaded or Y is loaded. So the modules that are already in memory when D is\r\n * loaded are the intersection of all modules that X depends on with all\r\n * modules that Y depends on, which in this case are the modules A and B.\r\n * We could also say they are all modules that have both X and Y as dependent\r\n * entry points.\r\n *\r\n * So we can remove D as dependent entry point from A and B, which means they\r\n * both now have only XY as dependent entry points and can be merged into the\r\n * same chunk.\r\n *\r\n * Now let us extend this to the most general case where we have several\r\n * dynamic importers for one dynamic entry point.\r\n *\r\n * In the most general form, it works like this:\r\n * For each dynamic entry point, we have a number of dynamic importers, which\r\n * are the modules importing it. Using the previous ideas, we can determine\r\n * the modules already in memory for each dynamic importer by looking for all\r\n * modules that have all the dependent entry points of the dynamic importer as\r\n * dependent entry points.\r\n * So the modules that are guaranteed to be in memory when the dynamic entry\r\n * point is loaded are the intersection of the modules already in memory for\r\n * each dynamic importer.\r\n *\r\n * Assuming that A => D and B => D and A has dependent entry points XY and B\r\n * has dependent entry points YZ, then the modules guaranteed to be in memory\r\n * are all modules that have at least XYZ as dependent entry points.\r\n * We call XYZ the *dynamically dependent entry points* of D.\r\n *\r\n * Now there is one last case to consider: If one of the dynamically dependent\r\n * entries is itself a dynamic entry, then any module is in memory that either\r\n * is a dependency of that dynamic entry or again has the dynamic dependent\r\n * entries of that dynamic entry as dependent entry points.\r\n *\r\n * A naive algorithm for this proved to be costly as it contained an O(n^3)\r\n * complexity with regard to dynamic entries that blew up for very large\r\n * projects.\r\n *\r\n * If we have an efficient way to do Set operations, an alternative approach\r\n * would be to instead collect already loaded modules per dynamic entry. And as\r\n * all chunks from the initial grouping would behave the same, we can instead\r\n * collect already loaded chunks for a performance improvement.\r\n *\r\n * To do that efficiently, need\r\n * - a Map of dynamic imports per dynamic entry, which contains all dynamic\r\n *   imports that can be triggered by a dynamic entry\r\n * - a Map of static dependencies per entry\r\n * - a Map of already loaded chunks per entry that we initially populate with\r\n *   empty Sets for static entries and Sets containing all entries for dynamic\r\n *   entries\r\n *\r\n * For efficient operations, we assign each entry a numerical index and\r\n * represent Sets of Chunks as BigInt values where each chunk corresponds to a\r\n * bit index. Then the last two maps can be represented as arrays of BigInt\r\n * values.\r\n *\r\n * Then we iterate through each dynamic entry. We set the already loaded modules\r\n * to the intersection of the previously already loaded modules with the union\r\n * of the already loaded modules of that chunk with its static dependencies.\r\n *\r\n * If the already loaded modules changed, then we use the Map of dynamic imports\r\n * per dynamic entry to marks all dynamic entry dependencies as \"dirty\" and put\r\n * them back into the iteration. As an additional optimization, we note for\r\n * each dynamic entry which dynamic dependent entries have changed and only\r\n * intersect those entries again on subsequent interations.\r\n *\r\n * Then we remove the dynamic entries from the list of dependent entries for\r\n * those chunks that are already loaded for that dynamic entry and create\r\n * another round of chunks.\r\n */\r\nfunction getChunkAssignments(entries, manualChunkAliasByEntry, minChunkSize, log, isManualChunksFunctionForm, onlyExplicitManualChunks) {\r\n    const { chunkDefinitions, modulesInManualChunks } = getChunkDefinitionsFromManualChunks(manualChunkAliasByEntry, isManualChunksFunctionForm, onlyExplicitManualChunks);\r\n    const { allEntries, dependentEntriesByModule, dynamicallyDependentEntriesByDynamicEntry, dynamicImportsByEntry, dynamicallyDependentEntriesByAwaitedDynamicEntry, awaitedDynamicImportsByEntry } = analyzeModuleGraph(entries);\r\n    // Each chunk is identified by its position in this array\r\n    const chunkAtoms = getChunksWithSameDependentEntries(getModulesWithDependentEntries(dependentEntriesByModule, modulesInManualChunks));\r\n    const staticDependencyAtomsByEntry = getStaticDependencyAtomsByEntry(allEntries, chunkAtoms);\r\n    // Warning: This will consume dynamicallyDependentEntriesByDynamicEntry.\r\n    // If we no longer want this, we should make a copy here.\r\n    const alreadyLoadedAtomsByEntry = getAlreadyLoadedAtomsByEntry(staticDependencyAtomsByEntry, dynamicallyDependentEntriesByDynamicEntry, dynamicImportsByEntry, allEntries);\r\n    const awaitedAlreadyLoadedAtomsByEntry = getAlreadyLoadedAtomsByEntry(staticDependencyAtomsByEntry, dynamicallyDependentEntriesByAwaitedDynamicEntry, awaitedDynamicImportsByEntry, allEntries);\r\n    // This mutates the dependentEntries in chunkAtoms\r\n    removeUnnecessaryDependentEntries(chunkAtoms, alreadyLoadedAtomsByEntry, awaitedAlreadyLoadedAtomsByEntry);\r\n    const { chunks, sideEffectAtoms, sizeByAtom } = getChunksWithSameDependentEntriesAndCorrelatedAtoms(chunkAtoms, staticDependencyAtomsByEntry, alreadyLoadedAtomsByEntry, minChunkSize);\r\n    chunkDefinitions.push(...getOptimizedChunks(chunks, minChunkSize, sideEffectAtoms, sizeByAtom, log).map(({ modules }) => ({\r\n        alias: null,\r\n        modules\r\n    })));\r\n    return chunkDefinitions;\r\n}\r\nfunction getChunkDefinitionsFromManualChunks(manualChunkAliasByEntry, isManualChunksFunctionForm, onlyExplicitManualChunks) {\r\n    const modulesInManualChunks = new Set(manualChunkAliasByEntry.keys());\r\n    const manualChunkModulesByAlias = Object.create(null);\r\n    for (const [entry, alias] of manualChunkAliasByEntry) {\r\n        if (isManualChunksFunctionForm && onlyExplicitManualChunks) {\r\n            (manualChunkModulesByAlias[alias] ||= []).push(entry);\r\n        }\r\n        else {\r\n            addStaticDependenciesToManualChunk(entry, (manualChunkModulesByAlias[alias] ||= []), modulesInManualChunks);\r\n        }\r\n    }\r\n    const manualChunks = Object.entries(manualChunkModulesByAlias);\r\n    const chunkDefinitions = new Array(manualChunks.length);\r\n    let index = 0;\r\n    for (const [alias, modules] of manualChunks) {\r\n        chunkDefinitions[index++] = { alias, modules };\r\n    }\r\n    return { chunkDefinitions, modulesInManualChunks };\r\n}\r\nfunction addStaticDependenciesToManualChunk(entry, manualChunkModules, modulesInManualChunks) {\r\n    const modulesToHandle = new Set([entry]);\r\n    for (const module of modulesToHandle) {\r\n        modulesInManualChunks.add(module);\r\n        manualChunkModules.push(module);\r\n        for (const dependency of module.dependencies) {\r\n            if (!(dependency instanceof ExternalModule || modulesInManualChunks.has(dependency))) {\r\n                modulesToHandle.add(dependency);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction analyzeModuleGraph(entries) {\r\n    const dynamicEntryModules = new Set();\r\n    const awaitedDynamicEntryModules = new Set();\r\n    const dependentEntriesByModule = new Map();\r\n    const allEntriesSet = new Set(entries);\r\n    const dynamicImportModulesByEntry = new Array(allEntriesSet.size);\r\n    const awaitedDynamicImportModulesByEntry = new Array(allEntriesSet.size);\r\n    let entryIndex = 0;\r\n    for (const currentEntry of allEntriesSet) {\r\n        const dynamicImportsForCurrentEntry = new Set();\r\n        const awaitedDynamicImportsForCurrentEntry = new Set();\r\n        dynamicImportModulesByEntry[entryIndex] = dynamicImportsForCurrentEntry;\r\n        awaitedDynamicImportModulesByEntry[entryIndex] = awaitedDynamicImportsForCurrentEntry;\r\n        const staticDependencies = new Set([currentEntry]);\r\n        for (const module of staticDependencies) {\r\n            getOrCreate(dependentEntriesByModule, module, (getNewSet)).add(entryIndex);\r\n            for (const dependency of module.getDependenciesToBeIncluded()) {\r\n                if (!(dependency instanceof ExternalModule)) {\r\n                    staticDependencies.add(dependency);\r\n                }\r\n            }\r\n            for (const { resolution } of module.dynamicImports) {\r\n                if (resolution instanceof Module &&\r\n                    resolution.includedDynamicImporters.length > 0 &&\r\n                    !allEntriesSet.has(resolution)) {\r\n                    dynamicEntryModules.add(resolution);\r\n                    allEntriesSet.add(resolution);\r\n                    dynamicImportsForCurrentEntry.add(resolution);\r\n                    for (const includedTopLevelAwaitingDynamicImporter of resolution.includedTopLevelAwaitingDynamicImporters) {\r\n                        if (staticDependencies.has(includedTopLevelAwaitingDynamicImporter)) {\r\n                            awaitedDynamicEntryModules.add(resolution);\r\n                            awaitedDynamicImportsForCurrentEntry.add(resolution);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (const dependency of module.implicitlyLoadedBefore) {\r\n                if (!allEntriesSet.has(dependency)) {\r\n                    dynamicEntryModules.add(dependency);\r\n                    allEntriesSet.add(dependency);\r\n                }\r\n            }\r\n        }\r\n        entryIndex++;\r\n    }\r\n    const allEntries = [...allEntriesSet];\r\n    const { awaitedDynamicEntries, awaitedDynamicImportsByEntry, dynamicEntries, dynamicImportsByEntry } = getDynamicEntries(allEntries, dynamicEntryModules, dynamicImportModulesByEntry, awaitedDynamicEntryModules, awaitedDynamicImportModulesByEntry);\r\n    return {\r\n        allEntries,\r\n        awaitedDynamicImportsByEntry,\r\n        dependentEntriesByModule,\r\n        dynamicallyDependentEntriesByAwaitedDynamicEntry: getDynamicallyDependentEntriesByDynamicEntry(dependentEntriesByModule, awaitedDynamicEntries, allEntries, dynamicEntry => dynamicEntry.includedTopLevelAwaitingDynamicImporters),\r\n        dynamicallyDependentEntriesByDynamicEntry: getDynamicallyDependentEntriesByDynamicEntry(dependentEntriesByModule, dynamicEntries, allEntries, dynamicEntry => dynamicEntry.includedDynamicImporters),\r\n        dynamicImportsByEntry\r\n    };\r\n}\r\nfunction getDynamicEntries(allEntries, dynamicEntryModules, dynamicImportModulesByEntry, awaitedDynamicEntryModules, awaitedDynamicImportModulesByEntry) {\r\n    const entryIndexByModule = new Map();\r\n    const dynamicEntries = new Set();\r\n    const awaitedDynamicEntries = new Set();\r\n    for (const [entryIndex, entry] of allEntries.entries()) {\r\n        entryIndexByModule.set(entry, entryIndex);\r\n        if (dynamicEntryModules.has(entry)) {\r\n            dynamicEntries.add(entryIndex);\r\n        }\r\n        if (awaitedDynamicEntryModules.has(entry)) {\r\n            awaitedDynamicEntries.add(entryIndex);\r\n        }\r\n    }\r\n    const dynamicImportsByEntry = getDynamicImportsByEntry(dynamicImportModulesByEntry, entryIndexByModule);\r\n    const awaitedDynamicImportsByEntry = getDynamicImportsByEntry(awaitedDynamicImportModulesByEntry, entryIndexByModule);\r\n    return {\r\n        awaitedDynamicEntries,\r\n        awaitedDynamicImportsByEntry,\r\n        dynamicEntries,\r\n        dynamicImportsByEntry\r\n    };\r\n}\r\nfunction getDynamicImportsByEntry(dynamicImportModulesByEntry, entryIndexByModule) {\r\n    const dynamicImportsByEntry = new Array(dynamicImportModulesByEntry.length);\r\n    let index = 0;\r\n    for (const dynamicImportModules of dynamicImportModulesByEntry) {\r\n        const dynamicImports = new Set();\r\n        for (const dynamicEntry of dynamicImportModules) {\r\n            dynamicImports.add(entryIndexByModule.get(dynamicEntry));\r\n        }\r\n        dynamicImportsByEntry[index++] = dynamicImports;\r\n    }\r\n    return dynamicImportsByEntry;\r\n}\r\nfunction getDynamicallyDependentEntriesByDynamicEntry(dependentEntriesByModule, dynamicEntries, allEntries, getDynamicImporters) {\r\n    const dynamicallyDependentEntriesByDynamicEntry = new Map();\r\n    for (const dynamicEntryIndex of dynamicEntries) {\r\n        const dynamicallyDependentEntries = getOrCreate(dynamicallyDependentEntriesByDynamicEntry, dynamicEntryIndex, (getNewSet));\r\n        const dynamicEntry = allEntries[dynamicEntryIndex];\r\n        for (const importer of concatLazy([\r\n            getDynamicImporters(dynamicEntry),\r\n            dynamicEntry.implicitlyLoadedAfter\r\n        ])) {\r\n            for (const entry of dependentEntriesByModule.get(importer)) {\r\n                dynamicallyDependentEntries.add(entry);\r\n            }\r\n        }\r\n    }\r\n    return dynamicallyDependentEntriesByDynamicEntry;\r\n}\r\nfunction getChunksWithSameDependentEntries(modulesWithDependentEntries) {\r\n    const chunkModules = Object.create(null);\r\n    for (const { dependentEntries, modules } of modulesWithDependentEntries) {\r\n        let chunkSignature = 0n;\r\n        for (const entryIndex of dependentEntries) {\r\n            chunkSignature |= 1n << BigInt(entryIndex);\r\n        }\r\n        (chunkModules[String(chunkSignature)] ||= {\r\n            dependentEntries: new Set(dependentEntries),\r\n            modules: []\r\n        }).modules.push(...modules);\r\n    }\r\n    return Object.values(chunkModules);\r\n}\r\nfunction* getModulesWithDependentEntries(dependentEntriesByModule, modulesInManualChunks) {\r\n    for (const [module, dependentEntries] of dependentEntriesByModule) {\r\n        if (!modulesInManualChunks.has(module)) {\r\n            yield { dependentEntries, modules: [module] };\r\n        }\r\n    }\r\n}\r\nfunction getStaticDependencyAtomsByEntry(allEntries, chunkAtoms) {\r\n    // The indices correspond to the indices in allEntries. The atoms correspond\r\n    // to bits in the bigint values where chunk 0 is the lowest bit.\r\n    const staticDependencyAtomsByEntry = allEntries.map(() => 0n);\r\n    // This toggles the bits for each atom that is a dependency of an entry\r\n    let atomMask = 1n;\r\n    for (const { dependentEntries } of chunkAtoms) {\r\n        for (const entryIndex of dependentEntries) {\r\n            staticDependencyAtomsByEntry[entryIndex] |= atomMask;\r\n        }\r\n        atomMask <<= 1n;\r\n    }\r\n    return staticDependencyAtomsByEntry;\r\n}\r\n// Warning: This will consume dynamicallyDependentEntriesByDynamicEntry.\r\nfunction getAlreadyLoadedAtomsByEntry(staticDependencyAtomsByEntry, dynamicallyDependentEntriesByDynamicEntry, dynamicImportsByEntry, allEntries) {\r\n    // Dynamic entries have all atoms as already loaded initially because we then\r\n    // intersect with the static dependency atoms of all dynamic importers.\r\n    // Static entries cannot have already loaded atoms.\r\n    const alreadyLoadedAtomsByEntry = allEntries.map((_entry, entryIndex) => dynamicallyDependentEntriesByDynamicEntry.has(entryIndex) ? -1n : 0n);\r\n    for (const [dynamicEntryIndex, dynamicallyDependentEntries] of dynamicallyDependentEntriesByDynamicEntry) {\r\n        // We delete here so that they can be added again if necessary to be handled\r\n        // again by the loop\r\n        dynamicallyDependentEntriesByDynamicEntry.delete(dynamicEntryIndex);\r\n        const knownLoadedAtoms = alreadyLoadedAtomsByEntry[dynamicEntryIndex];\r\n        let updatedLoadedAtoms = knownLoadedAtoms;\r\n        for (const entryIndex of dynamicallyDependentEntries) {\r\n            updatedLoadedAtoms &=\r\n                staticDependencyAtomsByEntry[entryIndex] | alreadyLoadedAtomsByEntry[entryIndex];\r\n        }\r\n        // If the knownLoadedAtoms changed, all dependent dynamic entries need to be\r\n        // updated again\r\n        if (updatedLoadedAtoms !== knownLoadedAtoms) {\r\n            alreadyLoadedAtomsByEntry[dynamicEntryIndex] = updatedLoadedAtoms;\r\n            for (const dynamicImport of dynamicImportsByEntry[dynamicEntryIndex]) {\r\n                // If this adds an entry that was deleted before, it will be handled\r\n                // again. This is the reason why we delete every entry from this map\r\n                // that we processed.\r\n                getOrCreate(dynamicallyDependentEntriesByDynamicEntry, dynamicImport, (getNewSet)).add(dynamicEntryIndex);\r\n            }\r\n        }\r\n    }\r\n    return alreadyLoadedAtomsByEntry;\r\n}\r\n/**\r\n * This removes all unnecessary dynamic entries from the dependentEntries in its\r\n * first argument if a chunk is already loaded without that entry.\r\n */\r\nfunction removeUnnecessaryDependentEntries(chunkAtoms, alreadyLoadedAtomsByEntry, awaitedAlreadyLoadedAtomsByEntry) {\r\n    // Remove entries from dependent entries if a chunk is already loaded without\r\n    // that entry. Do not remove already loaded atoms where some dynamic imports\r\n    // are awaited to avoid cycles in the output.\r\n    let chunkMask = 1n;\r\n    for (const { dependentEntries } of chunkAtoms) {\r\n        for (const entryIndex of dependentEntries) {\r\n            if ((alreadyLoadedAtomsByEntry[entryIndex] & chunkMask) === chunkMask &&\r\n                (awaitedAlreadyLoadedAtomsByEntry[entryIndex] & chunkMask) === 0n) {\r\n                dependentEntries.delete(entryIndex);\r\n            }\r\n        }\r\n        chunkMask <<= 1n;\r\n    }\r\n}\r\nfunction getChunksWithSameDependentEntriesAndCorrelatedAtoms(chunkAtoms, staticDependencyAtomsByEntry, alreadyLoadedAtomsByEntry, minChunkSize) {\r\n    const chunksBySignature = Object.create(null);\r\n    const chunkByModule = new Map();\r\n    const sizeByAtom = new Array(chunkAtoms.length);\r\n    let sideEffectAtoms = 0n;\r\n    let atomMask = 1n;\r\n    let index = 0;\r\n    for (const { dependentEntries, modules } of chunkAtoms) {\r\n        let chunkSignature = 0n;\r\n        let correlatedAtoms = -1n;\r\n        for (const entryIndex of dependentEntries) {\r\n            chunkSignature |= 1n << BigInt(entryIndex);\r\n            // Correlated atoms are the atoms that are guaranteed to be loaded as\r\n            // well when a given atom is loaded. It is the intersection of the already\r\n            // loaded modules of each chunk merged with its static dependencies.\r\n            correlatedAtoms &=\r\n                staticDependencyAtomsByEntry[entryIndex] | alreadyLoadedAtomsByEntry[entryIndex];\r\n        }\r\n        const chunk = (chunksBySignature[String(chunkSignature)] ||= {\r\n            containedAtoms: 0n,\r\n            correlatedAtoms,\r\n            dependencies: new Set(),\r\n            dependentChunks: new Set(),\r\n            dependentEntries: new Set(dependentEntries),\r\n            modules: [],\r\n            pure: true,\r\n            size: 0\r\n        });\r\n        let atomSize = 0;\r\n        let pure = true;\r\n        for (const module of modules) {\r\n            chunkByModule.set(module, chunk);\r\n            // Unfortunately, we cannot take tree-shaking into account here because\r\n            // rendering did not happen yet, but we can detect empty modules\r\n            if (module.isIncluded()) {\r\n                pure &&= !module.hasEffects();\r\n                // we use a trivial size for the default minChunkSize to improve\r\n                // performance\r\n                atomSize += minChunkSize > 1 ? module.estimateSize() : 1;\r\n            }\r\n        }\r\n        if (!pure) {\r\n            sideEffectAtoms |= atomMask;\r\n        }\r\n        sizeByAtom[index++] = atomSize;\r\n        chunk.containedAtoms |= atomMask;\r\n        chunk.modules.push(...modules);\r\n        chunk.pure &&= pure;\r\n        chunk.size += atomSize;\r\n        atomMask <<= 1n;\r\n    }\r\n    const chunks = Object.values(chunksBySignature);\r\n    sideEffectAtoms |= addChunkDependenciesAndGetExternalSideEffectAtoms(chunks, chunkByModule, atomMask);\r\n    return { chunks, sideEffectAtoms, sizeByAtom };\r\n}\r\nfunction addChunkDependenciesAndGetExternalSideEffectAtoms(chunks, chunkByModule, nextAvailableAtomMask) {\r\n    const signatureByExternalModule = new Map();\r\n    let externalSideEffectAtoms = 0n;\r\n    for (const chunk of chunks) {\r\n        const { dependencies, modules } = chunk;\r\n        for (const module of modules) {\r\n            for (const dependency of module.getDependenciesToBeIncluded()) {\r\n                if (dependency instanceof ExternalModule) {\r\n                    if (dependency.info.moduleSideEffects) {\r\n                        const signature = getOrCreate(signatureByExternalModule, dependency, () => {\r\n                            const signature = nextAvailableAtomMask;\r\n                            nextAvailableAtomMask <<= 1n;\r\n                            externalSideEffectAtoms |= signature;\r\n                            return signature;\r\n                        });\r\n                        chunk.containedAtoms |= signature;\r\n                        chunk.correlatedAtoms |= signature;\r\n                    }\r\n                }\r\n                else {\r\n                    const dependencyChunk = chunkByModule.get(dependency);\r\n                    if (dependencyChunk && dependencyChunk !== chunk) {\r\n                        dependencies.add(dependencyChunk);\r\n                        dependencyChunk.dependentChunks.add(chunk);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return externalSideEffectAtoms;\r\n}\r\n/**\r\n * This function tries to get rid of small chunks by merging them with other\r\n * chunks.\r\n *\r\n * We can only merge chunks safely if after the merge, loading any entry point\r\n * in any allowed order will not trigger side effects that should not have been\r\n * triggered. While side effects are usually things like global function calls,\r\n * global variable mutations or potentially thrown errors, details do not\r\n * matter here, and we just discern chunks without side effects (pure chunks)\r\n * from other chunks.\r\n *\r\n * As a first step, we assign each pre-generated chunk with side effects a\r\n * label. I.e. we have side effect \"A\" if the non-pure chunk \"A\" is loaded.\r\n *\r\n * Now to determine the side effects of loading a chunk, one also has to take\r\n * the side effects of its dependencies into account. So if A depends on B\r\n * (A -> B) and both have side effects, loading A triggers effects AB.\r\n *\r\n * Now from the previous step we know that each chunk is uniquely determine by\r\n * the entry points that depend on it and cause it to load, which we will call\r\n * its dependent entry points.\r\n *\r\n * E.g. if X -> A and Y -> A, then the dependent entry points of A are XY.\r\n * Starting from that idea, we can determine a set of chunks—and thus a set\r\n * of side effects—that must have been triggered if a certain chunk has been\r\n * loaded. Basically, it is the intersection of all chunks loaded by the\r\n * dependent entry points of a given chunk. We call the corresponding side\r\n * effects the correlated side effects of that chunk.\r\n *\r\n * Example:\r\n * X -> ABC, Y -> ADE, A-> F, B -> D\r\n * Then taking dependencies into account, X -> ABCDF, Y -> ADEF\r\n * The intersection is ADF. So we know that when A is loaded, D and F must also\r\n * be in memory even though neither D nor A is a dependency of the other.\r\n * If all have side effects, we call ADF the correlated side effects of A. The\r\n * correlated side effects need to remain constant when merging chunks.\r\n *\r\n * In contrast, we have the dependency side effects of A, which represents\r\n * the side effects we trigger if we directly load A. In this example, the\r\n * dependency side effects are AF.\r\n * For entry chunks, dependency and correlated side effects are the same.\r\n *\r\n * With these concepts, merging chunks is allowed if the correlated side\r\n * effects of each entry do not change. Thus, we are allowed to merge two\r\n * chunks if\r\n *\r\n * a) the dependency side effects of each chunk are a subset of the correlated\r\n *    side effects of the other chunk, so no additional side effects are\r\n *    triggered for any entry, or\r\n * b) The dependent entry points of chunk A are a subset of the dependent entry\r\n *    points of chunk B while the dependency side effects of A are a subset of\r\n *    the correlated side effects of B. Because in that scenario, whenever A is\r\n *    loaded, B is loaded as well. But there are cases when B is loaded where A\r\n *    is not loaded. So if we merge the chunks, all dependency side effects of\r\n *    A will be added to the correlated side effects of B, and as the latter is\r\n *    not allowed to change, the former need to be a subset of the latter.\r\n *\r\n * Another consideration when merging small chunks into other chunks is to\r\n * avoid\r\n * that too much additional code is loaded. This is achieved when the dependent\r\n * entries of the small chunk are a subset of the dependent entries of the\r\n * other\r\n * chunk. Because then when the small chunk is loaded, the other chunk was\r\n * loaded/in memory anyway, so at most when the other chunk is loaded, the\r\n * additional size of the small chunk is loaded unnecessarily.\r\n *\r\n * So the algorithm performs merges in two passes:\r\n *\r\n * 1. First we try to merge small chunks A only into other chunks B if the\r\n *    dependent entries of A are a subset of the dependent entries of B and the\r\n *    dependency side effects of A are a subset of the correlated side effects\r\n *    of B.\r\n * 2. Only then for all remaining small chunks, we look for arbitrary merges\r\n *    following the rule (a), starting with the smallest chunks to look for\r\n *    possible merge targets.\r\n */\r\nfunction getOptimizedChunks(chunks, minChunkSize, sideEffectAtoms, sizeByAtom, log) {\r\n    timeStart('optimize chunks', 3);\r\n    const chunkPartition = getPartitionedChunks(chunks, minChunkSize);\r\n    if (!chunkPartition) {\r\n        timeEnd('optimize chunks', 3);\r\n        return chunks; // the actual modules\r\n    }\r\n    if (minChunkSize > 1) {\r\n        log('info', logOptimizeChunkStatus(chunks.length, chunkPartition.small.size, 'Initially'));\r\n    }\r\n    mergeChunks(chunkPartition, minChunkSize, sideEffectAtoms, sizeByAtom);\r\n    if (minChunkSize > 1) {\r\n        log('info', logOptimizeChunkStatus(chunkPartition.small.size + chunkPartition.big.size, chunkPartition.small.size, 'After merging chunks'));\r\n    }\r\n    timeEnd('optimize chunks', 3);\r\n    return [...chunkPartition.small, ...chunkPartition.big];\r\n}\r\nfunction getPartitionedChunks(chunks, minChunkSize) {\r\n    const smallChunks = [];\r\n    const bigChunks = [];\r\n    for (const chunk of chunks) {\r\n        (chunk.size < minChunkSize ? smallChunks : bigChunks).push(chunk);\r\n    }\r\n    if (smallChunks.length === 0) {\r\n        return null;\r\n    }\r\n    smallChunks.sort(compareChunkSize);\r\n    bigChunks.sort(compareChunkSize);\r\n    return {\r\n        big: new Set(bigChunks),\r\n        small: new Set(smallChunks)\r\n    };\r\n}\r\nfunction compareChunkSize({ size: sizeA }, { size: sizeB }) {\r\n    return sizeA - sizeB;\r\n}\r\nfunction mergeChunks(chunkPartition, minChunkSize, sideEffectAtoms, sizeByAtom) {\r\n    const { small } = chunkPartition;\r\n    for (const mergedChunk of small) {\r\n        const bestTargetChunk = findBestMergeTarget(mergedChunk, chunkPartition, sideEffectAtoms, sizeByAtom, \r\n        // In the default case, we do not accept size increases\r\n        minChunkSize <= 1 ? 1 : Infinity);\r\n        if (bestTargetChunk) {\r\n            const { containedAtoms, correlatedAtoms, modules, pure, size } = mergedChunk;\r\n            small.delete(mergedChunk);\r\n            getChunksInPartition(bestTargetChunk, minChunkSize, chunkPartition).delete(bestTargetChunk);\r\n            bestTargetChunk.modules.push(...modules);\r\n            bestTargetChunk.size += size;\r\n            bestTargetChunk.pure &&= pure;\r\n            const { dependencies, dependentChunks, dependentEntries } = bestTargetChunk;\r\n            bestTargetChunk.correlatedAtoms &= correlatedAtoms;\r\n            bestTargetChunk.containedAtoms |= containedAtoms;\r\n            for (const entry of mergedChunk.dependentEntries) {\r\n                dependentEntries.add(entry);\r\n            }\r\n            for (const dependency of mergedChunk.dependencies) {\r\n                dependencies.add(dependency);\r\n                dependency.dependentChunks.delete(mergedChunk);\r\n                dependency.dependentChunks.add(bestTargetChunk);\r\n            }\r\n            for (const dependentChunk of mergedChunk.dependentChunks) {\r\n                dependentChunks.add(dependentChunk);\r\n                dependentChunk.dependencies.delete(mergedChunk);\r\n                dependentChunk.dependencies.add(bestTargetChunk);\r\n            }\r\n            dependencies.delete(bestTargetChunk);\r\n            dependentChunks.delete(bestTargetChunk);\r\n            getChunksInPartition(bestTargetChunk, minChunkSize, chunkPartition).add(bestTargetChunk);\r\n        }\r\n    }\r\n}\r\nfunction findBestMergeTarget(mergedChunk, { big, small }, sideEffectAtoms, sizeByAtom, smallestAdditionalSize) {\r\n    let bestTargetChunk = null;\r\n    // In the default case, we do not accept size increases\r\n    for (const targetChunk of concatLazy([small, big])) {\r\n        if (mergedChunk === targetChunk)\r\n            continue;\r\n        const additionalSizeAfterMerge = getAdditionalSizeAfterMerge(mergedChunk, targetChunk, smallestAdditionalSize, sideEffectAtoms, sizeByAtom);\r\n        if (additionalSizeAfterMerge < smallestAdditionalSize) {\r\n            bestTargetChunk = targetChunk;\r\n            if (additionalSizeAfterMerge === 0)\r\n                break;\r\n            smallestAdditionalSize = additionalSizeAfterMerge;\r\n        }\r\n    }\r\n    return bestTargetChunk;\r\n}\r\n/**\r\n * Determine the additional unused code size that would be added by merging the\r\n * two chunks. This is not an exact measurement but rather an upper bound. If\r\n * the merge produces cycles or adds non-correlated side effects, `Infinity`\r\n * is returned.\r\n * Merging will not produce cycles if none of the direct non-merged\r\n * dependencies of a chunk have the other chunk as a transitive dependency.\r\n */\r\nfunction getAdditionalSizeAfterMerge(mergedChunk, targetChunk, \r\n// The maximum additional unused code size allowed to be added by the merge,\r\n// taking dependencies into account, needs to be below this number\r\ncurrentAdditionalSize, sideEffectAtoms, sizeByAtom) {\r\n    const firstSize = getAdditionalSizeIfNoTransitiveDependencyOrNonCorrelatedSideEffect(mergedChunk, targetChunk, currentAdditionalSize, sideEffectAtoms, sizeByAtom);\r\n    return firstSize < currentAdditionalSize\r\n        ? firstSize +\r\n            getAdditionalSizeIfNoTransitiveDependencyOrNonCorrelatedSideEffect(targetChunk, mergedChunk, currentAdditionalSize - firstSize, sideEffectAtoms, sizeByAtom)\r\n        : Infinity;\r\n}\r\nfunction getAdditionalSizeIfNoTransitiveDependencyOrNonCorrelatedSideEffect(dependentChunk, dependencyChunk, currentAdditionalSize, sideEffectAtoms, sizeByAtom) {\r\n    const { correlatedAtoms } = dependencyChunk;\r\n    let dependencyAtoms = dependentChunk.containedAtoms;\r\n    const dependentContainedSideEffects = dependencyAtoms & sideEffectAtoms;\r\n    if ((correlatedAtoms & dependentContainedSideEffects) !== dependentContainedSideEffects) {\r\n        return Infinity;\r\n    }\r\n    const chunksToCheck = new Set(dependentChunk.dependencies);\r\n    for (const { dependencies, containedAtoms } of chunksToCheck) {\r\n        dependencyAtoms |= containedAtoms;\r\n        const containedSideEffects = containedAtoms & sideEffectAtoms;\r\n        if ((correlatedAtoms & containedSideEffects) !== containedSideEffects) {\r\n            return Infinity;\r\n        }\r\n        for (const dependency of dependencies) {\r\n            if (dependency === dependencyChunk) {\r\n                return Infinity;\r\n            }\r\n            chunksToCheck.add(dependency);\r\n        }\r\n    }\r\n    return getAtomsSizeIfBelowLimit(dependencyAtoms & ~correlatedAtoms, currentAdditionalSize, sizeByAtom);\r\n}\r\nfunction getAtomsSizeIfBelowLimit(atoms, currentAdditionalSize, sizeByAtom) {\r\n    let size = 0;\r\n    let atomIndex = 0;\r\n    let atomSignature = 1n;\r\n    const { length } = sizeByAtom;\r\n    for (; atomIndex < length; atomIndex++) {\r\n        if ((atoms & atomSignature) === atomSignature) {\r\n            size += sizeByAtom[atomIndex];\r\n        }\r\n        atomSignature <<= 1n;\r\n        if (size >= currentAdditionalSize) {\r\n            return Infinity;\r\n        }\r\n    }\r\n    return size;\r\n}\r\nfunction getChunksInPartition(chunk, minChunkSize, chunkPartition) {\r\n    return chunk.size < minChunkSize ? chunkPartition.small : chunkPartition.big;\r\n}\r\n\r\n// ported from https://github.com/substack/node-commondir\r\nfunction commondir(files) {\r\n    if (files.length === 0)\r\n        return '/';\r\n    if (files.length === 1)\r\n        return dirname(files[0]);\r\n    const commonSegments = files.slice(1).reduce((commonSegments, file) => {\r\n        const pathSegments = file.split(/\\/+|\\\\+/);\r\n        let index;\r\n        for (index = 0; commonSegments[index] === pathSegments[index] &&\r\n            index < Math.min(commonSegments.length, pathSegments.length); index++)\r\n            ;\r\n        return commonSegments.slice(0, index);\r\n    }, files[0].split(/\\/+|\\\\+/));\r\n    // Windows correctly handles paths with forward-slashes\r\n    return commonSegments.length > 1 ? commonSegments.join('/') : '/';\r\n}\r\n\r\nconst compareExecIndex = (unitA, unitB) => unitA.execIndex > unitB.execIndex ? 1 : -1;\r\nfunction sortByExecutionOrder(units) {\r\n    units.sort(compareExecIndex);\r\n}\r\n// This process is currently faulty in so far as it only takes the first entry\r\n// module into account and assumes that dynamic imports are imported in a\r\n// certain order.\r\n// A better algorithm would follow every possible execution path and mark which\r\n// modules are executed before or after which other modules. THen the chunking\r\n// would need to take care that in each chunk, all modules are always executed\r\n// in the same sequence.\r\nfunction analyseModuleExecution(entryModules) {\r\n    let nextExecIndex = 0;\r\n    const cyclePaths = [];\r\n    const analysedModules = new Set();\r\n    const dynamicImports = new Set();\r\n    const parents = new Map();\r\n    const orderedModules = [];\r\n    const handleSyncLoadedModule = (module, parent) => {\r\n        if (parents.has(module)) {\r\n            if (!analysedModules.has(module)) {\r\n                cyclePaths.push(getCyclePath(module, parent, parents));\r\n            }\r\n            return;\r\n        }\r\n        parents.set(module, parent);\r\n        analyseModule(module);\r\n    };\r\n    const analyseModule = (module) => {\r\n        if (module instanceof Module) {\r\n            for (const dependency of module.dependencies) {\r\n                handleSyncLoadedModule(dependency, module);\r\n            }\r\n            for (const dependency of module.implicitlyLoadedBefore) {\r\n                dynamicImports.add(dependency);\r\n            }\r\n            for (const { resolution, node } of module.dynamicImports) {\r\n                if (resolution instanceof Module) {\r\n                    if (node.scope.context.usesTopLevelAwait) {\r\n                        handleSyncLoadedModule(resolution, module);\r\n                    }\r\n                    else {\r\n                        dynamicImports.add(resolution);\r\n                    }\r\n                }\r\n            }\r\n            orderedModules.push(module);\r\n        }\r\n        module.execIndex = nextExecIndex++;\r\n        analysedModules.add(module);\r\n    };\r\n    for (const currentEntry of entryModules) {\r\n        if (!parents.has(currentEntry)) {\r\n            parents.set(currentEntry, null);\r\n            analyseModule(currentEntry);\r\n        }\r\n    }\r\n    for (const currentEntry of dynamicImports) {\r\n        if (!parents.has(currentEntry)) {\r\n            parents.set(currentEntry, null);\r\n            analyseModule(currentEntry);\r\n        }\r\n    }\r\n    return { cyclePaths, orderedModules };\r\n}\r\nfunction getCyclePath(module, parent, parents) {\r\n    const cycleSymbol = Symbol(module.id);\r\n    const path = [module.id];\r\n    let nextModule = parent;\r\n    module.cycles.add(cycleSymbol);\r\n    while (nextModule !== module) {\r\n        nextModule.cycles.add(cycleSymbol);\r\n        path.push(nextModule.id);\r\n        nextModule = parents.get(nextModule);\r\n    }\r\n    path.push(path[0]);\r\n    path.reverse();\r\n    return path;\r\n}\r\n\r\nfunction getGenerateCodeSnippets({ compact, generatedCode: { arrowFunctions, constBindings, objectShorthand, reservedNamesAsProps } }) {\r\n    const { _, n, s } = compact ? { _: '', n: '', s: '' } : { _: ' ', n: '\\n', s: ';' };\r\n    const cnst = constBindings ? 'const' : 'var';\r\n    const getNonArrowFunctionIntro = (parameters, { isAsync, name }) => `${isAsync ? `async ` : ''}function${name ? ` ${name}` : ''}${_}(${parameters.join(`,${_}`)})${_}`;\r\n    const getFunctionIntro = arrowFunctions\r\n        ? (parameters, { isAsync, name }) => {\r\n            const singleParameter = parameters.length === 1;\r\n            const asyncString = isAsync ? `async${singleParameter ? ' ' : _}` : '';\r\n            return `${name ? `${cnst} ${name}${_}=${_}` : ''}${asyncString}${singleParameter ? parameters[0] : `(${parameters.join(`,${_}`)})`}${_}=>${_}`;\r\n        }\r\n        : getNonArrowFunctionIntro;\r\n    const getDirectReturnFunction = (parameters, { functionReturn, lineBreakIndent, name }) => [\r\n        `${getFunctionIntro(parameters, {\r\n            isAsync: false,\r\n            name\r\n        })}${arrowFunctions\r\n            ? lineBreakIndent\r\n                ? `${n}${lineBreakIndent.base}${lineBreakIndent.t}`\r\n                : ''\r\n            : `{${lineBreakIndent ? `${n}${lineBreakIndent.base}${lineBreakIndent.t}` : _}${functionReturn ? 'return ' : ''}`}`,\r\n        arrowFunctions\r\n            ? `${name ? ';' : ''}${lineBreakIndent ? `${n}${lineBreakIndent.base}` : ''}`\r\n            : `${s}${lineBreakIndent ? `${n}${lineBreakIndent.base}` : _}}`\r\n    ];\r\n    const isValidPropertyName = reservedNamesAsProps\r\n        ? (name) => VALID_IDENTIFIER_REGEXP.test(name)\r\n        : (name) => !RESERVED_NAMES.has(name) && VALID_IDENTIFIER_REGEXP.test(name);\r\n    return {\r\n        _,\r\n        cnst,\r\n        getDirectReturnFunction,\r\n        getDirectReturnIifeLeft: (parameters, returned, { needsArrowReturnParens, needsWrappedFunction }) => {\r\n            const [left, right] = getDirectReturnFunction(parameters, {\r\n                functionReturn: true,\r\n                lineBreakIndent: null,\r\n                name: null\r\n            });\r\n            return `${wrapIfNeeded(`${left}${wrapIfNeeded(returned, arrowFunctions && needsArrowReturnParens)}${right}`, arrowFunctions || needsWrappedFunction)}(`;\r\n        },\r\n        getFunctionIntro,\r\n        getNonArrowFunctionIntro,\r\n        getObject(fields, { lineBreakIndent }) {\r\n            const prefix = lineBreakIndent ? `${n}${lineBreakIndent.base}${lineBreakIndent.t}` : _;\r\n            return `{${fields\r\n                .map(([key, value]) => {\r\n                if (key === null)\r\n                    return `${prefix}${value}`;\r\n                const keyInObject = stringifyObjectKeyIfNeeded(key);\r\n                return key === value && objectShorthand && key === keyInObject\r\n                    ? prefix + key\r\n                    : `${prefix}${keyInObject}:${_}${value}`;\r\n            })\r\n                .join(`,`)}${fields.length === 0 ? '' : lineBreakIndent ? `${n}${lineBreakIndent.base}` : _}}`;\r\n        },\r\n        getPropertyAccess: (name) => isValidPropertyName(name) ? `.${name}` : `[${JSON.stringify(name)}]`,\r\n        n,\r\n        s\r\n    };\r\n}\r\nconst wrapIfNeeded = (code, needsParens) => needsParens ? `(${code})` : code;\r\n\r\nclass Source {\r\n    constructor(filename, content) {\r\n        this.isOriginal = true;\r\n        this.filename = filename;\r\n        this.content = content;\r\n    }\r\n    traceSegment(line, column, name) {\r\n        return { column, line, name, source: this };\r\n    }\r\n}\r\nclass Link {\r\n    constructor(map, sources) {\r\n        this.sources = sources;\r\n        this.names = map.names;\r\n        this.mappings = map.mappings;\r\n    }\r\n    traceMappings() {\r\n        const sources = [];\r\n        const sourceIndexMap = new Map();\r\n        const sourcesContent = [];\r\n        const names = [];\r\n        const nameIndexMap = new Map();\r\n        const mappings = [];\r\n        for (const line of this.mappings) {\r\n            const tracedLine = [];\r\n            for (const segment of line) {\r\n                if (segment.length === 1)\r\n                    continue;\r\n                const source = this.sources[segment[1]];\r\n                if (!source)\r\n                    continue;\r\n                const traced = source.traceSegment(segment[2], segment[3], segment.length === 5 ? this.names[segment[4]] : '');\r\n                if (traced) {\r\n                    const { column, line, name, source: { content, filename } } = traced;\r\n                    let sourceIndex = sourceIndexMap.get(filename);\r\n                    if (sourceIndex === undefined) {\r\n                        sourceIndex = sources.length;\r\n                        sources.push(filename);\r\n                        sourceIndexMap.set(filename, sourceIndex);\r\n                        sourcesContent[sourceIndex] = content;\r\n                    }\r\n                    else if (sourcesContent[sourceIndex] == null) {\r\n                        sourcesContent[sourceIndex] = content;\r\n                    }\r\n                    else if (content != null && sourcesContent[sourceIndex] !== content) {\r\n                        return error(logConflictingSourcemapSources(filename));\r\n                    }\r\n                    const tracedSegment = [segment[0], sourceIndex, line, column];\r\n                    if (name) {\r\n                        let nameIndex = nameIndexMap.get(name);\r\n                        if (nameIndex === undefined) {\r\n                            nameIndex = names.length;\r\n                            names.push(name);\r\n                            nameIndexMap.set(name, nameIndex);\r\n                        }\r\n                        tracedSegment[4] = nameIndex;\r\n                    }\r\n                    tracedLine.push(tracedSegment);\r\n                }\r\n            }\r\n            mappings.push(tracedLine);\r\n        }\r\n        return { mappings, names, sources, sourcesContent };\r\n    }\r\n    traceSegment(line, column, name) {\r\n        const segments = this.mappings[line];\r\n        if (!segments)\r\n            return null;\r\n        // binary search through segments for the given column\r\n        let searchStart = 0;\r\n        const lastSegmentIndex = segments.length - 1;\r\n        let searchEnd = lastSegmentIndex;\r\n        while (searchStart <= searchEnd) {\r\n            const m = (searchStart + searchEnd) >> 1;\r\n            let segment = segments[m];\r\n            // If a sourcemap does not have sufficient resolution to contain a\r\n            // necessary mapping, e.g. because it only contains line information or\r\n            // the column is not precise (e.g. the sourcemap is generated by esbuild, segment[0] may be shorter than the location of the first letter),\r\n            // we approximate by finding the closest segment whose segment[0] is less than the given column\r\n            if (segment[0] !== column && searchStart === searchEnd) {\r\n                const approximatedSegmentIndex = segments[searchStart][0] > column ? Math.max(0, searchStart - 1) : searchStart;\r\n                segment = segments[approximatedSegmentIndex];\r\n            }\r\n            if (segment[0] === column || searchStart === searchEnd) {\r\n                if (segment.length == 1)\r\n                    return null;\r\n                const source = this.sources[segment[1]];\r\n                if (!source)\r\n                    return null;\r\n                return source.traceSegment(segment[2], segment[3], segment.length === 5 ? this.names[segment[4]] : name);\r\n            }\r\n            if (segment[0] > column) {\r\n                searchEnd = m - 1;\r\n            }\r\n            else {\r\n                searchStart = m + 1;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\nfunction getLinkMap(log) {\r\n    return function linkMap(source, map) {\r\n        if (!map.missing) {\r\n            return new Link(map, [source]);\r\n        }\r\n        log(LOGLEVEL_WARN, logSourcemapBroken(map.plugin));\r\n        return new Link({\r\n            mappings: [],\r\n            names: []\r\n        }, [source]);\r\n    };\r\n}\r\nfunction getCollapsedSourcemap(id, originalCode, originalSourcemap, sourcemapChain, linkMap) {\r\n    let source;\r\n    if (originalSourcemap) {\r\n        const sources = originalSourcemap.sources;\r\n        const sourcesContent = originalSourcemap.sourcesContent || [];\r\n        const directory = dirname(id) || '.';\r\n        const sourceRoot = originalSourcemap.sourceRoot || '.';\r\n        const baseSources = sources.map((source, index) => new Source(resolve$1(directory, sourceRoot, source), sourcesContent[index]));\r\n        source = new Link(originalSourcemap, baseSources);\r\n    }\r\n    else {\r\n        source = new Source(id, originalCode);\r\n    }\r\n    return sourcemapChain.reduce(linkMap, source);\r\n}\r\nfunction collapseSourcemaps(file, map, modules, bundleSourcemapChain, excludeContent, log) {\r\n    const linkMap = getLinkMap(log);\r\n    const moduleSources = modules\r\n        .filter(module => !module.excludeFromSourcemap)\r\n        .map(module => getCollapsedSourcemap(module.id, module.originalCode, module.originalSourcemap, module.sourcemapChain, linkMap));\r\n    const link = new Link(map, moduleSources);\r\n    const source = bundleSourcemapChain.reduce(linkMap, link);\r\n    let { sources, sourcesContent, names, mappings } = source.traceMappings();\r\n    if (file) {\r\n        const directory = dirname(file);\r\n        sources = sources.map((source) => relative(directory, source));\r\n        file = basename(file);\r\n    }\r\n    sourcesContent = (excludeContent ? null : sourcesContent);\r\n    for (const module of modules) {\r\n        resetSourcemapCache(module.originalSourcemap, module.sourcemapChain);\r\n    }\r\n    return new SourceMap({ file, mappings, names, sources, sourcesContent });\r\n}\r\nfunction collapseSourcemap(id, originalCode, originalSourcemap, sourcemapChain, log) {\r\n    if (sourcemapChain.length === 0) {\r\n        return originalSourcemap;\r\n    }\r\n    const source = getCollapsedSourcemap(id, originalCode, originalSourcemap, sourcemapChain, getLinkMap(log));\r\n    const map = source.traceMappings();\r\n    return decodedSourcemap({ version: 3, ...map });\r\n}\r\n\r\nlet textEncoder;\r\nconst getHash64 = input => xxhashBase64Url(ensureBuffer(input));\r\nconst getHash36 = input => xxhashBase36(ensureBuffer(input));\r\nconst getHash16 = input => xxhashBase16(ensureBuffer(input));\r\nconst hasherByType = {\r\n    base36: getHash36,\r\n    base64: getHash64,\r\n    hex: getHash16\r\n};\r\nfunction ensureBuffer(input) {\r\n    if (typeof input === 'string') {\r\n        if (typeof Buffer === 'undefined') {\r\n            textEncoder ??= new TextEncoder();\r\n            return textEncoder.encode(input);\r\n        }\r\n        return Buffer.from(input);\r\n    }\r\n    return input;\r\n}\r\n\r\n// this looks ridiculous, but it prevents sourcemap tooling from mistaking\r\n// this for an actual sourceMappingURL\r\nlet SOURCEMAPPING_URL = 'sourceMa';\r\nSOURCEMAPPING_URL += 'ppingURL';\r\n\r\nasync function renderChunks(chunks, bundle, pluginDriver, outputOptions, log) {\r\n    timeStart('render chunks', 2);\r\n    reserveEntryChunksInBundle(chunks);\r\n    const renderedChunks = await Promise.all(chunks.map(chunk => chunk.render()));\r\n    timeEnd('render chunks', 2);\r\n    timeStart('transform chunks', 2);\r\n    const getHash = hasherByType[outputOptions.hashCharacters];\r\n    const chunkGraph = getChunkGraph(chunks);\r\n    const { hashDependenciesByPlaceholder, initialHashesByPlaceholder, nonHashedChunksWithPlaceholders, placeholders, renderedChunksByPlaceholder } = await transformChunksAndGenerateContentHashes(renderedChunks, chunkGraph, outputOptions, pluginDriver, getHash, log);\r\n    const hashesByPlaceholder = generateFinalHashes(renderedChunksByPlaceholder, hashDependenciesByPlaceholder, initialHashesByPlaceholder, placeholders, bundle, getHash);\r\n    addChunksToBundle(renderedChunksByPlaceholder, hashesByPlaceholder, bundle, nonHashedChunksWithPlaceholders, pluginDriver, outputOptions);\r\n    timeEnd('transform chunks', 2);\r\n}\r\nfunction reserveEntryChunksInBundle(chunks) {\r\n    for (const chunk of chunks) {\r\n        if (chunk.facadeModule && chunk.facadeModule.isUserDefinedEntryPoint) {\r\n            // reserves name in bundle as side effect if it does not contain a hash\r\n            chunk.getPreliminaryFileName();\r\n        }\r\n    }\r\n}\r\nfunction getChunkGraph(chunks) {\r\n    return Object.fromEntries(chunks.map(chunk => {\r\n        const renderedChunkInfo = chunk.getRenderedChunkInfo();\r\n        return [renderedChunkInfo.fileName, renderedChunkInfo];\r\n    }));\r\n}\r\nasync function transformChunk(magicString, fileName, usedModules, chunkGraph, options, outputPluginDriver, log) {\r\n    let map = null;\r\n    const sourcemapChain = [];\r\n    let code = await outputPluginDriver.hookReduceArg0('renderChunk', [magicString.toString(), chunkGraph[fileName], options, { chunks: chunkGraph }], (code, result, plugin) => {\r\n        if (result == null)\r\n            return code;\r\n        if (typeof result === 'string')\r\n            result = {\r\n                code: result,\r\n                map: undefined\r\n            };\r\n        // strict null check allows 'null' maps to not be pushed to the chain, while 'undefined' gets the missing map warning\r\n        if (result.map !== null) {\r\n            const map = decodedSourcemap(result.map);\r\n            sourcemapChain.push(map || { missing: true, plugin: plugin.name });\r\n        }\r\n        return result.code;\r\n    });\r\n    const { compact, dir, file, sourcemap, sourcemapExcludeSources, sourcemapFile, sourcemapPathTransform, sourcemapIgnoreList } = options;\r\n    if (!compact && code[code.length - 1] !== '\\n')\r\n        code += '\\n';\r\n    if (sourcemap) {\r\n        timeStart('sourcemaps', 3);\r\n        let resultingFile;\r\n        if (file)\r\n            resultingFile = resolve$1(sourcemapFile || file);\r\n        else if (dir)\r\n            resultingFile = resolve$1(dir, fileName);\r\n        else\r\n            resultingFile = resolve$1(fileName);\r\n        const decodedMap = magicString.generateDecodedMap({});\r\n        map = collapseSourcemaps(resultingFile, decodedMap, usedModules, sourcemapChain, sourcemapExcludeSources, log);\r\n        for (let sourcesIndex = 0; sourcesIndex < map.sources.length; ++sourcesIndex) {\r\n            let sourcePath = map.sources[sourcesIndex];\r\n            const sourcemapPath = `${resultingFile}.map`;\r\n            const ignoreList = sourcemapIgnoreList(sourcePath, sourcemapPath);\r\n            if (typeof ignoreList !== 'boolean') {\r\n                error(logFailedValidation('sourcemapIgnoreList function must return a boolean.'));\r\n            }\r\n            if (ignoreList) {\r\n                if (map.x_google_ignoreList === undefined) {\r\n                    map.x_google_ignoreList = [];\r\n                }\r\n                if (!map.x_google_ignoreList.includes(sourcesIndex)) {\r\n                    map.x_google_ignoreList.push(sourcesIndex);\r\n                }\r\n            }\r\n            if (sourcemapPathTransform) {\r\n                sourcePath = sourcemapPathTransform(sourcePath, sourcemapPath);\r\n                if (typeof sourcePath !== 'string') {\r\n                    error(logFailedValidation(`sourcemapPathTransform function must return a string.`));\r\n                }\r\n            }\r\n            map.sources[sourcesIndex] = normalize(sourcePath);\r\n        }\r\n        timeEnd('sourcemaps', 3);\r\n    }\r\n    return {\r\n        code,\r\n        map\r\n    };\r\n}\r\nasync function transformChunksAndGenerateContentHashes(renderedChunks, chunkGraph, outputOptions, pluginDriver, getHash, log) {\r\n    const nonHashedChunksWithPlaceholders = [];\r\n    const renderedChunksByPlaceholder = new Map();\r\n    const hashDependenciesByPlaceholder = new Map();\r\n    const initialHashesByPlaceholder = new Map();\r\n    const placeholders = new Set();\r\n    for (const { preliminaryFileName: { hashPlaceholder } } of renderedChunks) {\r\n        if (hashPlaceholder)\r\n            placeholders.add(hashPlaceholder);\r\n    }\r\n    await Promise.all(renderedChunks.map(async ({ chunk, preliminaryFileName: { fileName, hashPlaceholder }, preliminarySourcemapFileName, magicString, usedModules }) => {\r\n        const transformedChunk = {\r\n            chunk,\r\n            fileName,\r\n            sourcemapFileName: preliminarySourcemapFileName?.fileName ?? null,\r\n            ...(await transformChunk(magicString, fileName, usedModules, chunkGraph, outputOptions, pluginDriver, log))\r\n        };\r\n        const { code, map } = transformedChunk;\r\n        if (hashPlaceholder) {\r\n            // To create a reproducible content-only hash, all placeholders are\r\n            // replaced with the same value before hashing\r\n            const { containedPlaceholders, transformedCode } = replacePlaceholdersWithDefaultAndGetContainedPlaceholders(code, placeholders);\r\n            let contentToHash = transformedCode;\r\n            const hashAugmentation = pluginDriver.hookReduceValueSync('augmentChunkHash', '', [chunk.getRenderedChunkInfo()], (augmentation, pluginHash) => {\r\n                if (pluginHash) {\r\n                    augmentation += pluginHash;\r\n                }\r\n                return augmentation;\r\n            });\r\n            if (hashAugmentation) {\r\n                contentToHash += hashAugmentation;\r\n            }\r\n            renderedChunksByPlaceholder.set(hashPlaceholder, transformedChunk);\r\n            hashDependenciesByPlaceholder.set(hashPlaceholder, {\r\n                containedPlaceholders,\r\n                contentHash: getHash(contentToHash)\r\n            });\r\n        }\r\n        else {\r\n            nonHashedChunksWithPlaceholders.push(transformedChunk);\r\n        }\r\n        const sourcemapHashPlaceholder = preliminarySourcemapFileName?.hashPlaceholder;\r\n        if (map && sourcemapHashPlaceholder) {\r\n            initialHashesByPlaceholder.set(preliminarySourcemapFileName.hashPlaceholder, getHash(map.toString()).slice(0, preliminarySourcemapFileName.hashPlaceholder.length));\r\n        }\r\n    }));\r\n    return {\r\n        hashDependenciesByPlaceholder,\r\n        initialHashesByPlaceholder,\r\n        nonHashedChunksWithPlaceholders,\r\n        placeholders,\r\n        renderedChunksByPlaceholder\r\n    };\r\n}\r\nfunction generateFinalHashes(renderedChunksByPlaceholder, hashDependenciesByPlaceholder, initialHashesByPlaceholder, placeholders, bundle, getHash) {\r\n    const hashesByPlaceholder = new Map(initialHashesByPlaceholder);\r\n    for (const placeholder of placeholders) {\r\n        const { fileName } = renderedChunksByPlaceholder.get(placeholder);\r\n        let contentToHash = '';\r\n        const hashDependencyPlaceholders = new Set([placeholder]);\r\n        for (const dependencyPlaceholder of hashDependencyPlaceholders) {\r\n            const { containedPlaceholders, contentHash } = hashDependenciesByPlaceholder.get(dependencyPlaceholder);\r\n            contentToHash += contentHash;\r\n            for (const containedPlaceholder of containedPlaceholders) {\r\n                // When looping over a map, setting an entry only causes a new iteration if the key is new\r\n                hashDependencyPlaceholders.add(containedPlaceholder);\r\n            }\r\n        }\r\n        let finalFileName;\r\n        let finalHash;\r\n        do {\r\n            // In case of a hash collision, create a hash of the hash\r\n            if (finalHash) {\r\n                contentToHash = finalHash;\r\n            }\r\n            finalHash = getHash(contentToHash).slice(0, placeholder.length);\r\n            finalFileName = replaceSinglePlaceholder(fileName, placeholder, finalHash);\r\n        } while (bundle[lowercaseBundleKeys].has(finalFileName.toLowerCase()));\r\n        bundle[finalFileName] = FILE_PLACEHOLDER;\r\n        hashesByPlaceholder.set(placeholder, finalHash);\r\n    }\r\n    return hashesByPlaceholder;\r\n}\r\nfunction addChunksToBundle(renderedChunksByPlaceholder, hashesByPlaceholder, bundle, nonHashedChunksWithPlaceholders, pluginDriver, options) {\r\n    for (const { chunk, code, fileName, sourcemapFileName, map } of renderedChunksByPlaceholder.values()) {\r\n        let updatedCode = replacePlaceholders(code, hashesByPlaceholder);\r\n        const finalFileName = replacePlaceholders(fileName, hashesByPlaceholder);\r\n        let finalSourcemapFileName = null;\r\n        if (map) {\r\n            if (options.sourcemapDebugIds) {\r\n                updatedCode += calculateDebugIdAndGetComment(updatedCode, map);\r\n            }\r\n            finalSourcemapFileName = sourcemapFileName\r\n                ? replacePlaceholders(sourcemapFileName, hashesByPlaceholder)\r\n                : `${finalFileName}.map`;\r\n            map.file = replacePlaceholders(map.file, hashesByPlaceholder);\r\n            updatedCode += emitSourceMapAndGetComment(finalSourcemapFileName, map, pluginDriver, options);\r\n        }\r\n        bundle[finalFileName] = chunk.finalizeChunk(updatedCode, map, finalSourcemapFileName, hashesByPlaceholder);\r\n    }\r\n    for (const { chunk, code, fileName, sourcemapFileName, map } of nonHashedChunksWithPlaceholders) {\r\n        let updatedCode = hashesByPlaceholder.size > 0 ? replacePlaceholders(code, hashesByPlaceholder) : code;\r\n        let finalSourcemapFileName = null;\r\n        if (map) {\r\n            if (options.sourcemapDebugIds) {\r\n                updatedCode += calculateDebugIdAndGetComment(updatedCode, map);\r\n            }\r\n            finalSourcemapFileName = sourcemapFileName\r\n                ? replacePlaceholders(sourcemapFileName, hashesByPlaceholder)\r\n                : `${fileName}.map`;\r\n            updatedCode += emitSourceMapAndGetComment(finalSourcemapFileName, map, pluginDriver, options);\r\n        }\r\n        bundle[fileName] = chunk.finalizeChunk(updatedCode, map, finalSourcemapFileName, hashesByPlaceholder);\r\n    }\r\n}\r\nfunction emitSourceMapAndGetComment(fileName, map, pluginDriver, { sourcemap, sourcemapBaseUrl }) {\r\n    let url;\r\n    if (sourcemap === 'inline') {\r\n        url = map.toUrl();\r\n    }\r\n    else {\r\n        const sourcemapFileName = basename(fileName);\r\n        url = sourcemapBaseUrl\r\n            ? new URL(sourcemapFileName, sourcemapBaseUrl).toString()\r\n            : sourcemapFileName;\r\n        pluginDriver.emitFile({\r\n            fileName,\r\n            originalFileName: null,\r\n            source: map.toString(),\r\n            type: 'asset'\r\n        });\r\n    }\r\n    return sourcemap === 'hidden' ? '' : `//# ${SOURCEMAPPING_URL}=${url}\\n`;\r\n}\r\nfunction calculateDebugIdAndGetComment(code, map) {\r\n    const hash = hasherByType.hex(code);\r\n    const debugId = [\r\n        hash.slice(0, 8),\r\n        hash.slice(8, 12),\r\n        '4' + hash.slice(12, 15),\r\n        ((parseInt(hash.slice(15, 16), 16) & 3) | 8).toString(16) + hash.slice(17, 20),\r\n        hash.slice(20, 32)\r\n    ].join('-');\r\n    map.debugId = debugId;\r\n    return '//# debugId=' + debugId + '\\n';\r\n}\r\n\r\nclass Bundle {\r\n    constructor(outputOptions, unsetOptions, inputOptions, pluginDriver, graph) {\r\n        this.outputOptions = outputOptions;\r\n        this.unsetOptions = unsetOptions;\r\n        this.inputOptions = inputOptions;\r\n        this.pluginDriver = pluginDriver;\r\n        this.graph = graph;\r\n        this.facadeChunkByModule = new Map();\r\n        this.includedNamespaces = new Set();\r\n    }\r\n    async generate(isWrite) {\r\n        timeStart('GENERATE', 1);\r\n        const outputBundleBase = Object.create(null);\r\n        const outputBundle = getOutputBundle(outputBundleBase);\r\n        this.pluginDriver.setOutputBundle(outputBundle, this.outputOptions);\r\n        try {\r\n            timeStart('initialize render', 2);\r\n            await this.pluginDriver.hookParallel('renderStart', [this.outputOptions, this.inputOptions]);\r\n            timeEnd('initialize render', 2);\r\n            timeStart('generate chunks', 2);\r\n            const getHashPlaceholder = getHashPlaceholderGenerator();\r\n            const chunks = await this.generateChunks(outputBundle, getHashPlaceholder);\r\n            if (chunks.length > 1) {\r\n                validateOptionsForMultiChunkOutput(this.outputOptions, this.inputOptions.onLog);\r\n            }\r\n            this.pluginDriver.setChunkInformation(this.facadeChunkByModule);\r\n            for (const chunk of chunks) {\r\n                chunk.generateExports();\r\n                chunk.inlineTransitiveImports();\r\n            }\r\n            timeEnd('generate chunks', 2);\r\n            await renderChunks(chunks, outputBundle, this.pluginDriver, this.outputOptions, this.inputOptions.onLog);\r\n        }\r\n        catch (error_) {\r\n            await this.pluginDriver.hookParallel('renderError', [error_]);\r\n            throw error_;\r\n        }\r\n        removeUnreferencedAssets(outputBundle);\r\n        timeStart('generate bundle', 2);\r\n        await this.pluginDriver.hookSeq('generateBundle', [\r\n            this.outputOptions,\r\n            outputBundle,\r\n            isWrite\r\n        ]);\r\n        this.finaliseAssets(outputBundle);\r\n        timeEnd('generate bundle', 2);\r\n        timeEnd('GENERATE', 1);\r\n        return outputBundleBase;\r\n    }\r\n    async addManualChunks(manualChunks) {\r\n        const manualChunkAliasByEntry = new Map();\r\n        const chunkEntries = await Promise.all(Object.entries(manualChunks).map(async ([alias, files]) => ({\r\n            alias,\r\n            entries: await this.graph.moduleLoader.addAdditionalModules(files, true)\r\n        })));\r\n        for (const { alias, entries } of chunkEntries) {\r\n            for (const entry of entries) {\r\n                addModuleToManualChunk(alias, entry, manualChunkAliasByEntry);\r\n            }\r\n        }\r\n        return manualChunkAliasByEntry;\r\n    }\r\n    assignManualChunks(getManualChunk) {\r\n        const manualChunkAliasesWithEntry = [];\r\n        const manualChunksApi = {\r\n            getModuleIds: () => this.graph.modulesById.keys(),\r\n            getModuleInfo: this.graph.getModuleInfo\r\n        };\r\n        for (const module of this.graph.modulesById.values()) {\r\n            if (module instanceof Module) {\r\n                const manualChunkAlias = getManualChunk(module.id, manualChunksApi);\r\n                if (typeof manualChunkAlias === 'string') {\r\n                    manualChunkAliasesWithEntry.push([manualChunkAlias, module]);\r\n                }\r\n            }\r\n        }\r\n        manualChunkAliasesWithEntry.sort(([aliasA], [aliasB]) => aliasA > aliasB ? 1 : aliasA < aliasB ? -1 : 0);\r\n        const manualChunkAliasByEntry = new Map();\r\n        for (const [alias, module] of manualChunkAliasesWithEntry) {\r\n            addModuleToManualChunk(alias, module, manualChunkAliasByEntry);\r\n        }\r\n        return manualChunkAliasByEntry;\r\n    }\r\n    finaliseAssets(bundle) {\r\n        if (this.outputOptions.validate) {\r\n            for (const file of Object.values(bundle)) {\r\n                if ('code' in file) {\r\n                    try {\r\n                        parseAst(file.code, { jsx: this.inputOptions.jsx !== false });\r\n                    }\r\n                    catch (error_) {\r\n                        this.inputOptions.onLog(LOGLEVEL_WARN, logChunkInvalid(file, error_));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.pluginDriver.finaliseAssets();\r\n    }\r\n    async generateChunks(bundle, getHashPlaceholder) {\r\n        const { experimentalMinChunkSize, inlineDynamicImports, manualChunks, preserveModules, onlyExplicitManualChunks } = this.outputOptions;\r\n        const manualChunkAliasByEntry = typeof manualChunks === 'object'\r\n            ? await this.addManualChunks(manualChunks)\r\n            : this.assignManualChunks(manualChunks);\r\n        const snippets = getGenerateCodeSnippets(this.outputOptions);\r\n        const includedModules = getIncludedModules(this.graph.modulesById);\r\n        const inputBase = commondir(getAbsoluteEntryModulePaths(includedModules, preserveModules));\r\n        const externalChunkByModule = getExternalChunkByModule(this.graph.modulesById, this.outputOptions, inputBase);\r\n        const executableModule = inlineDynamicImports\r\n            ? [{ alias: null, modules: includedModules }]\r\n            : preserveModules\r\n                ? includedModules.map(module => ({ alias: null, modules: [module] }))\r\n                : getChunkAssignments(this.graph.entryModules, manualChunkAliasByEntry, experimentalMinChunkSize, this.inputOptions.onLog, typeof manualChunks === 'function', onlyExplicitManualChunks);\r\n        const chunks = new Array(executableModule.length);\r\n        const chunkByModule = new Map();\r\n        let index = 0;\r\n        for (const { alias, modules } of executableModule) {\r\n            sortByExecutionOrder(modules);\r\n            const chunk = new Chunk(modules, this.inputOptions, this.outputOptions, this.unsetOptions, this.pluginDriver, this.graph.modulesById, chunkByModule, externalChunkByModule, this.facadeChunkByModule, this.includedNamespaces, alias, getHashPlaceholder, bundle, inputBase, snippets);\r\n            chunks[index++] = chunk;\r\n        }\r\n        for (const chunk of chunks) {\r\n            chunk.link();\r\n        }\r\n        const facades = [];\r\n        for (const chunk of chunks) {\r\n            facades.push(...chunk.generateFacades());\r\n        }\r\n        return [...chunks, ...facades];\r\n    }\r\n}\r\nfunction validateOptionsForMultiChunkOutput(outputOptions, log) {\r\n    if (outputOptions.format === 'umd' || outputOptions.format === 'iife')\r\n        return error(logInvalidOption('output.format', URL_OUTPUT_FORMAT, 'UMD and IIFE output formats are not supported for code-splitting builds', outputOptions.format));\r\n    if (typeof outputOptions.file === 'string')\r\n        return error(logInvalidOption('output.file', URL_OUTPUT_DIR, 'when building multiple chunks, the \"output.dir\" option must be used, not \"output.file\". To inline dynamic imports, set the \"inlineDynamicImports\" option'));\r\n    if (outputOptions.sourcemapFile)\r\n        return error(logInvalidOption('output.sourcemapFile', URL_OUTPUT_SOURCEMAPFILE, '\"output.sourcemapFile\" is only supported for single-file builds'));\r\n    if (!outputOptions.amd.autoId && outputOptions.amd.id)\r\n        log(LOGLEVEL_WARN, logInvalidOption('output.amd.id', URL_OUTPUT_AMD_ID, 'this option is only properly supported for single-file builds. Use \"output.amd.autoId\" and \"output.amd.basePath\" instead'));\r\n}\r\nfunction getIncludedModules(modulesById) {\r\n    const includedModules = [];\r\n    for (const module of modulesById.values()) {\r\n        if (module instanceof Module &&\r\n            (module.isIncluded() || module.info.isEntry || module.includedDynamicImporters.length > 0)) {\r\n            includedModules.push(module);\r\n        }\r\n    }\r\n    return includedModules;\r\n}\r\nfunction getAbsoluteEntryModulePaths(includedModules, preserveModules) {\r\n    const absoluteEntryModulePaths = [];\r\n    for (const module of includedModules) {\r\n        if ((module.info.isEntry || preserveModules) && isAbsolute$1(module.id)) {\r\n            absoluteEntryModulePaths.push(module.id);\r\n        }\r\n    }\r\n    return absoluteEntryModulePaths;\r\n}\r\nfunction getExternalChunkByModule(modulesById, outputOptions, inputBase) {\r\n    const externalChunkByModule = new Map();\r\n    for (const module of modulesById.values()) {\r\n        if (module instanceof ExternalModule) {\r\n            externalChunkByModule.set(module, new ExternalChunk(module, outputOptions, inputBase));\r\n        }\r\n    }\r\n    return externalChunkByModule;\r\n}\r\nfunction addModuleToManualChunk(alias, module, manualChunkAliasByEntry) {\r\n    const existingAlias = manualChunkAliasByEntry.get(module);\r\n    if (typeof existingAlias === 'string' && existingAlias !== alias) {\r\n        return error(logCannotAssignModuleToChunk(module.id, alias, existingAlias));\r\n    }\r\n    manualChunkAliasByEntry.set(module, alias);\r\n}\r\n\r\nfunction flru (max) {\r\n\tvar num, curr, prev;\r\n\tvar limit = max;\r\n\r\n\tfunction keep(key, value) {\r\n\t\tif (++num > limit) {\r\n\t\t\tprev = curr;\r\n\t\t\treset(1);\r\n\t\t\t++num;\r\n\t\t}\r\n\t\tcurr[key] = value;\r\n\t}\r\n\r\n\tfunction reset(isPartial) {\r\n\t\tnum = 0;\r\n\t\tcurr = Object.create(null);\r\n\t\tisPartial || (prev=Object.create(null));\r\n\t}\r\n\r\n\treset();\r\n\r\n\treturn {\r\n\t\tclear: reset,\r\n\t\thas: function (key) {\r\n\t\t\treturn curr[key] !== void 0 || prev[key] !== void 0;\r\n\t\t},\r\n\t\tget: function (key) {\r\n\t\t\tvar val = curr[key];\r\n\t\t\tif (val !== void 0) return val;\r\n\t\t\tif ((val=prev[key]) !== void 0) {\r\n\t\t\t\tkeep(key, val);\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t},\r\n\t\tset: function (key, value) {\r\n\t\t\tif (curr[key] !== void 0) {\r\n\t\t\t\tcurr[key] = value;\r\n\t\t\t} else {\r\n\t\t\t\tkeep(key, value);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nclass GlobalScope extends Scope {\r\n    constructor() {\r\n        super();\r\n        this.parent = null;\r\n        this.variables.set('undefined', new UndefinedVariable());\r\n    }\r\n    findVariable(name) {\r\n        let variable = this.variables.get(name);\r\n        if (!variable) {\r\n            variable = new GlobalVariable(name);\r\n            this.variables.set(name, variable);\r\n        }\r\n        return variable;\r\n    }\r\n}\r\n\r\nfunction resolveIdViaPlugins(source, importer, pluginDriver, moduleLoaderResolveId, skip, customOptions, isEntry, attributes) {\r\n    let skipped = null;\r\n    let replaceContext = null;\r\n    if (skip) {\r\n        skipped = new Set();\r\n        for (const skippedCall of skip) {\r\n            if (source === skippedCall.source && importer === skippedCall.importer) {\r\n                skipped.add(skippedCall.plugin);\r\n            }\r\n        }\r\n        replaceContext = (pluginContext, plugin) => ({\r\n            ...pluginContext,\r\n            resolve: (source, importer, { attributes, custom, isEntry, skipSelf } = BLANK) => {\r\n                skipSelf ??= true;\r\n                if (skipSelf &&\r\n                    skip.findIndex(skippedCall => {\r\n                        return (skippedCall.plugin === plugin &&\r\n                            skippedCall.source === source &&\r\n                            skippedCall.importer === importer);\r\n                    }) !== -1) {\r\n                    // This means that the plugin recursively called itself\r\n                    // Thus returning Promise.resolve(null) in purpose of fallback to default behavior of `resolveId` plugin hook.\r\n                    return Promise.resolve(null);\r\n                }\r\n                return moduleLoaderResolveId(source, importer, custom, isEntry, attributes || EMPTY_OBJECT, skipSelf ? [...skip, { importer, plugin, source }] : skip);\r\n            }\r\n        });\r\n    }\r\n    return pluginDriver.hookFirstAndGetPlugin('resolveId', [source, importer, { attributes, custom: customOptions, isEntry }], replaceContext, skipped);\r\n}\r\n\r\nasync function resolveId(source, importer, preserveSymlinks, pluginDriver, moduleLoaderResolveId, skip, customOptions, isEntry, attributes, fs) {\r\n    const pluginResult = await resolveIdViaPlugins(source, importer, pluginDriver, moduleLoaderResolveId, skip, customOptions, isEntry, attributes);\r\n    if (pluginResult != null) {\r\n        const [resolveIdResult, plugin] = pluginResult;\r\n        if (typeof resolveIdResult === 'object' && !resolveIdResult.resolvedBy) {\r\n            return {\r\n                ...resolveIdResult,\r\n                resolvedBy: plugin.name\r\n            };\r\n        }\r\n        if (typeof resolveIdResult === 'string') {\r\n            return {\r\n                id: resolveIdResult,\r\n                resolvedBy: plugin.name\r\n            };\r\n        }\r\n        return resolveIdResult;\r\n    }\r\n    // external modules (non-entry modules that start with neither '.' or '/')\r\n    // are skipped at this stage.\r\n    if (importer !== undefined && !isAbsolute$1(source) && source[0] !== '.')\r\n        return null;\r\n    // `resolve` processes paths from right to left, prepending them until an\r\n    // absolute path is created. Absolute importees therefore shortcircuit the\r\n    // resolve call and require no special handing on our part.\r\n    // See https://nodejs.org/api/path.html#path_path_resolve_paths\r\n    return addJsExtensionIfNecessary(importer ? resolve$1(dirname(importer), source) : resolve$1(source), preserveSymlinks, fs);\r\n}\r\nasync function addJsExtensionIfNecessary(file, preserveSymlinks, fs) {\r\n    return ((await findFile(file, preserveSymlinks, fs)) ??\r\n        (await findFile(file + '.mjs', preserveSymlinks, fs)) ??\r\n        (await findFile(file + '.js', preserveSymlinks, fs)));\r\n}\r\nasync function findFile(file, preserveSymlinks, fs) {\r\n    try {\r\n        const stats = await fs.lstat(file);\r\n        if (!preserveSymlinks && stats.isSymbolicLink())\r\n            return await findFile(await fs.realpath(file), preserveSymlinks, fs);\r\n        if ((preserveSymlinks && stats.isSymbolicLink()) || stats.isFile()) {\r\n            // check case\r\n            const name = basename(file);\r\n            const files = await fs.readdir(dirname(file));\r\n            if (files.includes(name))\r\n                return file;\r\n        }\r\n    }\r\n    catch {\r\n        // suppress\r\n    }\r\n}\r\n\r\nfunction stripBom(content) {\r\n    if (content.charCodeAt(0) === 0xfe_ff) {\r\n        return stripBom(content.slice(1));\r\n    }\r\n    return content;\r\n}\r\n\r\nconst ANONYMOUS_PLUGIN_PREFIX = 'at position ';\r\nconst ANONYMOUS_OUTPUT_PLUGIN_PREFIX = 'at output position ';\r\n\r\nfunction createPluginCache(cache) {\r\n    return {\r\n        delete(id) {\r\n            return delete cache[id];\r\n        },\r\n        get(id) {\r\n            const item = cache[id];\r\n            if (!item)\r\n                return;\r\n            item[0] = 0;\r\n            return item[1];\r\n        },\r\n        has(id) {\r\n            const item = cache[id];\r\n            if (!item)\r\n                return false;\r\n            item[0] = 0;\r\n            return true;\r\n        },\r\n        set(id, value) {\r\n            cache[id] = [0, value];\r\n        }\r\n    };\r\n}\r\nfunction getTrackedPluginCache(pluginCache, onUse) {\r\n    return {\r\n        delete(id) {\r\n            onUse();\r\n            return pluginCache.delete(id);\r\n        },\r\n        get(id) {\r\n            onUse();\r\n            return pluginCache.get(id);\r\n        },\r\n        has(id) {\r\n            onUse();\r\n            return pluginCache.has(id);\r\n        },\r\n        set(id, value) {\r\n            onUse();\r\n            return pluginCache.set(id, value);\r\n        }\r\n    };\r\n}\r\nconst NO_CACHE = {\r\n    delete() {\r\n        return false;\r\n    },\r\n    get() {\r\n        return undefined;\r\n    },\r\n    has() {\r\n        return false;\r\n    },\r\n    set() { }\r\n};\r\nfunction uncacheablePluginError(pluginName) {\r\n    if (pluginName.startsWith(ANONYMOUS_PLUGIN_PREFIX) ||\r\n        pluginName.startsWith(ANONYMOUS_OUTPUT_PLUGIN_PREFIX)) {\r\n        return error(logAnonymousPluginCache());\r\n    }\r\n    return error(logDuplicatePluginName(pluginName));\r\n}\r\nfunction getCacheForUncacheablePlugin(pluginName) {\r\n    return {\r\n        delete() {\r\n            return uncacheablePluginError(pluginName);\r\n        },\r\n        get() {\r\n            return uncacheablePluginError(pluginName);\r\n        },\r\n        has() {\r\n            return uncacheablePluginError(pluginName);\r\n        },\r\n        set() {\r\n            return uncacheablePluginError(pluginName);\r\n        }\r\n    };\r\n}\r\n\r\nasync function asyncFlatten(array) {\r\n    do {\r\n        array = (await Promise.all(array)).flat(Infinity);\r\n    } while (array.some((v) => v?.then));\r\n    return array;\r\n}\r\n\r\nconst getOnLog = (config, logLevel, printLog = defaultPrintLog) => {\r\n    const { onwarn, onLog } = config;\r\n    const defaultOnLog = getDefaultOnLog(printLog, onwarn);\r\n    if (onLog) {\r\n        const minimalPriority = logLevelPriority[logLevel];\r\n        return (level, log) => onLog(level, addLogToString(log), (level, handledLog) => {\r\n            if (level === LOGLEVEL_ERROR) {\r\n                return error(normalizeLog(handledLog));\r\n            }\r\n            if (logLevelPriority[level] >= minimalPriority) {\r\n                defaultOnLog(level, normalizeLog(handledLog));\r\n            }\r\n        });\r\n    }\r\n    return defaultOnLog;\r\n};\r\nconst getDefaultOnLog = (printLog, onwarn) => onwarn\r\n    ? (level, log) => {\r\n        if (level === LOGLEVEL_WARN) {\r\n            onwarn(addLogToString(log), warning => printLog(LOGLEVEL_WARN, normalizeLog(warning)));\r\n        }\r\n        else {\r\n            printLog(level, log);\r\n        }\r\n    }\r\n    : printLog;\r\nconst addLogToString = (log) => {\r\n    Object.defineProperty(log, 'toString', {\r\n        value: () => log.message,\r\n        writable: true\r\n    });\r\n    return log;\r\n};\r\nconst normalizeLog = (log) => typeof log === 'string'\r\n    ? { message: log }\r\n    : typeof log === 'function'\r\n        ? normalizeLog(log())\r\n        : log;\r\nconst defaultPrintLog = (level, { message }) => {\r\n    switch (level) {\r\n        case LOGLEVEL_WARN: {\r\n            return console.warn(message);\r\n        }\r\n        case LOGLEVEL_DEBUG: {\r\n            return console.debug(message);\r\n        }\r\n        default: {\r\n            return console.info(message);\r\n        }\r\n    }\r\n};\r\nfunction warnUnknownOptions(passedOptions, validOptions, optionType, log, ignoredKeys = /$./) {\r\n    const validOptionSet = new Set(validOptions);\r\n    const unknownOptions = Object.keys(passedOptions).filter(key => !(validOptionSet.has(key) || ignoredKeys.test(key)));\r\n    if (unknownOptions.length > 0) {\r\n        log(LOGLEVEL_WARN, logUnknownOption(optionType, unknownOptions, [...validOptionSet].sort()));\r\n    }\r\n}\r\nconst treeshakePresets = {\r\n    recommended: {\r\n        annotations: true,\r\n        correctVarValueBeforeDeclaration: false,\r\n        manualPureFunctions: EMPTY_ARRAY,\r\n        moduleSideEffects: () => true,\r\n        propertyReadSideEffects: true,\r\n        tryCatchDeoptimization: true,\r\n        unknownGlobalSideEffects: false\r\n    },\r\n    safest: {\r\n        annotations: true,\r\n        correctVarValueBeforeDeclaration: true,\r\n        manualPureFunctions: EMPTY_ARRAY,\r\n        moduleSideEffects: () => true,\r\n        propertyReadSideEffects: true,\r\n        tryCatchDeoptimization: true,\r\n        unknownGlobalSideEffects: true\r\n    },\r\n    smallest: {\r\n        annotations: true,\r\n        correctVarValueBeforeDeclaration: false,\r\n        manualPureFunctions: EMPTY_ARRAY,\r\n        moduleSideEffects: () => false,\r\n        propertyReadSideEffects: false,\r\n        tryCatchDeoptimization: false,\r\n        unknownGlobalSideEffects: false\r\n    }\r\n};\r\nconst jsxPresets = {\r\n    preserve: {\r\n        factory: null,\r\n        fragment: null,\r\n        importSource: null,\r\n        mode: 'preserve'\r\n    },\r\n    'preserve-react': {\r\n        factory: 'React.createElement',\r\n        fragment: 'React.Fragment',\r\n        importSource: 'react',\r\n        mode: 'preserve'\r\n    },\r\n    react: {\r\n        factory: 'React.createElement',\r\n        fragment: 'React.Fragment',\r\n        importSource: 'react',\r\n        mode: 'classic'\r\n    },\r\n    'react-jsx': {\r\n        factory: 'React.createElement',\r\n        importSource: 'react',\r\n        jsxImportSource: 'react/jsx-runtime',\r\n        mode: 'automatic'\r\n    }\r\n};\r\nconst generatedCodePresets = {\r\n    es2015: {\r\n        arrowFunctions: true,\r\n        constBindings: true,\r\n        objectShorthand: true,\r\n        reservedNamesAsProps: true,\r\n        symbols: true\r\n    },\r\n    es5: {\r\n        arrowFunctions: false,\r\n        constBindings: false,\r\n        objectShorthand: false,\r\n        reservedNamesAsProps: true,\r\n        symbols: false\r\n    }\r\n};\r\nconst objectifyOption = (value) => value && typeof value === 'object' ? value : {};\r\nconst objectifyOptionWithPresets = (presets, optionName, urlSnippet, additionalValues) => (value) => {\r\n    if (typeof value === 'string') {\r\n        const preset = presets[value];\r\n        if (preset) {\r\n            return preset;\r\n        }\r\n        error(logInvalidOption(optionName, urlSnippet, `valid values are ${additionalValues}${printQuotedStringList(Object.keys(presets))}. You can also supply an object for more fine-grained control`, value));\r\n    }\r\n    return objectifyOption(value);\r\n};\r\nconst getOptionWithPreset = (value, presets, optionName, urlSnippet, additionalValues) => {\r\n    const presetName = value?.preset;\r\n    if (presetName) {\r\n        const preset = presets[presetName];\r\n        if (preset) {\r\n            return { ...preset, ...value };\r\n        }\r\n        else {\r\n            error(logInvalidOption(`${optionName}.preset`, urlSnippet, `valid values are ${printQuotedStringList(Object.keys(presets))}`, presetName));\r\n        }\r\n    }\r\n    return objectifyOptionWithPresets(presets, optionName, urlSnippet, additionalValues)(value);\r\n};\r\nconst normalizePluginOption = async (plugins) => (await asyncFlatten([plugins])).filter(Boolean);\r\n\r\nasync function transform(source, module, pluginDriver, log) {\r\n    const id = module.id;\r\n    const sourcemapChain = [];\r\n    let originalSourcemap = source.map === null ? null : decodedSourcemap(source.map);\r\n    const originalCode = source.code;\r\n    let ast = source.ast;\r\n    const transformDependencies = [];\r\n    const emittedFiles = [];\r\n    let customTransformCache = false;\r\n    const useCustomTransformCache = () => (customTransformCache = true);\r\n    let pluginName = '';\r\n    let currentSource = source.code;\r\n    function transformReducer(previousCode, result, plugin) {\r\n        let code;\r\n        let map;\r\n        if (typeof result === 'string') {\r\n            code = result;\r\n        }\r\n        else if (result && typeof result === 'object') {\r\n            module.updateOptions(result);\r\n            if (result.code == null) {\r\n                if (result.map || result.ast) {\r\n                    log(LOGLEVEL_WARN, logNoTransformMapOrAstWithoutCode(plugin.name));\r\n                }\r\n                return previousCode;\r\n            }\r\n            ({ code, map, ast } = result);\r\n        }\r\n        else {\r\n            return previousCode;\r\n        }\r\n        // strict null check allows 'null' maps to not be pushed to the chain,\r\n        // while 'undefined' gets the missing map warning\r\n        if (map !== null) {\r\n            sourcemapChain.push(decodedSourcemap(typeof map === 'string' ? JSON.parse(map) : map) || {\r\n                missing: true,\r\n                plugin: plugin.name\r\n            });\r\n        }\r\n        currentSource = code;\r\n        return code;\r\n    }\r\n    const getLogHandler = (handler) => (log, pos) => {\r\n        log = normalizeLog(log);\r\n        if (pos)\r\n            augmentCodeLocation(log, pos, currentSource, id);\r\n        log.id = id;\r\n        log.hook = 'transform';\r\n        handler(log);\r\n    };\r\n    let code;\r\n    try {\r\n        code = await pluginDriver.hookReduceArg0('transform', [currentSource, id], transformReducer, (pluginContext, plugin) => {\r\n            pluginName = plugin.name;\r\n            return {\r\n                ...pluginContext,\r\n                addWatchFile(id) {\r\n                    transformDependencies.push(id);\r\n                    pluginContext.addWatchFile(id);\r\n                },\r\n                cache: customTransformCache\r\n                    ? pluginContext.cache\r\n                    : getTrackedPluginCache(pluginContext.cache, useCustomTransformCache),\r\n                debug: getLogHandler(pluginContext.debug),\r\n                emitFile(emittedFile) {\r\n                    emittedFiles.push(emittedFile);\r\n                    return pluginDriver.emitFile(emittedFile);\r\n                },\r\n                error(error_, pos) {\r\n                    if (typeof error_ === 'string')\r\n                        error_ = { message: error_ };\r\n                    if (pos)\r\n                        augmentCodeLocation(error_, pos, currentSource, id);\r\n                    error_.id = id;\r\n                    error_.hook = 'transform';\r\n                    return pluginContext.error(error_);\r\n                },\r\n                getCombinedSourcemap() {\r\n                    const combinedMap = collapseSourcemap(id, originalCode, originalSourcemap, sourcemapChain, log);\r\n                    if (!combinedMap) {\r\n                        const magicString = new MagicString(originalCode);\r\n                        return magicString.generateMap({ hires: true, includeContent: true, source: id });\r\n                    }\r\n                    if (originalSourcemap !== combinedMap) {\r\n                        originalSourcemap = combinedMap;\r\n                        sourcemapChain.length = 0;\r\n                    }\r\n                    return new SourceMap({\r\n                        ...combinedMap,\r\n                        file: null,\r\n                        sourcesContent: combinedMap.sourcesContent\r\n                    });\r\n                },\r\n                info: getLogHandler(pluginContext.info),\r\n                setAssetSource() {\r\n                    return this.error(logInvalidSetAssetSourceCall());\r\n                },\r\n                warn: getLogHandler(pluginContext.warn)\r\n            };\r\n        });\r\n    }\r\n    catch (error_) {\r\n        return error(logPluginError(error_, pluginName, { hook: 'transform', id }));\r\n    }\r\n    if (!customTransformCache && // files emitted by a transform hook need to be emitted again if the hook is skipped\r\n        emittedFiles.length > 0)\r\n        module.transformFiles = emittedFiles;\r\n    return {\r\n        ast,\r\n        code,\r\n        customTransformCache,\r\n        originalCode,\r\n        originalSourcemap,\r\n        sourcemapChain,\r\n        transformDependencies\r\n    };\r\n}\r\n\r\nconst RESOLVE_DEPENDENCIES = 'resolveDependencies';\r\nclass ModuleLoader {\r\n    constructor(graph, modulesById, options, pluginDriver) {\r\n        this.graph = graph;\r\n        this.modulesById = modulesById;\r\n        this.options = options;\r\n        this.pluginDriver = pluginDriver;\r\n        this.implicitEntryModules = new Set();\r\n        this.indexedEntryModules = [];\r\n        this.latestLoadModulesPromise = Promise.resolve();\r\n        this.moduleLoadPromises = new Map();\r\n        this.modulesWithLoadedDependencies = new Set();\r\n        this.nextChunkNamePriority = 0;\r\n        this.nextEntryModuleIndex = 0;\r\n        this.resolveId = async (source, importer, customOptions, isEntry, attributes, skip = null) => this.getResolvedIdWithDefaults(this.getNormalizedResolvedIdWithoutDefaults(this.options.external(source, importer, false)\r\n            ? false\r\n            : await resolveId(source, importer, this.options.preserveSymlinks, this.pluginDriver, this.resolveId, skip, customOptions, typeof isEntry === 'boolean' ? isEntry : !importer, attributes, this.options.fs), importer, source), attributes);\r\n        this.hasModuleSideEffects = options.treeshake\r\n            ? options.treeshake.moduleSideEffects\r\n            : () => true;\r\n    }\r\n    async addAdditionalModules(unresolvedModules, isAddForManualChunks) {\r\n        const result = this.extendLoadModulesPromise(Promise.all(unresolvedModules.map(id => this.loadEntryModule(id, false, undefined, null, isAddForManualChunks))));\r\n        await this.awaitLoadModulesPromise();\r\n        return result;\r\n    }\r\n    async addEntryModules(unresolvedEntryModules, isUserDefined) {\r\n        const firstEntryModuleIndex = this.nextEntryModuleIndex;\r\n        this.nextEntryModuleIndex += unresolvedEntryModules.length;\r\n        const firstChunkNamePriority = this.nextChunkNamePriority;\r\n        this.nextChunkNamePriority += unresolvedEntryModules.length;\r\n        const newEntryModules = await this.extendLoadModulesPromise(Promise.all(unresolvedEntryModules.map(({ id, importer }) => this.loadEntryModule(id, true, importer, null))).then(entryModules => {\r\n            for (const [index, entryModule] of entryModules.entries()) {\r\n                entryModule.isUserDefinedEntryPoint =\r\n                    entryModule.isUserDefinedEntryPoint || isUserDefined;\r\n                addChunkNamesToModule(entryModule, unresolvedEntryModules[index], isUserDefined, firstChunkNamePriority + index);\r\n                const existingIndexedModule = this.indexedEntryModules.find(indexedModule => indexedModule.module === entryModule);\r\n                if (existingIndexedModule) {\r\n                    existingIndexedModule.index = Math.min(existingIndexedModule.index, firstEntryModuleIndex + index);\r\n                }\r\n                else {\r\n                    this.indexedEntryModules.push({\r\n                        index: firstEntryModuleIndex + index,\r\n                        module: entryModule\r\n                    });\r\n                }\r\n            }\r\n            this.indexedEntryModules.sort(({ index: indexA }, { index: indexB }) => indexA > indexB ? 1 : -1);\r\n            return entryModules;\r\n        }));\r\n        await this.awaitLoadModulesPromise();\r\n        return {\r\n            entryModules: this.indexedEntryModules.map(({ module }) => module),\r\n            implicitEntryModules: [...this.implicitEntryModules],\r\n            newEntryModules\r\n        };\r\n    }\r\n    async emitChunk({ fileName, id, importer, name, implicitlyLoadedAfterOneOf, preserveSignature }) {\r\n        const unresolvedModule = {\r\n            fileName: fileName || null,\r\n            id,\r\n            importer,\r\n            name: name || null\r\n        };\r\n        const module = implicitlyLoadedAfterOneOf\r\n            ? await this.addEntryWithImplicitDependants(unresolvedModule, implicitlyLoadedAfterOneOf)\r\n            : (await this.addEntryModules([unresolvedModule], false)).newEntryModules[0];\r\n        if (preserveSignature != null) {\r\n            module.preserveSignature = preserveSignature;\r\n        }\r\n        return module;\r\n    }\r\n    async preloadModule(resolvedId) {\r\n        const module = await this.fetchModule(this.getResolvedIdWithDefaults(resolvedId, EMPTY_OBJECT), undefined, false, resolvedId.resolveDependencies ? RESOLVE_DEPENDENCIES : true);\r\n        return module.info;\r\n    }\r\n    addEntryWithImplicitDependants(unresolvedModule, implicitlyLoadedAfter) {\r\n        const chunkNamePriority = this.nextChunkNamePriority++;\r\n        return this.extendLoadModulesPromise(this.loadEntryModule(unresolvedModule.id, false, unresolvedModule.importer, null).then(async (entryModule) => {\r\n            addChunkNamesToModule(entryModule, unresolvedModule, false, chunkNamePriority);\r\n            if (!entryModule.info.isEntry) {\r\n                const implicitlyLoadedAfterModules = await Promise.all(implicitlyLoadedAfter.map(id => this.loadEntryModule(id, false, unresolvedModule.importer, entryModule.id)));\r\n                // We need to check again if this is still an entry module as these\r\n                // changes need to be performed atomically to avoid race conditions\r\n                // if the same module is re-emitted as an entry module.\r\n                // The inverse changes happen in \"handleExistingModule\"\r\n                if (!entryModule.info.isEntry) {\r\n                    this.implicitEntryModules.add(entryModule);\r\n                    for (const module of implicitlyLoadedAfterModules) {\r\n                        entryModule.implicitlyLoadedAfter.add(module);\r\n                    }\r\n                    for (const dependant of entryModule.implicitlyLoadedAfter) {\r\n                        dependant.implicitlyLoadedBefore.add(entryModule);\r\n                    }\r\n                }\r\n            }\r\n            return entryModule;\r\n        }));\r\n    }\r\n    async addModuleSource(id, importer, module) {\r\n        let source;\r\n        try {\r\n            source = await this.graph.fileOperationQueue.run(async () => {\r\n                const content = await this.pluginDriver.hookFirst('load', [id]);\r\n                if (content !== null)\r\n                    return content;\r\n                this.graph.watchFiles[id] = true;\r\n                return (await this.options.fs.readFile(id, { encoding: 'utf8' }));\r\n            });\r\n        }\r\n        catch (error_) {\r\n            let message = `Could not load ${id}`;\r\n            if (importer)\r\n                message += ` (imported by ${relativeId(importer)})`;\r\n            message += `: ${error_.message}`;\r\n            error_.message = message;\r\n            throw error_;\r\n        }\r\n        const sourceDescription = typeof source === 'string'\r\n            ? { code: source }\r\n            : source != null && typeof source === 'object' && typeof source.code === 'string'\r\n                ? source\r\n                : error(logBadLoader(id));\r\n        sourceDescription.code = stripBom(sourceDescription.code);\r\n        const cachedModule = this.graph.cachedModules.get(id);\r\n        if (cachedModule &&\r\n            !cachedModule.customTransformCache &&\r\n            cachedModule.originalCode === sourceDescription.code &&\r\n            !(await this.pluginDriver.hookFirst('shouldTransformCachedModule', [\r\n                {\r\n                    ast: cachedModule.ast,\r\n                    code: cachedModule.code,\r\n                    id: cachedModule.id,\r\n                    meta: cachedModule.meta,\r\n                    moduleSideEffects: cachedModule.moduleSideEffects,\r\n                    resolvedSources: cachedModule.resolvedIds,\r\n                    syntheticNamedExports: cachedModule.syntheticNamedExports\r\n                }\r\n            ]))) {\r\n            if (cachedModule.transformFiles) {\r\n                for (const emittedFile of cachedModule.transformFiles)\r\n                    this.pluginDriver.emitFile(emittedFile);\r\n            }\r\n            await module.setSource(cachedModule);\r\n        }\r\n        else {\r\n            module.updateOptions(sourceDescription);\r\n            await module.setSource(await transform(sourceDescription, module, this.pluginDriver, this.options.onLog));\r\n        }\r\n    }\r\n    async awaitLoadModulesPromise() {\r\n        let startingPromise;\r\n        do {\r\n            startingPromise = this.latestLoadModulesPromise;\r\n            await startingPromise;\r\n        } while (startingPromise !== this.latestLoadModulesPromise);\r\n    }\r\n    extendLoadModulesPromise(loadNewModulesPromise) {\r\n        this.latestLoadModulesPromise = Promise.all([\r\n            loadNewModulesPromise,\r\n            this.latestLoadModulesPromise\r\n        ]);\r\n        this.latestLoadModulesPromise.catch(() => {\r\n            /* Avoid unhandled Promise rejections */\r\n        });\r\n        return loadNewModulesPromise;\r\n    }\r\n    async fetchDynamicDependencies(module, resolveDynamicImportPromises) {\r\n        const dependencies = await Promise.all(resolveDynamicImportPromises.map(resolveDynamicImportPromise => resolveDynamicImportPromise.then(async ([dynamicImport, resolvedId]) => {\r\n            if (resolvedId === null)\r\n                return null;\r\n            if (typeof resolvedId === 'string') {\r\n                dynamicImport.resolution = resolvedId;\r\n                return null;\r\n            }\r\n            return (dynamicImport.resolution = await this.fetchResolvedDependency(relativeId(resolvedId.id), module.id, resolvedId));\r\n        })));\r\n        for (const dependency of dependencies) {\r\n            if (dependency) {\r\n                module.dynamicDependencies.add(dependency);\r\n                dependency.dynamicImporters.push(module.id);\r\n            }\r\n        }\r\n    }\r\n    // If this is a preload, then this method always waits for the dependencies of\r\n    // the module to be resolved.\r\n    // Otherwise, if the module does not exist, it waits for the module and all\r\n    // its dependencies to be loaded.\r\n    // Otherwise, it returns immediately.\r\n    async fetchModule({ attributes, id, meta, moduleSideEffects, syntheticNamedExports }, importer, isEntry, isPreload) {\r\n        const existingModule = this.modulesById.get(id);\r\n        if (existingModule instanceof Module) {\r\n            if (importer && doAttributesDiffer(attributes, existingModule.info.attributes)) {\r\n                this.options.onLog(LOGLEVEL_WARN, logInconsistentImportAttributes(existingModule.info.attributes, attributes, id, importer));\r\n            }\r\n            await this.handleExistingModule(existingModule, isEntry, isPreload);\r\n            return existingModule;\r\n        }\r\n        if (existingModule instanceof ExternalModule) {\r\n            return error(logExternalModulesCannotBeTransformedToModules(existingModule.id));\r\n        }\r\n        const module = new Module(this.graph, id, this.options, isEntry, moduleSideEffects, syntheticNamedExports, meta, attributes);\r\n        this.modulesById.set(id, module);\r\n        const loadPromise = this.addModuleSource(id, importer, module).then(() => [\r\n            this.getResolveStaticDependencyPromises(module),\r\n            this.getResolveDynamicImportPromises(module),\r\n            loadAndResolveDependenciesPromise\r\n        ]);\r\n        const loadAndResolveDependenciesPromise = waitForDependencyResolution(loadPromise).then(() => this.pluginDriver.hookParallel('moduleParsed', [module.info]));\r\n        loadAndResolveDependenciesPromise.catch(() => {\r\n            /* avoid unhandled promise rejections */\r\n        });\r\n        this.moduleLoadPromises.set(module, loadPromise);\r\n        const resolveDependencyPromises = await loadPromise;\r\n        if (!isPreload) {\r\n            await this.fetchModuleDependencies(module, ...resolveDependencyPromises);\r\n        }\r\n        else if (isPreload === RESOLVE_DEPENDENCIES) {\r\n            await loadAndResolveDependenciesPromise;\r\n        }\r\n        return module;\r\n    }\r\n    async fetchModuleDependencies(module, resolveStaticDependencyPromises, resolveDynamicDependencyPromises, loadAndResolveDependenciesPromise) {\r\n        if (this.modulesWithLoadedDependencies.has(module)) {\r\n            return;\r\n        }\r\n        this.modulesWithLoadedDependencies.add(module);\r\n        await Promise.all([\r\n            this.fetchStaticDependencies(module, resolveStaticDependencyPromises),\r\n            this.fetchDynamicDependencies(module, resolveDynamicDependencyPromises)\r\n        ]);\r\n        module.linkImports();\r\n        // To handle errors when resolving dependencies or in moduleParsed\r\n        await loadAndResolveDependenciesPromise;\r\n    }\r\n    fetchResolvedDependency(source, importer, resolvedId) {\r\n        if (resolvedId.external) {\r\n            const { attributes, external, id, moduleSideEffects, meta } = resolvedId;\r\n            let externalModule = this.modulesById.get(id);\r\n            if (!externalModule) {\r\n                externalModule = new ExternalModule(this.options, id, moduleSideEffects, meta, external !== 'absolute' && isAbsolute$1(id), attributes);\r\n                this.modulesById.set(id, externalModule);\r\n            }\r\n            else if (!(externalModule instanceof ExternalModule)) {\r\n                return error(logInternalIdCannotBeExternal(source, importer));\r\n            }\r\n            else if (doAttributesDiffer(externalModule.info.attributes, attributes)) {\r\n                this.options.onLog(LOGLEVEL_WARN, logInconsistentImportAttributes(externalModule.info.attributes, attributes, source, importer));\r\n            }\r\n            return Promise.resolve(externalModule);\r\n        }\r\n        return this.fetchModule(resolvedId, importer, false, false);\r\n    }\r\n    async fetchStaticDependencies(module, resolveStaticDependencyPromises) {\r\n        for (const dependency of await Promise.all(resolveStaticDependencyPromises.map(resolveStaticDependencyPromise => resolveStaticDependencyPromise.then(([source, resolvedId]) => this.fetchResolvedDependency(source, module.id, resolvedId))))) {\r\n            module.dependencies.add(dependency);\r\n            dependency.importers.push(module.id);\r\n        }\r\n        if (!this.options.treeshake || module.info.moduleSideEffects === 'no-treeshake') {\r\n            for (const dependency of module.dependencies) {\r\n                if (dependency instanceof Module) {\r\n                    dependency.importedFromNotTreeshaken = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getNormalizedResolvedIdWithoutDefaults(resolveIdResult, importer, source) {\r\n        const { makeAbsoluteExternalsRelative } = this.options;\r\n        if (resolveIdResult) {\r\n            if (typeof resolveIdResult === 'object') {\r\n                const external = resolveIdResult.external || this.options.external(resolveIdResult.id, importer, true);\r\n                return {\r\n                    ...resolveIdResult,\r\n                    external: external &&\r\n                        (external === 'relative' ||\r\n                            !isAbsolute$1(resolveIdResult.id) ||\r\n                            (external === true &&\r\n                                isNotAbsoluteExternal(resolveIdResult.id, source, makeAbsoluteExternalsRelative)) ||\r\n                            'absolute')\r\n                };\r\n            }\r\n            const external = this.options.external(resolveIdResult, importer, true);\r\n            return {\r\n                external: external &&\r\n                    (isNotAbsoluteExternal(resolveIdResult, source, makeAbsoluteExternalsRelative) ||\r\n                        'absolute'),\r\n                id: external && makeAbsoluteExternalsRelative\r\n                    ? normalizeRelativeExternalId(resolveIdResult, importer)\r\n                    : resolveIdResult\r\n            };\r\n        }\r\n        const id = makeAbsoluteExternalsRelative\r\n            ? normalizeRelativeExternalId(source, importer)\r\n            : source;\r\n        if (resolveIdResult !== false && !this.options.external(id, importer, true)) {\r\n            return null;\r\n        }\r\n        return {\r\n            external: isNotAbsoluteExternal(id, source, makeAbsoluteExternalsRelative) || 'absolute',\r\n            id\r\n        };\r\n    }\r\n    getResolveDynamicImportPromises(module) {\r\n        return module.dynamicImports.map(async (dynamicImport) => {\r\n            const resolvedId = await this.resolveDynamicImport(module, dynamicImport.argument, module.id, getAttributesFromImportExpression(dynamicImport.node));\r\n            if (!resolvedId || typeof resolvedId === 'string') {\r\n                dynamicImport.node.shouldIncludeDynamicAttributes = true;\r\n            }\r\n            else {\r\n                dynamicImport.node.shouldIncludeDynamicAttributes = !!resolvedId.external;\r\n                dynamicImport.id = resolvedId.id;\r\n            }\r\n            return [dynamicImport, resolvedId];\r\n        });\r\n    }\r\n    getResolveStaticDependencyPromises(module) {\r\n        return Array.from(module.sourcesWithAttributes, async ([source, attributes]) => [\r\n            source,\r\n            (module.resolvedIds[source] =\r\n                module.resolvedIds[source] ||\r\n                    this.handleInvalidResolvedId(await this.resolveId(source, module.id, EMPTY_OBJECT, false, attributes), source, module.id, attributes))\r\n        ]);\r\n    }\r\n    getResolvedIdWithDefaults(resolvedId, attributes) {\r\n        if (!resolvedId) {\r\n            return null;\r\n        }\r\n        const external = resolvedId.external || false;\r\n        return {\r\n            attributes: resolvedId.attributes || attributes,\r\n            external,\r\n            id: resolvedId.id,\r\n            meta: resolvedId.meta || {},\r\n            moduleSideEffects: resolvedId.moduleSideEffects ?? this.hasModuleSideEffects(resolvedId.id, !!external),\r\n            resolvedBy: resolvedId.resolvedBy ?? 'rollup',\r\n            syntheticNamedExports: resolvedId.syntheticNamedExports ?? false\r\n        };\r\n    }\r\n    async handleExistingModule(module, isEntry, isPreload) {\r\n        const loadPromise = this.moduleLoadPromises.get(module);\r\n        if (isPreload) {\r\n            return isPreload === RESOLVE_DEPENDENCIES\r\n                ? waitForDependencyResolution(loadPromise)\r\n                : loadPromise;\r\n        }\r\n        if (isEntry) {\r\n            // This reverts the changes in addEntryWithImplicitDependants and needs to\r\n            // be performed atomically\r\n            module.info.isEntry = true;\r\n            this.implicitEntryModules.delete(module);\r\n            for (const dependant of module.implicitlyLoadedAfter) {\r\n                dependant.implicitlyLoadedBefore.delete(module);\r\n            }\r\n            module.implicitlyLoadedAfter.clear();\r\n        }\r\n        return this.fetchModuleDependencies(module, ...(await loadPromise));\r\n    }\r\n    handleInvalidResolvedId(resolvedId, source, importer, attributes) {\r\n        if (resolvedId === null) {\r\n            if (isRelative(source)) {\r\n                return error(logUnresolvedImport(source, importer));\r\n            }\r\n            this.options.onLog(LOGLEVEL_WARN, logUnresolvedImportTreatedAsExternal(source, importer));\r\n            return {\r\n                attributes,\r\n                external: true,\r\n                id: source,\r\n                meta: {},\r\n                moduleSideEffects: this.hasModuleSideEffects(source, true),\r\n                resolvedBy: 'rollup',\r\n                syntheticNamedExports: false\r\n            };\r\n        }\r\n        else if (resolvedId.external && resolvedId.syntheticNamedExports) {\r\n            this.options.onLog(LOGLEVEL_WARN, logExternalSyntheticExports(source, importer));\r\n        }\r\n        return resolvedId;\r\n    }\r\n    async loadEntryModule(unresolvedId, isEntry, importer, implicitlyLoadedBefore, isLoadForManualChunks = false) {\r\n        const resolveIdResult = await resolveId(unresolvedId, importer, this.options.preserveSymlinks, this.pluginDriver, this.resolveId, null, EMPTY_OBJECT, true, EMPTY_OBJECT, this.options.fs);\r\n        if (resolveIdResult == null) {\r\n            return error(implicitlyLoadedBefore === null\r\n                ? logUnresolvedEntry(unresolvedId)\r\n                : logUnresolvedImplicitDependant(unresolvedId, implicitlyLoadedBefore));\r\n        }\r\n        const isExternalModules = typeof resolveIdResult === 'object' && resolveIdResult.external;\r\n        if (resolveIdResult === false || isExternalModules) {\r\n            return error(implicitlyLoadedBefore === null\r\n                ? isExternalModules && isLoadForManualChunks\r\n                    ? logExternalModulesCannotBeIncludedInManualChunks(unresolvedId)\r\n                    : logEntryCannotBeExternal(unresolvedId)\r\n                : logImplicitDependantCannotBeExternal(unresolvedId, implicitlyLoadedBefore));\r\n        }\r\n        return this.fetchModule(this.getResolvedIdWithDefaults(typeof resolveIdResult === 'object'\r\n            ? resolveIdResult\r\n            : { id: resolveIdResult }, EMPTY_OBJECT), undefined, isEntry, false);\r\n    }\r\n    async resolveDynamicImport(module, specifier, importer, attributes) {\r\n        const resolution = await this.pluginDriver.hookFirst('resolveDynamicImport', [\r\n            specifier,\r\n            importer,\r\n            { attributes }\r\n        ]);\r\n        if (typeof specifier !== 'string') {\r\n            if (typeof resolution === 'string') {\r\n                return resolution;\r\n            }\r\n            if (!resolution) {\r\n                return null;\r\n            }\r\n            return this.getResolvedIdWithDefaults(resolution, attributes);\r\n        }\r\n        if (resolution == null) {\r\n            const existingResolution = module.resolvedIds[specifier];\r\n            if (existingResolution) {\r\n                if (doAttributesDiffer(existingResolution.attributes, attributes)) {\r\n                    this.options.onLog(LOGLEVEL_WARN, logInconsistentImportAttributes(existingResolution.attributes, attributes, specifier, importer));\r\n                }\r\n                return existingResolution;\r\n            }\r\n            return (module.resolvedIds[specifier] = this.handleInvalidResolvedId(await this.resolveId(specifier, module.id, EMPTY_OBJECT, false, attributes), specifier, module.id, attributes));\r\n        }\r\n        return this.handleInvalidResolvedId(this.getResolvedIdWithDefaults(this.getNormalizedResolvedIdWithoutDefaults(resolution, importer, specifier), attributes), specifier, importer, attributes);\r\n    }\r\n}\r\nfunction normalizeRelativeExternalId(source, importer) {\r\n    return isRelative(source)\r\n        ? importer\r\n            ? resolve$1(importer, '..', source)\r\n            : resolve$1(source)\r\n        : source;\r\n}\r\nfunction addChunkNamesToModule(module, { fileName, name }, isUserDefined, priority) {\r\n    if (fileName !== null) {\r\n        module.chunkFileNames.add(fileName);\r\n    }\r\n    else if (name !== null) {\r\n        // Always keep chunkNames sorted by priority\r\n        let namePosition = 0;\r\n        while (module.chunkNames[namePosition]?.priority < priority)\r\n            namePosition++;\r\n        module.chunkNames.splice(namePosition, 0, { isUserDefined, name, priority });\r\n    }\r\n}\r\nfunction isNotAbsoluteExternal(id, source, makeAbsoluteExternalsRelative) {\r\n    return (makeAbsoluteExternalsRelative === true ||\r\n        (makeAbsoluteExternalsRelative === 'ifRelativeSource' && isRelative(source)) ||\r\n        !isAbsolute$1(id));\r\n}\r\nasync function waitForDependencyResolution(loadPromise) {\r\n    const [resolveStaticDependencyPromises, resolveDynamicImportPromises] = await loadPromise;\r\n    return Promise.all([...resolveStaticDependencyPromises, ...resolveDynamicImportPromises]);\r\n}\r\n\r\nfunction generateAssetFileName(name, names, source, originalFileName, originalFileNames, sourceHash, outputOptions, bundle, inputOptions) {\r\n    const emittedName = outputOptions.sanitizeFileName(name || 'asset');\r\n    return makeUnique(renderNamePattern(typeof outputOptions.assetFileNames === 'function'\r\n        ? outputOptions.assetFileNames({\r\n            // Additionally, this should be non-enumerable in the next major\r\n            get name() {\r\n                warnDeprecation('Accessing the \"name\" property of emitted assets when generating the file name is deprecated. Use the \"names\" property instead.', URL_GENERATEBUNDLE, false, inputOptions);\r\n                return name;\r\n            },\r\n            names,\r\n            // Additionally, this should be non-enumerable in the next major\r\n            get originalFileName() {\r\n                warnDeprecation('Accessing the \"originalFileName\" property of emitted assets when generating the file name is deprecated. Use the \"originalFileNames\" property instead.', URL_GENERATEBUNDLE, false, inputOptions);\r\n                return originalFileName;\r\n            },\r\n            originalFileNames,\r\n            source,\r\n            type: 'asset'\r\n        })\r\n        : outputOptions.assetFileNames, 'output.assetFileNames', {\r\n        ext: () => extname(emittedName).slice(1),\r\n        extname: () => extname(emittedName),\r\n        hash: size => sourceHash.slice(0, Math.min(Math.max(0, size || DEFAULT_HASH_SIZE), MAX_HASH_SIZE)),\r\n        name: () => emittedName.slice(0, Math.max(0, emittedName.length - extname(emittedName).length))\r\n    }), bundle);\r\n}\r\nfunction reserveFileNameInBundle(fileName, { bundle }, log) {\r\n    if (bundle[lowercaseBundleKeys].has(fileName.toLowerCase())) {\r\n        log(LOGLEVEL_WARN, logFileNameConflict(fileName));\r\n    }\r\n    else {\r\n        bundle[fileName] = FILE_PLACEHOLDER;\r\n    }\r\n}\r\nconst emittedFileTypes = new Set(['chunk', 'asset', 'prebuilt-chunk']);\r\nfunction hasValidType(emittedFile) {\r\n    return Boolean(emittedFile &&\r\n        emittedFileTypes.has(emittedFile.type));\r\n}\r\nfunction hasValidName(emittedFile) {\r\n    const validatedName = emittedFile.fileName || emittedFile.name;\r\n    return !validatedName || (typeof validatedName === 'string' && !isPathFragment(validatedName));\r\n}\r\nfunction getValidSource(source, emittedFile, fileReferenceId) {\r\n    if (!(typeof source === 'string' || source instanceof Uint8Array)) {\r\n        const assetName = emittedFile.fileName || emittedFile.name || fileReferenceId;\r\n        return error(logFailedValidation(`Could not set source for ${typeof assetName === 'string' ? `asset \"${assetName}\"` : 'unnamed asset'}, asset source needs to be a string, Uint8Array or Buffer.`));\r\n    }\r\n    return source;\r\n}\r\nfunction getAssetFileName(file, referenceId) {\r\n    if (typeof file.fileName !== 'string') {\r\n        return error(logAssetNotFinalisedForFileName(file.name || referenceId));\r\n    }\r\n    return file.fileName;\r\n}\r\nfunction getChunkFileName(file, facadeChunkByModule) {\r\n    if (file.fileName) {\r\n        return file.fileName;\r\n    }\r\n    if (facadeChunkByModule) {\r\n        return facadeChunkByModule.get(file.module).getFileName();\r\n    }\r\n    return error(logChunkNotGeneratedForFileName(file.fileName || file.name));\r\n}\r\nclass FileEmitter {\r\n    constructor(graph, options, baseFileEmitter) {\r\n        this.graph = graph;\r\n        this.options = options;\r\n        this.facadeChunkByModule = null;\r\n        this.nextIdBase = 1;\r\n        this.output = null;\r\n        this.outputFileEmitters = [];\r\n        this.emitFile = (emittedFile) => {\r\n            if (!hasValidType(emittedFile)) {\r\n                return error(logFailedValidation(`Emitted files must be of type \"asset\", \"chunk\" or \"prebuilt-chunk\", received \"${emittedFile && emittedFile.type}\".`));\r\n            }\r\n            if (emittedFile.type === 'prebuilt-chunk') {\r\n                return this.emitPrebuiltChunk(emittedFile);\r\n            }\r\n            if (!hasValidName(emittedFile)) {\r\n                return error(logFailedValidation(`The \"fileName\" or \"name\" properties of emitted chunks and assets must be strings that are neither absolute nor relative paths, received \"${emittedFile.fileName || emittedFile.name}\".`));\r\n            }\r\n            if (emittedFile.type === 'chunk') {\r\n                return this.emitChunk(emittedFile);\r\n            }\r\n            return this.emitAsset(emittedFile);\r\n        };\r\n        this.finaliseAssets = () => {\r\n            for (const [referenceId, emittedFile] of this.filesByReferenceId) {\r\n                if (emittedFile.type === 'asset' && typeof emittedFile.fileName !== 'string')\r\n                    return error(logNoAssetSourceSet(emittedFile.name || referenceId));\r\n            }\r\n        };\r\n        this.getFileName = (fileReferenceId) => {\r\n            const emittedFile = this.filesByReferenceId.get(fileReferenceId);\r\n            if (!emittedFile)\r\n                return error(logFileReferenceIdNotFoundForFilename(fileReferenceId));\r\n            if (emittedFile.type === 'chunk') {\r\n                return getChunkFileName(emittedFile, this.facadeChunkByModule);\r\n            }\r\n            if (emittedFile.type === 'prebuilt-chunk') {\r\n                return emittedFile.fileName;\r\n            }\r\n            return getAssetFileName(emittedFile, fileReferenceId);\r\n        };\r\n        this.setAssetSource = (referenceId, requestedSource) => {\r\n            const consumedFile = this.filesByReferenceId.get(referenceId);\r\n            if (!consumedFile)\r\n                return error(logAssetReferenceIdNotFoundForSetSource(referenceId));\r\n            if (consumedFile.type !== 'asset') {\r\n                return error(logFailedValidation(`Asset sources can only be set for emitted assets but \"${referenceId}\" is an emitted chunk.`));\r\n            }\r\n            if (consumedFile.source !== undefined) {\r\n                return error(logAssetSourceAlreadySet(consumedFile.name || referenceId));\r\n            }\r\n            const source = getValidSource(requestedSource, consumedFile, referenceId);\r\n            if (this.output) {\r\n                this.finalizeAdditionalAsset(consumedFile, source, this.output);\r\n            }\r\n            else {\r\n                consumedFile.source = source;\r\n                for (const emitter of this.outputFileEmitters) {\r\n                    emitter.finalizeAdditionalAsset(consumedFile, source, emitter.output);\r\n                }\r\n            }\r\n        };\r\n        this.setChunkInformation = (facadeChunkByModule) => {\r\n            this.facadeChunkByModule = facadeChunkByModule;\r\n        };\r\n        this.setOutputBundle = (bundle, outputOptions) => {\r\n            const getHash = hasherByType[outputOptions.hashCharacters];\r\n            const output = (this.output = {\r\n                bundle,\r\n                fileNamesBySourceHash: new Map(),\r\n                getHash,\r\n                outputOptions\r\n            });\r\n            for (const emittedFile of this.filesByReferenceId.values()) {\r\n                if (emittedFile.fileName) {\r\n                    reserveFileNameInBundle(emittedFile.fileName, output, this.options.onLog);\r\n                }\r\n            }\r\n            const consumedAssetsByHash = new Map();\r\n            for (const consumedFile of this.filesByReferenceId.values()) {\r\n                if (consumedFile.type === 'asset' && consumedFile.source !== undefined) {\r\n                    if (consumedFile.fileName) {\r\n                        this.finalizeAdditionalAsset(consumedFile, consumedFile.source, output);\r\n                    }\r\n                    else {\r\n                        const sourceHash = getHash(consumedFile.source);\r\n                        getOrCreate(consumedAssetsByHash, sourceHash, () => []).push(consumedFile);\r\n                    }\r\n                }\r\n                else if (consumedFile.type === 'prebuilt-chunk') {\r\n                    this.output.bundle[consumedFile.fileName] = this.createPrebuiltChunk(consumedFile);\r\n                }\r\n            }\r\n            for (const [sourceHash, consumedFiles] of consumedAssetsByHash) {\r\n                this.finalizeAssetsWithSameSource(consumedFiles, sourceHash, output);\r\n            }\r\n        };\r\n        this.filesByReferenceId = baseFileEmitter\r\n            ? new Map(baseFileEmitter.filesByReferenceId)\r\n            : new Map();\r\n        baseFileEmitter?.addOutputFileEmitter(this);\r\n    }\r\n    addOutputFileEmitter(outputFileEmitter) {\r\n        this.outputFileEmitters.push(outputFileEmitter);\r\n    }\r\n    assignReferenceId(file, idBase) {\r\n        let referenceId = idBase;\r\n        do {\r\n            referenceId = getHash64(referenceId).slice(0, 8).replaceAll('-', '$');\r\n        } while (this.filesByReferenceId.has(referenceId) ||\r\n            this.outputFileEmitters.some(({ filesByReferenceId }) => filesByReferenceId.has(referenceId)));\r\n        file.referenceId = referenceId;\r\n        this.filesByReferenceId.set(referenceId, file);\r\n        for (const { filesByReferenceId } of this.outputFileEmitters) {\r\n            filesByReferenceId.set(referenceId, file);\r\n        }\r\n        return referenceId;\r\n    }\r\n    createPrebuiltChunk(prebuiltChunk) {\r\n        return {\r\n            code: prebuiltChunk.code,\r\n            dynamicImports: [],\r\n            exports: prebuiltChunk.exports || [],\r\n            facadeModuleId: null,\r\n            fileName: prebuiltChunk.fileName,\r\n            implicitlyLoadedBefore: [],\r\n            importedBindings: {},\r\n            imports: [],\r\n            isDynamicEntry: false,\r\n            isEntry: false,\r\n            isImplicitEntry: false,\r\n            map: prebuiltChunk.map || null,\r\n            moduleIds: [],\r\n            modules: {},\r\n            name: prebuiltChunk.fileName,\r\n            preliminaryFileName: prebuiltChunk.fileName,\r\n            referencedFiles: [],\r\n            sourcemapFileName: prebuiltChunk.sourcemapFileName || null,\r\n            type: 'chunk'\r\n        };\r\n    }\r\n    emitAsset(emittedAsset) {\r\n        const source = emittedAsset.source === undefined\r\n            ? undefined\r\n            : getValidSource(emittedAsset.source, emittedAsset, null);\r\n        const originalFileName = emittedAsset.originalFileName || null;\r\n        if (typeof originalFileName === 'string') {\r\n            this.graph.watchFiles[originalFileName] = true;\r\n        }\r\n        const consumedAsset = {\r\n            fileName: emittedAsset.fileName,\r\n            name: emittedAsset.name,\r\n            needsCodeReference: !!emittedAsset.needsCodeReference,\r\n            originalFileName,\r\n            referenceId: '',\r\n            source,\r\n            type: 'asset'\r\n        };\r\n        const referenceId = this.assignReferenceId(consumedAsset, emittedAsset.fileName || emittedAsset.name || String(this.nextIdBase++));\r\n        if (this.output) {\r\n            this.emitAssetWithReferenceId(consumedAsset, this.output);\r\n        }\r\n        else {\r\n            for (const fileEmitter of this.outputFileEmitters) {\r\n                fileEmitter.emitAssetWithReferenceId(consumedAsset, fileEmitter.output);\r\n            }\r\n        }\r\n        return referenceId;\r\n    }\r\n    emitAssetWithReferenceId(consumedAsset, output) {\r\n        const { fileName, source } = consumedAsset;\r\n        if (fileName) {\r\n            reserveFileNameInBundle(fileName, output, this.options.onLog);\r\n        }\r\n        if (source !== undefined) {\r\n            this.finalizeAdditionalAsset(consumedAsset, source, output);\r\n        }\r\n    }\r\n    emitChunk(emittedChunk) {\r\n        if (this.graph.phase > BuildPhase.LOAD_AND_PARSE) {\r\n            return error(logInvalidRollupPhaseForChunkEmission());\r\n        }\r\n        if (typeof emittedChunk.id !== 'string') {\r\n            return error(logFailedValidation(`Emitted chunks need to have a valid string id, received \"${emittedChunk.id}\"`));\r\n        }\r\n        const consumedChunk = {\r\n            fileName: emittedChunk.fileName,\r\n            module: null,\r\n            name: emittedChunk.name || emittedChunk.id,\r\n            referenceId: '',\r\n            type: 'chunk'\r\n        };\r\n        this.graph.moduleLoader\r\n            .emitChunk(emittedChunk)\r\n            .then(module => (consumedChunk.module = module))\r\n            .catch(() => {\r\n            // Avoid unhandled Promise rejection as the error will be thrown later\r\n            // once module loading has finished\r\n        });\r\n        return this.assignReferenceId(consumedChunk, emittedChunk.id);\r\n    }\r\n    emitPrebuiltChunk(emitPrebuiltChunk) {\r\n        if (typeof emitPrebuiltChunk.code !== 'string') {\r\n            return error(logFailedValidation(`Emitted prebuilt chunks need to have a valid string code, received \"${emitPrebuiltChunk.code}\".`));\r\n        }\r\n        if (typeof emitPrebuiltChunk.fileName !== 'string' ||\r\n            isPathFragment(emitPrebuiltChunk.fileName)) {\r\n            return error(logFailedValidation(`The \"fileName\" property of emitted prebuilt chunks must be strings that are neither absolute nor relative paths, received \"${emitPrebuiltChunk.fileName}\".`));\r\n        }\r\n        const consumedPrebuiltChunk = {\r\n            code: emitPrebuiltChunk.code,\r\n            exports: emitPrebuiltChunk.exports,\r\n            fileName: emitPrebuiltChunk.fileName,\r\n            map: emitPrebuiltChunk.map,\r\n            referenceId: '',\r\n            type: 'prebuilt-chunk'\r\n        };\r\n        const referenceId = this.assignReferenceId(consumedPrebuiltChunk, consumedPrebuiltChunk.fileName);\r\n        if (this.output) {\r\n            this.output.bundle[consumedPrebuiltChunk.fileName] =\r\n                this.createPrebuiltChunk(consumedPrebuiltChunk);\r\n        }\r\n        return referenceId;\r\n    }\r\n    finalizeAdditionalAsset(consumedFile, source, { bundle, fileNamesBySourceHash, getHash, outputOptions }) {\r\n        let { fileName, name, needsCodeReference, originalFileName, referenceId } = consumedFile;\r\n        // Deduplicate assets if an explicit fileName is not provided\r\n        if (!fileName) {\r\n            const sourceHash = getHash(source);\r\n            fileName = fileNamesBySourceHash.get(sourceHash);\r\n            if (!fileName) {\r\n                fileName = generateAssetFileName(name, name ? [name] : [], source, originalFileName, originalFileName ? [originalFileName] : [], sourceHash, outputOptions, bundle, this.options);\r\n                fileNamesBySourceHash.set(sourceHash, fileName);\r\n            }\r\n        }\r\n        // We must not modify the original assets to avoid interaction between outputs\r\n        const assetWithFileName = { ...consumedFile, fileName, source };\r\n        this.filesByReferenceId.set(referenceId, assetWithFileName);\r\n        const existingAsset = bundle[fileName];\r\n        if (existingAsset?.type === 'asset') {\r\n            existingAsset.needsCodeReference &&= needsCodeReference;\r\n            if (name) {\r\n                existingAsset.names.push(name);\r\n            }\r\n            if (originalFileName) {\r\n                existingAsset.originalFileNames.push(originalFileName);\r\n            }\r\n        }\r\n        else {\r\n            const { options } = this;\r\n            bundle[fileName] = {\r\n                fileName,\r\n                get name() {\r\n                    // Additionally, this should be non-enumerable in the next major\r\n                    warnDeprecation('Accessing the \"name\" property of emitted assets in the bundle is deprecated. Use the \"names\" property instead.', URL_GENERATEBUNDLE, false, options);\r\n                    return name;\r\n                },\r\n                names: name ? [name] : [],\r\n                needsCodeReference,\r\n                get originalFileName() {\r\n                    // Additionally, this should be non-enumerable in the next major\r\n                    warnDeprecation('Accessing the \"originalFileName\" property of emitted assets in the bundle is deprecated. Use the \"originalFileNames\" property instead.', URL_GENERATEBUNDLE, false, options);\r\n                    return originalFileName;\r\n                },\r\n                originalFileNames: originalFileName ? [originalFileName] : [],\r\n                source,\r\n                type: 'asset'\r\n            };\r\n        }\r\n    }\r\n    finalizeAssetsWithSameSource(consumedFiles, sourceHash, { bundle, fileNamesBySourceHash, outputOptions }) {\r\n        const { names, originalFileNames } = getNamesFromAssets(consumedFiles);\r\n        let fileName = '';\r\n        let usedConsumedFile;\r\n        let needsCodeReference = true;\r\n        for (const consumedFile of consumedFiles) {\r\n            needsCodeReference &&= consumedFile.needsCodeReference;\r\n            const assetFileName = generateAssetFileName(consumedFile.name, names, consumedFile.source, consumedFile.originalFileName, originalFileNames, sourceHash, outputOptions, bundle, this.options);\r\n            if (!fileName ||\r\n                assetFileName.length < fileName.length ||\r\n                (assetFileName.length === fileName.length && assetFileName < fileName)) {\r\n                fileName = assetFileName;\r\n                usedConsumedFile = consumedFile;\r\n            }\r\n        }\r\n        fileNamesBySourceHash.set(sourceHash, fileName);\r\n        for (const consumedFile of consumedFiles) {\r\n            // We must not modify the original assets to avoid interaction between outputs\r\n            const assetWithFileName = { ...consumedFile, fileName };\r\n            this.filesByReferenceId.set(consumedFile.referenceId, assetWithFileName);\r\n        }\r\n        const { options } = this;\r\n        bundle[fileName] = {\r\n            fileName,\r\n            get name() {\r\n                // Additionally, this should be non-enumerable in the next major\r\n                warnDeprecation('Accessing the \"name\" property of emitted assets in the bundle is deprecated. Use the \"names\" property instead.', URL_GENERATEBUNDLE, false, options);\r\n                return usedConsumedFile.name;\r\n            },\r\n            names,\r\n            needsCodeReference,\r\n            get originalFileName() {\r\n                // Additionally, this should be non-enumerable in the next major\r\n                warnDeprecation('Accessing the \"originalFileName\" property of emitted assets in the bundle is deprecated. Use the \"originalFileNames\" property instead.', URL_GENERATEBUNDLE, false, options);\r\n                return usedConsumedFile.originalFileName;\r\n            },\r\n            originalFileNames,\r\n            source: usedConsumedFile.source,\r\n            type: 'asset'\r\n        };\r\n    }\r\n}\r\nfunction getNamesFromAssets(consumedFiles) {\r\n    const names = [];\r\n    const originalFileNames = [];\r\n    for (const { name, originalFileName } of consumedFiles) {\r\n        if (typeof name === 'string') {\r\n            names.push(name);\r\n        }\r\n        if (originalFileName) {\r\n            originalFileNames.push(originalFileName);\r\n        }\r\n    }\r\n    originalFileNames.sort();\r\n    // Sort by length first and then alphabetically so that the order is stable\r\n    // and the shortest names come first\r\n    names.sort((a, b) => a.length - b.length || (a > b ? 1 : a === b ? 0 : -1));\r\n    return { names, originalFileNames };\r\n}\r\n\r\nfunction getLogHandler(level, code, logger, pluginName, logLevel) {\r\n    if (logLevelPriority[level] < logLevelPriority[logLevel]) {\r\n        return doNothing;\r\n    }\r\n    return (log, pos) => {\r\n        if (pos != null) {\r\n            logger(LOGLEVEL_WARN, logInvalidLogPosition(pluginName));\r\n        }\r\n        log = normalizeLog(log);\r\n        if (log.code && !log.pluginCode) {\r\n            log.pluginCode = log.code;\r\n        }\r\n        log.code = code;\r\n        log.plugin = pluginName;\r\n        logger(level, log);\r\n    };\r\n}\r\n\r\nfunction getPluginContext(plugin, pluginCache, graph, options, fileEmitter, existingPluginNames) {\r\n    const { logLevel, onLog } = options;\r\n    let cacheable = true;\r\n    if (typeof plugin.cacheKey !== 'string') {\r\n        if (plugin.name.startsWith(ANONYMOUS_PLUGIN_PREFIX) ||\r\n            plugin.name.startsWith(ANONYMOUS_OUTPUT_PLUGIN_PREFIX) ||\r\n            existingPluginNames.has(plugin.name)) {\r\n            cacheable = false;\r\n        }\r\n        else {\r\n            existingPluginNames.add(plugin.name);\r\n        }\r\n    }\r\n    let cacheInstance;\r\n    if (!pluginCache) {\r\n        cacheInstance = NO_CACHE;\r\n    }\r\n    else if (cacheable) {\r\n        const cacheKey = plugin.cacheKey || plugin.name;\r\n        cacheInstance = createPluginCache(pluginCache[cacheKey] || (pluginCache[cacheKey] = Object.create(null)));\r\n    }\r\n    else {\r\n        cacheInstance = getCacheForUncacheablePlugin(plugin.name);\r\n    }\r\n    return {\r\n        addWatchFile(id) {\r\n            graph.watchFiles[id] = true;\r\n        },\r\n        cache: cacheInstance,\r\n        debug: getLogHandler(LOGLEVEL_DEBUG, 'PLUGIN_LOG', onLog, plugin.name, logLevel),\r\n        emitFile: fileEmitter.emitFile.bind(fileEmitter),\r\n        error(error_) {\r\n            return error(logPluginError(normalizeLog(error_), plugin.name));\r\n        },\r\n        fs: options.fs,\r\n        getFileName: fileEmitter.getFileName,\r\n        getModuleIds: () => graph.modulesById.keys(),\r\n        getModuleInfo: graph.getModuleInfo,\r\n        getWatchFiles: () => Object.keys(graph.watchFiles),\r\n        info: getLogHandler(LOGLEVEL_INFO, 'PLUGIN_LOG', onLog, plugin.name, logLevel),\r\n        load(resolvedId) {\r\n            return graph.moduleLoader.preloadModule(resolvedId);\r\n        },\r\n        meta: {\r\n            rollupVersion: version,\r\n            watchMode: graph.watchMode\r\n        },\r\n        parse: parseAst,\r\n        resolve(source, importer, { attributes, custom, isEntry, skipSelf } = BLANK) {\r\n            skipSelf ??= true;\r\n            return graph.moduleLoader.resolveId(source, importer, custom, isEntry, attributes || EMPTY_OBJECT, skipSelf ? [{ importer, plugin, source }] : null);\r\n        },\r\n        setAssetSource: fileEmitter.setAssetSource,\r\n        warn: getLogHandler(LOGLEVEL_WARN, 'PLUGIN_WARNING', onLog, plugin.name, logLevel)\r\n    };\r\n}\r\n\r\nfunction ensureArray(items) {\r\n    if (Array.isArray(items)) {\r\n        return items.filter(Boolean);\r\n    }\r\n    if (items) {\r\n        return [items];\r\n    }\r\n    return [];\r\n}\r\n\r\nfunction getMatcherString(glob, cwd) {\r\n    if (glob.startsWith('**') || isAbsolute$1(glob)) {\r\n        return normalize(glob);\r\n    }\r\n    const resolved = resolve$1(cwd, glob);\r\n    return normalize(resolved);\r\n}\r\nfunction patternToIdFilter(pattern) {\r\n    if (pattern instanceof RegExp) {\r\n        return (id) => {\r\n            const normalizedId = normalize(id);\r\n            const result = pattern.test(normalizedId);\r\n            pattern.lastIndex = 0;\r\n            return result;\r\n        };\r\n    }\r\n    const cwd = process.cwd();\r\n    const glob = getMatcherString(pattern, cwd);\r\n    const matcher = picomatch(glob, { dot: true });\r\n    return (id) => {\r\n        const normalizedId = normalize(id);\r\n        return matcher(normalizedId);\r\n    };\r\n}\r\nfunction patternToCodeFilter(pattern) {\r\n    if (pattern instanceof RegExp) {\r\n        return (code) => {\r\n            const result = pattern.test(code);\r\n            pattern.lastIndex = 0;\r\n            return result;\r\n        };\r\n    }\r\n    return (code) => code.includes(pattern);\r\n}\r\nfunction createFilter(exclude, include) {\r\n    if (!exclude && !include) {\r\n        return;\r\n    }\r\n    return input => {\r\n        if (exclude?.some(filter => filter(input))) {\r\n            return false;\r\n        }\r\n        if (include?.some(filter => filter(input))) {\r\n            return true;\r\n        }\r\n        return !(include && include.length > 0);\r\n    };\r\n}\r\nfunction normalizeFilter(filter) {\r\n    if (typeof filter === 'string' || filter instanceof RegExp) {\r\n        return {\r\n            include: [filter]\r\n        };\r\n    }\r\n    if (Array.isArray(filter)) {\r\n        return {\r\n            include: filter\r\n        };\r\n    }\r\n    return {\r\n        exclude: filter.exclude ? ensureArray(filter.exclude) : undefined,\r\n        include: filter.include ? ensureArray(filter.include) : undefined\r\n    };\r\n}\r\nfunction createIdFilter(filter) {\r\n    if (!filter)\r\n        return;\r\n    const { exclude, include } = normalizeFilter(filter);\r\n    const excludeFilter = exclude?.map(patternToIdFilter);\r\n    const includeFilter = include?.map(patternToIdFilter);\r\n    return createFilter(excludeFilter, includeFilter);\r\n}\r\nfunction createCodeFilter(filter) {\r\n    if (!filter)\r\n        return;\r\n    const { exclude, include } = normalizeFilter(filter);\r\n    const excludeFilter = exclude?.map(patternToCodeFilter);\r\n    const includeFilter = include?.map(patternToCodeFilter);\r\n    return createFilter(excludeFilter, includeFilter);\r\n}\r\nfunction createFilterForId(filter) {\r\n    const filterFunction = createIdFilter(filter);\r\n    return filterFunction ? id => !!filterFunction(id) : undefined;\r\n}\r\nfunction createFilterForTransform(idFilter, codeFilter) {\r\n    if (!idFilter && !codeFilter)\r\n        return;\r\n    const idFilterFunction = createIdFilter(idFilter);\r\n    const codeFilterFunction = createCodeFilter(codeFilter);\r\n    return (id, code) => {\r\n        let fallback = true;\r\n        if (idFilterFunction) {\r\n            fallback &&= idFilterFunction(id);\r\n        }\r\n        if (!fallback) {\r\n            return false;\r\n        }\r\n        if (codeFilterFunction) {\r\n            fallback &&= codeFilterFunction(code);\r\n        }\r\n        return fallback;\r\n    };\r\n}\r\n\r\n// This will make sure no input hook is omitted\r\nconst inputHookNames = {\r\n    buildEnd: 1,\r\n    buildStart: 1,\r\n    closeBundle: 1,\r\n    closeWatcher: 1,\r\n    load: 1,\r\n    moduleParsed: 1,\r\n    onLog: 1,\r\n    options: 1,\r\n    resolveDynamicImport: 1,\r\n    resolveId: 1,\r\n    shouldTransformCachedModule: 1,\r\n    transform: 1,\r\n    watchChange: 1\r\n};\r\nconst inputHooks = Object.keys(inputHookNames);\r\nclass PluginDriver {\r\n    constructor(graph, options, userPlugins, pluginCache, basePluginDriver) {\r\n        this.graph = graph;\r\n        this.options = options;\r\n        this.pluginCache = pluginCache;\r\n        this.sortedPlugins = new Map();\r\n        this.unfulfilledActions = new Set();\r\n        this.compiledPluginFilters = {\r\n            idOnlyFilter: new WeakMap(),\r\n            transformFilter: new WeakMap()\r\n        };\r\n        this.fileEmitter = new FileEmitter(graph, options, basePluginDriver && basePluginDriver.fileEmitter);\r\n        this.emitFile = this.fileEmitter.emitFile.bind(this.fileEmitter);\r\n        this.getFileName = this.fileEmitter.getFileName.bind(this.fileEmitter);\r\n        this.finaliseAssets = this.fileEmitter.finaliseAssets.bind(this.fileEmitter);\r\n        this.setChunkInformation = this.fileEmitter.setChunkInformation.bind(this.fileEmitter);\r\n        this.setOutputBundle = this.fileEmitter.setOutputBundle.bind(this.fileEmitter);\r\n        this.plugins = [...(basePluginDriver ? basePluginDriver.plugins : []), ...userPlugins];\r\n        const existingPluginNames = new Set();\r\n        this.pluginContexts = new Map(this.plugins.map(plugin => [\r\n            plugin,\r\n            getPluginContext(plugin, pluginCache, graph, options, this.fileEmitter, existingPluginNames)\r\n        ]));\r\n        if (basePluginDriver) {\r\n            for (const plugin of userPlugins) {\r\n                for (const hook of inputHooks) {\r\n                    if (hook in plugin) {\r\n                        options.onLog(LOGLEVEL_WARN, logInputHookInOutputPlugin(plugin.name, hook));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    createOutputPluginDriver(plugins) {\r\n        return new PluginDriver(this.graph, this.options, plugins, this.pluginCache, this);\r\n    }\r\n    getUnfulfilledHookActions() {\r\n        return this.unfulfilledActions;\r\n    }\r\n    // chains, first non-null result stops and returns\r\n    hookFirst(hookName, parameters, replaceContext, skipped) {\r\n        return this.hookFirstAndGetPlugin(hookName, parameters, replaceContext, skipped).then(result => result && result[0]);\r\n    }\r\n    // chains, first non-null result stops and returns result and last plugin\r\n    async hookFirstAndGetPlugin(hookName, parameters, replaceContext, skipped) {\r\n        for (const plugin of this.getSortedPlugins(hookName)) {\r\n            if (skipped?.has(plugin))\r\n                continue;\r\n            const result = await this.runHook(hookName, parameters, plugin, replaceContext);\r\n            if (result != null)\r\n                return [result, plugin];\r\n        }\r\n        return null;\r\n    }\r\n    // chains synchronously, first non-null result stops and returns\r\n    hookFirstSync(hookName, parameters, replaceContext) {\r\n        for (const plugin of this.getSortedPlugins(hookName)) {\r\n            const result = this.runHookSync(hookName, parameters, plugin, replaceContext);\r\n            if (result != null)\r\n                return result;\r\n        }\r\n        return null;\r\n    }\r\n    // parallel, ignores returns\r\n    async hookParallel(hookName, parameters, replaceContext) {\r\n        const parallelPromises = [];\r\n        for (const plugin of this.getSortedPlugins(hookName)) {\r\n            if (plugin[hookName].sequential) {\r\n                await Promise.all(parallelPromises);\r\n                parallelPromises.length = 0;\r\n                await this.runHook(hookName, parameters, plugin, replaceContext);\r\n            }\r\n            else {\r\n                parallelPromises.push(this.runHook(hookName, parameters, plugin, replaceContext));\r\n            }\r\n        }\r\n        await Promise.all(parallelPromises);\r\n    }\r\n    // chains, reduces returned value, handling the reduced value as the first hook argument\r\n    hookReduceArg0(hookName, [argument0, ...rest], reduce, replaceContext) {\r\n        let promise = Promise.resolve(argument0);\r\n        for (const plugin of this.getSortedPlugins(hookName)) {\r\n            promise = promise.then(argument0 => this.runHook(hookName, [argument0, ...rest], plugin, replaceContext).then(result => reduce.call(this.pluginContexts.get(plugin), argument0, result, plugin)));\r\n        }\r\n        return promise;\r\n    }\r\n    // chains synchronously, reduces returned value, handling the reduced value as the first hook argument\r\n    hookReduceArg0Sync(hookName, [argument0, ...rest], reduce, replaceContext) {\r\n        for (const plugin of this.getSortedPlugins(hookName)) {\r\n            const parameters = [argument0, ...rest];\r\n            const result = this.runHookSync(hookName, parameters, plugin, replaceContext);\r\n            argument0 = reduce.call(this.pluginContexts.get(plugin), argument0, result, plugin);\r\n        }\r\n        return argument0;\r\n    }\r\n    // chains, reduces returned value to type string, handling the reduced value separately. permits hooks as values.\r\n    async hookReduceValue(hookName, initialValue, parameters, reducer) {\r\n        const results = [];\r\n        const parallelResults = [];\r\n        for (const plugin of this.getSortedPlugins(hookName, validateAddonPluginHandler)) {\r\n            if (plugin[hookName].sequential) {\r\n                results.push(...(await Promise.all(parallelResults)));\r\n                parallelResults.length = 0;\r\n                results.push(await this.runHook(hookName, parameters, plugin));\r\n            }\r\n            else {\r\n                parallelResults.push(this.runHook(hookName, parameters, plugin));\r\n            }\r\n        }\r\n        results.push(...(await Promise.all(parallelResults)));\r\n        return results.reduce(reducer, await initialValue);\r\n    }\r\n    // chains synchronously, reduces returned value to type T, handling the reduced value separately. permits hooks as values.\r\n    hookReduceValueSync(hookName, initialValue, parameters, reduce, replaceContext) {\r\n        let accumulator = initialValue;\r\n        for (const plugin of this.getSortedPlugins(hookName)) {\r\n            const result = this.runHookSync(hookName, parameters, plugin, replaceContext);\r\n            accumulator = reduce.call(this.pluginContexts.get(plugin), accumulator, result, plugin);\r\n        }\r\n        return accumulator;\r\n    }\r\n    // chains, ignores returns\r\n    hookSeq(hookName, parameters, replaceContext) {\r\n        let promise = Promise.resolve();\r\n        for (const plugin of this.getSortedPlugins(hookName)) {\r\n            promise = promise.then(() => this.runHook(hookName, parameters, plugin, replaceContext));\r\n        }\r\n        return promise.then(noReturn);\r\n    }\r\n    getSortedPlugins(hookName, validateHandler) {\r\n        return getOrCreate(this.sortedPlugins, hookName, () => getSortedValidatedPlugins(hookName, this.plugins, validateHandler));\r\n    }\r\n    // Implementation signature\r\n    runHook(hookName, parameters, plugin, replaceContext) {\r\n        // We always filter for plugins that support the hook before running it\r\n        const hook = plugin[hookName];\r\n        const handler = typeof hook === 'object' ? hook.handler : hook;\r\n        if (typeof hook === 'object' && 'filter' in hook && hook.filter) {\r\n            if (hookName === 'transform') {\r\n                const filter = hook.filter;\r\n                const hookParameters = parameters;\r\n                const compiledFilter = getOrCreate(this.compiledPluginFilters.transformFilter, filter, () => createFilterForTransform(filter.id, filter.code));\r\n                if (compiledFilter && !compiledFilter(hookParameters[1], hookParameters[0])) {\r\n                    return Promise.resolve();\r\n                }\r\n            }\r\n            else if (hookName === 'resolveId' || hookName === 'load') {\r\n                const filter = hook.filter;\r\n                const hookParameters = parameters;\r\n                const compiledFilter = getOrCreate(this.compiledPluginFilters.idOnlyFilter, filter, () => createFilterForId(filter.id));\r\n                if (compiledFilter && !compiledFilter(hookParameters[0])) {\r\n                    return Promise.resolve();\r\n                }\r\n            }\r\n        }\r\n        let context = this.pluginContexts.get(plugin);\r\n        if (replaceContext) {\r\n            context = replaceContext(context, plugin);\r\n        }\r\n        let action = null;\r\n        return Promise.resolve()\r\n            .then(() => {\r\n            if (typeof handler !== 'function') {\r\n                return handler;\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\r\n            const hookResult = handler.apply(context, parameters);\r\n            if (!hookResult?.then) {\r\n                // short circuit for non-thenables and non-Promises\r\n                return hookResult;\r\n            }\r\n            // Track pending hook actions to properly error out when\r\n            // unfulfilled promises cause rollup to abruptly and confusingly\r\n            // exit with a successful 0 return code but without producing any\r\n            // output, errors or warnings.\r\n            action = [plugin.name, hookName, parameters];\r\n            this.unfulfilledActions.add(action);\r\n            // Although it would be more elegant to just return hookResult here\r\n            // and put the .then() handler just above the .catch() handler below,\r\n            // doing so would subtly change the defacto async event dispatch order\r\n            // which at least one test and some plugins in the wild may depend on.\r\n            return Promise.resolve(hookResult).then(result => {\r\n                // action was fulfilled\r\n                this.unfulfilledActions.delete(action);\r\n                return result;\r\n            });\r\n        })\r\n            .catch(error_ => {\r\n            if (action !== null) {\r\n                // action considered to be fulfilled since error being handled\r\n                this.unfulfilledActions.delete(action);\r\n            }\r\n            return error(logPluginError(error_, plugin.name, { hook: hookName }));\r\n        });\r\n    }\r\n    /**\r\n     * Run a sync plugin hook and return the result.\r\n     * @param hookName Name of the plugin hook. Must be in `PluginHooks`.\r\n     * @param args Arguments passed to the plugin hook.\r\n     * @param plugin The acutal plugin\r\n     * @param replaceContext When passed, the plugin context can be overridden.\r\n     */\r\n    runHookSync(hookName, parameters, plugin, replaceContext) {\r\n        const hook = plugin[hookName];\r\n        const handler = typeof hook === 'object' ? hook.handler : hook;\r\n        let context = this.pluginContexts.get(plugin);\r\n        if (replaceContext) {\r\n            context = replaceContext(context, plugin);\r\n        }\r\n        try {\r\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\r\n            return handler.apply(context, parameters);\r\n        }\r\n        catch (error_) {\r\n            return error(logPluginError(error_, plugin.name, { hook: hookName }));\r\n        }\r\n    }\r\n}\r\nfunction getSortedValidatedPlugins(hookName, plugins, validateHandler = validateFunctionPluginHandler) {\r\n    const pre = [];\r\n    const normal = [];\r\n    const post = [];\r\n    for (const plugin of plugins) {\r\n        const hook = plugin[hookName];\r\n        if (hook) {\r\n            if (typeof hook === 'object') {\r\n                validateHandler(hook.handler, hookName, plugin);\r\n                if (hook.order === 'pre') {\r\n                    pre.push(plugin);\r\n                    continue;\r\n                }\r\n                if (hook.order === 'post') {\r\n                    post.push(plugin);\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                validateHandler(hook, hookName, plugin);\r\n            }\r\n            normal.push(plugin);\r\n        }\r\n    }\r\n    return [...pre, ...normal, ...post];\r\n}\r\nfunction validateFunctionPluginHandler(handler, hookName, plugin) {\r\n    if (typeof handler !== 'function') {\r\n        error(logInvalidFunctionPluginHook(hookName, plugin.name));\r\n    }\r\n}\r\nfunction validateAddonPluginHandler(handler, hookName, plugin) {\r\n    if (typeof handler !== 'string' && typeof handler !== 'function') {\r\n        return error(logInvalidAddonPluginHook(hookName, plugin.name));\r\n    }\r\n}\r\nfunction noReturn() { }\r\n\r\nclass Queue {\r\n    constructor(maxParallel) {\r\n        this.maxParallel = maxParallel;\r\n        this.queue = [];\r\n        this.workerCount = 0;\r\n    }\r\n    run(task) {\r\n        return new Promise((resolve, reject) => {\r\n            this.queue.push({ reject, resolve, task });\r\n            this.work();\r\n        });\r\n    }\r\n    async work() {\r\n        if (this.workerCount >= this.maxParallel)\r\n            return;\r\n        this.workerCount++;\r\n        let entry;\r\n        while ((entry = this.queue.shift())) {\r\n            const { reject, resolve, task } = entry;\r\n            try {\r\n                const result = await task();\r\n                resolve(result);\r\n            }\r\n            catch (error) {\r\n                reject(error);\r\n            }\r\n        }\r\n        this.workerCount--;\r\n    }\r\n}\r\n\r\nfunction normalizeEntryModules(entryModules) {\r\n    if (Array.isArray(entryModules)) {\r\n        return entryModules.map(id => ({\r\n            fileName: null,\r\n            id,\r\n            implicitlyLoadedAfter: [],\r\n            importer: undefined,\r\n            name: null\r\n        }));\r\n    }\r\n    return Object.entries(entryModules).map(([name, id]) => ({\r\n        fileName: null,\r\n        id,\r\n        implicitlyLoadedAfter: [],\r\n        importer: undefined,\r\n        name\r\n    }));\r\n}\r\nclass Graph {\r\n    constructor(options, watcher) {\r\n        this.options = options;\r\n        this.astLru = flru(5);\r\n        this.cachedModules = new Map();\r\n        this.deoptimizationTracker = new EntityPathTracker();\r\n        this.entryModules = [];\r\n        this.modulesById = new Map();\r\n        this.needsTreeshakingPass = false;\r\n        this.newlyIncludedVariableInits = new Set();\r\n        this.phase = BuildPhase.LOAD_AND_PARSE;\r\n        this.scope = new GlobalScope();\r\n        this.watchFiles = Object.create(null);\r\n        this.watchMode = false;\r\n        this.externalModules = [];\r\n        this.implicitEntryModules = [];\r\n        this.modules = [];\r\n        this.getModuleInfo = (moduleId) => {\r\n            const foundModule = this.modulesById.get(moduleId);\r\n            if (!foundModule)\r\n                return null;\r\n            return foundModule.info;\r\n        };\r\n        if (options.cache !== false) {\r\n            if (options.cache?.modules) {\r\n                for (const module of options.cache.modules)\r\n                    this.cachedModules.set(module.id, module);\r\n            }\r\n            this.pluginCache = options.cache?.plugins || Object.create(null);\r\n            // increment access counter\r\n            for (const name in this.pluginCache) {\r\n                const cache = this.pluginCache[name];\r\n                for (const value of Object.values(cache))\r\n                    value[0]++;\r\n            }\r\n        }\r\n        if (watcher) {\r\n            this.watchMode = true;\r\n            const handleChange = (...parameters) => this.pluginDriver.hookParallel('watchChange', parameters);\r\n            const handleClose = () => this.pluginDriver.hookParallel('closeWatcher', []);\r\n            watcher.onCurrentRun('change', handleChange);\r\n            watcher.onCurrentRun('close', handleClose);\r\n        }\r\n        this.pluginDriver = new PluginDriver(this, options, options.plugins, this.pluginCache);\r\n        this.moduleLoader = new ModuleLoader(this, this.modulesById, this.options, this.pluginDriver);\r\n        this.fileOperationQueue = new Queue(options.maxParallelFileOps);\r\n        this.pureFunctions = getPureFunctions(options);\r\n    }\r\n    async build() {\r\n        timeStart('generate module graph', 2);\r\n        await this.generateModuleGraph();\r\n        timeEnd('generate module graph', 2);\r\n        timeStart('sort and bind modules', 2);\r\n        this.phase = BuildPhase.ANALYSE;\r\n        this.sortModules();\r\n        timeEnd('sort and bind modules', 2);\r\n        timeStart('mark included statements', 2);\r\n        this.includeStatements();\r\n        timeEnd('mark included statements', 2);\r\n        this.phase = BuildPhase.GENERATE;\r\n    }\r\n    getCache() {\r\n        // handle plugin cache eviction\r\n        for (const name in this.pluginCache) {\r\n            const cache = this.pluginCache[name];\r\n            let allDeleted = true;\r\n            for (const [key, value] of Object.entries(cache)) {\r\n                if (value[0] >= this.options.experimentalCacheExpiry)\r\n                    delete cache[key];\r\n                else\r\n                    allDeleted = false;\r\n            }\r\n            if (allDeleted)\r\n                delete this.pluginCache[name];\r\n        }\r\n        return {\r\n            modules: this.modules.map(module => module.toJSON()),\r\n            plugins: this.pluginCache\r\n        };\r\n    }\r\n    async generateModuleGraph() {\r\n        ({ entryModules: this.entryModules, implicitEntryModules: this.implicitEntryModules } =\r\n            await this.moduleLoader.addEntryModules(normalizeEntryModules(this.options.input), true));\r\n        if (this.entryModules.length === 0) {\r\n            throw new Error('You must supply options.input to rollup');\r\n        }\r\n        for (const module of this.modulesById.values()) {\r\n            module.cacheInfoGetters();\r\n            if (module instanceof Module) {\r\n                this.modules.push(module);\r\n            }\r\n            else {\r\n                this.externalModules.push(module);\r\n            }\r\n        }\r\n    }\r\n    includeStatements() {\r\n        const entryModules = [...this.entryModules, ...this.implicitEntryModules];\r\n        for (const module of entryModules) {\r\n            markModuleAndImpureDependenciesAsExecuted(module);\r\n        }\r\n        if (this.options.treeshake) {\r\n            let treeshakingPass = 1;\r\n            this.newlyIncludedVariableInits.clear();\r\n            do {\r\n                timeStart(`treeshaking pass ${treeshakingPass}`, 3);\r\n                this.needsTreeshakingPass = false;\r\n                for (const module of this.modules) {\r\n                    if (module.isExecuted) {\r\n                        module.hasTreeShakingPassStarted = true;\r\n                        if (module.info.moduleSideEffects === 'no-treeshake') {\r\n                            module.includeAllInBundle();\r\n                        }\r\n                        else {\r\n                            module.include();\r\n                        }\r\n                        for (const entity of this.newlyIncludedVariableInits) {\r\n                            this.newlyIncludedVariableInits.delete(entity);\r\n                            entity.include(createInclusionContext(), false);\r\n                        }\r\n                    }\r\n                }\r\n                if (treeshakingPass === 1) {\r\n                    // We only include exports after the first pass to avoid issues with\r\n                    // the TDZ detection logic\r\n                    for (const module of entryModules) {\r\n                        if (module.preserveSignature !== false) {\r\n                            module.includeAllExports(false);\r\n                            this.needsTreeshakingPass = true;\r\n                        }\r\n                    }\r\n                }\r\n                timeEnd(`treeshaking pass ${treeshakingPass++}`, 3);\r\n            } while (this.needsTreeshakingPass);\r\n        }\r\n        else {\r\n            for (const module of this.modules)\r\n                module.includeAllInBundle();\r\n        }\r\n        for (const externalModule of this.externalModules)\r\n            externalModule.warnUnusedImports();\r\n        for (const module of this.implicitEntryModules) {\r\n            for (const dependant of module.implicitlyLoadedAfter) {\r\n                if (!(dependant.info.isEntry || dependant.isIncluded())) {\r\n                    error(logImplicitDependantIsNotIncluded(dependant));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    sortModules() {\r\n        const { orderedModules, cyclePaths } = analyseModuleExecution(this.entryModules);\r\n        for (const cyclePath of cyclePaths) {\r\n            this.options.onLog(LOGLEVEL_WARN, logCircularDependency(cyclePath));\r\n        }\r\n        this.modules = orderedModules;\r\n        for (const module of this.modules) {\r\n            module.bindReferences();\r\n        }\r\n        this.warnForMissingExports();\r\n    }\r\n    warnForMissingExports() {\r\n        for (const module of this.modules) {\r\n            for (const importDescription of module.importDescriptions.values()) {\r\n                if (importDescription.name !== '*') {\r\n                    const [variable, options] = importDescription.module.getVariableForExportName(importDescription.name);\r\n                    if (!variable) {\r\n                        module.log(LOGLEVEL_WARN, logMissingExport(importDescription.name, module.id, importDescription.module.id, !!options?.missingButExportExists), importDescription.start);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction formatAction([pluginName, hookName, parameters]) {\r\n    const action = `(${pluginName}) ${hookName}`;\r\n    const s = JSON.stringify;\r\n    switch (hookName) {\r\n        case 'resolveId': {\r\n            return `${action} ${s(parameters[0])} ${s(parameters[1])}`;\r\n        }\r\n        case 'load': {\r\n            return `${action} ${s(parameters[0])}`;\r\n        }\r\n        case 'transform': {\r\n            return `${action} ${s(parameters[1])}`;\r\n        }\r\n        case 'shouldTransformCachedModule': {\r\n            return `${action} ${s(parameters[0].id)}`;\r\n        }\r\n        case 'moduleParsed': {\r\n            return `${action} ${s(parameters[0].id)}`;\r\n        }\r\n    }\r\n    return action;\r\n}\r\nlet handleBeforeExit = null;\r\nconst rejectByPluginDriver = new Map();\r\nasync function catchUnfinishedHookActions(pluginDriver, callback) {\r\n    const emptyEventLoopPromise = new Promise((_, reject) => {\r\n        rejectByPluginDriver.set(pluginDriver, reject);\r\n        if (!handleBeforeExit) {\r\n            // We only ever create a single event listener to avoid max listener and\r\n            // other issues\r\n            handleBeforeExit = () => {\r\n                for (const [pluginDriver, reject] of rejectByPluginDriver) {\r\n                    const unfulfilledActions = pluginDriver.getUnfulfilledHookActions();\r\n                    reject(new Error(`Unexpected early exit. This happens when Promises returned by plugins cannot resolve. Unfinished hook action(s) on exit:\\n` +\r\n                        [...unfulfilledActions].map(formatAction).join('\\n')));\r\n                }\r\n            };\r\n            process$1.once('beforeExit', handleBeforeExit);\r\n        }\r\n    });\r\n    try {\r\n        return await Promise.race([callback(), emptyEventLoopPromise]);\r\n    }\r\n    finally {\r\n        rejectByPluginDriver.delete(pluginDriver);\r\n        if (rejectByPluginDriver.size === 0) {\r\n            process$1.off('beforeExit', handleBeforeExit);\r\n            handleBeforeExit = null;\r\n        }\r\n    }\r\n}\r\n\r\nasync function initWasm() { }\r\n\r\nfunction getLogger(plugins, onLog, watchMode, logLevel) {\r\n    plugins = getSortedValidatedPlugins('onLog', plugins);\r\n    const minimalPriority = logLevelPriority[logLevel];\r\n    const logger = (level, log, skipped = EMPTY_SET) => {\r\n        augmentLogMessage(log);\r\n        const logPriority = logLevelPriority[level];\r\n        if (logPriority < minimalPriority) {\r\n            return;\r\n        }\r\n        for (const plugin of plugins) {\r\n            if (skipped.has(plugin))\r\n                continue;\r\n            const { onLog: pluginOnLog } = plugin;\r\n            const getLogHandler = (level) => {\r\n                if (logLevelPriority[level] < minimalPriority) {\r\n                    return doNothing;\r\n                }\r\n                return log => logger(level, normalizeLog(log), new Set(skipped).add(plugin));\r\n            };\r\n            const handler = 'handler' in pluginOnLog ? pluginOnLog.handler : pluginOnLog;\r\n            if (handler.call({\r\n                debug: getLogHandler(LOGLEVEL_DEBUG),\r\n                error: (log) => error(normalizeLog(log)),\r\n                info: getLogHandler(LOGLEVEL_INFO),\r\n                meta: { rollupVersion: version, watchMode },\r\n                warn: getLogHandler(LOGLEVEL_WARN)\r\n            }, level, log) === false) {\r\n                return;\r\n            }\r\n        }\r\n        onLog(level, log);\r\n    };\r\n    return logger;\r\n}\r\n\r\nconst fs = /*#__PURE__*/_mergeNamespaces({\r\n  __proto__: null\r\n}, [promises]);\r\n\r\nasync function normalizeInputOptions(config, watchMode) {\r\n    // These are options that may trigger special warnings or behaviour later\r\n    // if the user did not select an explicit value\r\n    const unsetOptions = new Set();\r\n    const context = config.context ?? 'undefined';\r\n    const plugins = await normalizePluginOption(config.plugins);\r\n    const logLevel = config.logLevel || LOGLEVEL_INFO;\r\n    const onLog = getLogger(plugins, getOnLog(config, logLevel), watchMode, logLevel);\r\n    const strictDeprecations = config.strictDeprecations || false;\r\n    const maxParallelFileOps = getMaxParallelFileOps(config);\r\n    const options = {\r\n        cache: getCache(config),\r\n        context,\r\n        experimentalCacheExpiry: config.experimentalCacheExpiry ?? 10,\r\n        experimentalLogSideEffects: config.experimentalLogSideEffects || false,\r\n        external: getIdMatcher(config.external),\r\n        fs: config.fs ?? fs,\r\n        input: getInput(config),\r\n        jsx: getJsx(config),\r\n        logLevel,\r\n        makeAbsoluteExternalsRelative: config.makeAbsoluteExternalsRelative ?? 'ifRelativeSource',\r\n        maxParallelFileOps,\r\n        moduleContext: getModuleContext(config, context),\r\n        onLog,\r\n        perf: config.perf || false,\r\n        plugins,\r\n        preserveEntrySignatures: config.preserveEntrySignatures ?? 'exports-only',\r\n        preserveSymlinks: config.preserveSymlinks || false,\r\n        shimMissingExports: config.shimMissingExports || false,\r\n        strictDeprecations,\r\n        treeshake: getTreeshake(config)\r\n    };\r\n    warnUnknownOptions(config, [...Object.keys(options), 'onwarn', 'watch'], 'input options', onLog, /^(output)$/);\r\n    return { options, unsetOptions };\r\n}\r\nconst getCache = (config) => config.cache === true // `true` is the default\r\n    ? undefined\r\n    : config.cache?.cache || config.cache;\r\nconst getIdMatcher = (option) => {\r\n    if (option === true) {\r\n        return () => true;\r\n    }\r\n    if (typeof option === 'function') {\r\n        return (id, ...parameters) => (id[0] !== '\\0' && option(id, ...parameters)) || false;\r\n    }\r\n    if (option) {\r\n        const ids = new Set();\r\n        const matchers = [];\r\n        for (const value of ensureArray(option)) {\r\n            if (value instanceof RegExp) {\r\n                matchers.push(value);\r\n            }\r\n            else {\r\n                ids.add(value);\r\n            }\r\n        }\r\n        return (id, ..._arguments) => ids.has(id) || matchers.some(matcher => matcher.test(id));\r\n    }\r\n    return () => false;\r\n};\r\nconst getInput = (config) => {\r\n    const configInput = config.input;\r\n    return configInput == null ? [] : typeof configInput === 'string' ? [configInput] : configInput;\r\n};\r\nconst getJsx = (config) => {\r\n    const configJsx = config.jsx;\r\n    if (!configJsx)\r\n        return false;\r\n    const configWithPreset = getOptionWithPreset(configJsx, jsxPresets, 'jsx', URL_JSX, 'false, ');\r\n    const { factory, importSource, mode } = configWithPreset;\r\n    switch (mode) {\r\n        case 'automatic': {\r\n            return {\r\n                factory: factory || 'React.createElement',\r\n                importSource: importSource || 'react',\r\n                jsxImportSource: configWithPreset.jsxImportSource || 'react/jsx-runtime',\r\n                mode: 'automatic'\r\n            };\r\n        }\r\n        case 'preserve': {\r\n            if (importSource && !(factory || configWithPreset.fragment)) {\r\n                error(logInvalidOption('jsx', URL_JSX, 'when preserving JSX and specifying an importSource, you also need to specify a factory or fragment'));\r\n            }\r\n            return {\r\n                factory: factory || null,\r\n                fragment: configWithPreset.fragment || null,\r\n                importSource: importSource || null,\r\n                mode: 'preserve'\r\n            };\r\n        }\r\n        // case 'classic':\r\n        default: {\r\n            if (mode && mode !== 'classic') {\r\n                error(logInvalidOption('jsx.mode', URL_JSX, 'mode must be \"automatic\", \"classic\" or \"preserve\"', mode));\r\n            }\r\n            return {\r\n                factory: factory || 'React.createElement',\r\n                fragment: configWithPreset.fragment || 'React.Fragment',\r\n                importSource: importSource || null,\r\n                mode: 'classic'\r\n            };\r\n        }\r\n    }\r\n};\r\nconst getMaxParallelFileOps = (config) => {\r\n    const maxParallelFileOps = config.maxParallelFileOps;\r\n    if (typeof maxParallelFileOps === 'number') {\r\n        if (maxParallelFileOps <= 0)\r\n            return Infinity;\r\n        return maxParallelFileOps;\r\n    }\r\n    return 1000;\r\n};\r\nconst getModuleContext = (config, context) => {\r\n    const configModuleContext = config.moduleContext;\r\n    if (typeof configModuleContext === 'function') {\r\n        return id => configModuleContext(id) ?? context;\r\n    }\r\n    if (configModuleContext) {\r\n        const contextByModuleId = Object.create(null);\r\n        for (const [key, moduleContext] of Object.entries(configModuleContext)) {\r\n            contextByModuleId[resolve$1(key)] = moduleContext;\r\n        }\r\n        return id => contextByModuleId[id] ?? context;\r\n    }\r\n    return () => context;\r\n};\r\nconst getTreeshake = (config) => {\r\n    const configTreeshake = config.treeshake;\r\n    if (configTreeshake === false) {\r\n        return false;\r\n    }\r\n    const configWithPreset = getOptionWithPreset(config.treeshake, treeshakePresets, 'treeshake', URL_TREESHAKE, 'false, true, ');\r\n    return {\r\n        annotations: configWithPreset.annotations !== false,\r\n        correctVarValueBeforeDeclaration: configWithPreset.correctVarValueBeforeDeclaration === true,\r\n        manualPureFunctions: configWithPreset.manualPureFunctions ?? EMPTY_ARRAY,\r\n        moduleSideEffects: getHasModuleSideEffects(configWithPreset.moduleSideEffects),\r\n        propertyReadSideEffects: configWithPreset.propertyReadSideEffects === 'always'\r\n            ? 'always'\r\n            : configWithPreset.propertyReadSideEffects !== false,\r\n        tryCatchDeoptimization: configWithPreset.tryCatchDeoptimization !== false,\r\n        unknownGlobalSideEffects: configWithPreset.unknownGlobalSideEffects !== false\r\n    };\r\n};\r\nconst getHasModuleSideEffects = (moduleSideEffectsOption) => {\r\n    if (typeof moduleSideEffectsOption === 'boolean') {\r\n        return () => moduleSideEffectsOption;\r\n    }\r\n    if (moduleSideEffectsOption === 'no-external') {\r\n        return (_id, external) => !external;\r\n    }\r\n    if (typeof moduleSideEffectsOption === 'function') {\r\n        return (id, external) => id[0] === '\\0' ? true : moduleSideEffectsOption(id, external) !== false;\r\n    }\r\n    if (Array.isArray(moduleSideEffectsOption)) {\r\n        const ids = new Set(moduleSideEffectsOption);\r\n        return id => ids.has(id);\r\n    }\r\n    if (moduleSideEffectsOption) {\r\n        error(logInvalidOption('treeshake.moduleSideEffects', URL_TREESHAKE_MODULESIDEEFFECTS, 'please use one of false, \"no-external\", a function or an array'));\r\n    }\r\n    return () => true;\r\n};\r\n\r\n// https://datatracker.ietf.org/doc/html/rfc2396\r\n// eslint-disable-next-line no-control-regex\r\nconst INVALID_CHAR_REGEX = /[\\u0000-\\u001F\"#$%&*+,:;<=>?[\\]^`{|}\\u007F]/g;\r\nconst DRIVE_LETTER_REGEX = /^[a-z]:/i;\r\nfunction sanitizeFileName(name) {\r\n    const match = DRIVE_LETTER_REGEX.exec(name);\r\n    const driveLetter = match ? match[0] : '';\r\n    // A `:` is only allowed as part of a windows drive letter (ex: C:\\foo)\r\n    // Otherwise, avoid them because they can refer to NTFS alternate data streams.\r\n    return driveLetter + name.slice(driveLetter.length).replace(INVALID_CHAR_REGEX, '_');\r\n}\r\n\r\nasync function normalizeOutputOptions(config, inputOptions, unsetInputOptions) {\r\n    // These are options that may trigger special warnings or behaviour later\r\n    // if the user did not select an explicit value\r\n    const unsetOptions = new Set(unsetInputOptions);\r\n    const compact = config.compact || false;\r\n    const format = getFormat(config);\r\n    const inlineDynamicImports = getInlineDynamicImports(config, inputOptions);\r\n    const preserveModules = getPreserveModules(config, inlineDynamicImports, inputOptions);\r\n    const file = getFile(config, preserveModules, inputOptions);\r\n    const generatedCode = getGeneratedCode(config);\r\n    const externalImportAttributes = getExternalImportAttributes(config, inputOptions);\r\n    const outputOptions = {\r\n        amd: getAmd(config),\r\n        assetFileNames: config.assetFileNames ?? 'assets/[name]-[hash][extname]',\r\n        banner: getAddon(config, 'banner'),\r\n        chunkFileNames: config.chunkFileNames ?? '[name]-[hash].js',\r\n        compact,\r\n        dir: getDir(config, file),\r\n        dynamicImportInCjs: config.dynamicImportInCjs ?? true,\r\n        entryFileNames: getEntryFileNames(config, unsetOptions),\r\n        esModule: config.esModule ?? 'if-default-prop',\r\n        experimentalMinChunkSize: config.experimentalMinChunkSize ?? 1,\r\n        exports: getExports(config, unsetOptions),\r\n        extend: config.extend || false,\r\n        externalImportAssertions: externalImportAttributes,\r\n        externalImportAttributes,\r\n        externalLiveBindings: config.externalLiveBindings ?? true,\r\n        file,\r\n        footer: getAddon(config, 'footer'),\r\n        format,\r\n        freeze: config.freeze ?? true,\r\n        generatedCode,\r\n        globals: config.globals || {},\r\n        hashCharacters: config.hashCharacters ?? 'base64',\r\n        hoistTransitiveImports: config.hoistTransitiveImports ?? true,\r\n        importAttributesKey: config.importAttributesKey ?? 'assert',\r\n        indent: getIndent(config, compact),\r\n        inlineDynamicImports,\r\n        interop: getInterop(config),\r\n        intro: getAddon(config, 'intro'),\r\n        manualChunks: getManualChunks(config, inlineDynamicImports, preserveModules),\r\n        minifyInternalExports: getMinifyInternalExports(config, format, compact),\r\n        name: config.name,\r\n        noConflict: config.noConflict || false,\r\n        onlyExplicitManualChunks: config.onlyExplicitManualChunks || false,\r\n        outro: getAddon(config, 'outro'),\r\n        paths: config.paths || {},\r\n        plugins: await normalizePluginOption(config.plugins),\r\n        preserveModules,\r\n        preserveModulesRoot: getPreserveModulesRoot(config),\r\n        reexportProtoFromExternal: config.reexportProtoFromExternal ?? true,\r\n        sanitizeFileName: typeof config.sanitizeFileName === 'function'\r\n            ? config.sanitizeFileName\r\n            : config.sanitizeFileName === false\r\n                ? id => id\r\n                : sanitizeFileName,\r\n        sourcemap: config.sourcemap || false,\r\n        sourcemapBaseUrl: getSourcemapBaseUrl(config),\r\n        sourcemapDebugIds: config.sourcemapDebugIds || false,\r\n        sourcemapExcludeSources: config.sourcemapExcludeSources || false,\r\n        sourcemapFile: config.sourcemapFile,\r\n        sourcemapFileNames: getSourcemapFileNames(config, unsetOptions),\r\n        sourcemapIgnoreList: typeof config.sourcemapIgnoreList === 'function'\r\n            ? config.sourcemapIgnoreList\r\n            : config.sourcemapIgnoreList === false\r\n                ? () => false\r\n                : relativeSourcePath => relativeSourcePath.includes('node_modules'),\r\n        sourcemapPathTransform: config.sourcemapPathTransform,\r\n        strict: config.strict ?? true,\r\n        systemNullSetters: config.systemNullSetters ?? true,\r\n        validate: config.validate || false,\r\n        virtualDirname: config.virtualDirname || '_virtual'\r\n    };\r\n    warnUnknownOptions(config, Object.keys(outputOptions), 'output options', inputOptions.onLog);\r\n    return { options: outputOptions, unsetOptions };\r\n}\r\nconst getFile = (config, preserveModules, inputOptions) => {\r\n    const { file } = config;\r\n    if (typeof file === 'string') {\r\n        if (preserveModules) {\r\n            return error(logInvalidOption('output.file', URL_OUTPUT_DIR, 'you must set \"output.dir\" instead of \"output.file\" when using the \"output.preserveModules\" option'));\r\n        }\r\n        if (!Array.isArray(inputOptions.input))\r\n            return error(logInvalidOption('output.file', URL_OUTPUT_DIR, 'you must set \"output.dir\" instead of \"output.file\" when providing named inputs'));\r\n    }\r\n    return file;\r\n};\r\nconst getFormat = (config) => {\r\n    const configFormat = config.format;\r\n    switch (configFormat) {\r\n        case undefined:\r\n        case 'es':\r\n        case 'esm':\r\n        case 'module': {\r\n            return 'es';\r\n        }\r\n        case 'cjs':\r\n        case 'commonjs': {\r\n            return 'cjs';\r\n        }\r\n        case 'system':\r\n        case 'systemjs': {\r\n            return 'system';\r\n        }\r\n        case 'amd':\r\n        case 'iife':\r\n        case 'umd': {\r\n            return configFormat;\r\n        }\r\n        default: {\r\n            return error(logInvalidOption('output.format', URL_OUTPUT_FORMAT, `Valid values are \"amd\", \"cjs\", \"system\", \"es\", \"iife\" or \"umd\"`, configFormat));\r\n        }\r\n    }\r\n};\r\nconst getInlineDynamicImports = (config, inputOptions) => {\r\n    const inlineDynamicImports = config.inlineDynamicImports || false;\r\n    const { input } = inputOptions;\r\n    if (inlineDynamicImports && (Array.isArray(input) ? input : Object.keys(input)).length > 1) {\r\n        return error(logInvalidOption('output.inlineDynamicImports', URL_OUTPUT_INLINEDYNAMICIMPORTS, 'multiple inputs are not supported when \"output.inlineDynamicImports\" is true'));\r\n    }\r\n    return inlineDynamicImports;\r\n};\r\nconst getPreserveModules = (config, inlineDynamicImports, inputOptions) => {\r\n    const preserveModules = config.preserveModules || false;\r\n    if (preserveModules) {\r\n        if (inlineDynamicImports) {\r\n            return error(logInvalidOption('output.inlineDynamicImports', URL_OUTPUT_INLINEDYNAMICIMPORTS, `this option is not supported for \"output.preserveModules\"`));\r\n        }\r\n        if (inputOptions.preserveEntrySignatures === false) {\r\n            return error(logInvalidOption('preserveEntrySignatures', URL_PRESERVEENTRYSIGNATURES, 'setting this option to false is not supported for \"output.preserveModules\"'));\r\n        }\r\n    }\r\n    return preserveModules;\r\n};\r\nconst getPreserveModulesRoot = (config) => {\r\n    const { preserveModulesRoot } = config;\r\n    if (preserveModulesRoot === null || preserveModulesRoot === undefined) {\r\n        return undefined;\r\n    }\r\n    return resolve$1(preserveModulesRoot);\r\n};\r\nconst getAmd = (config) => {\r\n    const mergedOption = {\r\n        autoId: false,\r\n        basePath: '',\r\n        define: 'define',\r\n        forceJsExtensionForImports: false,\r\n        ...config.amd\r\n    };\r\n    if ((mergedOption.autoId || mergedOption.basePath) && mergedOption.id) {\r\n        return error(logInvalidOption('output.amd.id', URL_OUTPUT_AMD_ID, 'this option cannot be used together with \"output.amd.autoId\"/\"output.amd.basePath\"'));\r\n    }\r\n    if (mergedOption.basePath && !mergedOption.autoId) {\r\n        return error(logInvalidOption('output.amd.basePath', URL_OUTPUT_AMD_BASEPATH, 'this option only works with \"output.amd.autoId\"'));\r\n    }\r\n    return mergedOption.autoId\r\n        ? {\r\n            autoId: true,\r\n            basePath: mergedOption.basePath,\r\n            define: mergedOption.define,\r\n            forceJsExtensionForImports: mergedOption.forceJsExtensionForImports\r\n        }\r\n        : {\r\n            autoId: false,\r\n            define: mergedOption.define,\r\n            forceJsExtensionForImports: mergedOption.forceJsExtensionForImports,\r\n            id: mergedOption.id\r\n        };\r\n};\r\nconst getAddon = (config, name) => {\r\n    const configAddon = config[name];\r\n    if (typeof configAddon === 'function') {\r\n        return configAddon;\r\n    }\r\n    return () => configAddon || '';\r\n};\r\nconst getDir = (config, file) => {\r\n    const { dir } = config;\r\n    if (typeof dir === 'string' && typeof file === 'string') {\r\n        return error(logInvalidOption('output.dir', URL_OUTPUT_DIR, 'you must set either \"output.file\" for a single-file build or \"output.dir\" when generating multiple chunks'));\r\n    }\r\n    return dir;\r\n};\r\nconst getEntryFileNames = (config, unsetOptions) => {\r\n    const configEntryFileNames = config.entryFileNames;\r\n    if (configEntryFileNames == null) {\r\n        unsetOptions.add('entryFileNames');\r\n    }\r\n    return configEntryFileNames ?? '[name].js';\r\n};\r\nfunction getExports(config, unsetOptions) {\r\n    const configExports = config.exports;\r\n    if (configExports == null) {\r\n        unsetOptions.add('exports');\r\n    }\r\n    else if (!['default', 'named', 'none', 'auto'].includes(configExports)) {\r\n        return error(logInvalidExportOptionValue(configExports));\r\n    }\r\n    return configExports || 'auto';\r\n}\r\nconst getExternalImportAttributes = (config, inputOptions) => {\r\n    if (config.externalImportAssertions != undefined) {\r\n        warnDeprecation(`The \"output.externalImportAssertions\" option is deprecated. Use the \"output.externalImportAttributes\" option instead.`, URL_OUTPUT_EXTERNALIMPORTATTRIBUTES, true, inputOptions);\r\n    }\r\n    return config.externalImportAttributes ?? config.externalImportAssertions ?? true;\r\n};\r\nconst getGeneratedCode = (config) => {\r\n    const configWithPreset = getOptionWithPreset(config.generatedCode, generatedCodePresets, 'output.generatedCode', URL_OUTPUT_GENERATEDCODE, '');\r\n    return {\r\n        arrowFunctions: configWithPreset.arrowFunctions === true,\r\n        constBindings: configWithPreset.constBindings === true,\r\n        objectShorthand: configWithPreset.objectShorthand === true,\r\n        reservedNamesAsProps: configWithPreset.reservedNamesAsProps !== false,\r\n        symbols: configWithPreset.symbols === true\r\n    };\r\n};\r\nconst getIndent = (config, compact) => {\r\n    if (compact) {\r\n        return '';\r\n    }\r\n    const configIndent = config.indent;\r\n    return configIndent === false ? '' : (configIndent ?? true);\r\n};\r\nconst ALLOWED_INTEROP_TYPES = new Set([\r\n    'compat',\r\n    'auto',\r\n    'esModule',\r\n    'default',\r\n    'defaultOnly'\r\n]);\r\nconst getInterop = (config) => {\r\n    const configInterop = config.interop;\r\n    if (typeof configInterop === 'function') {\r\n        const interopPerId = Object.create(null);\r\n        let defaultInterop = null;\r\n        return id => id === null\r\n            ? defaultInterop || validateInterop((defaultInterop = configInterop(id)))\r\n            : id in interopPerId\r\n                ? interopPerId[id]\r\n                : validateInterop((interopPerId[id] = configInterop(id)));\r\n    }\r\n    return configInterop === undefined ? () => 'default' : () => validateInterop(configInterop);\r\n};\r\nconst validateInterop = (interop) => {\r\n    if (!ALLOWED_INTEROP_TYPES.has(interop)) {\r\n        return error(logInvalidOption('output.interop', URL_OUTPUT_INTEROP, `use one of ${Array.from(ALLOWED_INTEROP_TYPES, value => JSON.stringify(value)).join(', ')}`, interop));\r\n    }\r\n    return interop;\r\n};\r\nconst getManualChunks = (config, inlineDynamicImports, preserveModules) => {\r\n    const configManualChunks = config.manualChunks;\r\n    if (configManualChunks) {\r\n        if (inlineDynamicImports) {\r\n            return error(logInvalidOption('output.manualChunks', URL_OUTPUT_MANUALCHUNKS, 'this option is not supported for \"output.inlineDynamicImports\"'));\r\n        }\r\n        if (preserveModules) {\r\n            return error(logInvalidOption('output.manualChunks', URL_OUTPUT_MANUALCHUNKS, 'this option is not supported for \"output.preserveModules\"'));\r\n        }\r\n    }\r\n    return configManualChunks || {};\r\n};\r\nconst getMinifyInternalExports = (config, format, compact) => config.minifyInternalExports ?? (compact || format === 'es' || format === 'system');\r\nconst getSourcemapFileNames = (config, unsetOptions) => {\r\n    const configSourcemapFileNames = config.sourcemapFileNames;\r\n    if (configSourcemapFileNames == null) {\r\n        unsetOptions.add('sourcemapFileNames');\r\n    }\r\n    return configSourcemapFileNames;\r\n};\r\nconst getSourcemapBaseUrl = (config) => {\r\n    const { sourcemapBaseUrl } = config;\r\n    if (sourcemapBaseUrl) {\r\n        if (isValidUrl(sourcemapBaseUrl)) {\r\n            return addTrailingSlashIfMissed(sourcemapBaseUrl);\r\n        }\r\n        return error(logInvalidOption('output.sourcemapBaseUrl', URL_OUTPUT_SOURCEMAPBASEURL, `must be a valid URL, received ${JSON.stringify(sourcemapBaseUrl)}`));\r\n    }\r\n};\r\n\r\n// @ts-expect-error TS2540: the polyfill of `asyncDispose`.\r\nSymbol.asyncDispose ??= Symbol('Symbol.asyncDispose');\r\nfunction rollup(rawInputOptions) {\r\n    return rollupInternal(rawInputOptions, null);\r\n}\r\nasync function rollupInternal(rawInputOptions, watcher) {\r\n    const { options: inputOptions, unsetOptions: unsetInputOptions } = await getInputOptions(rawInputOptions, watcher !== null);\r\n    initialiseTimers(inputOptions);\r\n    await initWasm();\r\n    const graph = new Graph(inputOptions, watcher);\r\n    // remove the cache object from the memory after graph creation (cache is not used anymore)\r\n    const useCache = rawInputOptions.cache !== false;\r\n    if (rawInputOptions.cache) {\r\n        inputOptions.cache = undefined;\r\n        rawInputOptions.cache = undefined;\r\n    }\r\n    timeStart('BUILD', 1);\r\n    await catchUnfinishedHookActions(graph.pluginDriver, async () => {\r\n        try {\r\n            timeStart('initialize', 2);\r\n            await graph.pluginDriver.hookParallel('buildStart', [inputOptions]);\r\n            timeEnd('initialize', 2);\r\n            await graph.build();\r\n        }\r\n        catch (error_) {\r\n            const watchFiles = Object.keys(graph.watchFiles);\r\n            if (watchFiles.length > 0) {\r\n                error_.watchFiles = watchFiles;\r\n            }\r\n            try {\r\n                await graph.pluginDriver.hookParallel('buildEnd', [error_]);\r\n            }\r\n            catch (buildEndError) {\r\n                // Create a compound error object to include both errors, based on the original error\r\n                const compoundError = getRollupError({\r\n                    ...error_,\r\n                    message: `There was an error during the build:\\n  ${error_.message}\\nAdditionally, handling the error in the 'buildEnd' hook caused the following error:\\n  ${buildEndError.message}`\r\n                });\r\n                await graph.pluginDriver.hookParallel('closeBundle', [compoundError]);\r\n                throw compoundError;\r\n            }\r\n            await graph.pluginDriver.hookParallel('closeBundle', [error_]);\r\n            throw error_;\r\n        }\r\n        try {\r\n            await graph.pluginDriver.hookParallel('buildEnd', []);\r\n        }\r\n        catch (buildEndError) {\r\n            await graph.pluginDriver.hookParallel('closeBundle', [buildEndError]);\r\n            throw buildEndError;\r\n        }\r\n    });\r\n    timeEnd('BUILD', 1);\r\n    const result = {\r\n        cache: useCache ? graph.getCache() : undefined,\r\n        async close() {\r\n            if (result.closed)\r\n                return;\r\n            result.closed = true;\r\n            await graph.pluginDriver.hookParallel('closeBundle', []);\r\n        },\r\n        closed: false,\r\n        async [Symbol.asyncDispose]() {\r\n            await this.close();\r\n        },\r\n        async generate(rawOutputOptions) {\r\n            if (result.closed)\r\n                return error(logAlreadyClosed());\r\n            return handleGenerateWrite(false, inputOptions, unsetInputOptions, rawOutputOptions, graph);\r\n        },\r\n        get watchFiles() {\r\n            return Object.keys(graph.watchFiles);\r\n        },\r\n        async write(rawOutputOptions) {\r\n            if (result.closed)\r\n                return error(logAlreadyClosed());\r\n            return handleGenerateWrite(true, inputOptions, unsetInputOptions, rawOutputOptions, graph);\r\n        }\r\n    };\r\n    if (inputOptions.perf)\r\n        result.getTimings = getTimings;\r\n    return result;\r\n}\r\nasync function getInputOptions(initialInputOptions, watchMode) {\r\n    if (!initialInputOptions) {\r\n        throw new Error('You must supply an options object to rollup');\r\n    }\r\n    const processedInputOptions = await getProcessedInputOptions(initialInputOptions, watchMode);\r\n    const { options, unsetOptions } = await normalizeInputOptions(processedInputOptions, watchMode);\r\n    normalizePlugins(options.plugins, ANONYMOUS_PLUGIN_PREFIX);\r\n    return { options, unsetOptions };\r\n}\r\nasync function getProcessedInputOptions(inputOptions, watchMode) {\r\n    const plugins = getSortedValidatedPlugins('options', await normalizePluginOption(inputOptions.plugins));\r\n    const logLevel = inputOptions.logLevel || LOGLEVEL_INFO;\r\n    const logger = getLogger(plugins, getOnLog(inputOptions, logLevel), watchMode, logLevel);\r\n    for (const plugin of plugins) {\r\n        const { name, options } = plugin;\r\n        const handler = 'handler' in options ? options.handler : options;\r\n        const processedOptions = await handler.call({\r\n            debug: getLogHandler(LOGLEVEL_DEBUG, 'PLUGIN_LOG', logger, name, logLevel),\r\n            error: (error_) => error(logPluginError(normalizeLog(error_), name, { hook: 'onLog' })),\r\n            info: getLogHandler(LOGLEVEL_INFO, 'PLUGIN_LOG', logger, name, logLevel),\r\n            meta: { rollupVersion: version, watchMode },\r\n            warn: getLogHandler(LOGLEVEL_WARN, 'PLUGIN_WARNING', logger, name, logLevel)\r\n        }, inputOptions);\r\n        if (processedOptions) {\r\n            inputOptions = processedOptions;\r\n        }\r\n    }\r\n    return inputOptions;\r\n}\r\nfunction normalizePlugins(plugins, anonymousPrefix) {\r\n    for (const [index, plugin] of plugins.entries()) {\r\n        if (!plugin.name) {\r\n            plugin.name = `${anonymousPrefix}${index + 1}`;\r\n        }\r\n    }\r\n}\r\nasync function handleGenerateWrite(isWrite, inputOptions, unsetInputOptions, rawOutputOptions, graph) {\r\n    const { options: outputOptions, outputPluginDriver, unsetOptions } = await getOutputOptionsAndPluginDriver(rawOutputOptions, graph.pluginDriver, inputOptions, unsetInputOptions);\r\n    return catchUnfinishedHookActions(outputPluginDriver, async () => {\r\n        const bundle = new Bundle(outputOptions, unsetOptions, inputOptions, outputPluginDriver, graph);\r\n        const generated = await bundle.generate(isWrite);\r\n        if (isWrite) {\r\n            timeStart('WRITE', 1);\r\n            if (!outputOptions.dir && !outputOptions.file) {\r\n                return error(logMissingFileOrDirOption());\r\n            }\r\n            await Promise.all(Object.values(generated).map(chunk => graph.fileOperationQueue.run(() => writeOutputFile(chunk, outputOptions, inputOptions))));\r\n            await outputPluginDriver.hookParallel('writeBundle', [outputOptions, generated]);\r\n            timeEnd('WRITE', 1);\r\n        }\r\n        return createOutput(generated);\r\n    });\r\n}\r\nasync function getOutputOptionsAndPluginDriver(rawOutputOptions, inputPluginDriver, inputOptions, unsetInputOptions) {\r\n    if (!rawOutputOptions) {\r\n        throw new Error('You must supply an options object');\r\n    }\r\n    const rawPlugins = await normalizePluginOption(rawOutputOptions.plugins);\r\n    normalizePlugins(rawPlugins, ANONYMOUS_OUTPUT_PLUGIN_PREFIX);\r\n    const outputPluginDriver = inputPluginDriver.createOutputPluginDriver(rawPlugins);\r\n    return {\r\n        ...(await getOutputOptions(inputOptions, unsetInputOptions, rawOutputOptions, outputPluginDriver)),\r\n        outputPluginDriver\r\n    };\r\n}\r\nfunction getOutputOptions(inputOptions, unsetInputOptions, rawOutputOptions, outputPluginDriver) {\r\n    return normalizeOutputOptions(outputPluginDriver.hookReduceArg0Sync('outputOptions', [rawOutputOptions], (outputOptions, result) => result || outputOptions, pluginContext => {\r\n        const emitError = () => pluginContext.error(logCannotEmitFromOptionsHook());\r\n        return {\r\n            ...pluginContext,\r\n            emitFile: emitError,\r\n            setAssetSource: emitError\r\n        };\r\n    }), inputOptions, unsetInputOptions);\r\n}\r\nfunction createOutput(outputBundle) {\r\n    return {\r\n        output: Object.values(outputBundle).filter(outputFile => Object.keys(outputFile).length > 0).sort((outputFileA, outputFileB) => getSortingFileType(outputFileA) - getSortingFileType(outputFileB))\r\n    };\r\n}\r\nvar SortingFileType;\r\n(function (SortingFileType) {\r\n    SortingFileType[SortingFileType[\"ENTRY_CHUNK\"] = 0] = \"ENTRY_CHUNK\";\r\n    SortingFileType[SortingFileType[\"SECONDARY_CHUNK\"] = 1] = \"SECONDARY_CHUNK\";\r\n    SortingFileType[SortingFileType[\"ASSET\"] = 2] = \"ASSET\";\r\n})(SortingFileType || (SortingFileType = {}));\r\nfunction getSortingFileType(file) {\r\n    if (file.type === 'asset') {\r\n        return SortingFileType.ASSET;\r\n    }\r\n    if (file.isEntry) {\r\n        return SortingFileType.ENTRY_CHUNK;\r\n    }\r\n    return SortingFileType.SECONDARY_CHUNK;\r\n}\r\nasync function writeOutputFile(outputFile, outputOptions, { fs: { mkdir, writeFile } }) {\r\n    const fileName = resolve$1(outputOptions.dir || dirname(outputOptions.file), outputFile.fileName);\r\n    // 'recursive: true' does not throw if the folder structure, or parts of it, already exist\r\n    await mkdir(dirname(fileName), { recursive: true });\r\n    return writeFile(fileName, outputFile.type === 'asset' ? outputFile.source : outputFile.code);\r\n}\r\n/**\r\n * Auxiliary function for defining rollup configuration\r\n * Mainly to facilitate IDE code prompts, after all, export default does not\r\n * prompt, even if you add @type annotations, it is not accurate\r\n * @param options\r\n */\r\nfunction defineConfig(options) {\r\n    return options;\r\n}\r\n\r\nvar picocolors = {exports: {}};\r\n\r\nvar hasRequiredPicocolors;\r\n\r\nfunction requirePicocolors () {\r\n\tif (hasRequiredPicocolors) return picocolors.exports;\r\n\thasRequiredPicocolors = 1;\r\n\tlet p = process || {}, argv = p.argv || [], env = p.env || {};\r\n\tlet isColorSupported =\r\n\t\t!(!!env.NO_COLOR || argv.includes(\"--no-color\")) &&\r\n\t\t(!!env.FORCE_COLOR || argv.includes(\"--color\") || p.platform === \"win32\" || ((p.stdout || {}).isTTY && env.TERM !== \"dumb\") || !!env.CI);\r\n\r\n\tlet formatter = (open, close, replace = open) =>\r\n\t\tinput => {\r\n\t\t\tlet string = \"\" + input, index = string.indexOf(close, open.length);\r\n\t\t\treturn ~index ? open + replaceClose(string, close, replace, index) + close : open + string + close\r\n\t\t};\r\n\r\n\tlet replaceClose = (string, close, replace, index) => {\r\n\t\tlet result = \"\", cursor = 0;\r\n\t\tdo {\r\n\t\t\tresult += string.substring(cursor, index) + replace;\r\n\t\t\tcursor = index + close.length;\r\n\t\t\tindex = string.indexOf(close, cursor);\r\n\t\t} while (~index)\r\n\t\treturn result + string.substring(cursor)\r\n\t};\r\n\r\n\tlet createColors = (enabled = isColorSupported) => {\r\n\t\tlet f = enabled ? formatter : () => String;\r\n\t\treturn {\r\n\t\t\tisColorSupported: enabled,\r\n\t\t\treset: f(\"\\x1b[0m\", \"\\x1b[0m\"),\r\n\t\t\tbold: f(\"\\x1b[1m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[1m\"),\r\n\t\t\tdim: f(\"\\x1b[2m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[2m\"),\r\n\t\t\titalic: f(\"\\x1b[3m\", \"\\x1b[23m\"),\r\n\t\t\tunderline: f(\"\\x1b[4m\", \"\\x1b[24m\"),\r\n\t\t\tinverse: f(\"\\x1b[7m\", \"\\x1b[27m\"),\r\n\t\t\thidden: f(\"\\x1b[8m\", \"\\x1b[28m\"),\r\n\t\t\tstrikethrough: f(\"\\x1b[9m\", \"\\x1b[29m\"),\r\n\r\n\t\t\tblack: f(\"\\x1b[30m\", \"\\x1b[39m\"),\r\n\t\t\tred: f(\"\\x1b[31m\", \"\\x1b[39m\"),\r\n\t\t\tgreen: f(\"\\x1b[32m\", \"\\x1b[39m\"),\r\n\t\t\tyellow: f(\"\\x1b[33m\", \"\\x1b[39m\"),\r\n\t\t\tblue: f(\"\\x1b[34m\", \"\\x1b[39m\"),\r\n\t\t\tmagenta: f(\"\\x1b[35m\", \"\\x1b[39m\"),\r\n\t\t\tcyan: f(\"\\x1b[36m\", \"\\x1b[39m\"),\r\n\t\t\twhite: f(\"\\x1b[37m\", \"\\x1b[39m\"),\r\n\t\t\tgray: f(\"\\x1b[90m\", \"\\x1b[39m\"),\r\n\r\n\t\t\tbgBlack: f(\"\\x1b[40m\", \"\\x1b[49m\"),\r\n\t\t\tbgRed: f(\"\\x1b[41m\", \"\\x1b[49m\"),\r\n\t\t\tbgGreen: f(\"\\x1b[42m\", \"\\x1b[49m\"),\r\n\t\t\tbgYellow: f(\"\\x1b[43m\", \"\\x1b[49m\"),\r\n\t\t\tbgBlue: f(\"\\x1b[44m\", \"\\x1b[49m\"),\r\n\t\t\tbgMagenta: f(\"\\x1b[45m\", \"\\x1b[49m\"),\r\n\t\t\tbgCyan: f(\"\\x1b[46m\", \"\\x1b[49m\"),\r\n\t\t\tbgWhite: f(\"\\x1b[47m\", \"\\x1b[49m\"),\r\n\r\n\t\t\tblackBright: f(\"\\x1b[90m\", \"\\x1b[39m\"),\r\n\t\t\tredBright: f(\"\\x1b[91m\", \"\\x1b[39m\"),\r\n\t\t\tgreenBright: f(\"\\x1b[92m\", \"\\x1b[39m\"),\r\n\t\t\tyellowBright: f(\"\\x1b[93m\", \"\\x1b[39m\"),\r\n\t\t\tblueBright: f(\"\\x1b[94m\", \"\\x1b[39m\"),\r\n\t\t\tmagentaBright: f(\"\\x1b[95m\", \"\\x1b[39m\"),\r\n\t\t\tcyanBright: f(\"\\x1b[96m\", \"\\x1b[39m\"),\r\n\t\t\twhiteBright: f(\"\\x1b[97m\", \"\\x1b[39m\"),\r\n\r\n\t\t\tbgBlackBright: f(\"\\x1b[100m\", \"\\x1b[49m\"),\r\n\t\t\tbgRedBright: f(\"\\x1b[101m\", \"\\x1b[49m\"),\r\n\t\t\tbgGreenBright: f(\"\\x1b[102m\", \"\\x1b[49m\"),\r\n\t\t\tbgYellowBright: f(\"\\x1b[103m\", \"\\x1b[49m\"),\r\n\t\t\tbgBlueBright: f(\"\\x1b[104m\", \"\\x1b[49m\"),\r\n\t\t\tbgMagentaBright: f(\"\\x1b[105m\", \"\\x1b[49m\"),\r\n\t\t\tbgCyanBright: f(\"\\x1b[106m\", \"\\x1b[49m\"),\r\n\t\t\tbgWhiteBright: f(\"\\x1b[107m\", \"\\x1b[49m\"),\r\n\t\t}\r\n\t};\r\n\r\n\tpicocolors.exports = createColors();\r\n\tpicocolors.exports.createColors = createColors;\r\n\treturn picocolors.exports;\r\n}\r\n\r\nvar picocolorsExports = /*@__PURE__*/ requirePicocolors();\r\nconst pc = /*@__PURE__*/getDefaultExportFromCjs(picocolorsExports);\r\n\r\n// @see https://no-color.org\r\n// @see https://www.npmjs.com/package/chalk\r\nconst { bold, cyan, dim, red} = pc.createColors(env.FORCE_COLOR !== '0' && !env.NO_COLOR);\r\n\r\n// log to stderr to keep `rollup main.js > bundle.js` from breaking\r\nconst stderr = (...parameters) => process$1.stderr.write(`${parameters.join('')}\\n`);\r\nfunction handleError(error, recover = false) {\r\n    const name = error.name || error.cause?.name;\r\n    const nameSection = name ? `${name}: ` : '';\r\n    const pluginSection = error.plugin ? `(plugin ${error.plugin}) ` : '';\r\n    const message = `${pluginSection}${nameSection}${error.message}`;\r\n    const outputLines = [bold(red(`[!] ${bold(message.toString())}`))];\r\n    if (error.url) {\r\n        outputLines.push(cyan(error.url));\r\n    }\r\n    if (error.loc) {\r\n        outputLines.push(`${relativeId((error.loc.file || error.id))} (${error.loc.line}:${error.loc.column})`);\r\n    }\r\n    else if (error.id) {\r\n        outputLines.push(relativeId(error.id));\r\n    }\r\n    if (error.frame) {\r\n        outputLines.push(dim(error.frame));\r\n    }\r\n    if (error.stack) {\r\n        outputLines.push(dim(error.stack?.replace(`${nameSection}${error.message}\\n`, '')));\r\n    }\r\n    // ES2022: Error.prototype.cause is optional\r\n    if (error.cause) {\r\n        let cause = error.cause;\r\n        const causeErrorLines = [];\r\n        let indent = '';\r\n        while (cause) {\r\n            indent += '  ';\r\n            const message = cause.stack || cause;\r\n            causeErrorLines.push(...`[cause] ${message}`.split('\\n').map(line => indent + line));\r\n            cause = cause.cause;\r\n        }\r\n        outputLines.push(dim(causeErrorLines.join('\\n')));\r\n    }\r\n    outputLines.push('', '');\r\n    stderr(outputLines.join('\\n'));\r\n    if (!recover)\r\n        process$1.exit(1);\r\n}\r\n\r\nconst commandAliases = {\r\n    c: 'config',\r\n    d: 'dir',\r\n    e: 'external',\r\n    f: 'format',\r\n    g: 'globals',\r\n    h: 'help',\r\n    i: 'input',\r\n    m: 'sourcemap',\r\n    n: 'name',\r\n    o: 'file',\r\n    p: 'plugin',\r\n    v: 'version',\r\n    w: 'watch'\r\n};\r\nconst EMPTY_COMMAND_OPTIONS = { external: [], globals: undefined };\r\nasync function mergeOptions(config, watchMode, rawCommandOptions = EMPTY_COMMAND_OPTIONS, printLog) {\r\n    const command = getCommandOptions(rawCommandOptions);\r\n    const plugins = await normalizePluginOption(config.plugins);\r\n    const logLevel = config.logLevel || LOGLEVEL_INFO;\r\n    const onLog = getOnLog(config, logLevel, printLog);\r\n    const log = getLogger(plugins, onLog, watchMode, logLevel);\r\n    const inputOptions = mergeInputOptions(config, command, plugins, log, onLog);\r\n    if (command.output) {\r\n        Object.assign(command, command.output);\r\n    }\r\n    const outputOptionsArray = ensureArray(config.output);\r\n    if (outputOptionsArray.length === 0)\r\n        outputOptionsArray.push({});\r\n    const outputOptions = await Promise.all(outputOptionsArray.map(singleOutputOptions => mergeOutputOptions(singleOutputOptions, command, log)));\r\n    warnUnknownOptions(command, [\r\n        ...Object.keys(inputOptions).filter(option => option !== 'fs'),\r\n        ...Object.keys(outputOptions[0]).filter(option => option !== 'sourcemapIgnoreList' && option !== 'sourcemapPathTransform'),\r\n        ...Object.keys(commandAliases),\r\n        'bundleConfigAsCjs',\r\n        'config',\r\n        'configImportAttributesKey',\r\n        'configPlugin',\r\n        'environment',\r\n        'failAfterWarnings',\r\n        'filterLogs',\r\n        'forceExit',\r\n        'plugin',\r\n        'silent',\r\n        'stdin',\r\n        'waitForBundleInput'\r\n    ], 'CLI flags', log, /^_$|output$|config/);\r\n    inputOptions.output = outputOptions;\r\n    return inputOptions;\r\n}\r\nfunction getCommandOptions(rawCommandOptions) {\r\n    const external = rawCommandOptions.external && typeof rawCommandOptions.external === 'string'\r\n        ? rawCommandOptions.external.split(',')\r\n        : [];\r\n    return {\r\n        ...rawCommandOptions,\r\n        external,\r\n        globals: typeof rawCommandOptions.globals === 'string'\r\n            ? rawCommandOptions.globals.split(',').reduce((globals, globalDefinition) => {\r\n                const [id, variableName] = globalDefinition.split(':');\r\n                globals[id] = variableName;\r\n                if (!external.includes(id)) {\r\n                    external.push(id);\r\n                }\r\n                return globals;\r\n            }, Object.create(null))\r\n            : undefined\r\n    };\r\n}\r\nfunction mergeInputOptions(config, overrides, plugins, log, onLog) {\r\n    const getOption = (name) => overrides[name] ?? config[name];\r\n    const inputOptions = {\r\n        cache: config.cache,\r\n        context: getOption('context'),\r\n        experimentalCacheExpiry: getOption('experimentalCacheExpiry'),\r\n        experimentalLogSideEffects: getOption('experimentalLogSideEffects'),\r\n        external: getExternal(config, overrides),\r\n        fs: getOption('fs'),\r\n        input: getOption('input') || [],\r\n        jsx: getObjectOption(config, overrides, 'jsx', objectifyOptionWithPresets(jsxPresets, 'jsx', URL_JSX, 'false, ')),\r\n        logLevel: getOption('logLevel'),\r\n        makeAbsoluteExternalsRelative: getOption('makeAbsoluteExternalsRelative'),\r\n        maxParallelFileOps: getOption('maxParallelFileOps'),\r\n        moduleContext: getOption('moduleContext'),\r\n        onLog,\r\n        onwarn: undefined,\r\n        perf: getOption('perf'),\r\n        plugins,\r\n        preserveEntrySignatures: getOption('preserveEntrySignatures'),\r\n        preserveSymlinks: getOption('preserveSymlinks'),\r\n        shimMissingExports: getOption('shimMissingExports'),\r\n        strictDeprecations: getOption('strictDeprecations'),\r\n        treeshake: getObjectOption(config, overrides, 'treeshake', objectifyOptionWithPresets(treeshakePresets, 'treeshake', URL_TREESHAKE, 'false, true, ')),\r\n        watch: getWatch(config, overrides)\r\n    };\r\n    warnUnknownOptions(config, Object.keys(inputOptions), 'input options', log, /^output$/);\r\n    return inputOptions;\r\n}\r\nconst getExternal = (config, overrides) => {\r\n    const configExternal = config.external;\r\n    return typeof configExternal === 'function'\r\n        ? (source, importer, isResolved) => configExternal(source, importer, isResolved) || overrides.external.includes(source)\r\n        : [...ensureArray(configExternal), ...overrides.external];\r\n};\r\nconst getObjectOption = (config, overrides, name, objectifyValue = objectifyOption) => {\r\n    const commandOption = normalizeObjectOptionValue(overrides[name], objectifyValue);\r\n    const configOption = normalizeObjectOptionValue(config[name], objectifyValue);\r\n    if (commandOption !== undefined) {\r\n        return commandOption && { ...configOption, ...commandOption };\r\n    }\r\n    return configOption;\r\n};\r\nconst getWatch = (config, overrides) => config.watch !== false && getObjectOption(config, overrides, 'watch');\r\nconst normalizeObjectOptionValue = (optionValue, objectifyValue) => {\r\n    if (!optionValue) {\r\n        return optionValue;\r\n    }\r\n    if (Array.isArray(optionValue)) {\r\n        return optionValue.reduce((result, value) => value && result && { ...result, ...objectifyValue(value) }, {});\r\n    }\r\n    return objectifyValue(optionValue);\r\n};\r\nasync function mergeOutputOptions(config, overrides, log) {\r\n    const getOption = (name) => overrides[name] ?? config[name];\r\n    const outputOptions = {\r\n        amd: getObjectOption(config, overrides, 'amd'),\r\n        assetFileNames: getOption('assetFileNames'),\r\n        banner: getOption('banner'),\r\n        chunkFileNames: getOption('chunkFileNames'),\r\n        compact: getOption('compact'),\r\n        dir: getOption('dir'),\r\n        dynamicImportInCjs: getOption('dynamicImportInCjs'),\r\n        entryFileNames: getOption('entryFileNames'),\r\n        esModule: getOption('esModule'),\r\n        experimentalMinChunkSize: getOption('experimentalMinChunkSize'),\r\n        exports: getOption('exports'),\r\n        extend: getOption('extend'),\r\n        externalImportAssertions: getOption('externalImportAssertions'),\r\n        externalImportAttributes: getOption('externalImportAttributes'),\r\n        externalLiveBindings: getOption('externalLiveBindings'),\r\n        file: getOption('file'),\r\n        footer: getOption('footer'),\r\n        format: getOption('format'),\r\n        freeze: getOption('freeze'),\r\n        generatedCode: getObjectOption(config, overrides, 'generatedCode', objectifyOptionWithPresets(generatedCodePresets, 'output.generatedCode', URL_OUTPUT_GENERATEDCODE, '')),\r\n        globals: getOption('globals'),\r\n        hashCharacters: getOption('hashCharacters'),\r\n        hoistTransitiveImports: getOption('hoistTransitiveImports'),\r\n        importAttributesKey: getOption('importAttributesKey'),\r\n        indent: getOption('indent'),\r\n        inlineDynamicImports: getOption('inlineDynamicImports'),\r\n        interop: getOption('interop'),\r\n        intro: getOption('intro'),\r\n        manualChunks: getOption('manualChunks'),\r\n        minifyInternalExports: getOption('minifyInternalExports'),\r\n        name: getOption('name'),\r\n        noConflict: getOption('noConflict'),\r\n        onlyExplicitManualChunks: getOption('onlyExplicitManualChunks'),\r\n        outro: getOption('outro'),\r\n        paths: getOption('paths'),\r\n        plugins: await normalizePluginOption(config.plugins),\r\n        preserveModules: getOption('preserveModules'),\r\n        preserveModulesRoot: getOption('preserveModulesRoot'),\r\n        reexportProtoFromExternal: getOption('reexportProtoFromExternal'),\r\n        sanitizeFileName: getOption('sanitizeFileName'),\r\n        sourcemap: getOption('sourcemap'),\r\n        sourcemapBaseUrl: getOption('sourcemapBaseUrl'),\r\n        sourcemapDebugIds: getOption('sourcemapDebugIds'),\r\n        sourcemapExcludeSources: getOption('sourcemapExcludeSources'),\r\n        sourcemapFile: getOption('sourcemapFile'),\r\n        sourcemapFileNames: getOption('sourcemapFileNames'),\r\n        sourcemapIgnoreList: getOption('sourcemapIgnoreList'),\r\n        sourcemapPathTransform: getOption('sourcemapPathTransform'),\r\n        strict: getOption('strict'),\r\n        systemNullSetters: getOption('systemNullSetters'),\r\n        validate: getOption('validate'),\r\n        virtualDirname: getOption('virtualDirname')\r\n    };\r\n    warnUnknownOptions(config, Object.keys(outputOptions), 'output options', log);\r\n    return outputOptions;\r\n}\r\n\r\nlet fsEvents;\r\nlet fsEventsImportError;\r\nasync function loadFsEvents() {\r\n    try {\r\n        ({ default: fsEvents } = await import('fsevents'));\r\n    }\r\n    catch (error) {\r\n        fsEventsImportError = error;\r\n    }\r\n}\r\n// A call to this function will be injected into the chokidar code\r\nfunction getFsEvents() {\r\n    if (fsEventsImportError)\r\n        throw fsEventsImportError;\r\n    return fsEvents;\r\n}\r\n\r\nconst fseventsImporter = /*#__PURE__*/Object.defineProperty({\r\n  __proto__: null,\r\n  getFsEvents,\r\n  loadFsEvents\r\n}, Symbol.toStringTag, { value: 'Module' });\r\n\r\nclass WatchEmitter {\r\n    constructor() {\r\n        this.currentHandlers = Object.create(null);\r\n        this.persistentHandlers = Object.create(null);\r\n    }\r\n    // Will be overwritten by Rollup\r\n    async close() { }\r\n    emit(event, ...parameters) {\r\n        return Promise.all([...this.getCurrentHandlers(event), ...this.getPersistentHandlers(event)].map(handler => handler(...parameters)));\r\n    }\r\n    off(event, listener) {\r\n        const listeners = this.persistentHandlers[event];\r\n        if (listeners) {\r\n            // A hack stolen from \"mitt\": \">>> 0\" does not change numbers >= 0, but -1\r\n            // (which would remove the last array element if used unchanged) is turned\r\n            // into max_int, which is outside the array and does not change anything.\r\n            listeners.splice(listeners.indexOf(listener) >>> 0, 1);\r\n        }\r\n        return this;\r\n    }\r\n    on(event, listener) {\r\n        this.getPersistentHandlers(event).push(listener);\r\n        return this;\r\n    }\r\n    onCurrentRun(event, listener) {\r\n        this.getCurrentHandlers(event).push(listener);\r\n        return this;\r\n    }\r\n    once(event, listener) {\r\n        const selfRemovingListener = (...parameters) => {\r\n            this.off(event, selfRemovingListener);\r\n            return listener(...parameters);\r\n        };\r\n        this.on(event, selfRemovingListener);\r\n        return this;\r\n    }\r\n    removeAllListeners() {\r\n        this.removeListenersForCurrentRun();\r\n        this.persistentHandlers = Object.create(null);\r\n        return this;\r\n    }\r\n    removeListenersForCurrentRun() {\r\n        this.currentHandlers = Object.create(null);\r\n        return this;\r\n    }\r\n    getCurrentHandlers(event) {\r\n        return this.currentHandlers[event] || (this.currentHandlers[event] = []);\r\n    }\r\n    getPersistentHandlers(event) {\r\n        return this.persistentHandlers[event] || (this.persistentHandlers[event] = []);\r\n    }\r\n}\r\n\r\nfunction watch(configs) {\r\n    const emitter = new WatchEmitter();\r\n    watchInternal(configs, emitter).catch(error => {\r\n        handleError(error);\r\n    });\r\n    return emitter;\r\n}\r\nfunction ensureTrailingSlash(path) {\r\n    if (path[path.length - 1] !== '/') {\r\n        return `${path}/`;\r\n    }\r\n    return path;\r\n}\r\nfunction checkWatchConfig(config) {\r\n    for (const item of config) {\r\n        if (typeof item.watch !== 'boolean' && item.watch?.allowInputInsideOutputPath) {\r\n            break;\r\n        }\r\n        if (item.input && item.output) {\r\n            const input = typeof item.input === 'string' ? ensureArray(item.input) : item.input;\r\n            const outputs = ensureArray(item.output);\r\n            for (const index in input) {\r\n                const inputPath = input[index];\r\n                if (typeof inputPath !== 'string') {\r\n                    continue;\r\n                }\r\n                const outputWithInputAsSubPath = outputs.find(({ dir }) => dir && ensureTrailingSlash(inputPath).startsWith(ensureTrailingSlash(dir)));\r\n                if (outputWithInputAsSubPath) {\r\n                    error(logInvalidOption('watch', URL_WATCH, `the input \"${inputPath}\" is a subpath of the output \"${outputWithInputAsSubPath.dir}\"`));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nasync function watchInternal(configs, emitter) {\r\n    const optionsList = await Promise.all(ensureArray(configs).map(config => mergeOptions(config, true)));\r\n    const watchOptionsList = optionsList.filter(config => config.watch !== false);\r\n    if (watchOptionsList.length === 0) {\r\n        return error(logInvalidOption('watch', URL_WATCH, 'there must be at least one config where \"watch\" is not set to \"false\"'));\r\n    }\r\n    checkWatchConfig(watchOptionsList);\r\n    await loadFsEvents();\r\n    const { Watcher } = await import('./watch.js');\r\n    new Watcher(watchOptionsList, emitter);\r\n}\r\n\r\nexport { createFilter$1 as createFilter, defineConfig, fseventsImporter, getAugmentedNamespace, getDefaultExportFromCjs, rollup, rollupInternal, version, watch };\r\n"],
  "mappings": "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",
  "names": ["n", "relative", "locate", "segment", "replacement", "identifier", "property", "Identifier", "importExpression", "StaticBlock", "decorator", "declaredVariable", "ExpressionStatement", "BlockStatement", "RestElement", "propertyReadSideEffects", "ExportDefaultDeclaration", "Literal", "memberExpression", "MemberExpression", "metaProperty", "URL", "umd", "exportDefaultDeclaration", "_", "name", "amd", "keypath", "a", "chars", "win32", "utils", "base", "constants", "opts", "value", "rest", "posix", "source", "isObject", "picomatch", "state", "extractAssignedNames", "normalizePath", "ArrowFunctionExpression", "AwaitExpression", "CallExpression", "CatchClause", "FunctionExpression", "VariableDeclarator", "ImportExpression", "callExpression", "resolve", "objectPattern", "ObjectExpression", "parseError", "Program", "Property", "ReturnStatement", "switchCase", "TemplateLiteral", "convertNode", "BuildPhase", "map", "process$1", "module", "id", "Chunk", "code", "fileName", "sanitizeFileName", "resolve$1", "rendered", "resolveFileName", "signature", "commonSegments", "line", "Bundle", "importer", "attributes", "isEntry", "fs", "level", "getLogHandler", "log", "external", "createFilter", "argument0", "error", "pluginDriver", "reject", "SortingFileType", "env", "message"]
}
