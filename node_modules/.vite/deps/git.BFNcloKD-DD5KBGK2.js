import {
  resolve
} from "./chunk-5ZZAFORQ.js";
import {
  ve
} from "./chunk-JY2H3NC3.js";
import "./chunk-6343F3HK.js";
import "./chunk-HFGUXVMG.js";
import "./chunk-J2SMN4EQ.js";
import "./chunk-BFSZNRNG.js";
import "./chunk-5GUNUIXR.js";
import {
  __publicField
} from "./chunk-UN725CXD.js";

// node_modules/vitest/dist/chunks/git.BFNcloKD.js
var VitestGit = class {
  constructor(cwd) {
    __publicField(this, "root");
    this.cwd = cwd;
  }
  async resolveFilesWithGitCommand(args) {
    let result;
    try {
      result = await ve("git", args, { nodeOptions: { cwd: this.root } });
    } catch (e) {
      throw e.message = e.stderr, e;
    }
    return result.stdout.split("\n").filter((s) => s !== "").map((changedPath) => resolve(this.root, changedPath));
  }
  async findChangedFiles(options) {
    const root = await this.getRoot(this.cwd);
    if (!root) return null;
    this.root = root;
    const changedSince = options.changedSince;
    if (typeof changedSince === "string") {
      const [committed, staged2, unstaged2] = await Promise.all([
        this.getFilesSince(changedSince),
        this.getStagedFiles(),
        this.getUnstagedFiles()
      ]);
      return [
        ...committed,
        ...staged2,
        ...unstaged2
      ];
    }
    const [staged, unstaged] = await Promise.all([this.getStagedFiles(), this.getUnstagedFiles()]);
    return [...staged, ...unstaged];
  }
  getFilesSince(hash) {
    return this.resolveFilesWithGitCommand([
      "diff",
      "--name-only",
      `${hash}...HEAD`
    ]);
  }
  getStagedFiles() {
    return this.resolveFilesWithGitCommand([
      "diff",
      "--cached",
      "--name-only"
    ]);
  }
  getUnstagedFiles() {
    return this.resolveFilesWithGitCommand([
      "ls-files",
      "--other",
      "--modified",
      "--exclude-standard"
    ]);
  }
  async getRoot(cwd) {
    const args = ["rev-parse", "--show-cdup"];
    try {
      const result = await ve("git", args, { nodeOptions: { cwd } });
      return resolve(cwd, result.stdout.trim());
    } catch {
      return null;
    }
  }
};
export {
  VitestGit
};
//# sourceMappingURL=git.BFNcloKD-DD5KBGK2.js.map
