{
  "version": 3,
  "sources": ["../../vitest/dist/chunks/index.D3XRDfWc.js"],
  "sourcesContent": ["import process from 'node:process';\nimport fs from 'node:fs/promises';\nimport path, { resolve } from 'node:path';\nimport { existsSync } from 'node:fs';\nimport { x } from 'tinyexec';\n\nconst AGENTS = [\n  \"npm\",\n  \"yarn\",\n  \"yarn@berry\",\n  \"pnpm\",\n  \"pnpm@6\",\n  \"bun\",\n  \"deno\"\n];\nconst LOCKS = {\n  \"bun.lock\": \"bun\",\n  \"bun.lockb\": \"bun\",\n  \"deno.lock\": \"deno\",\n  \"pnpm-lock.yaml\": \"pnpm\",\n  \"pnpm-workspace.yaml\": \"pnpm\",\n  \"yarn.lock\": \"yarn\",\n  \"package-lock.json\": \"npm\",\n  \"npm-shrinkwrap.json\": \"npm\"\n};\nconst INSTALL_METADATA = {\n  \"node_modules/.deno/\": \"deno\",\n  \"node_modules/.pnpm/\": \"pnpm\",\n  \"node_modules/.yarn-state.yml\": \"yarn\",\n  // yarn v2+ (node-modules)\n  \"node_modules/.yarn_integrity\": \"yarn\",\n  // yarn v1\n  \"node_modules/.package-lock.json\": \"npm\",\n  \".pnp.cjs\": \"yarn\",\n  // yarn v3+ (pnp)\n  \".pnp.js\": \"yarn\",\n  // yarn v2 (pnp)\n  \"bun.lock\": \"bun\",\n  \"bun.lockb\": \"bun\"\n};\n\nasync function pathExists(path2, type) {\n  try {\n    const stat = await fs.stat(path2);\n    return type === \"file\" ? stat.isFile() : stat.isDirectory();\n  } catch {\n    return false;\n  }\n}\nfunction* lookup(cwd = process.cwd()) {\n  let directory = path.resolve(cwd);\n  const { root } = path.parse(directory);\n  while (directory && directory !== root) {\n    yield directory;\n    directory = path.dirname(directory);\n  }\n}\nasync function parsePackageJson(filepath, onUnknown) {\n  return !filepath || !pathExists(filepath, \"file\") ? null : await handlePackageManager(filepath, onUnknown);\n}\nasync function detect(options = {}) {\n  const {\n    cwd,\n    strategies = [\"lockfile\", \"packageManager-field\", \"devEngines-field\"],\n    onUnknown\n  } = options;\n  let stopDir;\n  if (typeof options.stopDir === \"string\") {\n    const resolved = path.resolve(options.stopDir);\n    stopDir = (dir) => dir === resolved;\n  } else {\n    stopDir = options.stopDir;\n  }\n  for (const directory of lookup(cwd)) {\n    for (const strategy of strategies) {\n      switch (strategy) {\n        case \"lockfile\": {\n          for (const lock of Object.keys(LOCKS)) {\n            if (await pathExists(path.join(directory, lock), \"file\")) {\n              const name = LOCKS[lock];\n              const result = await parsePackageJson(path.join(directory, \"package.json\"), onUnknown);\n              if (result)\n                return result;\n              else\n                return { name, agent: name };\n            }\n          }\n          break;\n        }\n        case \"packageManager-field\":\n        case \"devEngines-field\": {\n          const result = await parsePackageJson(path.join(directory, \"package.json\"), onUnknown);\n          if (result)\n            return result;\n          break;\n        }\n        case \"install-metadata\": {\n          for (const metadata of Object.keys(INSTALL_METADATA)) {\n            const fileOrDir = metadata.endsWith(\"/\") ? \"dir\" : \"file\";\n            if (await pathExists(path.join(directory, metadata), fileOrDir)) {\n              const name = INSTALL_METADATA[metadata];\n              const agent = name === \"yarn\" ? isMetadataYarnClassic(metadata) ? \"yarn\" : \"yarn@berry\" : name;\n              return { name, agent };\n            }\n          }\n          break;\n        }\n      }\n    }\n    if (stopDir?.(directory))\n      break;\n  }\n  return null;\n}\nfunction getNameAndVer(pkg) {\n  const handelVer = (version) => version?.match(/\\d+(\\.\\d+){0,2}/)?.[0] ?? version;\n  if (typeof pkg.packageManager === \"string\") {\n    const [name, ver] = pkg.packageManager.replace(/^\\^/, \"\").split(\"@\");\n    return { name, ver: handelVer(ver) };\n  }\n  if (typeof pkg.devEngines?.packageManager?.name === \"string\") {\n    return {\n      name: pkg.devEngines.packageManager.name,\n      ver: handelVer(pkg.devEngines.packageManager.version)\n    };\n  }\n  return void 0;\n}\nasync function handlePackageManager(filepath, onUnknown) {\n  try {\n    const pkg = JSON.parse(await fs.readFile(filepath, \"utf8\"));\n    let agent;\n    const nameAndVer = getNameAndVer(pkg);\n    if (nameAndVer) {\n      const name = nameAndVer.name;\n      const ver = nameAndVer.ver;\n      let version = ver;\n      if (name === \"yarn\" && ver && Number.parseInt(ver) > 1) {\n        agent = \"yarn@berry\";\n        version = \"berry\";\n        return { name, agent, version };\n      } else if (name === \"pnpm\" && ver && Number.parseInt(ver) < 7) {\n        agent = \"pnpm@6\";\n        return { name, agent, version };\n      } else if (AGENTS.includes(name)) {\n        agent = name;\n        return { name, agent, version };\n      } else {\n        return onUnknown?.(pkg.packageManager) ?? null;\n      }\n    }\n  } catch {\n  }\n  return null;\n}\nfunction isMetadataYarnClassic(metadataPath) {\n  return metadataPath.endsWith(\".yarn_integrity\");\n}\n\n// src/detect.ts\nasync function detectPackageManager(cwd = process.cwd()) {\n  const result = await detect({\n    cwd,\n    onUnknown(packageManager) {\n      console.warn(\"[@antfu/install-pkg] Unknown packageManager:\", packageManager);\n      return void 0;\n    }\n  });\n  return result?.agent || null;\n}\nasync function installPackage(names, options = {}) {\n  const detectedAgent = options.packageManager || await detectPackageManager(options.cwd) || \"npm\";\n  const [agent] = detectedAgent.split(\"@\");\n  if (!Array.isArray(names))\n    names = [names];\n  const args = (typeof options.additionalArgs === \"function\" ? options.additionalArgs(agent, detectedAgent) : options.additionalArgs) || [];\n  if (options.preferOffline) {\n    if (detectedAgent === \"yarn@berry\")\n      args.unshift(\"--cached\");\n    else\n      args.unshift(\"--prefer-offline\");\n  }\n  if (agent === \"pnpm\") {\n    args.unshift(\n      /**\n       * Prevent pnpm from removing installed devDeps while `NODE_ENV` is `production`\n       * @see https://pnpm.io/cli/install#--prod--p\n       */\n      \"--prod=false\"\n    );\n    if (existsSync(resolve(options.cwd ?? process.cwd(), \"pnpm-workspace.yaml\"))) {\n      args.unshift(\"-w\");\n    }\n  }\n  return x(\n    agent,\n    [\n      agent === \"yarn\" ? \"add\" : \"install\",\n      options.dev ? \"-D\" : \"\",\n      ...args,\n      ...names\n    ].filter(Boolean),\n    {\n      nodeOptions: {\n        stdio: options.silent ? \"ignore\" : \"inherit\",\n        cwd: options.cwd\n      },\n      throwOnError: true\n    }\n  );\n}\n\nexport { detectPackageManager, installPackage };\n"],
  "mappings": "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",
  "names": ["fs", "process", "path", "_a"]
}
