{
  "version": 3,
  "sources": ["../../vitest/dist/chunks/creator.cqqifzG7.js"],
  "sourcesContent": ["import { existsSync, writeFileSync, readFileSync } from 'node:fs';\nimport { mkdir, writeFile } from 'node:fs/promises';\nimport { resolve, dirname, relative } from 'node:path';\nimport { detectPackageManager, installPackage } from './index.D3XRDfWc.js';\nimport { p as prompt, a as any } from './index.Dc3xnDvT.js';\nimport { x } from 'tinyexec';\nimport c from 'tinyrainbow';\nimport { c as configFiles } from './constants.D_Q9UYh-.js';\nimport 'node:process';\nimport 'node:module';\nimport 'node:url';\nimport './_commonjsHelpers.BFTU3MAI.js';\nimport 'readline';\nimport 'events';\n\nconst jsxExample = {\n\tname: \"HelloWorld.jsx\",\n\tjs: `\nexport default function HelloWorld({ name }) {\n  return (\n    <div>\n      <h1>Hello {name}!</h1>\n    </div>\n  )\n}\n`,\n\tts: `\nexport default function HelloWorld({ name }: { name: string }) {\n  return (\n    <div>\n      <h1>Hello {name}!</h1>\n    </div>\n  )\n}\n`,\n\ttest: `\nimport { expect, test } from 'vitest'\nimport { render } from '@testing-library/jsx'\nimport HelloWorld from './HelloWorld.<EXT>x'\n\ntest('renders name', async () => {\n  const { getByText } = await render(<HelloWorld name=\"Vitest\" />)\n  await expect.element(getByText('Hello Vitest!')).toBeInTheDocument()\n})\n`\n}, vueExample = {\n\tname: \"HelloWorld.vue\",\n\tjs: `\n<script setup>\ndefineProps({\n  name: String\n})\n<\\/script>\n\n<template>\n  <div>\n    <h1>Hello {{ name }}!</h1>\n  </div>\n</template>\n`,\n\tts: `\n<script setup lang=\"ts\">\ndefineProps<{\n  name: string\n}>()\n<\\/script>\n\n<template>\n  <div>\n    <h1>Hello {{ name }}!</h1>\n  </div>\n</template>\n`,\n\ttest: `\nimport { expect, test } from 'vitest'\nimport { render } from 'vitest-browser-vue'\nimport HelloWorld from './HelloWorld.vue'\n\ntest('renders name', async () => {\n  const { getByText } = render(HelloWorld, {\n    props: { name: 'Vitest' },\n  })\n  await expect.element(getByText('Hello Vitest!')).toBeInTheDocument()\n})\n`\n}, svelteExample = {\n\tname: \"HelloWorld.svelte\",\n\tjs: `\n<script>\n  export let name\n<\\/script>\n\n<h1>Hello {name}!</h1>\n`,\n\tts: `\n<script lang=\"ts\">\n  export let name: string\n<\\/script>\n\n<h1>Hello {name}!</h1>\n`,\n\ttest: `\nimport { expect, test } from 'vitest'\nimport { render } from 'vitest-browser-svelte'\nimport HelloWorld from './HelloWorld.svelte'\n\ntest('renders name', async () => {\n  const { getByText } = render(HelloWorld, { name: 'Vitest' })\n  await expect.element(getByText('Hello Vitest!')).toBeInTheDocument()\n})\n`\n}, markoExample = {\n\tname: \"HelloWorld.marko\",\n\tjs: `\nclass {\n  onCreate() {\n    this.state = { name: null }\n  }\n}\n\n<h1>Hello \\${state.name}!</h1>\n`,\n\tts: `\nexport interface Input {\n  name: string\n}\n\n<h1>Hello \\${input.name}!</h1>\n`,\n\ttest: `\nimport { expect, test } from 'vitest'\nimport { render } from '@marko/testing-library'\nimport HelloWorld from './HelloWorld.svelte'\n\ntest('renders name', async () => {\n  const { getByText } = await render(HelloWorld, { name: 'Vitest' })\n  const element = getByText('Hello Vitest!')\n  expect(element).toBeInTheDocument()\n})\n`\n}, litExample = {\n\tname: \"HelloWorld.js\",\n\tjs: `\nimport { html, LitElement } from 'lit'\n\nexport class HelloWorld extends LitElement {\n  static properties = {\n    name: { type: String },\n  }\n\n  constructor() {\n    super()\n    this.name = 'World'\n  }\n\n  render() {\n    return html\\`<h1>Hello \\${this.name}!</h1>\\`\n  }\n}\n\ncustomElements.define('hello-world', HelloWorld)\n`,\n\tts: `\nimport { html, LitElement } from 'lit'\nimport { customElement, property } from 'lit/decorators.js'\n\n@customElement('hello-world')\nexport class HelloWorld extends LitElement {\n  @property({ type: String })\n  name = 'World'\n\n  render() {\n    return html\\`<h1>Hello \\${this.name}!</h1>\\`\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'hello-world': HelloWorld\n  }\n}\n`,\n\ttest: `\nimport { expect, test } from 'vitest'\nimport { render } from 'vitest-browser-lit'\nimport { html } from 'lit'\nimport './HelloWorld.js'\n\ntest('renders name', async () => {\n  const screen = render(html\\`<hello-world name=\"Vitest\"></hello-world>\\`)\n  const element = screen.getByText('Hello Vitest!')\n  await expect.element(element).toBeInTheDocument()\n})\n`\n}, qwikExample = {\n\tname: \"HelloWorld.jsx\",\n\tjs: `\nimport { component$ } from '@builder.io/qwik'\n\nexport default component$(({ name }) => {\n  return (\n    <div>\n      <h1>Hello {name}!</h1>\n    </div>\n  )\n})\n`,\n\tts: `\nimport { component$ } from '@builder.io/qwik'\n\nexport default component$(({ name }: { name: string }) => {\n  return (\n    <div>\n      <h1>Hello {name}!</h1>\n    </div>\n  )\n})\n`,\n\ttest: `\nimport { expect, test } from 'vitest'\nimport { render } from 'vitest-browser-qwik'\nimport HelloWorld from './HelloWorld.tsx'\n\ntest('renders name', async () => {\n  const { getByText } = render(<HelloWorld name=\"Vitest\" />)\n  await expect.element(getByText('Hello Vitest!')).toBeInTheDocument()\n})\n`\n}, vanillaExample = {\n\tname: \"HelloWorld.js\",\n\tjs: `\nexport default function HelloWorld({ name }) {\n  const parent = document.createElement('div')\n\n  const h1 = document.createElement('h1')\n  h1.textContent = 'Hello ' + name + '!'\n  parent.appendChild(h1)\n\n  return parent\n}\n`,\n\tts: `\nexport default function HelloWorld({ name }: { name: string }): HTMLDivElement {\n  const parent = document.createElement('div')\n\n  const h1 = document.createElement('h1')\n  h1.textContent = 'Hello ' + name + '!'\n  parent.appendChild(h1)\n\n  return parent\n}\n`,\n\ttest: `\nimport { expect, test } from 'vitest'\nimport { getByText } from '@testing-library/dom'\nimport HelloWorld from './HelloWorld.js'\n\ntest('renders name', () => {\n  const parent = HelloWorld({ name: 'Vitest' })\n  document.body.appendChild(parent)\n\n  const element = getByText(parent, 'Hello Vitest!')\n  expect(element).toBeInTheDocument()\n})\n`\n};\nfunction getExampleTest(framework) {\n\tswitch (framework) {\n\t\tcase \"solid\": return {\n\t\t\t...jsxExample,\n\t\t\ttest: jsxExample.test.replace(\"@testing-library/jsx\", `@testing-library/${framework}`)\n\t\t};\n\t\tcase \"preact\":\n\t\tcase \"react\": return {\n\t\t\t...jsxExample,\n\t\t\ttest: jsxExample.test.replace(\"@testing-library/jsx\", `vitest-browser-${framework}`)\n\t\t};\n\t\tcase \"vue\": return vueExample;\n\t\tcase \"svelte\": return svelteExample;\n\t\tcase \"lit\": return litExample;\n\t\tcase \"marko\": return markoExample;\n\t\tcase \"qwik\": return qwikExample;\n\t\tdefault: return vanillaExample;\n\t}\n}\nasync function generateExampleFiles(framework, lang) {\n\tconst example = getExampleTest(framework);\n\tlet fileName = example.name;\n\tconst folder = resolve(process.cwd(), \"vitest-example\"), fileContent = example[lang];\n\tif (!existsSync(folder)) await mkdir(folder, { recursive: true });\n\tconst isJSX = fileName.endsWith(\".jsx\");\n\tif (isJSX && lang === \"ts\") fileName = fileName.replace(\".jsx\", \".tsx\");\n\telse if (fileName.endsWith(\".js\") && lang === \"ts\") fileName = fileName.replace(\".js\", \".ts\");\n\texample.test = example.test.replace(\"<EXT>\", lang);\n\tconst filePath = resolve(folder, fileName), testPath = resolve(folder, `HelloWorld.test.${isJSX ? `${lang}x` : lang}`);\n\treturn writeFileSync(filePath, fileContent.trimStart(), \"utf-8\"), writeFileSync(testPath, example.test.trimStart(), \"utf-8\"), testPath;\n}\n\n// eslint-disable-next-line no-console\nconst log = console.log;\nfunction getProviderOptions() {\n\treturn Object.entries({\n\t\tplaywright: \"Playwright relies on Chrome DevTools protocol. Read more: https://playwright.dev\",\n\t\twebdriverio: \"WebdriverIO uses WebDriver protocol. Read more: https://webdriver.io\",\n\t\tpreview: \"Preview is useful to quickly run your tests in the browser, but not suitable for CI.\"\n\t}).map(([provider, description]) => {\n\t\treturn {\n\t\t\ttitle: provider,\n\t\t\tdescription,\n\t\t\tvalue: provider\n\t\t};\n\t});\n}\nfunction getBrowserNames(provider) {\n\tswitch (provider) {\n\t\tcase \"webdriverio\": return [\n\t\t\t\"chrome\",\n\t\t\t\"firefox\",\n\t\t\t\"edge\",\n\t\t\t\"safari\"\n\t\t];\n\t\tcase \"playwright\": return [\n\t\t\t\"chromium\",\n\t\t\t\"firefox\",\n\t\t\t\"webkit\"\n\t\t];\n\t\tcase \"preview\": return [\n\t\t\t\"chrome\",\n\t\t\t\"firefox\",\n\t\t\t\"safari\"\n\t\t];\n\t}\n}\nfunction getFramework() {\n\treturn [\n\t\t{\n\t\t\ttitle: \"vanilla\",\n\t\t\tvalue: \"vanilla\",\n\t\t\tdescription: \"No framework, just plain JavaScript or TypeScript.\"\n\t\t},\n\t\t{\n\t\t\ttitle: \"vue\",\n\t\t\tvalue: \"vue\",\n\t\t\tdescription: \"\\\"The Progressive JavaScript Framework\\\"\"\n\t\t},\n\t\t{\n\t\t\ttitle: \"svelte\",\n\t\t\tvalue: \"svelte\",\n\t\t\tdescription: \"\\\"Svelte: cybernetically enhanced web apps\\\"\"\n\t\t},\n\t\t{\n\t\t\ttitle: \"react\",\n\t\t\tvalue: \"react\",\n\t\t\tdescription: \"\\\"The library for web and native user interfaces\\\"\"\n\t\t},\n\t\t{\n\t\t\ttitle: \"lit\",\n\t\t\tvalue: \"lit\",\n\t\t\tdescription: \"\\\"A simple library for building fast, lightweight web components.\\\"\"\n\t\t},\n\t\t{\n\t\t\ttitle: \"preact\",\n\t\t\tvalue: \"preact\",\n\t\t\tdescription: \"\\\"Fast 3kB alternative to React with the same modern API\\\"\"\n\t\t},\n\t\t{\n\t\t\ttitle: \"solid\",\n\t\t\tvalue: \"solid\",\n\t\t\tdescription: \"\\\"Simple and performant reactivity for building user interfaces\\\"\"\n\t\t},\n\t\t{\n\t\t\ttitle: \"marko\",\n\t\t\tvalue: \"marko\",\n\t\t\tdescription: \"\\\"A declarative, HTML-based language that makes building web apps fun\\\"\"\n\t\t},\n\t\t{\n\t\t\ttitle: \"qwik\",\n\t\t\tvalue: \"qwik\",\n\t\t\tdescription: \"\\\"Instantly interactive web apps at scale\\\"\"\n\t\t}\n\t];\n}\nfunction getFrameworkTestPackage(framework) {\n\tswitch (framework) {\n\t\tcase \"vanilla\": return null;\n\t\tcase \"vue\": return \"vitest-browser-vue\";\n\t\tcase \"svelte\": return \"vitest-browser-svelte\";\n\t\tcase \"react\": return \"vitest-browser-react\";\n\t\tcase \"lit\": return \"vitest-browser-lit\";\n\t\tcase \"preact\": return \"vitest-browser-preact\";\n\t\tcase \"solid\": return \"@solidjs/testing-library\";\n\t\tcase \"marko\": return \"@marko/testing-library\";\n\t\tcase \"qwik\": return \"vitest-browser-qwik\";\n\t}\n\tthrow new Error(`Unsupported framework: ${framework}`);\n}\nfunction getFrameworkPluginPackage(framework) {\n\tswitch (framework) {\n\t\tcase \"vue\": return \"@vitejs/plugin-vue\";\n\t\tcase \"svelte\": return \"@sveltejs/vite-plugin-svelte\";\n\t\tcase \"react\": return \"@vitejs/plugin-react\";\n\t\tcase \"preact\": return \"@preact/preset-vite\";\n\t\tcase \"solid\": return \"vite-plugin-solid\";\n\t\tcase \"marko\": return \"@marko/vite\";\n\t\tcase \"qwik\": return \"@builder.io/qwik/optimizer\";\n\t}\n\treturn null;\n}\nfunction getLanguageOptions() {\n\treturn [{\n\t\ttitle: \"TypeScript\",\n\t\tdescription: \"Use TypeScript.\",\n\t\tvalue: \"ts\"\n\t}, {\n\t\ttitle: \"JavaScript\",\n\t\tdescription: \"Use plain JavaScript.\",\n\t\tvalue: \"js\"\n\t}];\n}\nasync function installPackages(pkgManager, packages) {\n\tif (!packages.length) {\n\t\tlog(c.green(\"✔\"), c.bold(\"All packages are already installed.\"));\n\t\treturn;\n\t}\n\tlog(c.cyan(\"◼\"), c.bold(\"Installing packages...\")), log(c.cyan(\"◼\"), packages.join(\", \")), log(), await installPackage(packages, {\n\t\tdev: true,\n\t\tpackageManager: pkgManager ?? void 0\n\t});\n}\nfunction readPkgJson(path) {\n\tif (!existsSync(path)) return null;\n\tconst content = readFileSync(path, \"utf-8\");\n\treturn JSON.parse(content);\n}\nfunction getPossibleDefaults(dependencies) {\n\tconst provider = getPossibleProvider(dependencies), framework = getPossibleFramework(dependencies);\n\treturn {\n\t\tlang: \"ts\",\n\t\tprovider,\n\t\tframework\n\t};\n}\nfunction getPossibleFramework(dependencies) {\n\treturn dependencies.vue || dependencies[\"vue-tsc\"] || dependencies[\"@vue/reactivity\"] ? \"vue\" : dependencies.react || dependencies[\"react-dom\"] ? \"react\" : dependencies.svelte || dependencies[\"@sveltejs/kit\"] ? \"svelte\" : dependencies.lit || dependencies[\"lit-html\"] ? \"lit\" : dependencies.preact ? \"preact\" : dependencies[\"solid-js\"] || dependencies[\"@solidjs/start\"] ? \"solid\" : dependencies.marko ? \"marko\" : dependencies[\"@builder.io/qwik\"] || dependencies[\"@qwik.dev/core\"] ? \"qwik\" : \"vanilla\";\n}\nfunction getPossibleProvider(dependencies) {\n\t// playwright is the default recommendation\n\treturn dependencies.webdriverio || dependencies[\"@wdio/cli\"] || dependencies[\"@wdio/config\"] ? \"webdriverio\" : \"playwright\";\n}\nfunction getProviderDocsLink(provider) {\n\tswitch (provider) {\n\t\tcase \"playwright\": return \"https://vitest.dev/guide/browser/playwright\";\n\t\tcase \"webdriverio\": return \"https://vitest.dev/guide/browser/webdriverio\";\n\t}\n}\nfunction sort(choices, value) {\n\tconst index = choices.findIndex((i) => i.value === value);\n\treturn index === -1 ? choices : [choices.splice(index, 1)[0], ...choices];\n}\nfunction fail() {\n\tprocess.exitCode = 1;\n}\nfunction getFrameworkImportInfo(framework) {\n\tswitch (framework) {\n\t\tcase \"svelte\": return {\n\t\t\timportName: \"svelte\",\n\t\t\tisNamedExport: true\n\t\t};\n\t\tcase \"qwik\": return {\n\t\t\timportName: \"qwikVite\",\n\t\t\tisNamedExport: true\n\t\t};\n\t\tdefault: return {\n\t\t\timportName: framework,\n\t\t\tisNamedExport: false\n\t\t};\n\t}\n}\nasync function generateFrameworkConfigFile(options) {\n\tconst { importName, isNamedExport } = getFrameworkImportInfo(options.framework), frameworkImport = isNamedExport ? `import { ${importName} } from '${options.frameworkPlugin}'` : `import ${importName} from '${options.frameworkPlugin}'`, configContent = [\n\t\t`import { defineConfig } from 'vitest/config'`,\n\t\t`import { ${options.provider} } from '@vitest/browser-${options.provider}'`,\n\t\toptions.frameworkPlugin ? frameworkImport : null,\n\t\t``,\n\t\t\"export default defineConfig({\",\n\t\toptions.frameworkPlugin ? `  plugins: [${importName}()],` : null,\n\t\t`  test: {`,\n\t\t`    browser: {`,\n\t\t`      enabled: true,`,\n\t\t`      provider: ${options.provider}(),`,\n\t\toptions.provider !== \"preview\" && `      // ${getProviderDocsLink(options.provider)}`,\n\t\t`      instances: [`,\n\t\t...options.browsers.map((browser) => `      { browser: '${browser}' },`),\n\t\t`      ],`,\n\t\t`    },`,\n\t\t`  },`,\n\t\t`})`,\n\t\t\"\"\n\t].filter((t) => typeof t === \"string\").join(\"\\n\");\n\tawait writeFile(options.configPath, configContent);\n}\nasync function updatePkgJsonScripts(pkgJsonPath, vitestScript) {\n\tif (!existsSync(pkgJsonPath)) {\n\t\tconst pkg = { scripts: { \"test:browser\": vitestScript } };\n\t\tawait writeFile(pkgJsonPath, `${JSON.stringify(pkg, null, 2)}\\n`, \"utf-8\");\n\t} else {\n\t\tconst pkg = JSON.parse(readFileSync(pkgJsonPath, \"utf-8\"));\n\t\tpkg.scripts = pkg.scripts || {}, pkg.scripts[\"test:browser\"] = vitestScript, await writeFile(pkgJsonPath, `${JSON.stringify(pkg, null, 2)}\\n`, \"utf-8\");\n\t}\n\tlog(c.green(\"✔\"), \"Added \\\"test:browser\\\" script to your package.json.\");\n}\nfunction getRunScript(pkgManager) {\n\tswitch (pkgManager) {\n\t\tcase \"yarn@berry\":\n\t\tcase \"yarn\": return \"yarn test:browser\";\n\t\tcase \"pnpm@6\":\n\t\tcase \"pnpm\": return \"pnpm test:browser\";\n\t\tcase \"bun\": return \"bun test:browser\";\n\t\tdefault: return \"npm run test:browser\";\n\t}\n}\nfunction getPlaywrightRunArgs(pkgManager) {\n\tswitch (pkgManager) {\n\t\tcase \"yarn@berry\":\n\t\tcase \"yarn\": return [\"yarn\", \"exec\"];\n\t\tcase \"pnpm@6\":\n\t\tcase \"pnpm\": return [\"pnpx\"];\n\t\tcase \"bun\": return [\"bunx\"];\n\t\tdefault: return [\"npx\"];\n\t}\n}\nasync function create() {\n\tlog(c.cyan(\"◼\"), \"This utility will help you set up a browser testing environment.\\n\");\n\tconst pkgJsonPath = resolve(process.cwd(), \"package.json\"), pkg = readPkgJson(pkgJsonPath) || {}, dependencies = {\n\t\t...pkg.dependencies,\n\t\t...pkg.devDependencies\n\t}, defaults = getPossibleDefaults(dependencies), { lang } = await prompt({\n\t\ttype: \"select\",\n\t\tname: \"lang\",\n\t\tmessage: \"Choose a language for your tests\",\n\t\tchoices: sort(getLanguageOptions(), defaults?.lang)\n\t});\n\tif (!lang) return fail();\n\tconst { provider } = await prompt({\n\t\ttype: \"select\",\n\t\tname: \"provider\",\n\t\tmessage: \"Choose a browser provider. Vitest will use its API to control the testing environment\",\n\t\tchoices: sort(getProviderOptions(), defaults?.provider)\n\t});\n\tif (!provider) return fail();\n\tconst { browsers } = await prompt({\n\t\ttype: \"multiselect\",\n\t\tname: \"browsers\",\n\t\tmessage: \"Choose a browser\",\n\t\tchoices: getBrowserNames(provider).map((browser) => ({\n\t\t\ttitle: browser,\n\t\t\tvalue: browser\n\t\t}))\n\t});\n\tif (!provider) return fail();\n\tconst { framework } = await prompt({\n\t\ttype: \"select\",\n\t\tname: \"framework\",\n\t\tmessage: \"Choose your framework\",\n\t\tchoices: sort(getFramework(), defaults?.framework)\n\t});\n\tif (!framework) return fail();\n\tlet installPlaywright = false;\n\tif (provider === \"playwright\") ({installPlaywright} = await prompt({\n\t\ttype: \"confirm\",\n\t\tname: \"installPlaywright\",\n\t\tmessage: `Install Playwright browsers (can be done manually via 'pnpm exec playwright install')?`\n\t}));\n\tif (installPlaywright == null) return fail();\n\tconst dependenciesToInstall = [`@vitest/browser-${provider}`], frameworkPackage = getFrameworkTestPackage(framework);\n\tif (frameworkPackage) dependenciesToInstall.push(frameworkPackage);\n\tconst frameworkPlugin = getFrameworkPluginPackage(framework);\n\tif (frameworkPlugin) dependenciesToInstall.push(frameworkPlugin);\n\tconst pkgManager = await detectPackageManager();\n\tlog(), await installPackages(pkgManager, dependenciesToInstall.filter((pkg) => !dependencies[pkg]));\n\tconst rootConfig = any(configFiles, { cwd: process.cwd() });\n\tlet scriptCommand = \"vitest\";\n\tif (log(), rootConfig) {\n\t\tconst configPath = resolve(dirname(rootConfig), `vitest.browser.config.${lang}`);\n\t\tscriptCommand = `vitest --config=${relative(process.cwd(), configPath)}`, await generateFrameworkConfigFile({\n\t\t\tconfigPath,\n\t\t\tframework,\n\t\t\tframeworkPlugin,\n\t\t\tprovider,\n\t\t\tbrowsers\n\t\t}), log(\n\t\t\tc.green(\"✔\"),\n\t\t\t\"Created a new config file for browser tests:\",\n\t\t\tc.bold(relative(process.cwd(), configPath)),\n\t\t\t// TODO: Can we modify the config ourselves?\n\t\t\t\"\\nSince you already have a Vitest config file, it is recommended to copy the contents of the new file \",\n\t\t\t\"into your existing config located at \",\n\t\t\tc.bold(relative(process.cwd(), rootConfig))\n\t\t);\n\t} else {\n\t\tconst configPath = resolve(process.cwd(), `vitest.config.${lang}`);\n\t\tawait generateFrameworkConfigFile({\n\t\t\tconfigPath,\n\t\t\tframework,\n\t\t\tframeworkPlugin,\n\t\t\tprovider,\n\t\t\tbrowsers\n\t\t}), log(c.green(\"✔\"), \"Created a config file for browser tests:\", c.bold(relative(process.cwd(), configPath)));\n\t}\n\tif (log(), await updatePkgJsonScripts(pkgJsonPath, scriptCommand), installPlaywright) {\n\t\tlog();\n\t\tconst [command, ...args] = getPlaywrightRunArgs(pkgManager), allArgs = [\n\t\t\t...args,\n\t\t\t\"playwright\",\n\t\t\t\"install\",\n\t\t\t\"--with-deps\"\n\t\t];\n\t\tlog(c.cyan(\"◼\"), `Installing Playwright dependencies with \\`${c.bold(command)} ${c.bold(allArgs.join(\" \"))}\\`...`), log(), await x(command, allArgs, { nodeOptions: { stdio: [\n\t\t\t\"pipe\",\n\t\t\t\"inherit\",\n\t\t\t\"inherit\"\n\t\t] } });\n\t}\n\tlog();\n\tconst exampleTestFile = await generateExampleFiles(framework, lang);\n\tlog(c.green(\"✔\"), \"Created example test file in\", c.bold(relative(process.cwd(), exampleTestFile))), log(c.dim(\"  You can safely delete this file once you have written your own tests.\")), log(), log(c.cyan(\"◼\"), \"All done! Run your tests with\", c.bold(getRunScript(pkgManager)));\n}\n\nexport { create };\n"],
  "mappings": "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",
  "names": ["pkg"]
}
