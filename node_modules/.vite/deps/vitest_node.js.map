{
  "version": 3,
  "sources": ["../../vitest/dist/node.js"],
  "sourcesContent": ["import * as vite from 'vite';\nimport { resolveConfig as resolveConfig$1, mergeConfig } from 'vite';\nexport { esbuildVersion, isCSSRequest, isFileServingAllowed, parseAst, parseAstAsync, rollupVersion, version as viteVersion } from 'vite';\nimport { V as Vitest, a as VitestPlugin } from './chunks/cli-api.6GYRwzrM.js';\nexport { f as ForksPoolWorker, G as GitNotFoundError, F as TestsNotFoundError, T as ThreadsPoolWorker, h as TypecheckPoolWorker, b as VitestPackageInstaller, j as VmForksPoolWorker, k as VmThreadsPoolWorker, o as createDebugger, d as createMethodsRPC, n as createViteLogger, c as createVitest, e as escapeTestName, l as experimental_getRunnerTask, g as getFilePoolName, i as isValidApiRequest, m as registerConsoleShortcuts, r as resolveFsAllow, s as startVitest } from './chunks/cli-api.6GYRwzrM.js';\nexport { p as parseCLI } from './chunks/cac.Be29vze6.js';\nimport { r as resolveConfig$2 } from './chunks/coverage.DT47gDHj.js';\nexport { b as BaseSequencer, a as resolveApiServerConfig } from './chunks/coverage.DT47gDHj.js';\nimport { slash, deepClone } from '@vitest/utils/helpers';\nimport { a as any } from './chunks/index.Dc3xnDvT.js';\nimport { resolve } from 'pathe';\nimport { c as configFiles } from './chunks/constants.D_Q9UYh-.js';\nexport { distDir, rootDir } from './path.js';\nexport { generateFileHash } from '@vitest/runner/utils';\nimport 'node:fs';\nimport './chunks/coverage.D_JHT54q.js';\nimport 'node:path';\nimport 'node:os';\nimport '@vitest/snapshot/manager';\nimport './chunks/index.Bgo3tNWt.js';\nimport './chunks/index.CcRZ6fUh.js';\nimport 'node:fs/promises';\nimport 'node:perf_hooks';\nimport '@vitest/utils/source-map';\nimport 'tinyrainbow';\nimport './chunks/env.D4Lgay0q.js';\nimport 'std-env';\nimport 'node:util';\nimport 'node:console';\nimport 'node:stream';\nimport '@vitest/utils/display';\nimport 'tinyexec';\nimport '@vitest/utils/offset';\nimport 'node:module';\nimport 'events';\nimport 'https';\nimport 'http';\nimport 'net';\nimport 'tls';\nimport 'crypto';\nimport 'stream';\nimport 'url';\nimport 'zlib';\nimport 'buffer';\nimport './chunks/_commonjsHelpers.BFTU3MAI.js';\nimport 'node:crypto';\nimport 'debug';\nimport '#module-evaluator';\nimport 'vite/module-runner';\nimport '@vitest/utils/highlight';\nimport 'node:url';\nimport 'node:tty';\nimport 'node:events';\nimport 'node:child_process';\nimport 'node:v8';\nimport 'node:worker_threads';\nimport 'picomatch';\nimport 'tinyglobby';\nimport 'magic-string';\nimport '@vitest/mocker/node';\nimport './chunks/defaults.BOqNVLsY.js';\nimport '@vitest/utils/constants';\nimport '@vitest/utils/resolver';\nimport 'es-module-lexer';\nimport './chunks/index.BdSLhLDZ.js';\nimport 'node:assert';\nimport '@vitest/utils/serialize';\nimport 'node:readline';\nimport 'node:process';\nimport 'readline';\n\n// this is only exported as a public function and not used inside vitest\nasync function resolveConfig(options = {}, viteOverrides = {}) {\n\tconst root = slash(resolve(options.root || process.cwd())), configPath = options.config === false ? false : options.config ? resolve(root, options.config) : any(configFiles, { cwd: root });\n\toptions.config = configPath;\n\tconst vitest = new Vitest(\"test\", deepClone(options)), config = await resolveConfig$1(mergeConfig({\n\t\tconfigFile: configPath,\n\t\tmode: options.mode || \"test\",\n\t\tplugins: [await VitestPlugin(options, vitest)]\n\t}, mergeConfig(viteOverrides, { root: options.root })), \"serve\"), updatedOptions = Reflect.get(config, \"_vitest\"), vitestConfig = resolveConfig$2(vitest, updatedOptions, config);\n\treturn await vitest.close(), {\n\t\tviteConfig: config,\n\t\tvitestConfig\n\t};\n}\n\nconst version = Vitest.version;\nconst createViteServer = vite.createServer;\n// rolldownVersion is exported only by rolldown-vite\nconst rolldownVersion = vite.rolldownVersion;\n\nexport { VitestPlugin, createViteServer, resolveConfig, rolldownVersion, version };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,qBAAO;AAEP,uBAAO;AACP,qBAAO;AAIP,sBAAO;AACP,6BAAO;AAKP,uBAAO;AACP,0BAAO;AACP,yBAAO;AAIP,yBAAO;AACP,oBAAO;AACP,mBAAO;AACP,kBAAO;AACP,iBAAO;AACP,iBAAO;AACP,oBAAO;AACP,oBAAO;AACP,iBAAO;AACP,kBAAO;AACP,oBAAO;AAEP,yBAAO;AACP,mBAAO;AAIP,sBAAO;AACP,sBAAO;AACP,yBAAO;AACP,gCAAO;AACP,qBAAO;AACP,iCAAO;AACP,uBAAO;AASP,yBAAO;AAEP,2BAAO;AACP,0BAAO;AACP,sBAAO;AAGP,eAAeA,eAAc,UAAU,CAAC,GAAG,gBAAgB,CAAC,GAAG;AAC9D,QAAM,OAAO,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,IAAI,CAAC,CAAC,GAAG,aAAa,QAAQ,WAAW,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,MAAM,QAAQ,MAAM,IAAI,IAAI,aAAa,EAAE,KAAK,KAAK,CAAC;AAC3L,UAAQ,SAAS;AACjB,QAAM,SAAS,IAAI,OAAO,QAAQ,UAAU,OAAO,CAAC,GAAG,SAAS,MAAM,cAAgB,YAAY;AAAA,IACjG,YAAY;AAAA,IACZ,MAAM,QAAQ,QAAQ;AAAA,IACtB,SAAS,CAAC,MAAM,aAAa,SAAS,MAAM,CAAC;AAAA,EAC9C,GAAG,YAAY,eAAe,EAAE,MAAM,QAAQ,KAAK,CAAC,CAAC,GAAG,OAAO,GAAG,iBAAiB,QAAQ,IAAI,QAAQ,SAAS,GAAG,eAAe,gBAAgB,QAAQ,gBAAgB,MAAM;AAChL,SAAO,MAAM,OAAO,MAAM,GAAG;AAAA,IAC5B,YAAY;AAAA,IACZ;AAAA,EACD;AACD;AAEA,IAAM,UAAU,OAAO;AACvB,IAAM,mBAAwB;AAE9B,IAAMC,mBAAuB;",
  "names": ["resolveConfig", "rolldownVersion"]
}
