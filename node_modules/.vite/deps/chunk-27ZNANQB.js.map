{
  "version": 3,
  "sources": ["browser-external:node:console", "browser-external:node:stream", "../../vitest/dist/chunks/index.CcRZ6fUh.js", "../../@vitest/pretty-format/dist/index.js", "../../@vitest/utils/dist/display.js", "../../@vitest/utils/dist/constants.js", "../../@vitest/utils/dist/helpers.js", "../../@vitest/utils/dist/chunk-_commonjsHelpers.js", "../../@vitest/utils/dist/diff.js", "../../@vitest/utils/dist/serialize.js", "../../@vitest/utils/dist/error.js", "../../@vitest/utils/dist/chunk-pathe.M-eThtNZ.js", "../../@vitest/utils/dist/source-map.js", "../../@vitest/runner/dist/chunk-tasks.js", "../../std-env/dist/index.mjs", "../../vitest/dist/chunks/env.D4Lgay0q.js", "../../vitest/dist/path.js", "../../vitest/node_modules/vite/dist/node/index.js", "../../@vitest/utils/dist/offset.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:console\" has been externalized for browser compatibility. Cannot access \"node:console.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"node:stream\" has been externalized for browser compatibility. Cannot access \"node:stream.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "import { existsSync, readFileSync, promises } from 'node:fs';\nimport { mkdir, writeFile, readdir, stat, readFile } from 'node:fs/promises';\nimport { resolve as resolve$1, dirname, isAbsolute, relative, basename, join, normalize } from 'pathe';\nimport { performance as performance$1 } from 'node:perf_hooks';\nimport { getTests, getTestName, hasFailed, getSuites, generateHash, calculateSuiteHash, someTasksAreOnly, interpretTaskModes, getTasks, getFullName } from '@vitest/runner/utils';\nimport { slash, toArray, isPrimitive } from '@vitest/utils/helpers';\nimport { parseStacktrace, parseErrorStacktrace, defaultStackIgnorePatterns } from '@vitest/utils/source-map';\nimport c from 'tinyrainbow';\nimport { i as isTTY } from './env.D4Lgay0q.js';\nimport { stripVTControlCharacters } from 'node:util';\nimport { Console } from 'node:console';\nimport { Writable } from 'node:stream';\nimport { inspect } from '@vitest/utils/display';\nimport nodeos__default, { hostname } from 'node:os';\nimport { x } from 'tinyexec';\nimport { distDir } from '../path.js';\nimport { parseAstAsync } from 'vite';\nimport { positionToOffset, lineSplitRE } from '@vitest/utils/offset';\nimport { createRequire } from 'node:module';\n\n/// <reference types=\"../types/index.d.ts\" />\n\n// (c) 2020-present Andrea Giammarchi\n\nconst {parse: $parse, stringify: $stringify} = JSON;\nconst {keys} = Object;\n\nconst Primitive = String;   // it could be Number\nconst primitive = 'string'; // it could be 'number'\n\nconst ignore$1 = {};\nconst object = 'object';\n\nconst noop = (_, value) => value;\n\nconst primitives = value => (\n  value instanceof Primitive ? Primitive(value) : value\n);\n\nconst Primitives = (_, value) => (\n  typeof value === primitive ? new Primitive(value) : value\n);\n\nconst revive = (input, parsed, output, $) => {\n  const lazy = [];\n  for (let ke = keys(output), {length} = ke, y = 0; y < length; y++) {\n    const k = ke[y];\n    const value = output[k];\n    if (value instanceof Primitive) {\n      const tmp = input[value];\n      if (typeof tmp === object && !parsed.has(tmp)) {\n        parsed.add(tmp);\n        output[k] = ignore$1;\n        lazy.push({k, a: [input, parsed, tmp, $]});\n      }\n      else\n        output[k] = $.call(output, k, tmp);\n    }\n    else if (output[k] !== ignore$1)\n      output[k] = $.call(output, k, value);\n  }\n  for (let {length} = lazy, i = 0; i < length; i++) {\n    const {k, a} = lazy[i];\n    output[k] = $.call(output, k, revive.apply(null, a));\n  }\n  return output;\n};\n\nconst set = (known, input, value) => {\n  const index = Primitive(input.push(value) - 1);\n  known.set(value, index);\n  return index;\n};\n\n/**\n * Converts a specialized flatted string into a JS value.\n * @param {string} text\n * @param {(this: any, key: string, value: any) => any} [reviver]\n * @returns {any}\n */\nconst parse$1 = (text, reviver) => {\n  const input = $parse(text, Primitives).map(primitives);\n  const value = input[0];\n  const $ = reviver || noop;\n  const tmp = typeof value === object && value ?\n              revive(input, new Set, value, $) :\n              value;\n  return $.call({'': tmp}, '', tmp);\n};\n\n/**\n * Converts a JS value into a specialized flatted string.\n * @param {any} value\n * @param {((this: any, key: string, value: any) => any) | (string | number)[] | null | undefined} [replacer]\n * @param {string | number | undefined} [space]\n * @returns {string}\n */\nconst stringify = (value, replacer, space) => {\n  const $ = replacer && typeof replacer === object ?\n            (k, v) => (k === '' || -1 < replacer.indexOf(k) ? v : void 0) :\n            (replacer || noop);\n  const known = new Map;\n  const input = [];\n  const output = [];\n  let i = +set(known, input, $.call({'': value}, '', value));\n  let firstRun = !i;\n  while (i < input.length) {\n    firstRun = true;\n    output[i] = $stringify(input[i++], replace, space);\n  }\n  return '[' + output.join(',') + ']';\n  function replace(key, value) {\n    if (firstRun) {\n      firstRun = !firstRun;\n      return value;\n    }\n    const after = $.call(this, key, value);\n    switch (typeof after) {\n      case object:\n        if (after === null) return after;\n      case primitive:\n        return known.get(after) || set(known, input, after);\n    }\n    return after;\n  }\n};\n\nfunction getOutputFile(config, reporter) {\n\tif (config?.outputFile) return typeof config.outputFile === \"string\" ? config.outputFile : config.outputFile[reporter];\n}\nfunction createDefinesScript(define) {\n\treturn !define || serializeDefine(define) === \"{}\" ? \"\" : `\nconst defines = ${serializeDefine(define)}\nObject.keys(defines).forEach((key) => {\n  const segments = key.split('.')\n  let target = globalThis\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i]\n    if (i === segments.length - 1) {\n      target[segment] = defines[key]\n    } else {\n      target = target[segment] || (target[segment] = {})\n    }\n  }\n})\n  `;\n}\n/**\n* Like `JSON.stringify` but keeps raw string values as a literal\n* in the generated code. For example: `\"window\"` would refer to\n* the global `window` object directly.\n*/\nfunction serializeDefine(define) {\n\tconst userDefine = {};\n\tfor (const key in define) {\n\t\t// vitest sets this to avoid vite:client-inject plugin\n\t\tif (key === \"process.env.NODE_ENV\" && define[key] === \"process.env.NODE_ENV\") continue;\n\t\t// import.meta.env.* is handled in `importAnalysis` plugin\n\t\tif (!key.startsWith(\"import.meta.env.\")) userDefine[key] = define[key];\n\t}\n\tlet res = `{`;\n\tconst keys = Object.keys(userDefine).sort();\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key = keys[i], val = userDefine[key];\n\t\tif (res += `${JSON.stringify(key)}: ${handleDefineValue(val)}`, i !== keys.length - 1) res += `, `;\n\t}\n\treturn `${res}}`;\n}\nfunction handleDefineValue(value) {\n\treturn typeof value === \"undefined\" ? \"undefined\" : typeof value === \"string\" ? value : JSON.stringify(value);\n}\n\nclass BlobReporter {\n\tstart = 0;\n\tctx;\n\toptions;\n\tcoverage;\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\tonInit(ctx) {\n\t\tif (ctx.config.watch) throw new Error(\"Blob reporter is not supported in watch mode\");\n\t\tthis.ctx = ctx, this.start = performance.now(), this.coverage = void 0;\n\t}\n\tonCoverage(coverage) {\n\t\tthis.coverage = coverage;\n\t}\n\tasync onTestRunEnd(testModules, unhandledErrors) {\n\t\tconst executionTime = performance.now() - this.start, files = testModules.map((testModule) => testModule.task), errors = [...unhandledErrors], coverage = this.coverage;\n\t\tlet outputFile = this.options.outputFile ?? getOutputFile(this.ctx.config, \"blob\");\n\t\tif (!outputFile) {\n\t\t\tconst shard = this.ctx.config.shard;\n\t\t\toutputFile = shard ? `.vitest-reports/blob-${shard.index}-${shard.count}.json` : \".vitest-reports/blob.json\";\n\t\t}\n\t\tconst modules = this.ctx.projects.map((project) => {\n\t\t\treturn [project.name, [...project.vite.moduleGraph.idToModuleMap.entries()].map((mod) => {\n\t\t\t\treturn mod[1].file ? [\n\t\t\t\t\tmod[0],\n\t\t\t\t\tmod[1].file,\n\t\t\t\t\tmod[1].url\n\t\t\t\t] : null;\n\t\t\t}).filter((x) => x != null)];\n\t\t}), report = [\n\t\t\tthis.ctx.version,\n\t\t\tfiles,\n\t\t\terrors,\n\t\t\tmodules,\n\t\t\tcoverage,\n\t\t\texecutionTime\n\t\t], reportFile = resolve$1(this.ctx.config.root, outputFile);\n\t\tawait writeBlob(report, reportFile), this.ctx.logger.log(\"blob report written to\", reportFile);\n\t}\n}\nasync function writeBlob(content, filename) {\n\tconst report = stringify(content), dir = dirname(filename);\n\tif (!existsSync(dir)) await mkdir(dir, { recursive: true });\n\tawait writeFile(filename, report, \"utf-8\");\n}\nasync function readBlobs(currentVersion, blobsDirectory, projectsArray) {\n\t// using process.cwd() because --merge-reports can only be used in CLI\n\tconst resolvedDir = resolve$1(process.cwd(), blobsDirectory), promises = (await readdir(resolvedDir)).map(async (filename) => {\n\t\tconst fullPath = resolve$1(resolvedDir, filename);\n\t\tif (!(await stat(fullPath)).isFile()) throw new TypeError(`vitest.mergeReports() expects all paths in \"${blobsDirectory}\" to be files generated by the blob reporter, but \"${filename}\" is not a file`);\n\t\tconst content = await readFile(fullPath, \"utf-8\"), [version, files, errors, moduleKeys, coverage, executionTime] = parse$1(content);\n\t\tif (!version) throw new TypeError(`vitest.mergeReports() expects all paths in \"${blobsDirectory}\" to be files generated by the blob reporter, but \"${filename}\" is not a valid blob file`);\n\t\treturn {\n\t\t\tversion,\n\t\t\tfiles,\n\t\t\terrors,\n\t\t\tmoduleKeys,\n\t\t\tcoverage,\n\t\t\tfile: filename,\n\t\t\texecutionTime\n\t\t};\n\t}), blobs = await Promise.all(promises);\n\tif (!blobs.length) throw new Error(`vitest.mergeReports() requires at least one blob file in \"${blobsDirectory}\" directory, but none were found`);\n\tconst versions = new Set(blobs.map((blob) => blob.version));\n\tif (versions.size > 1) throw new Error(`vitest.mergeReports() requires all blob files to be generated by the same Vitest version, received\\n\\n${blobs.map((b) => `- \"${b.file}\" uses v${b.version}`).join(\"\\n\")}`);\n\tif (!versions.has(currentVersion)) throw new Error(`the blobs in \"${blobsDirectory}\" were generated by a different version of Vitest. Expected v${currentVersion}, but received v${blobs[0].version}`);\n\t// fake module graph - it is used to check if module is imported, but we don't use values inside\n\tconst projects = Object.fromEntries(projectsArray.map((p) => [p.name, p]));\n\tblobs.forEach((blob) => {\n\t\tblob.moduleKeys.forEach(([projectName, moduleIds]) => {\n\t\t\tconst project = projects[projectName];\n\t\t\tproject && moduleIds.forEach(([moduleId, file, url]) => {\n\t\t\t\tconst moduleNode = project.vite.moduleGraph.createFileOnlyEntry(file);\n\t\t\t\tmoduleNode.url = url, moduleNode.id = moduleId, moduleNode.transformResult = {\n\t\t\t\t\tcode: \" \",\n\t\t\t\t\tmap: null\n\t\t\t\t}, project.vite.moduleGraph.idToModuleMap.set(moduleId, moduleNode);\n\t\t\t});\n\t\t});\n\t});\n\tconst files = blobs.flatMap((blob) => blob.files).sort((f1, f2) => {\n\t\tconst time1 = f1.result?.startTime || 0, time2 = f2.result?.startTime || 0;\n\t\treturn time1 - time2;\n\t}), errors = blobs.flatMap((blob) => blob.errors), coverages = blobs.map((blob) => blob.coverage), executionTimes = blobs.map((blob) => blob.executionTime);\n\treturn {\n\t\tfiles,\n\t\terrors,\n\t\tcoverages,\n\t\texecutionTimes\n\t};\n}\n\nfunction hasFailedSnapshot(suite) {\n\treturn getTests(suite).some((s) => {\n\t\treturn s.result?.errors?.some((e) => typeof e?.message === \"string\" && e.message.match(/Snapshot .* mismatched/));\n\t});\n}\nfunction convertTasksToEvents(file, onTask) {\n\tconst packs = [], events = [];\n\tfunction visit(suite) {\n\t\tonTask?.(suite), packs.push([\n\t\t\tsuite.id,\n\t\t\tsuite.result,\n\t\t\tsuite.meta\n\t\t]), events.push([\n\t\t\tsuite.id,\n\t\t\t\"suite-prepare\",\n\t\t\tvoid 0\n\t\t]), suite.tasks.forEach((task) => {\n\t\t\tif (task.type === \"suite\") visit(task);\n\t\t\telse if (onTask?.(task), suite.mode !== \"skip\" && suite.mode !== \"todo\") packs.push([\n\t\t\t\ttask.id,\n\t\t\t\ttask.result,\n\t\t\t\ttask.meta\n\t\t\t]), events.push([\n\t\t\t\ttask.id,\n\t\t\t\t\"test-prepare\",\n\t\t\t\tvoid 0\n\t\t\t]), task.annotations.forEach((annotation) => {\n\t\t\t\tevents.push([\n\t\t\t\t\ttask.id,\n\t\t\t\t\t\"test-annotation\",\n\t\t\t\t\t{ annotation }\n\t\t\t\t]);\n\t\t\t}), events.push([\n\t\t\t\ttask.id,\n\t\t\t\t\"test-finished\",\n\t\t\t\tvoid 0\n\t\t\t]);\n\t\t}), events.push([\n\t\t\tsuite.id,\n\t\t\t\"suite-finished\",\n\t\t\tvoid 0\n\t\t]);\n\t}\n\treturn visit(file), {\n\t\tpacks,\n\t\tevents\n\t};\n}\n\nconst F_RIGHT = \"→\";\nconst F_DOWN = \"↓\";\nconst F_DOWN_RIGHT = \"↳\";\nconst F_POINTER = \"❯\";\nconst F_DOT = \"·\";\nconst F_CHECK = \"✓\";\nconst F_CROSS = \"×\";\nconst F_LONG_DASH = \"⎯\";\nconst F_TREE_NODE_MIDDLE = \"├──\";\nconst F_TREE_NODE_END = \"└──\";\n\nconst pointer = c.yellow(F_POINTER);\nconst skipped = c.dim(c.gray(F_DOWN));\nconst benchmarkPass = c.green(F_DOT);\nconst testPass = c.green(F_CHECK);\nconst taskFail = c.red(F_CROSS);\nconst suiteFail = c.red(F_POINTER);\nconst pending$1 = c.gray(\"·\");\nconst separator = c.dim(\" > \");\nconst labelDefaultColors = [\n\tc.bgYellow,\n\tc.bgCyan,\n\tc.bgGreen,\n\tc.bgMagenta\n];\nfunction getCols(delta = 0) {\n\tlet length = process.stdout?.columns;\n\tif (!length || Number.isNaN(length)) length = 30;\n\treturn Math.max(length + delta, 0);\n}\nfunction errorBanner(message) {\n\treturn divider(c.bold(c.bgRed(` ${message} `)), null, null, c.red);\n}\nfunction divider(text, left, right, color) {\n\tconst cols = getCols(), c = color || ((text) => text);\n\tif (text) {\n\t\tconst textLength = stripVTControlCharacters(text).length;\n\t\tif (left == null && right != null) left = cols - textLength - right;\n\t\telse left = left ?? Math.floor((cols - textLength) / 2), right = cols - textLength - left;\n\t\treturn left = Math.max(0, left), right = Math.max(0, right), `${c(F_LONG_DASH.repeat(left))}${text}${c(F_LONG_DASH.repeat(right))}`;\n\t}\n\treturn F_LONG_DASH.repeat(cols);\n}\nfunction formatTestPath(root, path) {\n\tif (isAbsolute(path)) path = relative(root, path);\n\tconst dir = dirname(path), ext = path.match(/(\\.(spec|test)\\.[cm]?[tj]sx?)$/)?.[0] || \"\", base = basename(path, ext);\n\treturn slash(c.dim(`${dir}/`) + c.bold(base)) + c.dim(ext);\n}\nfunction renderSnapshotSummary(rootDir, snapshots) {\n\tconst summary = [];\n\tif (snapshots.added) summary.push(c.bold(c.green(`${snapshots.added} written`)));\n\tif (snapshots.unmatched) summary.push(c.bold(c.red(`${snapshots.unmatched} failed`)));\n\tif (snapshots.updated) summary.push(c.bold(c.green(`${snapshots.updated} updated `)));\n\tif (snapshots.filesRemoved) if (snapshots.didUpdate) summary.push(c.bold(c.green(`${snapshots.filesRemoved} files removed `)));\n\telse summary.push(c.bold(c.yellow(`${snapshots.filesRemoved} files obsolete `)));\n\tif (snapshots.filesRemovedList && snapshots.filesRemovedList.length) {\n\t\tconst [head, ...tail] = snapshots.filesRemovedList;\n\t\tsummary.push(`${c.gray(F_DOWN_RIGHT)} ${formatTestPath(rootDir, head)}`), tail.forEach((key) => {\n\t\t\tsummary.push(`  ${c.gray(F_DOT)} ${formatTestPath(rootDir, key)}`);\n\t\t});\n\t}\n\tif (snapshots.unchecked) {\n\t\tif (snapshots.didUpdate) summary.push(c.bold(c.green(`${snapshots.unchecked} removed`)));\n\t\telse summary.push(c.bold(c.yellow(`${snapshots.unchecked} obsolete`)));\n\t\tsnapshots.uncheckedKeysByFile.forEach((uncheckedFile) => {\n\t\t\tsummary.push(`${c.gray(F_DOWN_RIGHT)} ${formatTestPath(rootDir, uncheckedFile.filePath)}`), uncheckedFile.keys.forEach((key) => summary.push(`  ${c.gray(F_DOT)} ${key}`));\n\t\t});\n\t}\n\treturn summary;\n}\nfunction countTestErrors(tasks) {\n\treturn tasks.reduce((c, i) => c + (i.result?.errors?.length || 0), 0);\n}\nfunction getStateString$1(tasks, name = \"tests\", showTotal = true) {\n\tif (tasks.length === 0) return c.dim(`no ${name}`);\n\tconst passed = tasks.filter((i) => i.result?.state === \"pass\"), failed = tasks.filter((i) => i.result?.state === \"fail\"), skipped = tasks.filter((i) => i.mode === \"skip\"), todo = tasks.filter((i) => i.mode === \"todo\");\n\treturn [\n\t\tfailed.length ? c.bold(c.red(`${failed.length} failed`)) : null,\n\t\tpassed.length ? c.bold(c.green(`${passed.length} passed`)) : null,\n\t\tskipped.length ? c.yellow(`${skipped.length} skipped`) : null,\n\t\ttodo.length ? c.gray(`${todo.length} todo`) : null\n\t].filter(Boolean).join(c.dim(\" | \")) + (showTotal ? c.gray(` (${tasks.length})`) : \"\");\n}\nfunction getStateSymbol(task) {\n\tif (task.mode === \"skip\" || task.mode === \"todo\") return skipped;\n\tif (!task.result) return pending$1;\n\tif (task.result.state === \"run\" || task.result.state === \"queued\") {\n\t\tif (task.type === \"suite\") return pointer;\n\t}\n\treturn task.result.state === \"pass\" ? task.meta?.benchmark ? benchmarkPass : testPass : task.result.state === \"fail\" ? task.type === \"suite\" ? suiteFail : taskFail : \" \";\n}\nfunction formatTimeString(date) {\n\treturn date.toTimeString().split(\" \")[0];\n}\nfunction formatTime(time) {\n\treturn time > 1e3 ? `${(time / 1e3).toFixed(2)}s` : `${Math.round(time)}ms`;\n}\nfunction formatProjectName(project, suffix = \" \") {\n\tif (!project?.name) return \"\";\n\tif (!c.isColorSupported) return `|${project.name}|${suffix}`;\n\tlet background = project.color && c[`bg${capitalize(project.color)}`];\n\tif (!background) {\n\t\tconst index = project.name.split(\"\").reduce((acc, v, idx) => acc + v.charCodeAt(0) + idx, 0);\n\t\tbackground = labelDefaultColors[index % labelDefaultColors.length];\n\t}\n\treturn c.black(background(` ${project.name} `)) + suffix;\n}\nfunction withLabel(color, label, message) {\n\tconst bgColor = `bg${color.charAt(0).toUpperCase()}${color.slice(1)}`;\n\treturn `${c.bold(c[bgColor](` ${label} `))} ${message ? c[color](message) : \"\"}`;\n}\nfunction padSummaryTitle(str) {\n\treturn c.dim(`${str.padStart(11)} `);\n}\nfunction truncateString(text, maxLength) {\n\tconst plainText = stripVTControlCharacters(text);\n\treturn plainText.length <= maxLength ? text : `${plainText.slice(0, maxLength - 1)}…`;\n}\nfunction capitalize(text) {\n\treturn `${text[0].toUpperCase()}${text.slice(1)}`;\n}\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  benchmarkPass: benchmarkPass,\n  countTestErrors: countTestErrors,\n  divider: divider,\n  errorBanner: errorBanner,\n  formatProjectName: formatProjectName,\n  formatTestPath: formatTestPath,\n  formatTime: formatTime,\n  formatTimeString: formatTimeString,\n  getStateString: getStateString$1,\n  getStateSymbol: getStateSymbol,\n  padSummaryTitle: padSummaryTitle,\n  pending: pending$1,\n  pointer: pointer,\n  renderSnapshotSummary: renderSnapshotSummary,\n  separator: separator,\n  skipped: skipped,\n  suiteFail: suiteFail,\n  taskFail: taskFail,\n  testPass: testPass,\n  truncateString: truncateString,\n  withLabel: withLabel\n});\n\nconst BADGE_PADDING = \"       \";\nclass BaseReporter {\n\tstart = 0;\n\tend = 0;\n\twatchFilters;\n\tfailedUnwatchedFiles = [];\n\tisTTY;\n\tctx = void 0;\n\trenderSucceed = false;\n\tverbose = false;\n\t_filesInWatchMode = /* @__PURE__ */ new Map();\n\t_timeStart = formatTimeString(/* @__PURE__ */ new Date());\n\tconstructor(options = {}) {\n\t\tthis.isTTY = options.isTTY ?? isTTY;\n\t}\n\tonInit(ctx) {\n\t\tthis.ctx = ctx, this.ctx.logger.printBanner(), this.start = performance$1.now();\n\t}\n\tlog(...messages) {\n\t\tthis.ctx.logger.log(...messages);\n\t}\n\terror(...messages) {\n\t\tthis.ctx.logger.error(...messages);\n\t}\n\trelative(path) {\n\t\treturn relative(this.ctx.config.root, path);\n\t}\n\tonTestRunEnd(testModules, unhandledErrors, _reason) {\n\t\tconst files = testModules.map((testModule) => testModule.task), errors = [...unhandledErrors];\n\t\tif (this.end = performance$1.now(), !files.length && !errors.length) this.ctx.logger.printNoTestFound(this.ctx.filenamePattern);\n\t\telse this.reportSummary(files, errors);\n\t}\n\tonTestCaseResult(testCase) {\n\t\tif (testCase.result().state === \"failed\") this.logFailedTask(testCase.task);\n\t}\n\tonTestSuiteResult(testSuite) {\n\t\tif (testSuite.state() === \"failed\") this.logFailedTask(testSuite.task);\n\t}\n\tonTestModuleEnd(testModule) {\n\t\tif (testModule.state() === \"failed\") this.logFailedTask(testModule.task);\n\t\tthis.printTestModule(testModule);\n\t}\n\tlogFailedTask(task) {\n\t\tif (this.ctx.config.silent === \"passed-only\") for (const log of task.logs || []) this.onUserConsoleLog(log, \"failed\");\n\t}\n\tprintTestModule(testModule) {\n\t\tconst moduleState = testModule.state();\n\t\tif (moduleState === \"queued\" || moduleState === \"pending\") return;\n\t\tlet testsCount = 0, failedCount = 0, skippedCount = 0;\n\t\t// delaying logs to calculate the test stats first\n\t\t// which minimizes the amount of for loops\n\t\tconst logs = [], originalLog = this.log.bind(this);\n\t\tthis.log = (msg) => logs.push(msg);\n\t\tconst visit = (suiteState, children) => {\n\t\t\tfor (const child of children) if (child.type === \"suite\") {\n\t\t\t\tconst suiteState = child.state();\n\t\t\t\t// Skipped suites are hidden when --hideSkippedTests, print otherwise\n\t\t\t\tif (!this.ctx.config.hideSkippedTests || suiteState !== \"skipped\") this.printTestSuite(child);\n\t\t\t\tvisit(suiteState, child.children);\n\t\t\t} else {\n\t\t\t\tconst testResult = child.result();\n\t\t\t\tif (testsCount++, testResult.state === \"failed\") failedCount++;\n\t\t\t\telse if (testResult.state === \"skipped\") skippedCount++;\n\t\t\t\tif (this.ctx.config.hideSkippedTests && suiteState === \"skipped\")\n // Skipped suites are hidden when --hideSkippedTests\n\t\t\t\tcontinue;\n\t\t\t\tthis.printTestCase(moduleState, child);\n\t\t\t}\n\t\t};\n\t\ttry {\n\t\t\tvisit(moduleState, testModule.children);\n\t\t} finally {\n\t\t\tthis.log = originalLog;\n\t\t}\n\t\tthis.log(this.getModuleLog(testModule, {\n\t\t\ttests: testsCount,\n\t\t\tfailed: failedCount,\n\t\t\tskipped: skippedCount\n\t\t})), logs.forEach((log) => this.log(log));\n\t}\n\tprintTestCase(moduleState, test) {\n\t\tconst testResult = test.result(), { duration = 0 } = test.diagnostic() || {}, padding = this.getTestIndentation(test.task), suffix = this.getTestCaseSuffix(test);\n\t\tif (testResult.state === \"failed\") this.log(c.red(` ${padding}${taskFail} ${this.getTestName(test.task, separator)}`) + suffix);\n\t\telse if (duration > this.ctx.config.slowTestThreshold) this.log(` ${padding}${c.yellow(c.dim(F_CHECK))} ${this.getTestName(test.task, separator)} ${suffix}`);\n\t\telse if (this.ctx.config.hideSkippedTests && testResult.state === \"skipped\") ; else if (this.renderSucceed || moduleState === \"failed\") this.log(` ${padding}${this.getStateSymbol(test)} ${this.getTestName(test.task, separator)}${suffix}`);\n\t}\n\tgetModuleLog(testModule, counts) {\n\t\tlet state = c.dim(`${counts.tests} test${counts.tests > 1 ? \"s\" : \"\"}`);\n\t\tif (counts.failed) state += c.dim(\" | \") + c.red(`${counts.failed} failed`);\n\t\tif (counts.skipped) state += c.dim(\" | \") + c.yellow(`${counts.skipped} skipped`);\n\t\tlet suffix = c.dim(\"(\") + state + c.dim(\")\") + this.getDurationPrefix(testModule.task);\n\t\tconst diagnostic = testModule.diagnostic();\n\t\tif (diagnostic.heap != null) suffix += c.magenta(` ${Math.floor(diagnostic.heap / 1024 / 1024)} MB heap used`);\n\t\treturn ` ${this.getEntityPrefix(testModule)} ${testModule.task.name} ${suffix}`;\n\t}\n\tprintTestSuite(testSuite) {\n\t\tif (!this.renderSucceed) return;\n\t\tconst indentation = \"  \".repeat(getIndentation(testSuite.task)), tests = Array.from(testSuite.children.allTests()), state = this.getStateSymbol(testSuite);\n\t\tthis.log(` ${indentation}${state} ${testSuite.name} ${c.dim(`(${tests.length})`)}`);\n\t}\n\tgetTestName(test, _separator) {\n\t\treturn test.name;\n\t}\n\tgetFullName(test, separator) {\n\t\tif (test === test.file) return test.name;\n\t\tlet name = test.file.name;\n\t\tif (test.location) name += c.dim(`:${test.location.line}:${test.location.column}`);\n\t\treturn name += separator, name += getTestName(test, separator), name;\n\t}\n\tgetTestIndentation(test) {\n\t\treturn \"  \".repeat(getIndentation(test));\n\t}\n\tprintAnnotations(test, console, padding = 0) {\n\t\tconst annotations = test.annotations();\n\t\tif (!annotations.length) return;\n\t\tconst PADDING = \" \".repeat(padding), groupedAnnotations = {};\n\t\tfor (const group in annotations.forEach((annotation) => {\n\t\t\tconst { location, type } = annotation;\n\t\t\tlet group;\n\t\t\tif (location) {\n\t\t\t\tconst file = relative(test.project.config.root, location.file);\n\t\t\t\tgroup = `${c.gray(`${file}:${location.line}:${location.column}`)} ${c.bold(type)}`;\n\t\t\t} else group = c.bold(type);\n\t\t\tgroupedAnnotations[group] ??= [], groupedAnnotations[group].push(annotation);\n\t\t}), groupedAnnotations) this[console](`${PADDING}${c.blue(F_POINTER)} ${group}`), groupedAnnotations[group].forEach(({ message }) => {\n\t\t\tthis[console](`${PADDING}  ${c.blue(F_DOWN_RIGHT)} ${message}`);\n\t\t});\n\t}\n\tgetEntityPrefix(entity) {\n\t\tlet title = this.getStateSymbol(entity);\n\t\tif (entity.project.name) title += ` ${formatProjectName(entity.project, \"\")}`;\n\t\tif (entity.meta().typecheck) title += ` ${c.bgBlue(c.bold(\" TS \"))}`;\n\t\treturn title;\n\t}\n\tgetTestCaseSuffix(testCase) {\n\t\tconst { heap, retryCount, repeatCount } = testCase.diagnostic() || {}, testResult = testCase.result();\n\t\tlet suffix = this.getDurationPrefix(testCase.task);\n\t\tif (retryCount != null && retryCount > 0) suffix += c.yellow(` (retry x${retryCount})`);\n\t\tif (repeatCount != null && repeatCount > 0) suffix += c.yellow(` (repeat x${repeatCount})`);\n\t\tif (heap != null) suffix += c.magenta(` ${Math.floor(heap / 1024 / 1024)} MB heap used`);\n\t\tif (testResult.state === \"skipped\" && testResult.note) suffix += c.dim(c.gray(` [${testResult.note}]`));\n\t\treturn suffix;\n\t}\n\tgetStateSymbol(test) {\n\t\treturn getStateSymbol(test.task);\n\t}\n\tgetDurationPrefix(task) {\n\t\tconst duration = task.result?.duration && Math.round(task.result?.duration);\n\t\treturn duration == null ? \"\" : (duration > this.ctx.config.slowTestThreshold ? c.yellow : c.green)(` ${duration}${c.dim(\"ms\")}`);\n\t}\n\tonWatcherStart(files = this.ctx.state.getFiles(), errors = this.ctx.state.getUnhandledErrors()) {\n\t\tif (errors.length > 0 || hasFailed(files)) this.log(withLabel(\"red\", \"FAIL\", \"Tests failed. Watching for file changes...\"));\n\t\telse if (this.ctx.isCancelling) this.log(withLabel(\"red\", \"CANCELLED\", \"Test run cancelled. Watching for file changes...\"));\n\t\telse this.log(withLabel(\"green\", \"PASS\", \"Waiting for file changes...\"));\n\t\tconst hints = [c.dim(\"press \") + c.bold(\"h\") + c.dim(\" to show help\")];\n\t\tif (hasFailedSnapshot(files)) hints.unshift(c.dim(\"press \") + c.bold(c.yellow(\"u\")) + c.dim(\" to update snapshot\"));\n\t\telse hints.push(c.dim(\"press \") + c.bold(\"q\") + c.dim(\" to quit\"));\n\t\tthis.log(BADGE_PADDING + hints.join(c.dim(\", \")));\n\t}\n\tonWatcherRerun(files, trigger) {\n\t\t// Update re-run count for each file\n\t\tthis.watchFilters = files, this.failedUnwatchedFiles = this.ctx.state.getTestModules().filter((testModule) => !files.includes(testModule.task.filepath) && testModule.state() === \"failed\"), files.forEach((filepath) => {\n\t\t\tlet reruns = this._filesInWatchMode.get(filepath) ?? 0;\n\t\t\tthis._filesInWatchMode.set(filepath, ++reruns);\n\t\t});\n\t\tlet banner = trigger ? c.dim(`${this.relative(trigger)} `) : \"\";\n\t\tif (files.length === 1) {\n\t\t\tconst rerun = this._filesInWatchMode.get(files[0]) ?? 1;\n\t\t\tbanner += c.blue(`x${rerun} `);\n\t\t}\n\t\tif (this.ctx.logger.clearFullScreen(), this.log(withLabel(\"blue\", \"RERUN\", banner)), this.ctx.configOverride.project) this.log(BADGE_PADDING + c.dim(\" Project name: \") + c.blue(toArray(this.ctx.configOverride.project).join(\", \")));\n\t\tif (this.ctx.filenamePattern) this.log(BADGE_PADDING + c.dim(\" Filename pattern: \") + c.blue(this.ctx.filenamePattern.join(\", \")));\n\t\tif (this.ctx.configOverride.testNamePattern) this.log(BADGE_PADDING + c.dim(\" Test name pattern: \") + c.blue(String(this.ctx.configOverride.testNamePattern)));\n\t\tthis.log(\"\");\n\t\tfor (const testModule of this.failedUnwatchedFiles) this.printTestModule(testModule);\n\t\tthis._timeStart = formatTimeString(/* @__PURE__ */ new Date()), this.start = performance$1.now();\n\t}\n\tonUserConsoleLog(log, taskState) {\n\t\tif (!this.shouldLog(log, taskState)) return;\n\t\tconst output = log.type === \"stdout\" ? this.ctx.logger.outputStream : this.ctx.logger.errorStream, write = (msg) => output.write(msg);\n\t\tlet headerText = \"unknown test\";\n\t\tconst task = log.taskId ? this.ctx.state.idMap.get(log.taskId) : void 0;\n\t\tif (task) headerText = this.getFullName(task, separator);\n\t\telse if (log.taskId && log.taskId !== \"__vitest__unknown_test__\") headerText = log.taskId;\n\t\tif (write(c.gray(log.type + c.dim(` | ${headerText}\\n`)) + log.content), log.origin) {\n\t\t\t// browser logs don't have an extra end of line at the end like Node.js does\n\t\t\tif (log.browser) write(\"\\n\");\n\t\t\tconst project = task ? this.ctx.getProjectByName(task.file.projectName || \"\") : this.ctx.getRootProject(), stack = log.browser ? project.browser?.parseStacktrace(log.origin) || [] : parseStacktrace(log.origin), highlight = task && stack.find((i) => i.file === task.file.filepath);\n\t\t\tfor (const frame of stack) {\n\t\t\t\tconst color = frame === highlight ? c.cyan : c.gray, path = relative(project.config.root, frame.file), positions = [frame.method, `${path}:${c.dim(`${frame.line}:${frame.column}`)}`].filter(Boolean).join(\" \");\n\t\t\t\twrite(color(` ${c.dim(F_POINTER)} ${positions}\\n`));\n\t\t\t}\n\t\t}\n\t\twrite(\"\\n\");\n\t}\n\tonTestRemoved(trigger) {\n\t\tthis.log(c.yellow(\"Test removed...\") + (trigger ? c.dim(` [ ${this.relative(trigger)} ]\\n`) : \"\"));\n\t}\n\tshouldLog(log, taskState) {\n\t\tif (this.ctx.config.silent === true || this.ctx.config.silent === \"passed-only\" && taskState !== \"failed\") return false;\n\t\tif (this.ctx.config.onConsoleLog) {\n\t\t\tconst task = log.taskId ? this.ctx.state.idMap.get(log.taskId) : void 0, entity = task && this.ctx.state.getReportedEntity(task);\n\t\t\tif (this.ctx.config.onConsoleLog(log.content, log.type, entity) === false) return false;\n\t\t}\n\t\treturn true;\n\t}\n\tonServerRestart(reason) {\n\t\tthis.log(c.bold(c.magenta(reason === \"config\" ? \"\\nRestarting due to config changes...\" : \"\\nRestarting Vitest...\")));\n\t}\n\treportSummary(files, errors) {\n\t\tif (this.printErrorsSummary(files, errors), this.ctx.config.mode === \"benchmark\") this.reportBenchmarkSummary(files);\n\t\telse this.reportTestSummary(files, errors);\n\t}\n\treportTestSummary(files, errors) {\n\t\tthis.log();\n\t\tconst affectedFiles = [...this.failedUnwatchedFiles.map((m) => m.task), ...files], tests = getTests(affectedFiles), snapshotOutput = renderSnapshotSummary(this.ctx.config.root, this.ctx.snapshot.summary);\n\t\tfor (const [index, snapshot] of snapshotOutput.entries()) {\n\t\t\tconst title = index === 0 ? \"Snapshots\" : \"\";\n\t\t\tthis.log(`${padSummaryTitle(title)} ${snapshot}`);\n\t\t}\n\t\tif (snapshotOutput.length > 1) this.log();\n\t\tif (this.log(padSummaryTitle(\"Test Files\"), getStateString$1(affectedFiles)), this.log(padSummaryTitle(\"Tests\"), getStateString$1(tests)), this.ctx.projects.some((c) => c.config.typecheck.enabled)) {\n\t\t\tconst failed = tests.filter((t) => t.meta?.typecheck && t.result?.errors?.length);\n\t\t\tthis.log(padSummaryTitle(\"Type Errors\"), failed.length ? c.bold(c.red(`${failed.length} failed`)) : c.dim(\"no errors\"));\n\t\t}\n\t\tif (errors.length) this.log(padSummaryTitle(\"Errors\"), c.bold(c.red(`${errors.length} error${errors.length > 1 ? \"s\" : \"\"}`)));\n\t\tthis.log(padSummaryTitle(\"Start at\"), this._timeStart);\n\t\tconst collectTime = sum(files, (file) => file.collectDuration), testsTime = sum(files, (file) => file.result?.duration), setupTime = sum(files, (file) => file.setupDuration);\n\t\tif (this.watchFilters) this.log(padSummaryTitle(\"Duration\"), formatTime(collectTime + testsTime + setupTime));\n\t\telse {\n\t\t\tconst blobs = this.ctx.state.blobs, executionTime = blobs?.executionTimes ? sum(blobs.executionTimes, (time) => time) : this.end - this.start, environmentTime = sum(files, (file) => file.environmentLoad), prepareTime = sum(files, (file) => file.prepareDuration), transformTime = this.ctx.state.transformTime, typecheck = sum(this.ctx.projects, (project) => project.typechecker?.getResult().time), timers = [\n\t\t\t\t`transform ${formatTime(transformTime)}`,\n\t\t\t\t`setup ${formatTime(setupTime)}`,\n\t\t\t\t`collect ${formatTime(collectTime)}`,\n\t\t\t\t`tests ${formatTime(testsTime)}`,\n\t\t\t\t`environment ${formatTime(environmentTime)}`,\n\t\t\t\t`prepare ${formatTime(prepareTime)}`,\n\t\t\t\ttypecheck && `typecheck ${formatTime(typecheck)}`\n\t\t\t].filter(Boolean).join(\", \");\n\t\t\tif (this.log(padSummaryTitle(\"Duration\"), formatTime(executionTime) + c.dim(` (${timers})`)), blobs?.executionTimes) this.log(padSummaryTitle(\"Per blob\") + blobs.executionTimes.map((time) => ` ${formatTime(time)}`).join(\"\"));\n\t\t}\n\t\tthis.log();\n\t}\n\tprintErrorsSummary(files, errors) {\n\t\tconst suites = getSuites(files), tests = getTests(files), failedSuites = suites.filter((i) => i.result?.errors), failedTests = tests.filter((i) => i.result?.state === \"fail\"), failedTotal = countTestErrors(failedSuites) + countTestErrors(failedTests);\n\t\tlet current = 1;\n\t\tconst errorDivider = () => this.error(`${c.red(c.dim(divider(`[${current++}/${failedTotal}]`, void 0, 1)))}\\n`);\n\t\tif (failedSuites.length) this.error(`\\n${errorBanner(`Failed Suites ${failedSuites.length}`)}\\n`), this.printTaskErrors(failedSuites, errorDivider);\n\t\tif (failedTests.length) this.error(`\\n${errorBanner(`Failed Tests ${failedTests.length}`)}\\n`), this.printTaskErrors(failedTests, errorDivider);\n\t\tif (errors.length) this.ctx.logger.printUnhandledErrors(errors), this.error();\n\t}\n\treportBenchmarkSummary(files) {\n\t\tconst topBenches = getTests(files).filter((i) => i.result?.benchmark?.rank === 1);\n\t\tthis.log(`\\n${withLabel(\"cyan\", \"BENCH\", \"Summary\\n\")}`);\n\t\tfor (const bench of topBenches) {\n\t\t\tconst group = bench.suite || bench.file;\n\t\t\tif (!group) continue;\n\t\t\tconst groupName = this.getFullName(group, separator), project = this.ctx.projects.find((p) => p.name === bench.file.projectName);\n\t\t\tthis.log(`  ${formatProjectName(project)}${bench.name}${c.dim(` - ${groupName}`)}`);\n\t\t\tconst siblings = group.tasks.filter((i) => i.meta.benchmark && i.result?.benchmark && i !== bench).sort((a, b) => a.result.benchmark.rank - b.result.benchmark.rank);\n\t\t\tfor (const sibling of siblings) {\n\t\t\t\tconst number = (sibling.result.benchmark.mean / bench.result.benchmark.mean).toFixed(2);\n\t\t\t\tthis.log(c.green(`    ${number}x `) + c.gray(\"faster than \") + sibling.name);\n\t\t\t}\n\t\t\tthis.log(\"\");\n\t\t}\n\t}\n\tprintTaskErrors(tasks, errorDivider) {\n\t\tconst errorsQueue = [];\n\t\tfor (const task of tasks)\n // Merge identical errors\n\t\ttask.result?.errors?.forEach((error) => {\n\t\t\tlet previous;\n\t\t\tif (error?.stack) previous = errorsQueue.find((i) => {\n\t\t\t\tif (i[0]?.stack !== error.stack) return false;\n\t\t\t\tconst currentProjectName = task?.projectName || task.file?.projectName || \"\", projectName = i[1][0]?.projectName || i[1][0].file?.projectName || \"\", currentAnnotations = task.type === \"test\" && task.annotations, itemAnnotations = i[1][0].type === \"test\" && i[1][0].annotations;\n\t\t\t\treturn projectName === currentProjectName && deepEqual(currentAnnotations, itemAnnotations);\n\t\t\t});\n\t\t\tif (previous) previous[1].push(task);\n\t\t\telse errorsQueue.push([error, [task]]);\n\t\t});\n\t\tfor (const [error, tasks] of errorsQueue) {\n\t\t\tfor (const task of tasks) {\n\t\t\t\tconst filepath = task?.filepath || \"\", projectName = task?.projectName || task.file?.projectName || \"\", project = this.ctx.projects.find((p) => p.name === projectName);\n\t\t\t\tlet name = this.getFullName(task, separator);\n\t\t\t\tif (filepath) name += c.dim(` [ ${this.relative(filepath)} ]`);\n\t\t\t\tthis.ctx.logger.error(`${c.bgRed(c.bold(\" FAIL \"))} ${formatProjectName(project)}${name}`);\n\t\t\t}\n\t\t\tconst screenshotPaths = tasks.map((t) => t.meta?.failScreenshotPath).filter((screenshot) => screenshot != null);\n\t\t\tif (this.ctx.logger.printError(error, {\n\t\t\t\tproject: this.ctx.getProjectByName(tasks[0].file.projectName || \"\"),\n\t\t\t\tverbose: this.verbose,\n\t\t\t\tscreenshotPaths,\n\t\t\t\ttask: tasks[0]\n\t\t\t}), tasks[0].type === \"test\" && tasks[0].annotations.length) {\n\t\t\t\tconst test = this.ctx.state.getReportedEntity(tasks[0]);\n\t\t\t\tthis.printAnnotations(test, \"error\", 1), this.error();\n\t\t\t}\n\t\t\terrorDivider();\n\t\t}\n\t}\n}\nfunction deepEqual(a, b) {\n\tif (a === b) return true;\n\tif (typeof a !== \"object\" || typeof b !== \"object\" || a === null || b === null) return false;\n\tconst keysA = Object.keys(a), keysB = Object.keys(b);\n\tif (keysA.length !== keysB.length) return false;\n\tfor (const key of keysA) if (!keysB.includes(key) || !deepEqual(a[key], b[key])) return false;\n\treturn true;\n}\nfunction sum(items, cb) {\n\treturn items.reduce((total, next) => {\n\t\treturn total + Math.max(cb(next) || 0, 0);\n\t}, 0);\n}\nfunction getIndentation(suite, level = 1) {\n\treturn suite.suite && !(\"filepath\" in suite.suite) ? getIndentation(suite.suite, level + 1) : level;\n}\n\nconst DEFAULT_RENDER_INTERVAL_MS = 1e3, ESC = \"\\x1B[\", CLEAR_LINE = `${ESC}K`, MOVE_CURSOR_ONE_ROW_UP = `${ESC}1A`, SYNC_START = `${ESC}?2026h`, SYNC_END = `${ESC}?2026l`;\n/**\n* Renders content of `getWindow` at the bottom of the terminal and\n* forwards all other intercepted `stdout` and `stderr` logs above it.\n*/\nclass WindowRenderer {\n\toptions;\n\tstreams;\n\tbuffer = [];\n\trenderInterval = void 0;\n\trenderScheduled = false;\n\twindowHeight = 0;\n\tstarted = false;\n\tfinished = false;\n\tcleanups = [];\n\tconstructor(options) {\n\t\t// Write buffered content on unexpected exits, e.g. direct `process.exit()` calls\n\t\tthis.options = {\n\t\t\tinterval: DEFAULT_RENDER_INTERVAL_MS,\n\t\t\t...options\n\t\t}, this.streams = {\n\t\t\toutput: options.logger.outputStream.write.bind(options.logger.outputStream),\n\t\t\terror: options.logger.errorStream.write.bind(options.logger.errorStream)\n\t\t}, this.cleanups.push(this.interceptStream(process.stdout, \"output\"), this.interceptStream(process.stderr, \"error\")), this.options.logger.onTerminalCleanup(() => {\n\t\t\tthis.flushBuffer(), this.stop();\n\t\t});\n\t}\n\tstart() {\n\t\tthis.started = true, this.finished = false, this.renderInterval = setInterval(() => this.schedule(), this.options.interval).unref();\n\t}\n\tstop() {\n\t\tthis.cleanups.splice(0).map((fn) => fn()), clearInterval(this.renderInterval);\n\t}\n\t/**\n\t* Write all buffered output and stop buffering.\n\t* All intercepted writes are forwarded to actual write after this.\n\t*/\n\tfinish() {\n\t\tthis.finished = true, this.flushBuffer(), clearInterval(this.renderInterval);\n\t}\n\t/**\n\t* Queue new render update\n\t*/\n\tschedule() {\n\t\tif (!this.renderScheduled) this.renderScheduled = true, this.flushBuffer(), setTimeout(() => {\n\t\t\tthis.renderScheduled = false;\n\t\t}, 100).unref();\n\t}\n\tflushBuffer() {\n\t\tif (this.buffer.length === 0) return this.render();\n\t\tlet current;\n\t\t// Concatenate same types into a single render\n\t\tfor (const next of this.buffer.splice(0)) {\n\t\t\tif (!current) {\n\t\t\t\tcurrent = next;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (current.type !== next.type) {\n\t\t\t\tthis.render(current.message, current.type), current = next;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcurrent.message += next.message;\n\t\t}\n\t\tif (current) this.render(current?.message, current?.type);\n\t}\n\trender(message, type = \"output\") {\n\t\tif (this.finished) return this.clearWindow(), this.write(message || \"\", type);\n\t\tconst windowContent = this.options.getWindow(), rowCount = getRenderedRowCount(windowContent, this.options.logger.getColumns());\n\t\tlet padding = this.windowHeight - rowCount;\n\t\tif (padding > 0 && message) padding -= getRenderedRowCount([message], this.options.logger.getColumns());\n\t\tif (this.write(SYNC_START), this.clearWindow(), message) this.write(message, type);\n\t\tif (padding > 0) this.write(\"\\n\".repeat(padding));\n\t\tthis.write(windowContent.join(\"\\n\")), this.write(SYNC_END), this.windowHeight = rowCount + Math.max(0, padding);\n\t}\n\tclearWindow() {\n\t\tif (this.windowHeight !== 0) {\n\t\t\tthis.write(CLEAR_LINE);\n\t\t\tfor (let i = 1; i < this.windowHeight; i++) this.write(`${MOVE_CURSOR_ONE_ROW_UP}${CLEAR_LINE}`);\n\t\t\tthis.windowHeight = 0;\n\t\t}\n\t}\n\tinterceptStream(stream, type) {\n\t\tconst original = stream.write;\n\t\treturn stream.write = (chunk, _, callback) => {\n\t\t\tif (chunk) if (this.finished || !this.started) this.write(chunk.toString(), type);\n\t\t\telse this.buffer.push({\n\t\t\t\ttype,\n\t\t\t\tmessage: chunk.toString()\n\t\t\t});\n\t\t\tcallback?.();\n\t\t}, function restore() {\n\t\t\tstream.write = original;\n\t\t};\n\t}\n\twrite(message, type = \"output\") {\n\t\tthis.streams[type](message);\n\t}\n}\n/** Calculate the actual row count needed to render `rows` into `stream` */\nfunction getRenderedRowCount(rows, columns) {\n\tlet count = 0;\n\tfor (const row of rows) {\n\t\tconst text = stripVTControlCharacters(row);\n\t\tcount += Math.max(1, Math.ceil(text.length / columns));\n\t}\n\treturn count;\n}\n\nconst DURATION_UPDATE_INTERVAL_MS = 100, FINISHED_TEST_CLEANUP_TIME_MS = 1e3;\n/**\n* Reporter extension that renders summary and forwards all other logs above itself.\n* Intended to be used by other reporters, not as a standalone reporter.\n*/\nclass SummaryReporter {\n\tctx;\n\toptions;\n\trenderer;\n\tmodules = emptyCounters();\n\ttests = emptyCounters();\n\tmaxParallelTests = 0;\n\t/** Currently running test modules, may include finished test modules too */\n\trunningModules = /* @__PURE__ */ new Map();\n\t/** ID of finished `this.runningModules` that are currently being shown */\n\tfinishedModules = /* @__PURE__ */ new Map();\n\tstartTime = \"\";\n\tcurrentTime = 0;\n\tduration = 0;\n\tdurationInterval = void 0;\n\tonInit(ctx, options = {}) {\n\t\tthis.ctx = ctx, this.options = {\n\t\t\tverbose: false,\n\t\t\t...options\n\t\t}, this.renderer = new WindowRenderer({\n\t\t\tlogger: ctx.logger,\n\t\t\tgetWindow: () => this.createSummary()\n\t\t}), this.ctx.onClose(() => {\n\t\t\tclearInterval(this.durationInterval), this.renderer.stop();\n\t\t});\n\t}\n\tonTestRunStart(specifications) {\n\t\tthis.runningModules.clear(), this.finishedModules.clear(), this.modules = emptyCounters(), this.tests = emptyCounters(), this.startTimers(), this.renderer.start(), this.modules.total = specifications.length;\n\t}\n\tonTestRunEnd() {\n\t\tthis.runningModules.clear(), this.finishedModules.clear(), this.renderer.finish(), clearInterval(this.durationInterval);\n\t}\n\tonTestModuleQueued(module) {\n\t\t// When new test module starts, take the place of previously finished test module, if any\n\t\tif (this.finishedModules.size) {\n\t\t\tconst finished = this.finishedModules.keys().next().value;\n\t\t\tthis.removeTestModule(finished);\n\t\t}\n\t\tthis.runningModules.set(module.id, initializeStats(module)), this.renderer.schedule();\n\t}\n\tonTestModuleCollected(module) {\n\t\tlet stats = this.runningModules.get(module.id);\n\t\tif (!stats) stats = initializeStats(module), this.runningModules.set(module.id, stats);\n\t\tconst total = Array.from(module.children.allTests()).length;\n\t\tthis.tests.total += total, stats.total = total, this.maxParallelTests = Math.max(this.maxParallelTests, this.runningModules.size), this.renderer.schedule();\n\t}\n\tonHookStart(options) {\n\t\tconst stats = this.getHookStats(options);\n\t\tif (!stats) return;\n\t\tconst hook = {\n\t\t\tname: options.name,\n\t\t\tvisible: false,\n\t\t\tstartTime: performance.now(),\n\t\t\tonFinish: () => {}\n\t\t};\n\t\tstats.hook?.onFinish?.(), stats.hook = hook;\n\t\tconst timeout = setTimeout(() => {\n\t\t\thook.visible = true;\n\t\t}, this.ctx.config.slowTestThreshold).unref();\n\t\thook.onFinish = () => clearTimeout(timeout);\n\t}\n\tonHookEnd(options) {\n\t\tconst stats = this.getHookStats(options);\n\t\tstats?.hook?.name === options.name && (stats.hook.onFinish(), stats.hook.visible = false);\n\t}\n\tonTestCaseReady(test) {\n\t\t// Track slow running tests only on verbose mode\n\t\tif (!this.options.verbose) return;\n\t\tconst stats = this.runningModules.get(test.module.id);\n\t\tif (!stats || stats.tests.has(test.id)) return;\n\t\tconst slowTest = {\n\t\t\tname: test.name,\n\t\t\tvisible: false,\n\t\t\tstartTime: performance.now(),\n\t\t\tonFinish: () => {}\n\t\t}, timeout = setTimeout(() => {\n\t\t\tslowTest.visible = true;\n\t\t}, this.ctx.config.slowTestThreshold).unref();\n\t\tslowTest.onFinish = () => {\n\t\t\tslowTest.hook?.onFinish(), clearTimeout(timeout);\n\t\t}, stats.tests.set(test.id, slowTest);\n\t}\n\tonTestCaseResult(test) {\n\t\tconst stats = this.runningModules.get(test.module.id);\n\t\tif (!stats) return;\n\t\tstats.tests.get(test.id)?.onFinish(), stats.tests.delete(test.id), stats.completed++;\n\t\tconst result = test.result();\n\t\tif (result?.state === \"passed\") this.tests.passed++;\n\t\telse if (result?.state === \"failed\") this.tests.failed++;\n\t\telse if (!result?.state || result?.state === \"skipped\") this.tests.skipped++;\n\t\tthis.renderer.schedule();\n\t}\n\tonTestModuleEnd(module) {\n\t\tconst state = module.state();\n\t\tif (this.modules.completed++, state === \"passed\") this.modules.passed++;\n\t\telse if (state === \"failed\") this.modules.failed++;\n\t\telse if (module.task.mode === \"todo\" && state === \"skipped\") this.modules.todo++;\n\t\telse if (state === \"skipped\") this.modules.skipped++;\n\t\t// Keep finished tests visible in summary for a while if there are more tests left.\n\t\t// When a new test starts in onTestModuleQueued it will take this ones place.\n\t\t// This reduces flickering by making summary more stable.\n\t\tif (this.modules.total - this.modules.completed > this.maxParallelTests) this.finishedModules.set(module.id, setTimeout(() => {\n\t\t\tthis.removeTestModule(module.id);\n\t\t}, FINISHED_TEST_CLEANUP_TIME_MS).unref());\n\t\telse\n // Run is about to end as there are less tests left than whole run had parallel at max.\n\t\t// Remove finished test immediately.\n\t\tthis.removeTestModule(module.id);\n\t\tthis.renderer.schedule();\n\t}\n\tgetHookStats({ entity }) {\n\t\t// Track slow running hooks only on verbose mode\n\t\tif (!this.options.verbose) return;\n\t\tconst module = entity.type === \"module\" ? entity : entity.module, stats = this.runningModules.get(module.id);\n\t\tif (stats) return entity.type === \"test\" ? stats.tests.get(entity.id) : stats;\n\t}\n\tcreateSummary() {\n\t\tconst summary = [\"\"];\n\t\tfor (const testFile of Array.from(this.runningModules.values()).sort(sortRunningModules)) {\n\t\t\tconst typecheck = testFile.typecheck ? `${c.bgBlue(c.bold(\" TS \"))} ` : \"\";\n\t\t\tsummary.push(c.bold(c.yellow(` ${F_POINTER} `)) + formatProjectName({\n\t\t\t\tname: testFile.projectName,\n\t\t\t\tcolor: testFile.projectColor\n\t\t\t}) + typecheck + testFile.filename + c.dim(!testFile.completed && !testFile.total ? \" [queued]\" : ` ${testFile.completed}/${testFile.total}`));\n\t\t\tconst slowTasks = [testFile.hook, ...Array.from(testFile.tests.values())].filter((t) => t != null && t.visible);\n\t\t\tfor (const [index, task] of slowTasks.entries()) {\n\t\t\t\tconst elapsed = this.currentTime - task.startTime, icon = index === slowTasks.length - 1 ? F_TREE_NODE_END : F_TREE_NODE_MIDDLE;\n\t\t\t\tif (summary.push(c.bold(c.yellow(`   ${icon} `)) + task.name + c.bold(c.yellow(` ${formatTime(Math.max(0, elapsed))}`))), task.hook?.visible) summary.push(c.bold(c.yellow(`      ${F_TREE_NODE_END} `)) + task.hook.name);\n\t\t\t}\n\t\t}\n\t\tif (this.runningModules.size > 0) summary.push(\"\");\n\t\treturn summary.push(padSummaryTitle(\"Test Files\") + getStateString(this.modules)), summary.push(padSummaryTitle(\"Tests\") + getStateString(this.tests)), summary.push(padSummaryTitle(\"Start at\") + this.startTime), summary.push(padSummaryTitle(\"Duration\") + formatTime(this.duration)), summary.push(\"\"), summary;\n\t}\n\tstartTimers() {\n\t\tconst start = performance.now();\n\t\tthis.startTime = formatTimeString(/* @__PURE__ */ new Date()), this.durationInterval = setInterval(() => {\n\t\t\tthis.currentTime = performance.now(), this.duration = this.currentTime - start;\n\t\t}, DURATION_UPDATE_INTERVAL_MS).unref();\n\t}\n\tremoveTestModule(id) {\n\t\tif (!id) return;\n\t\tconst testFile = this.runningModules.get(id);\n\t\ttestFile?.hook?.onFinish(), testFile?.tests?.forEach((test) => test.onFinish()), this.runningModules.delete(id), clearTimeout(this.finishedModules.get(id)), this.finishedModules.delete(id);\n\t}\n}\nfunction emptyCounters() {\n\treturn {\n\t\tcompleted: 0,\n\t\tpassed: 0,\n\t\tfailed: 0,\n\t\tskipped: 0,\n\t\ttodo: 0,\n\t\ttotal: 0\n\t};\n}\nfunction getStateString(entry) {\n\treturn [\n\t\tentry.failed ? c.bold(c.red(`${entry.failed} failed`)) : null,\n\t\tc.bold(c.green(`${entry.passed} passed`)),\n\t\tentry.skipped ? c.yellow(`${entry.skipped} skipped`) : null,\n\t\tentry.todo ? c.gray(`${entry.todo} todo`) : null\n\t].filter(Boolean).join(c.dim(\" | \")) + c.gray(` (${entry.total})`);\n}\nfunction sortRunningModules(a, b) {\n\treturn (a.projectName || \"\") > (b.projectName || \"\") ? 1 : (a.projectName || \"\") < (b.projectName || \"\") ? -1 : a.filename.localeCompare(b.filename);\n}\nfunction initializeStats(module) {\n\treturn {\n\t\ttotal: 0,\n\t\tcompleted: 0,\n\t\tfilename: module.task.name,\n\t\tprojectName: module.project.name,\n\t\tprojectColor: module.project.color,\n\t\ttests: /* @__PURE__ */ new Map(),\n\t\ttypecheck: !!module.task.meta.typecheck\n\t};\n}\n\nclass DefaultReporter extends BaseReporter {\n\toptions;\n\tsummary;\n\tconstructor(options = {}) {\n\t\tif (super(options), this.options = {\n\t\t\tsummary: true,\n\t\t\t...options\n\t\t}, !this.isTTY) this.options.summary = false;\n\t\tif (this.options.summary) this.summary = new SummaryReporter();\n\t}\n\tonTestRunStart(specifications) {\n\t\tif (this.isTTY) {\n\t\t\tif (this.renderSucceed === void 0) this.renderSucceed = !!this.renderSucceed;\n\t\t\tif (this.renderSucceed !== true) this.renderSucceed = specifications.length <= 1;\n\t\t}\n\t\tthis.summary?.onTestRunStart(specifications);\n\t}\n\tonTestRunEnd(testModules, unhandledErrors, reason) {\n\t\tsuper.onTestRunEnd(testModules, unhandledErrors, reason), this.summary?.onTestRunEnd();\n\t}\n\tonTestModuleQueued(file) {\n\t\tthis.summary?.onTestModuleQueued(file);\n\t}\n\tonTestModuleCollected(module) {\n\t\tthis.summary?.onTestModuleCollected(module);\n\t}\n\tonTestModuleEnd(module) {\n\t\tsuper.onTestModuleEnd(module), this.summary?.onTestModuleEnd(module);\n\t}\n\tonTestCaseReady(test) {\n\t\tthis.summary?.onTestCaseReady(test);\n\t}\n\tonTestCaseResult(test) {\n\t\tsuper.onTestCaseResult(test), this.summary?.onTestCaseResult(test);\n\t}\n\tonHookStart(hook) {\n\t\tthis.summary?.onHookStart(hook);\n\t}\n\tonHookEnd(hook) {\n\t\tthis.summary?.onHookEnd(hook);\n\t}\n\tonInit(ctx) {\n\t\tsuper.onInit(ctx), this.summary?.onInit(ctx, { verbose: this.verbose });\n\t}\n}\n\nclass DotReporter extends BaseReporter {\n\trenderer;\n\ttests = /* @__PURE__ */ new Map();\n\tfinishedTests = /* @__PURE__ */ new Set();\n\tonInit(ctx) {\n\t\tif (super.onInit(ctx), this.isTTY) this.renderer = new WindowRenderer({\n\t\t\tlogger: ctx.logger,\n\t\t\tgetWindow: () => this.createSummary()\n\t\t}), this.ctx.onClose(() => this.renderer?.stop());\n\t}\n\t// Ignore default logging of base reporter\n\tprintTestModule() {}\n\tonWatcherRerun(files, trigger) {\n\t\tthis.tests.clear(), this.renderer?.start(), super.onWatcherRerun(files, trigger);\n\t}\n\tonTestRunEnd(testModules, unhandledErrors, reason) {\n\t\tif (this.isTTY) {\n\t\t\tconst finalLog = formatTests(Array.from(this.tests.values()));\n\t\t\tthis.ctx.logger.log(finalLog);\n\t\t} else this.ctx.logger.log();\n\t\tthis.tests.clear(), this.renderer?.finish(), super.onTestRunEnd(testModules, unhandledErrors, reason);\n\t}\n\tonTestModuleCollected(module) {\n\t\tfor (const test of module.children.allTests())\n // Dot reporter marks pending tests as running\n\t\tthis.onTestCaseReady(test);\n\t}\n\tonTestCaseReady(test) {\n\t\tthis.finishedTests.has(test.id) || (this.tests.set(test.id, test.result().state || \"run\"), this.renderer?.schedule());\n\t}\n\tonTestCaseResult(test) {\n\t\tconst result = test.result().state;\n\t\t// On non-TTY the finished tests are printed immediately\n\t\tif (!this.isTTY && result !== \"pending\") this.ctx.logger.outputStream.write(formatTests([result]));\n\t\tsuper.onTestCaseResult(test), this.finishedTests.add(test.id), this.tests.set(test.id, result || \"skipped\"), this.renderer?.schedule();\n\t}\n\tonTestModuleEnd(testModule) {\n\t\tif (super.onTestModuleEnd(testModule), !this.isTTY) return;\n\t\tconst columns = this.ctx.logger.getColumns();\n\t\tif (this.tests.size < columns) return;\n\t\tconst finishedTests = Array.from(this.tests).filter((entry) => entry[1] !== \"pending\");\n\t\tif (finishedTests.length < columns) return;\n\t\t// Remove finished tests from state and render them in static output\n\t\tconst states = [];\n\t\tlet count = 0;\n\t\tfor (const [id, state] of finishedTests) {\n\t\t\tif (count++ >= columns) break;\n\t\t\tthis.tests.delete(id), states.push(state);\n\t\t}\n\t\tthis.ctx.logger.log(formatTests(states)), this.renderer?.schedule();\n\t}\n\tcreateSummary() {\n\t\treturn [formatTests(Array.from(this.tests.values())), \"\"];\n\t}\n}\n// These are compared with reference equality in formatTests\nconst pass = {\n\tchar: \"·\",\n\tcolor: c.green\n}, fail = {\n\tchar: \"x\",\n\tcolor: c.red\n}, pending = {\n\tchar: \"*\",\n\tcolor: c.yellow\n}, skip = {\n\tchar: \"-\",\n\tcolor: (char) => c.dim(c.gray(char))\n};\nfunction getIcon(state) {\n\tswitch (state) {\n\t\tcase \"passed\": return pass;\n\t\tcase \"failed\": return fail;\n\t\tcase \"skipped\": return skip;\n\t\tdefault: return pending;\n\t}\n}\n/**\n* Format test states into string while keeping ANSI escapes at minimal.\n* Sibling icons with same color are merged into a single c.color() call.\n*/\nfunction formatTests(states) {\n\tlet currentIcon = pending, count = 0, output = \"\";\n\tfor (const state of states) {\n\t\tconst icon = getIcon(state);\n\t\tif (currentIcon === icon) {\n\t\t\tcount++;\n\t\t\tcontinue;\n\t\t}\n\t\toutput += currentIcon.color(currentIcon.char.repeat(count)), count = 1, currentIcon = icon;\n\t}\n\treturn output += currentIcon.color(currentIcon.char.repeat(count)), output;\n}\n\n// src/vlq.ts\nvar comma = \",\".charCodeAt(0);\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar intToChar = new Uint8Array(64);\nvar charToInt = new Uint8Array(128);\nfor (let i = 0; i < chars.length; i++) {\n  const c = chars.charCodeAt(i);\n  intToChar[i] = c;\n  charToInt[c] = i;\n}\nfunction decodeInteger(reader, relative) {\n  let value = 0;\n  let shift = 0;\n  let integer = 0;\n  do {\n    const c = reader.next();\n    integer = charToInt[c];\n    value |= (integer & 31) << shift;\n    shift += 5;\n  } while (integer & 32);\n  const shouldNegate = value & 1;\n  value >>>= 1;\n  if (shouldNegate) {\n    value = -2147483648 | -value;\n  }\n  return relative + value;\n}\nfunction hasMoreVlq(reader, max) {\n  if (reader.pos >= max) return false;\n  return reader.peek() !== comma;\n}\nvar StringReader = class {\n  constructor(buffer) {\n    this.pos = 0;\n    this.buffer = buffer;\n  }\n  next() {\n    return this.buffer.charCodeAt(this.pos++);\n  }\n  peek() {\n    return this.buffer.charCodeAt(this.pos);\n  }\n  indexOf(char) {\n    const { buffer, pos } = this;\n    const idx = buffer.indexOf(char, pos);\n    return idx === -1 ? buffer.length : idx;\n  }\n};\n\n// src/sourcemap-codec.ts\nfunction decode(mappings) {\n  const { length } = mappings;\n  const reader = new StringReader(mappings);\n  const decoded = [];\n  let genColumn = 0;\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n  do {\n    const semi = reader.indexOf(\";\");\n    const line = [];\n    let sorted = true;\n    let lastCol = 0;\n    genColumn = 0;\n    while (reader.pos < semi) {\n      let seg;\n      genColumn = decodeInteger(reader, genColumn);\n      if (genColumn < lastCol) sorted = false;\n      lastCol = genColumn;\n      if (hasMoreVlq(reader, semi)) {\n        sourcesIndex = decodeInteger(reader, sourcesIndex);\n        sourceLine = decodeInteger(reader, sourceLine);\n        sourceColumn = decodeInteger(reader, sourceColumn);\n        if (hasMoreVlq(reader, semi)) {\n          namesIndex = decodeInteger(reader, namesIndex);\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex];\n        } else {\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn];\n        }\n      } else {\n        seg = [genColumn];\n      }\n      line.push(seg);\n      reader.pos++;\n    }\n    if (!sorted) sort(line);\n    decoded.push(line);\n    reader.pos = semi + 1;\n  } while (reader.pos <= length);\n  return decoded;\n}\nfunction sort(line) {\n  line.sort(sortComparator$1);\n}\nfunction sortComparator$1(a, b) {\n  return a[0] - b[0];\n}\n\n// Matches the scheme of a URL, eg \"http://\"\nconst schemeRegex = /^[\\w+.-]+:\\/\\//;\n/**\n * Matches the parts of a URL:\n * 1. Scheme, including \":\", guaranteed.\n * 2. User/password, including \"@\", optional.\n * 3. Host, guaranteed.\n * 4. Port, including \":\", optional.\n * 5. Path, including \"/\", optional.\n * 6. Query, including \"?\", optional.\n * 7. Hash, including \"#\", optional.\n */\nconst urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/;\n/**\n * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n *\n * 1. Host, optional.\n * 2. Path, which may include \"/\", guaranteed.\n * 3. Query, including \"?\", optional.\n * 4. Hash, including \"#\", optional.\n */\nconst fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;\nfunction isAbsoluteUrl(input) {\n    return schemeRegex.test(input);\n}\nfunction isSchemeRelativeUrl(input) {\n    return input.startsWith('//');\n}\nfunction isAbsolutePath(input) {\n    return input.startsWith('/');\n}\nfunction isFileUrl(input) {\n    return input.startsWith('file:');\n}\nfunction isRelative(input) {\n    return /^[.?#]/.test(input);\n}\nfunction parseAbsoluteUrl(input) {\n    const match = urlRegex.exec(input);\n    return makeUrl(match[1], match[2] || '', match[3], match[4] || '', match[5] || '/', match[6] || '', match[7] || '');\n}\nfunction parseFileUrl(input) {\n    const match = fileRegex.exec(input);\n    const path = match[2];\n    return makeUrl('file:', '', match[1] || '', '', isAbsolutePath(path) ? path : '/' + path, match[3] || '', match[4] || '');\n}\nfunction makeUrl(scheme, user, host, port, path, query, hash) {\n    return {\n        scheme,\n        user,\n        host,\n        port,\n        path,\n        query,\n        hash,\n        type: 7 /* Absolute */,\n    };\n}\nfunction parseUrl(input) {\n    if (isSchemeRelativeUrl(input)) {\n        const url = parseAbsoluteUrl('http:' + input);\n        url.scheme = '';\n        url.type = 6 /* SchemeRelative */;\n        return url;\n    }\n    if (isAbsolutePath(input)) {\n        const url = parseAbsoluteUrl('http://foo.com' + input);\n        url.scheme = '';\n        url.host = '';\n        url.type = 5 /* AbsolutePath */;\n        return url;\n    }\n    if (isFileUrl(input))\n        return parseFileUrl(input);\n    if (isAbsoluteUrl(input))\n        return parseAbsoluteUrl(input);\n    const url = parseAbsoluteUrl('http://foo.com/' + input);\n    url.scheme = '';\n    url.host = '';\n    url.type = input\n        ? input.startsWith('?')\n            ? 3 /* Query */\n            : input.startsWith('#')\n                ? 2 /* Hash */\n                : 4 /* RelativePath */\n        : 1 /* Empty */;\n    return url;\n}\nfunction stripPathFilename(path) {\n    // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n    // paths. It's not a file, so we can't strip it.\n    if (path.endsWith('/..'))\n        return path;\n    const index = path.lastIndexOf('/');\n    return path.slice(0, index + 1);\n}\nfunction mergePaths(url, base) {\n    normalizePath(base, base.type);\n    // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n    // path).\n    if (url.path === '/') {\n        url.path = base.path;\n    }\n    else {\n        // Resolution happens relative to the base path's directory, not the file.\n        url.path = stripPathFilename(base.path) + url.path;\n    }\n}\n/**\n * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n * \"foo/.\". We need to normalize to a standard representation.\n */\nfunction normalizePath(url, type) {\n    const rel = type <= 4 /* RelativePath */;\n    const pieces = url.path.split('/');\n    // We need to preserve the first piece always, so that we output a leading slash. The item at\n    // pieces[0] is an empty string.\n    let pointer = 1;\n    // Positive is the number of real directories we've output, used for popping a parent directory.\n    // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n    let positive = 0;\n    // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n    // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n    // real directory, we won't need to append, unless the other conditions happen again.\n    let addTrailingSlash = false;\n    for (let i = 1; i < pieces.length; i++) {\n        const piece = pieces[i];\n        // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n        if (!piece) {\n            addTrailingSlash = true;\n            continue;\n        }\n        // If we encounter a real directory, then we don't need to append anymore.\n        addTrailingSlash = false;\n        // A current directory, which we can always drop.\n        if (piece === '.')\n            continue;\n        // A parent directory, we need to see if there are any real directories we can pop. Else, we\n        // have an excess of parents, and we'll need to keep the \"..\".\n        if (piece === '..') {\n            if (positive) {\n                addTrailingSlash = true;\n                positive--;\n                pointer--;\n            }\n            else if (rel) {\n                // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n                // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n                pieces[pointer++] = piece;\n            }\n            continue;\n        }\n        // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n        // any popped or dropped directories.\n        pieces[pointer++] = piece;\n        positive++;\n    }\n    let path = '';\n    for (let i = 1; i < pointer; i++) {\n        path += '/' + pieces[i];\n    }\n    if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n        path += '/';\n    }\n    url.path = path;\n}\n/**\n * Attempts to resolve `input` URL/path relative to `base`.\n */\nfunction resolve(input, base) {\n    if (!input && !base)\n        return '';\n    const url = parseUrl(input);\n    let inputType = url.type;\n    if (base && inputType !== 7 /* Absolute */) {\n        const baseUrl = parseUrl(base);\n        const baseType = baseUrl.type;\n        switch (inputType) {\n            case 1 /* Empty */:\n                url.hash = baseUrl.hash;\n            // fall through\n            case 2 /* Hash */:\n                url.query = baseUrl.query;\n            // fall through\n            case 3 /* Query */:\n            case 4 /* RelativePath */:\n                mergePaths(url, baseUrl);\n            // fall through\n            case 5 /* AbsolutePath */:\n                // The host, user, and port are joined, you can't copy one without the others.\n                url.user = baseUrl.user;\n                url.host = baseUrl.host;\n                url.port = baseUrl.port;\n            // fall through\n            case 6 /* SchemeRelative */:\n                // The input doesn't have a schema at least, so we need to copy at least that over.\n                url.scheme = baseUrl.scheme;\n        }\n        if (baseType > inputType)\n            inputType = baseType;\n    }\n    normalizePath(url, inputType);\n    const queryHash = url.query + url.hash;\n    switch (inputType) {\n        // This is impossible, because of the empty checks at the start of the function.\n        // case UrlType.Empty:\n        case 2 /* Hash */:\n        case 3 /* Query */:\n            return queryHash;\n        case 4 /* RelativePath */: {\n            // The first char is always a \"/\", and we need it to be relative.\n            const path = url.path.slice(1);\n            if (!path)\n                return queryHash || '.';\n            if (isRelative(base || input) && !isRelative(path)) {\n                // If base started with a leading \".\", or there is no base and input started with a \".\",\n                // then we need to ensure that the relative path starts with a \".\". We don't know if\n                // relative starts with a \"..\", though, so check before prepending.\n                return './' + path + queryHash;\n            }\n            return path + queryHash;\n        }\n        case 5 /* AbsolutePath */:\n            return url.path + queryHash;\n        default:\n            return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;\n    }\n}\n\n// src/trace-mapping.ts\n\n// src/strip-filename.ts\nfunction stripFilename(path) {\n  if (!path) return \"\";\n  const index = path.lastIndexOf(\"/\");\n  return path.slice(0, index + 1);\n}\n\n// src/resolve.ts\nfunction resolver(mapUrl, sourceRoot) {\n  const from = stripFilename(mapUrl);\n  const prefix = sourceRoot ? sourceRoot + \"/\" : \"\";\n  return (source) => resolve(prefix + (source || \"\"), from);\n}\n\n// src/sourcemap-segment.ts\nvar COLUMN = 0;\nvar SOURCES_INDEX = 1;\nvar SOURCE_LINE = 2;\nvar SOURCE_COLUMN = 3;\nvar NAMES_INDEX = 4;\nvar REV_GENERATED_LINE = 1;\nvar REV_GENERATED_COLUMN = 2;\n\n// src/sort.ts\nfunction maybeSort(mappings, owned) {\n  const unsortedIndex = nextUnsortedSegmentLine(mappings, 0);\n  if (unsortedIndex === mappings.length) return mappings;\n  if (!owned) mappings = mappings.slice();\n  for (let i = unsortedIndex; i < mappings.length; i = nextUnsortedSegmentLine(mappings, i + 1)) {\n    mappings[i] = sortSegments(mappings[i], owned);\n  }\n  return mappings;\n}\nfunction nextUnsortedSegmentLine(mappings, start) {\n  for (let i = start; i < mappings.length; i++) {\n    if (!isSorted(mappings[i])) return i;\n  }\n  return mappings.length;\n}\nfunction isSorted(line) {\n  for (let j = 1; j < line.length; j++) {\n    if (line[j][COLUMN] < line[j - 1][COLUMN]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction sortSegments(line, owned) {\n  if (!owned) line = line.slice();\n  return line.sort(sortComparator);\n}\nfunction sortComparator(a, b) {\n  return a[COLUMN] - b[COLUMN];\n}\n\n// src/by-source.ts\nfunction buildBySources(decoded, memos) {\n  const sources = memos.map(() => []);\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n      if (seg.length === 1) continue;\n      const sourceIndex2 = seg[SOURCES_INDEX];\n      const sourceLine = seg[SOURCE_LINE];\n      const sourceColumn = seg[SOURCE_COLUMN];\n      const source = sources[sourceIndex2];\n      const segs = source[sourceLine] || (source[sourceLine] = []);\n      segs.push([sourceColumn, i, seg[COLUMN]]);\n    }\n  }\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    for (let j = 0; j < source.length; j++) {\n      const line = source[j];\n      if (line) line.sort(sortComparator);\n    }\n  }\n  return sources;\n}\n\n// src/binary-search.ts\nvar found = false;\nfunction binarySearch(haystack, needle, low, high) {\n  while (low <= high) {\n    const mid = low + (high - low >> 1);\n    const cmp = haystack[mid][COLUMN] - needle;\n    if (cmp === 0) {\n      found = true;\n      return mid;\n    }\n    if (cmp < 0) {\n      low = mid + 1;\n    } else {\n      high = mid - 1;\n    }\n  }\n  found = false;\n  return low - 1;\n}\nfunction upperBound(haystack, needle, index) {\n  for (let i = index + 1; i < haystack.length; index = i++) {\n    if (haystack[i][COLUMN] !== needle) break;\n  }\n  return index;\n}\nfunction lowerBound(haystack, needle, index) {\n  for (let i = index - 1; i >= 0; index = i--) {\n    if (haystack[i][COLUMN] !== needle) break;\n  }\n  return index;\n}\nfunction memoizedState() {\n  return {\n    lastKey: -1,\n    lastNeedle: -1,\n    lastIndex: -1\n  };\n}\nfunction memoizedBinarySearch(haystack, needle, state, key) {\n  const { lastKey, lastNeedle, lastIndex } = state;\n  let low = 0;\n  let high = haystack.length - 1;\n  if (key === lastKey) {\n    if (needle === lastNeedle) {\n      found = lastIndex !== -1 && haystack[lastIndex][COLUMN] === needle;\n      return lastIndex;\n    }\n    if (needle >= lastNeedle) {\n      low = lastIndex === -1 ? 0 : lastIndex;\n    } else {\n      high = lastIndex;\n    }\n  }\n  state.lastKey = key;\n  state.lastNeedle = needle;\n  return state.lastIndex = binarySearch(haystack, needle, low, high);\n}\n\n// src/types.ts\nfunction parse(map) {\n  return typeof map === \"string\" ? JSON.parse(map) : map;\n}\n\n// src/trace-mapping.ts\nvar LINE_GTR_ZERO = \"`line` must be greater than 0 (lines start at line 1)\";\nvar COL_GTR_EQ_ZERO = \"`column` must be greater than or equal to 0 (columns start at column 0)\";\nvar LEAST_UPPER_BOUND = -1;\nvar GREATEST_LOWER_BOUND = 1;\nvar TraceMap = class {\n  constructor(map, mapUrl) {\n    const isString = typeof map === \"string\";\n    if (!isString && map._decodedMemo) return map;\n    const parsed = parse(map);\n    const { version, file, names, sourceRoot, sources, sourcesContent } = parsed;\n    this.version = version;\n    this.file = file;\n    this.names = names || [];\n    this.sourceRoot = sourceRoot;\n    this.sources = sources;\n    this.sourcesContent = sourcesContent;\n    this.ignoreList = parsed.ignoreList || parsed.x_google_ignoreList || void 0;\n    const resolve = resolver(mapUrl, sourceRoot);\n    this.resolvedSources = sources.map(resolve);\n    const { mappings } = parsed;\n    if (typeof mappings === \"string\") {\n      this._encoded = mappings;\n      this._decoded = void 0;\n    } else if (Array.isArray(mappings)) {\n      this._encoded = void 0;\n      this._decoded = maybeSort(mappings, isString);\n    } else if (parsed.sections) {\n      throw new Error(`TraceMap passed sectioned source map, please use FlattenMap export instead`);\n    } else {\n      throw new Error(`invalid source map: ${JSON.stringify(parsed)}`);\n    }\n    this._decodedMemo = memoizedState();\n    this._bySources = void 0;\n    this._bySourceMemos = void 0;\n  }\n};\nfunction cast(map) {\n  return map;\n}\nfunction decodedMappings(map) {\n  var _a;\n  return (_a = cast(map))._decoded || (_a._decoded = decode(cast(map)._encoded));\n}\nfunction originalPositionFor(map, needle) {\n  let { line, column, bias } = needle;\n  line--;\n  if (line < 0) throw new Error(LINE_GTR_ZERO);\n  if (column < 0) throw new Error(COL_GTR_EQ_ZERO);\n  const decoded = decodedMappings(map);\n  if (line >= decoded.length) return OMapping(null, null, null, null);\n  const segments = decoded[line];\n  const index = traceSegmentInternal(\n    segments,\n    cast(map)._decodedMemo,\n    line,\n    column,\n    bias || GREATEST_LOWER_BOUND\n  );\n  if (index === -1) return OMapping(null, null, null, null);\n  const segment = segments[index];\n  if (segment.length === 1) return OMapping(null, null, null, null);\n  const { names, resolvedSources } = map;\n  return OMapping(\n    resolvedSources[segment[SOURCES_INDEX]],\n    segment[SOURCE_LINE] + 1,\n    segment[SOURCE_COLUMN],\n    segment.length === 5 ? names[segment[NAMES_INDEX]] : null\n  );\n}\nfunction generatedPositionFor(map, needle) {\n  const { source, line, column, bias } = needle;\n  return generatedPosition(map, source, line, column, bias || GREATEST_LOWER_BOUND, false);\n}\nfunction eachMapping(map, cb) {\n  const decoded = decodedMappings(map);\n  const { names, resolvedSources } = map;\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n      const generatedLine = i + 1;\n      const generatedColumn = seg[0];\n      let source = null;\n      let originalLine = null;\n      let originalColumn = null;\n      let name = null;\n      if (seg.length !== 1) {\n        source = resolvedSources[seg[1]];\n        originalLine = seg[2] + 1;\n        originalColumn = seg[3];\n      }\n      if (seg.length === 5) name = names[seg[4]];\n      cb({\n        generatedLine,\n        generatedColumn,\n        source,\n        originalLine,\n        originalColumn,\n        name\n      });\n    }\n  }\n}\nfunction OMapping(source, line, column, name) {\n  return { source, line, column, name };\n}\nfunction GMapping(line, column) {\n  return { line, column };\n}\nfunction traceSegmentInternal(segments, memo, line, column, bias) {\n  let index = memoizedBinarySearch(segments, column, memo, line);\n  if (found) {\n    index = (bias === LEAST_UPPER_BOUND ? upperBound : lowerBound)(segments, column, index);\n  } else if (bias === LEAST_UPPER_BOUND) index++;\n  if (index === -1 || index === segments.length) return -1;\n  return index;\n}\nfunction generatedPosition(map, source, line, column, bias, all) {\n  var _a, _b;\n  line--;\n  if (line < 0) throw new Error(LINE_GTR_ZERO);\n  if (column < 0) throw new Error(COL_GTR_EQ_ZERO);\n  const { sources, resolvedSources } = map;\n  let sourceIndex2 = sources.indexOf(source);\n  if (sourceIndex2 === -1) sourceIndex2 = resolvedSources.indexOf(source);\n  if (sourceIndex2 === -1) return all ? [] : GMapping(null, null);\n  const bySourceMemos = (_a = cast(map))._bySourceMemos || (_a._bySourceMemos = sources.map(memoizedState));\n  const generated = (_b = cast(map))._bySources || (_b._bySources = buildBySources(decodedMappings(map), bySourceMemos));\n  const segments = generated[sourceIndex2][line];\n  if (segments == null) return all ? [] : GMapping(null, null);\n  const memo = bySourceMemos[sourceIndex2];\n  const index = traceSegmentInternal(segments, memo, line, column, bias);\n  if (index === -1) return GMapping(null, null);\n  const segment = segments[index];\n  return GMapping(segment[REV_GENERATED_LINE] + 1, segment[REV_GENERATED_COLUMN]);\n}\n\n// AST walker module for ESTree compatible trees\n\n\n// An ancestor walk keeps an array of ancestor nodes (including the\n// current node) and passes them to the callback as third parameter\n// (and also as state parameter when no other state is present).\nfunction ancestor(node, visitors, baseVisitor, state, override) {\n  var ancestors = [];\n  if (!baseVisitor) { baseVisitor = base\n  ; }(function c(node, st, override) {\n    var type = override || node.type;\n    var isNew = node !== ancestors[ancestors.length - 1];\n    if (isNew) { ancestors.push(node); }\n    baseVisitor[type](node, st, c);\n    if (visitors[type]) { visitors[type](node, st || ancestors, ancestors); }\n    if (isNew) { ancestors.pop(); }\n  })(node, state, override);\n}\n\nfunction skipThrough(node, st, c) { c(node, st); }\nfunction ignore(_node, _st, _c) {}\n\n// Node walkers.\n\nvar base = {};\n\nbase.Program = base.BlockStatement = base.StaticBlock = function (node, st, c) {\n  for (var i = 0, list = node.body; i < list.length; i += 1)\n    {\n    var stmt = list[i];\n\n    c(stmt, st, \"Statement\");\n  }\n};\nbase.Statement = skipThrough;\nbase.EmptyStatement = ignore;\nbase.ExpressionStatement = base.ParenthesizedExpression = base.ChainExpression =\n  function (node, st, c) { return c(node.expression, st, \"Expression\"); };\nbase.IfStatement = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.consequent, st, \"Statement\");\n  if (node.alternate) { c(node.alternate, st, \"Statement\"); }\n};\nbase.LabeledStatement = function (node, st, c) { return c(node.body, st, \"Statement\"); };\nbase.BreakStatement = base.ContinueStatement = ignore;\nbase.WithStatement = function (node, st, c) {\n  c(node.object, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase.SwitchStatement = function (node, st, c) {\n  c(node.discriminant, st, \"Expression\");\n  for (var i = 0, list = node.cases; i < list.length; i += 1) {\n    var cs = list[i];\n\n    c(cs, st);\n  }\n};\nbase.SwitchCase = function (node, st, c) {\n  if (node.test) { c(node.test, st, \"Expression\"); }\n  for (var i = 0, list = node.consequent; i < list.length; i += 1)\n    {\n    var cons = list[i];\n\n    c(cons, st, \"Statement\");\n  }\n};\nbase.ReturnStatement = base.YieldExpression = base.AwaitExpression = function (node, st, c) {\n  if (node.argument) { c(node.argument, st, \"Expression\"); }\n};\nbase.ThrowStatement = base.SpreadElement =\n  function (node, st, c) { return c(node.argument, st, \"Expression\"); };\nbase.TryStatement = function (node, st, c) {\n  c(node.block, st, \"Statement\");\n  if (node.handler) { c(node.handler, st); }\n  if (node.finalizer) { c(node.finalizer, st, \"Statement\"); }\n};\nbase.CatchClause = function (node, st, c) {\n  if (node.param) { c(node.param, st, \"Pattern\"); }\n  c(node.body, st, \"Statement\");\n};\nbase.WhileStatement = base.DoWhileStatement = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase.ForStatement = function (node, st, c) {\n  if (node.init) { c(node.init, st, \"ForInit\"); }\n  if (node.test) { c(node.test, st, \"Expression\"); }\n  if (node.update) { c(node.update, st, \"Expression\"); }\n  c(node.body, st, \"Statement\");\n};\nbase.ForInStatement = base.ForOfStatement = function (node, st, c) {\n  c(node.left, st, \"ForInit\");\n  c(node.right, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase.ForInit = function (node, st, c) {\n  if (node.type === \"VariableDeclaration\") { c(node, st); }\n  else { c(node, st, \"Expression\"); }\n};\nbase.DebuggerStatement = ignore;\n\nbase.FunctionDeclaration = function (node, st, c) { return c(node, st, \"Function\"); };\nbase.VariableDeclaration = function (node, st, c) {\n  for (var i = 0, list = node.declarations; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    c(decl, st);\n  }\n};\nbase.VariableDeclarator = function (node, st, c) {\n  c(node.id, st, \"Pattern\");\n  if (node.init) { c(node.init, st, \"Expression\"); }\n};\n\nbase.Function = function (node, st, c) {\n  if (node.id) { c(node.id, st, \"Pattern\"); }\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    c(param, st, \"Pattern\");\n  }\n  c(node.body, st, node.expression ? \"Expression\" : \"Statement\");\n};\n\nbase.Pattern = function (node, st, c) {\n  if (node.type === \"Identifier\")\n    { c(node, st, \"VariablePattern\"); }\n  else if (node.type === \"MemberExpression\")\n    { c(node, st, \"MemberPattern\"); }\n  else\n    { c(node, st); }\n};\nbase.VariablePattern = ignore;\nbase.MemberPattern = skipThrough;\nbase.RestElement = function (node, st, c) { return c(node.argument, st, \"Pattern\"); };\nbase.ArrayPattern = function (node, st, c) {\n  for (var i = 0, list = node.elements; i < list.length; i += 1) {\n    var elt = list[i];\n\n    if (elt) { c(elt, st, \"Pattern\"); }\n  }\n};\nbase.ObjectPattern = function (node, st, c) {\n  for (var i = 0, list = node.properties; i < list.length; i += 1) {\n    var prop = list[i];\n\n    if (prop.type === \"Property\") {\n      if (prop.computed) { c(prop.key, st, \"Expression\"); }\n      c(prop.value, st, \"Pattern\");\n    } else if (prop.type === \"RestElement\") {\n      c(prop.argument, st, \"Pattern\");\n    }\n  }\n};\n\nbase.Expression = skipThrough;\nbase.ThisExpression = base.Super = base.MetaProperty = ignore;\nbase.ArrayExpression = function (node, st, c) {\n  for (var i = 0, list = node.elements; i < list.length; i += 1) {\n    var elt = list[i];\n\n    if (elt) { c(elt, st, \"Expression\"); }\n  }\n};\nbase.ObjectExpression = function (node, st, c) {\n  for (var i = 0, list = node.properties; i < list.length; i += 1)\n    {\n    var prop = list[i];\n\n    c(prop, st);\n  }\n};\nbase.FunctionExpression = base.ArrowFunctionExpression = base.FunctionDeclaration;\nbase.SequenceExpression = function (node, st, c) {\n  for (var i = 0, list = node.expressions; i < list.length; i += 1)\n    {\n    var expr = list[i];\n\n    c(expr, st, \"Expression\");\n  }\n};\nbase.TemplateLiteral = function (node, st, c) {\n  for (var i = 0, list = node.quasis; i < list.length; i += 1)\n    {\n    var quasi = list[i];\n\n    c(quasi, st);\n  }\n\n  for (var i$1 = 0, list$1 = node.expressions; i$1 < list$1.length; i$1 += 1)\n    {\n    var expr = list$1[i$1];\n\n    c(expr, st, \"Expression\");\n  }\n};\nbase.TemplateElement = ignore;\nbase.UnaryExpression = base.UpdateExpression = function (node, st, c) {\n  c(node.argument, st, \"Expression\");\n};\nbase.BinaryExpression = base.LogicalExpression = function (node, st, c) {\n  c(node.left, st, \"Expression\");\n  c(node.right, st, \"Expression\");\n};\nbase.AssignmentExpression = base.AssignmentPattern = function (node, st, c) {\n  c(node.left, st, \"Pattern\");\n  c(node.right, st, \"Expression\");\n};\nbase.ConditionalExpression = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.consequent, st, \"Expression\");\n  c(node.alternate, st, \"Expression\");\n};\nbase.NewExpression = base.CallExpression = function (node, st, c) {\n  c(node.callee, st, \"Expression\");\n  if (node.arguments)\n    { for (var i = 0, list = node.arguments; i < list.length; i += 1)\n      {\n        var arg = list[i];\n\n        c(arg, st, \"Expression\");\n      } }\n};\nbase.MemberExpression = function (node, st, c) {\n  c(node.object, st, \"Expression\");\n  if (node.computed) { c(node.property, st, \"Expression\"); }\n};\nbase.ExportNamedDeclaration = base.ExportDefaultDeclaration = function (node, st, c) {\n  if (node.declaration)\n    { c(node.declaration, st, node.type === \"ExportNamedDeclaration\" || node.declaration.id ? \"Statement\" : \"Expression\"); }\n  if (node.source) { c(node.source, st, \"Expression\"); }\n};\nbase.ExportAllDeclaration = function (node, st, c) {\n  if (node.exported)\n    { c(node.exported, st); }\n  c(node.source, st, \"Expression\");\n};\nbase.ImportDeclaration = function (node, st, c) {\n  for (var i = 0, list = node.specifiers; i < list.length; i += 1)\n    {\n    var spec = list[i];\n\n    c(spec, st);\n  }\n  c(node.source, st, \"Expression\");\n};\nbase.ImportExpression = function (node, st, c) {\n  c(node.source, st, \"Expression\");\n};\nbase.ImportSpecifier = base.ImportDefaultSpecifier = base.ImportNamespaceSpecifier = base.Identifier = base.PrivateIdentifier = base.Literal = ignore;\n\nbase.TaggedTemplateExpression = function (node, st, c) {\n  c(node.tag, st, \"Expression\");\n  c(node.quasi, st, \"Expression\");\n};\nbase.ClassDeclaration = base.ClassExpression = function (node, st, c) { return c(node, st, \"Class\"); };\nbase.Class = function (node, st, c) {\n  if (node.id) { c(node.id, st, \"Pattern\"); }\n  if (node.superClass) { c(node.superClass, st, \"Expression\"); }\n  c(node.body, st);\n};\nbase.ClassBody = function (node, st, c) {\n  for (var i = 0, list = node.body; i < list.length; i += 1)\n    {\n    var elt = list[i];\n\n    c(elt, st);\n  }\n};\nbase.MethodDefinition = base.PropertyDefinition = base.Property = function (node, st, c) {\n  if (node.computed) { c(node.key, st, \"Expression\"); }\n  if (node.value) { c(node.value, st, \"Expression\"); }\n};\n\nasync function collectTests(ctx, filepath) {\n\tconst request = await ctx.vite.environments.ssr.transformRequest(filepath);\n\tif (!request) return null;\n\tconst ast = await parseAstAsync(request.code), testFilepath = relative(ctx.config.root, filepath), projectName = ctx.name, typecheckSubprojectName = projectName ? `${projectName}:__typecheck__` : \"__typecheck__\", file = {\n\t\tfilepath,\n\t\ttype: \"suite\",\n\t\tid: generateHash(`${testFilepath}${typecheckSubprojectName}`),\n\t\tname: testFilepath,\n\t\tmode: \"run\",\n\t\ttasks: [],\n\t\tstart: ast.start,\n\t\tend: ast.end,\n\t\tprojectName,\n\t\tmeta: { typecheck: true },\n\t\tfile: null\n\t};\n\tfile.file = file;\n\tconst definitions = [], getName = (callee) => {\n\t\tif (!callee) return null;\n\t\tif (callee.type === \"Identifier\") return callee.name;\n\t\tif (callee.type === \"CallExpression\") return getName(callee.callee);\n\t\tif (callee.type === \"TaggedTemplateExpression\") return getName(callee.tag);\n\t\tif (callee.type === \"MemberExpression\")\n // call as `__vite_ssr__.test.skip()`\n\t\treturn callee.object?.type === \"Identifier\" && [\n\t\t\t\"it\",\n\t\t\t\"test\",\n\t\t\t\"describe\",\n\t\t\t\"suite\"\n\t\t].includes(callee.object.name) ? callee.object?.name : callee.object?.name?.startsWith(\"__vite_ssr_\") ? getName(callee.property) : getName(callee.object?.property);\n\t\t// unwrap (0, ...)\n\t\tif (callee.type === \"SequenceExpression\" && callee.expressions.length === 2) {\n\t\t\tconst [e0, e1] = callee.expressions;\n\t\t\tif (e0.type === \"Literal\" && e0.value === 0) return getName(e1);\n\t\t}\n\t\treturn null;\n\t};\n\tancestor(ast, { CallExpression(node) {\n\t\tconst { callee } = node, name = getName(callee);\n\t\tif (!name || ![\n\t\t\t\"it\",\n\t\t\t\"test\",\n\t\t\t\"describe\",\n\t\t\t\"suite\"\n\t\t].includes(name)) return;\n\t\tconst property = callee?.property?.name;\n\t\tlet mode = !property || property === name ? \"run\" : property;\n\t\t// they will be picked up in the next iteration\n\t\tif ([\n\t\t\t\"each\",\n\t\t\t\"for\",\n\t\t\t\"skipIf\",\n\t\t\t\"runIf\"\n\t\t].includes(mode)) return;\n\t\tlet start;\n\t\tconst end = node.end;\n\t\t// .each\n\t\tif (callee.type === \"CallExpression\") start = callee.end;\n\t\telse if (callee.type === \"TaggedTemplateExpression\") start = callee.end + 1;\n\t\telse start = node.start;\n\t\tconst { arguments: [messageNode] } = node, message = messageNode?.type === \"Literal\" || messageNode?.type === \"TemplateLiteral\" ? request.code.slice(messageNode.start + 1, messageNode.end - 1) : request.code.slice(messageNode.start, messageNode.end);\n\t\t// cannot statically analyze, so we always skip it\n\t\tif (mode === \"skipIf\" || mode === \"runIf\") mode = \"skip\";\n\t\tdefinitions.push({\n\t\t\tstart,\n\t\t\tend,\n\t\t\tname: message,\n\t\t\ttype: name === \"it\" || name === \"test\" ? \"test\" : \"suite\",\n\t\t\tmode,\n\t\t\ttask: null\n\t\t});\n\t} });\n\tlet lastSuite = file;\n\tconst updateLatestSuite = (index) => {\n\t\twhile (lastSuite.suite && lastSuite.end < index) lastSuite = lastSuite.suite;\n\t\treturn lastSuite;\n\t};\n\tdefinitions.sort((a, b) => a.start - b.start).forEach((definition) => {\n\t\tconst latestSuite = updateLatestSuite(definition.start);\n\t\tlet mode = definition.mode;\n\t\tif (latestSuite.mode !== \"run\")\n // inherit suite mode, if it's set\n\t\tmode = latestSuite.mode;\n\t\tif (definition.type === \"suite\") {\n\t\t\tconst task = {\n\t\t\t\ttype: definition.type,\n\t\t\t\tid: \"\",\n\t\t\t\tsuite: latestSuite,\n\t\t\t\tfile,\n\t\t\t\ttasks: [],\n\t\t\t\tmode,\n\t\t\t\tname: definition.name,\n\t\t\t\tend: definition.end,\n\t\t\t\tstart: definition.start,\n\t\t\t\tmeta: { typecheck: true }\n\t\t\t};\n\t\t\tdefinition.task = task, latestSuite.tasks.push(task), lastSuite = task;\n\t\t\treturn;\n\t\t}\n\t\tconst task = {\n\t\t\ttype: definition.type,\n\t\t\tid: \"\",\n\t\t\tsuite: latestSuite,\n\t\t\tfile,\n\t\t\tmode,\n\t\t\ttimeout: 0,\n\t\t\tcontext: {},\n\t\t\tname: definition.name,\n\t\t\tend: definition.end,\n\t\t\tstart: definition.start,\n\t\t\tannotations: [],\n\t\t\tmeta: { typecheck: true }\n\t\t};\n\t\tdefinition.task = task, latestSuite.tasks.push(task);\n\t}), calculateSuiteHash(file);\n\tconst hasOnly = someTasksAreOnly(file);\n\treturn interpretTaskModes(file, ctx.config.testNamePattern, void 0, hasOnly, false, ctx.config.allowOnly), {\n\t\tfile,\n\t\tparsed: request.code,\n\t\tfilepath,\n\t\tmap: request.map,\n\t\tdefinitions\n\t};\n}\n\nconst newLineRegExp = /\\r?\\n/, errCodeRegExp = /error TS(?<errCode>\\d+)/;\nasync function makeTscErrorInfo(errInfo) {\n\tconst [errFilePathPos = \"\", ...errMsgRawArr] = errInfo.split(\":\");\n\tif (!errFilePathPos || errMsgRawArr.length === 0 || errMsgRawArr.join(\"\").length === 0) return [\"unknown filepath\", null];\n\tconst errMsgRaw = errMsgRawArr.join(\"\").trim(), [errFilePath, errPos] = errFilePathPos.slice(0, -1).split(\"(\");\n\tif (!errFilePath || !errPos) return [\"unknown filepath\", null];\n\tconst [errLine, errCol] = errPos.split(\",\");\n\tif (!errLine || !errCol) return [errFilePath, null];\n\t// get errCode, errMsg\n\tconst execArr = errCodeRegExp.exec(errMsgRaw);\n\tif (!execArr) return [errFilePath, null];\n\tconst errCodeStr = execArr.groups?.errCode ?? \"\";\n\tif (!errCodeStr) return [errFilePath, null];\n\tconst line = Number(errLine), col = Number(errCol), errCode = Number(errCodeStr);\n\treturn [errFilePath, {\n\t\tfilePath: errFilePath,\n\t\terrCode,\n\t\tline,\n\t\tcolumn: col,\n\t\terrMsg: errMsgRaw.slice(`error TS${errCode} `.length)\n\t}];\n}\nasync function getRawErrsMapFromTsCompile(tscErrorStdout) {\n\tconst rawErrsMap = /* @__PURE__ */ new Map();\n\treturn (await Promise.all(tscErrorStdout.split(newLineRegExp).reduce((prev, next) => {\n\t\tif (!next) return prev;\n\t\tif (next[0] !== \" \") prev.push(next);\n\t\telse prev[prev.length - 1] += `\\n${next}`;\n\t\treturn prev;\n\t}, []).map((errInfoLine) => makeTscErrorInfo(errInfoLine)))).forEach(([errFilePath, errInfo]) => {\n\t\tif (errInfo) if (!rawErrsMap.has(errFilePath)) rawErrsMap.set(errFilePath, [errInfo]);\n\t\telse rawErrsMap.get(errFilePath)?.push(errInfo);\n\t}), rawErrsMap;\n}\n\nfunction createIndexMap(source) {\n\tconst map = /* @__PURE__ */ new Map();\n\tlet index = 0, line = 1, column = 1;\n\tfor (const char of source) if (map.set(`${line}:${column}`, index++), char === \"\\n\" || char === \"\\r\\n\") line++, column = 0;\n\telse column++;\n\treturn map;\n}\n\nclass TypeCheckError extends Error {\n\tname = \"TypeCheckError\";\n\tconstructor(message, stacks) {\n\t\tsuper(message), this.message = message, this.stacks = stacks;\n\t}\n}\nclass Typechecker {\n\t_onParseStart;\n\t_onParseEnd;\n\t_onWatcherRerun;\n\t_result = {\n\t\tfiles: [],\n\t\tsourceErrors: [],\n\t\ttime: 0\n\t};\n\t_startTime = 0;\n\t_output = \"\";\n\t_tests = {};\n\tprocess;\n\tfiles = [];\n\tconstructor(project) {\n\t\tthis.project = project;\n\t}\n\tsetFiles(files) {\n\t\tthis.files = files;\n\t}\n\tonParseStart(fn) {\n\t\tthis._onParseStart = fn;\n\t}\n\tonParseEnd(fn) {\n\t\tthis._onParseEnd = fn;\n\t}\n\tonWatcherRerun(fn) {\n\t\tthis._onWatcherRerun = fn;\n\t}\n\tasync collectFileTests(filepath) {\n\t\treturn collectTests(this.project, filepath);\n\t}\n\tgetFiles() {\n\t\treturn this.files;\n\t}\n\tasync collectTests() {\n\t\tconst tests = (await Promise.all(this.getFiles().map((filepath) => this.collectFileTests(filepath)))).reduce((acc, data) => {\n\t\t\treturn data && (acc[data.filepath] = data), acc;\n\t\t}, {});\n\t\treturn this._tests = tests, tests;\n\t}\n\tmarkPassed(file) {\n\t\tif (!file.result?.state) file.result = { state: \"pass\" };\n\t\tconst markTasks = (tasks) => {\n\t\t\tfor (const task of tasks) {\n\t\t\t\tif (\"tasks\" in task) markTasks(task.tasks);\n\t\t\t\tif (!task.result?.state && (task.mode === \"run\" || task.mode === \"queued\")) task.result = { state: \"pass\" };\n\t\t\t}\n\t\t};\n\t\tmarkTasks(file.tasks);\n\t}\n\tasync prepareResults(output) {\n\t\tconst typeErrors = await this.parseTscLikeOutput(output), testFiles = new Set(this.getFiles());\n\t\tif (!this._tests) this._tests = await this.collectTests();\n\t\tconst sourceErrors = [], files = [];\n\t\treturn testFiles.forEach((path) => {\n\t\t\tconst { file, definitions, map, parsed } = this._tests[path], errors = typeErrors.get(path);\n\t\t\tif (files.push(file), !errors) {\n\t\t\t\tthis.markPassed(file);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst sortedDefinitions = [...definitions.sort((a, b) => b.start - a.start)], traceMap = map && new TraceMap(map), indexMap = createIndexMap(parsed), markState = (task, state) => {\n\t\t\t\tif (task.result = { state: task.mode === \"run\" || task.mode === \"only\" ? state : task.mode }, task.suite) markState(task.suite, state);\n\t\t\t\telse if (task.file && task !== task.file) markState(task.file, state);\n\t\t\t};\n\t\t\terrors.forEach(({ error, originalError }) => {\n\t\t\t\tconst processedPos = traceMap ? findGeneratedPosition(traceMap, {\n\t\t\t\t\tline: originalError.line,\n\t\t\t\t\tcolumn: originalError.column,\n\t\t\t\t\tsource: basename(path)\n\t\t\t\t}) : originalError, line = processedPos.line ?? originalError.line, column = processedPos.column ?? originalError.column, index = indexMap.get(`${line}:${column}`), definition = index != null && sortedDefinitions.find((def) => def.start <= index && def.end >= index), suite = definition ? definition.task : file, state = suite.mode === \"run\" || suite.mode === \"only\" ? \"fail\" : suite.mode, errors = suite.result?.errors || [];\n\t\t\t\tif (suite.result = {\n\t\t\t\t\tstate,\n\t\t\t\t\terrors\n\t\t\t\t}, errors.push(error), state === \"fail\") {\n\t\t\t\t\tif (suite.suite) markState(suite.suite, \"fail\");\n\t\t\t\t\telse if (suite.file && suite !== suite.file) markState(suite.file, \"fail\");\n\t\t\t\t}\n\t\t\t}), this.markPassed(file);\n\t\t}), typeErrors.forEach((errors, path) => {\n\t\t\tif (!testFiles.has(path)) sourceErrors.push(...errors.map(({ error }) => error));\n\t\t}), {\n\t\t\tfiles,\n\t\t\tsourceErrors,\n\t\t\ttime: performance$1.now() - this._startTime\n\t\t};\n\t}\n\tasync parseTscLikeOutput(output) {\n\t\tconst errorsMap = await getRawErrsMapFromTsCompile(output), typesErrors = /* @__PURE__ */ new Map();\n\t\treturn errorsMap.forEach((errors, path) => {\n\t\t\tconst filepath = resolve$1(this.project.config.root, path), suiteErrors = errors.map((info) => {\n\t\t\t\tconst limit = Error.stackTraceLimit;\n\t\t\t\tError.stackTraceLimit = 0;\n\t\t\t\t// Some expect-type errors have the most useful information on the second line e.g. `This expression is not callable.\\n  Type 'ExpectString<number>' has no call signatures.`\n\t\t\t\tconst errMsg = info.errMsg.replace(/\\r?\\n\\s*(Type .* has no call signatures)/g, \" $1\"), error = new TypeCheckError(errMsg, [{\n\t\t\t\t\tfile: filepath,\n\t\t\t\t\tline: info.line,\n\t\t\t\t\tcolumn: info.column,\n\t\t\t\t\tmethod: \"\"\n\t\t\t\t}]);\n\t\t\t\treturn Error.stackTraceLimit = limit, {\n\t\t\t\t\toriginalError: info,\n\t\t\t\t\terror: {\n\t\t\t\t\t\tname: error.name,\n\t\t\t\t\t\tmessage: errMsg,\n\t\t\t\t\t\tstacks: error.stacks,\n\t\t\t\t\t\tstack: \"\"\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t\ttypesErrors.set(filepath, suiteErrors);\n\t\t}), typesErrors;\n\t}\n\tasync stop() {\n\t\tthis.process?.kill(), this.process = void 0;\n\t}\n\tasync ensurePackageInstalled(ctx, checker) {\n\t\tif (checker !== \"tsc\" && checker !== \"vue-tsc\") return;\n\t\tconst packageName = checker === \"tsc\" ? \"typescript\" : \"vue-tsc\";\n\t\tawait ctx.packageInstaller.ensureInstalled(packageName, ctx.config.root);\n\t}\n\tgetExitCode() {\n\t\treturn this.process?.exitCode != null && this.process.exitCode;\n\t}\n\tgetOutput() {\n\t\treturn this._output;\n\t}\n\tasync spawn() {\n\t\tconst { root, watch, typecheck } = this.project.config, args = [\n\t\t\t\"--noEmit\",\n\t\t\t\"--pretty\",\n\t\t\t\"false\",\n\t\t\t\"--incremental\",\n\t\t\t\"--tsBuildInfoFile\",\n\t\t\tjoin(process.versions.pnp ? join(nodeos__default.tmpdir(), this.project.hash) : distDir, \"tsconfig.tmp.tsbuildinfo\")\n\t\t];\n\t\t// use builtin watcher because it's faster\n\t\tif (watch) args.push(\"--watch\");\n\t\tif (typecheck.allowJs) args.push(\"--allowJs\", \"--checkJs\");\n\t\tif (typecheck.tsconfig) args.push(\"-p\", resolve$1(root, typecheck.tsconfig));\n\t\tthis._output = \"\", this._startTime = performance$1.now();\n\t\tconst child = x(typecheck.checker, args, {\n\t\t\tnodeOptions: {\n\t\t\t\tcwd: root,\n\t\t\t\tstdio: \"pipe\"\n\t\t\t},\n\t\t\tthrowOnError: false\n\t\t});\n\t\tthis.process = child.process;\n\t\tlet rerunTriggered = false, dataReceived = false;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!child.process || !child.process.stdout) {\n\t\t\t\treject(/* @__PURE__ */ new Error(`Failed to initialize ${typecheck.checker}. This is a bug in Vitest - please, open an issue with reproduction.`));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tchild.process.stdout.on(\"data\", (chunk) => {\n\t\t\t\tif (dataReceived = true, this._output += chunk, watch) {\n\t\t\t\t\tif (this._output.includes(\"File change detected\") && !rerunTriggered) this._onWatcherRerun?.(), this._startTime = performance$1.now(), this._result.sourceErrors = [], this._result.files = [], this._tests = null, rerunTriggered = true;\n\t\t\t\t\tif (/Found \\w+ errors*. Watching for/.test(this._output)) rerunTriggered = false, this.prepareResults(this._output).then((result) => {\n\t\t\t\t\t\tthis._result = result, this._onParseEnd?.(result);\n\t\t\t\t\t}), this._output = \"\";\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst timeout = setTimeout(() => reject(/* @__PURE__ */ new Error(`${typecheck.checker} spawn timed out`)), this.project.config.typecheck.spawnTimeout);\n\t\t\tfunction onError(cause) {\n\t\t\t\tclearTimeout(timeout), reject(new Error(\"Spawning typechecker failed - is typescript installed?\", { cause }));\n\t\t\t}\n\t\t\tif (child.process.once(\"spawn\", () => {\n\t\t\t\tif (this._onParseStart?.(), child.process?.off(\"error\", onError), clearTimeout(timeout), process.platform === \"win32\")\n // on Windows, the process might be spawned but fail to start\n\t\t\t\t// we wait for a potential error here. if \"close\" event didn't trigger,\n\t\t\t\t// we resolve the promise\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tresolve({ result: child });\n\t\t\t\t}, 200);\n\t\t\t\telse resolve({ result: child });\n\t\t\t}), process.platform === \"win32\") child.process.once(\"close\", (code) => {\n\t\t\t\tif (code != null && code !== 0 && !dataReceived) onError(/* @__PURE__ */ new Error(`The ${typecheck.checker} command exited with code ${code}.`));\n\t\t\t});\n\t\t\tchild.process.once(\"error\", onError);\n\t\t});\n\t}\n\tasync start() {\n\t\tif (this.process) return;\n\t\tconst { watch } = this.project.config, { result: child } = await this.spawn();\n\t\tif (!watch) await child, this._result = await this.prepareResults(this._output), await this._onParseEnd?.(this._result);\n\t}\n\tgetResult() {\n\t\treturn this._result;\n\t}\n\tgetTestFiles() {\n\t\treturn Object.values(this._tests || {}).map((i) => i.file);\n\t}\n\tgetTestPacksAndEvents() {\n\t\tconst packs = [], events = [];\n\t\tfor (const { file } of Object.values(this._tests || {})) {\n\t\t\tconst result = convertTasksToEvents(file);\n\t\t\tpacks.push(...result.packs), events.push(...result.events);\n\t\t}\n\t\treturn {\n\t\t\tpacks,\n\t\t\tevents\n\t\t};\n\t}\n}\nfunction findGeneratedPosition(traceMap, { line, column, source }) {\n\tconst found = generatedPositionFor(traceMap, {\n\t\tline,\n\t\tcolumn,\n\t\tsource\n\t});\n\tif (found.line !== null) return found;\n\t// find the next source token position when the exact error position doesn't exist in source map.\n\t// this can happen, for example, when the type error is in the comment \"// @ts-expect-error\"\n\t// and comments are stripped away in the generated code.\n\tconst mappings = [];\n\teachMapping(traceMap, (m) => {\n\t\tif (m.source === source && m.originalLine !== null && m.originalColumn !== null && (line === m.originalLine ? column < m.originalColumn : line < m.originalLine)) mappings.push(m);\n\t});\n\tconst next = mappings.sort((a, b) => a.originalLine === b.originalLine ? a.originalColumn - b.originalColumn : a.originalLine - b.originalLine).at(0);\n\treturn next ? {\n\t\tline: next.generatedLine,\n\t\tcolumn: next.generatedColumn\n\t} : {\n\t\tline: null,\n\t\tcolumn: null\n\t};\n}\n\n// use Logger with custom Console to capture entire error printing\nfunction capturePrintError(error, ctx, options) {\n\tlet output = \"\";\n\tconst writable = new Writable({ write(chunk, _encoding, callback) {\n\t\toutput += String(chunk), callback();\n\t} }), console = new Console(writable), logger = {\n\t\terror: console.error.bind(console),\n\t\thighlight: ctx.logger.highlight.bind(ctx.logger)\n\t};\n\treturn {\n\t\tnearest: printError(error, ctx, logger, {\n\t\t\tshowCodeFrame: false,\n\t\t\t...options\n\t\t})?.nearest,\n\t\toutput\n\t};\n}\nfunction printError(error, ctx, logger, options) {\n\tconst project = options.project ?? ctx.coreWorkspaceProject ?? ctx.projects[0];\n\treturn printErrorInner(error, project, {\n\t\tlogger,\n\t\ttype: options.type,\n\t\tshowCodeFrame: options.showCodeFrame,\n\t\tscreenshotPaths: options.screenshotPaths,\n\t\tprintProperties: options.verbose,\n\t\tparseErrorStacktrace(error) {\n\t\t\t// node.js stack trace already has correct source map locations\n\t\t\treturn error.stacks ? options.fullStack ? error.stacks : error.stacks.filter((stack) => {\n\t\t\t\treturn !defaultStackIgnorePatterns.some((p) => stack.file.match(p));\n\t\t\t}) : options.task?.file.pool === \"browser\" && project.browser ? project.browser.parseErrorStacktrace(error, {\n\t\t\t\tframeFilter: project.config.onStackTrace,\n\t\t\t\tignoreStackEntries: options.fullStack ? [] : void 0\n\t\t\t}) : parseErrorStacktrace(error, {\n\t\t\t\tframeFilter: project.config.onStackTrace,\n\t\t\t\tignoreStackEntries: options.fullStack ? [] : void 0\n\t\t\t});\n\t\t}\n\t});\n}\nfunction printErrorInner(error, project, options) {\n\tconst { showCodeFrame = true, type, printProperties = true } = options, logger = options.logger;\n\tlet e = error;\n\tif (isPrimitive(e)) e = {\n\t\tmessage: String(error).split(/\\n/g)[0],\n\t\tstack: String(error)\n\t};\n\tif (!e) {\n\t\tconst error = /* @__PURE__ */ new Error(\"unknown error\");\n\t\te = {\n\t\t\tmessage: e ?? error.message,\n\t\t\tstack: error.stack\n\t\t};\n\t}\n\t// Error may have occurred even before the configuration was resolved\n\tif (!project) {\n\t\tprintErrorMessage(e, logger);\n\t\treturn;\n\t}\n\tconst stacks = options.parseErrorStacktrace(e), nearest = error instanceof TypeCheckError ? error.stacks[0] : stacks.find((stack) => {\n\t\t// we are checking that this module was processed by us at one point\n\t\ttry {\n\t\t\treturn [...Object.values(project._vite?.environments || {}), ...Object.values(project.browser?.vite.environments || {})].some((environment) => {\n\t\t\t\treturn [...environment.moduleGraph.getModulesByFile(stack.file)?.values() || []].some((module) => !!module.transformResult);\n\t\t\t}) && existsSync(stack.file);\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t});\n\tif (type) printErrorType(type, project.vitest);\n\tif (printErrorMessage(e, logger), options.screenshotPaths?.length) {\n\t\tconst uniqueScreenshots = Array.from(new Set(options.screenshotPaths)), length = uniqueScreenshots.length;\n\t\tif (logger.error(`\\nFailure screenshot${length > 1 ? \"s\" : \"\"}:`), logger.error(uniqueScreenshots.map((p) => `  - ${c.dim(relative(process.cwd(), p))}`).join(\"\\n\")), !e.diff) logger.error();\n\t}\n\tif (e.codeFrame) logger.error(`${e.codeFrame}\\n`);\n\tif (\"__vitest_rollup_error__\" in e) {\n\t\t// https://github.com/vitejs/vite/blob/95020ab49e12d143262859e095025cf02423c1d9/packages/vite/src/node/server/middlewares/error.ts#L25-L36\n\t\tconst err = e.__vitest_rollup_error__;\n\t\tlogger.error([\n\t\t\terr.plugin && `  Plugin: ${c.magenta(err.plugin)}`,\n\t\t\terr.id && `  File: ${c.cyan(err.id)}${err.loc ? `:${err.loc.line}:${err.loc.column}` : \"\"}`,\n\t\t\terr.frame && c.yellow(err.frame.split(/\\r?\\n/g).map((l) => ` `.repeat(2) + l).join(`\\n`))\n\t\t].filter(Boolean).join(\"\\n\"));\n\t}\n\t// E.g. AssertionError from assert does not set showDiff but has both actual and expected properties\n\tif (e.diff) logger.error(`\\n${e.diff}\\n`);\n\t// if the error provide the frame\n\tif (e.frame) logger.error(c.yellow(e.frame));\n\telse {\n\t\tconst errorProperties = printProperties ? getErrorProperties(e) : {};\n\t\tprintStack(logger, project, stacks, nearest, errorProperties, (s) => {\n\t\t\tif (showCodeFrame && s === nearest && nearest) {\n\t\t\t\tconst sourceCode = readFileSync(nearest.file, \"utf-8\");\n\t\t\t\tlogger.error(generateCodeFrame(sourceCode.length > 1e5 ? sourceCode : logger.highlight(nearest.file, sourceCode), 4, s));\n\t\t\t}\n\t\t});\n\t}\n\tconst testPath = e.VITEST_TEST_PATH, testName = e.VITEST_TEST_NAME, afterEnvTeardown = e.VITEST_AFTER_ENV_TEARDOWN;\n\t// testName has testPath inside\n\tif (testPath) logger.error(c.red(`This error originated in \"${c.bold(relative(project.config.root, testPath))}\" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.`));\n\tif (testName) logger.error(c.red(`The latest test that might've caused the error is \"${c.bold(testName)}\". It might mean one of the following:\n- The error was thrown, while Vitest was running this test.\n- If the error occurred after the test had been completed, this was the last documented test before it was thrown.`));\n\tif (afterEnvTeardown) logger.error(c.red(\"This error was caught after test environment was torn down. Make sure to cancel any running tasks before test finishes:\\n- cancel timeouts using clearTimeout and clearInterval\\n- wait for promises to resolve using the await keyword\"));\n\tif (typeof e.cause === \"object\" && e.cause && \"name\" in e.cause) e.cause.name = `Caused by: ${e.cause.name}`, printErrorInner(e.cause, project, {\n\t\tshowCodeFrame: false,\n\t\tlogger: options.logger,\n\t\tparseErrorStacktrace: options.parseErrorStacktrace\n\t});\n\treturn handleImportOutsideModuleError(e.stack || \"\", logger), { nearest };\n}\nfunction printErrorType(type, ctx) {\n\tctx.logger.error(`\\n${errorBanner(type)}`);\n}\nconst skipErrorProperties = new Set([\n\t\"cause\",\n\t\"stacks\",\n\t\"type\",\n\t\"showDiff\",\n\t\"ok\",\n\t\"operator\",\n\t\"diff\",\n\t\"codeFrame\",\n\t\"actual\",\n\t\"expected\",\n\t\"diffOptions\",\n\t\"runnerError\",\n\t\"sourceURL\",\n\t\"column\",\n\t\"line\",\n\t\"fileName\",\n\t\"lineNumber\",\n\t\"columnNumber\",\n\t\"VITEST_TEST_NAME\",\n\t\"VITEST_TEST_PATH\",\n\t\"VITEST_AFTER_ENV_TEARDOWN\",\n\t\"__vitest_rollup_error__\",\n\t...Object.getOwnPropertyNames(Error.prototype),\n\t...Object.getOwnPropertyNames(Object.prototype)\n]);\nfunction getErrorProperties(e) {\n\tconst errorObject = Object.create(null);\n\tif (e.name === \"AssertionError\") return errorObject;\n\tfor (const key of Object.getOwnPropertyNames(e))\n // print the original stack if it was ever changed manually by the user\n\tif (key === \"stack\" && e[key] != null && typeof e[key] !== \"string\") errorObject[key] = e[key];\n\telse if (key !== \"stack\" && !skipErrorProperties.has(key)) errorObject[key] = e[key];\n\treturn errorObject;\n}\nconst esmErrors = [\"Cannot use import statement outside a module\", \"Unexpected token 'export'\"];\nfunction handleImportOutsideModuleError(stack, logger) {\n\tif (!esmErrors.some((e) => stack.includes(e))) return;\n\tconst path = normalize(stack.split(\"\\n\")[0].trim());\n\tlet name = path.split(\"/node_modules/\").pop() || \"\";\n\tif (name[0] === \"@\") name = name.split(\"/\").slice(0, 2).join(\"/\");\n\telse name = name.split(\"/\")[0];\n\tif (name) printModuleWarningForPackage(logger, path, name);\n\telse printModuleWarningForSourceCode(logger, path);\n}\nfunction printModuleWarningForPackage(logger, path, name) {\n\tlogger.error(c.yellow(`Module ${path} seems to be an ES Module but shipped in a CommonJS package. You might want to create an issue to the package ${c.bold(`\"${name}\"`)} asking them to ship the file in .mjs extension or add \"type\": \"module\" in their package.json.\n\nAs a temporary workaround you can try to inline the package by updating your config:\n\n` + c.gray(c.dim(\"// vitest.config.js\")) + \"\\n\" + c.green(`export default {\n  test: {\n    server: {\n      deps: {\n        inline: [\n          ${c.yellow(c.bold(`\"${name}\"`))}\n        ]\n      }\n    }\n  }\n}\\n`)));\n}\nfunction printModuleWarningForSourceCode(logger, path) {\n\tlogger.error(c.yellow(`Module ${path} seems to be an ES Module but shipped in a CommonJS package. To fix this issue, change the file extension to .mjs or add \"type\": \"module\" in your package.json.`));\n}\nfunction printErrorMessage(error, logger) {\n\tconst errorName = error.name || \"Unknown Error\";\n\tif (!error.message) {\n\t\tlogger.error(error);\n\t\treturn;\n\t}\n\tif (error.message.length > 5e3)\n // Protect against infinite stack trace in tinyrainbow\n\tlogger.error(`${c.red(c.bold(errorName))}: ${error.message}`);\n\telse logger.error(c.red(`${c.bold(errorName)}: ${error.message}`));\n}\nfunction printStack(logger, project, stack, highlight, errorProperties, onStack) {\n\tfor (const frame of stack) {\n\t\tconst color = frame === highlight ? c.cyan : c.gray, path = relative(project.config.root, frame.file);\n\t\tlogger.error(color(` ${c.dim(F_POINTER)} ${[frame.method, `${path}:${c.dim(`${frame.line}:${frame.column}`)}`].filter(Boolean).join(\" \")}`)), onStack?.(frame);\n\t}\n\tif (stack.length) logger.error();\n\tif (hasProperties(errorProperties)) {\n\t\tlogger.error(c.red(c.dim(divider())));\n\t\tconst propertiesString = inspect(errorProperties);\n\t\tlogger.error(c.red(c.bold(\"Serialized Error:\")), c.gray(propertiesString));\n\t}\n}\nfunction hasProperties(obj) {\n\t// eslint-disable-next-line no-unreachable-loop\n\tfor (const _key in obj) return true;\n\treturn false;\n}\nfunction generateCodeFrame(source, indent = 0, loc, range = 2) {\n\tconst start = typeof loc === \"object\" ? positionToOffset(source, loc.line, loc.column) : loc, end = start, lines = source.split(lineSplitRE), nl = /\\r\\n/.test(source) ? 2 : 1;\n\tlet count = 0, res = [];\n\tconst columns = process.stdout?.columns || 80;\n\tfor (let i = 0; i < lines.length; i++) if (count += lines[i].length + nl, count >= start) {\n\t\tfor (let j = i - range; j <= i + range || end > count; j++) {\n\t\t\tif (j < 0 || j >= lines.length) continue;\n\t\t\tconst lineLength = lines[j].length, strippedContent = stripVTControlCharacters(lines[j]);\n\t\t\tif (!strippedContent.startsWith(\"//# sourceMappingURL\")) {\n\t\t\t\t// too long, maybe it's a minified file, skip for codeframe\n\t\t\t\tif (strippedContent.length > 200) return \"\";\n\t\t\t\tif (res.push(lineNo(j + 1) + truncateString(lines[j].replace(/\\t/g, \" \"), columns - 5 - indent)), j === i) {\n\t\t\t\t\t// push underline\n\t\t\t\t\tconst pad = start - (count - lineLength) + (nl - 1), length = Math.max(1, end > count ? lineLength - pad : end - start);\n\t\t\t\t\tres.push(lineNo() + \" \".repeat(pad) + c.red(\"^\".repeat(length)));\n\t\t\t\t} else if (j > i) {\n\t\t\t\t\tif (end > count) {\n\t\t\t\t\t\tconst length = Math.max(1, Math.min(end - count, lineLength));\n\t\t\t\t\t\tres.push(lineNo() + c.red(\"^\".repeat(length)));\n\t\t\t\t\t}\n\t\t\t\t\tcount += lineLength + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbreak;\n\t}\n\tif (indent) res = res.map((line) => \" \".repeat(indent) + line);\n\treturn res.join(\"\\n\");\n}\nfunction lineNo(no = \"\") {\n\treturn c.gray(`${String(no).padStart(3, \" \")}| `);\n}\n\nclass GithubActionsReporter {\n\tctx = void 0;\n\toptions;\n\tconstructor(options = {}) {\n\t\tthis.options = options;\n\t}\n\tonInit(ctx) {\n\t\tthis.ctx = ctx;\n\t}\n\tonTestCaseAnnotate(testCase, annotation) {\n\t\tif (!annotation.location || this.options.displayAnnotations === false) return;\n\t\tconst type = getTitle(annotation.type), formatted = formatMessage({\n\t\t\tcommand: getType(annotation.type),\n\t\t\tproperties: {\n\t\t\t\tfile: annotation.location.file,\n\t\t\t\tline: String(annotation.location.line),\n\t\t\t\tcolumn: String(annotation.location.column),\n\t\t\t\t...type && { title: type }\n\t\t\t},\n\t\t\tmessage: stripVTControlCharacters(annotation.message)\n\t\t});\n\t\tthis.ctx.logger.log(`\\n${formatted}`);\n\t}\n\tonTestRunEnd(testModules, unhandledErrors) {\n\t\tconst files = testModules.map((testModule) => testModule.task), errors = [...unhandledErrors], projectErrors = new Array();\n\t\tfor (const error of errors) projectErrors.push({\n\t\t\tproject: this.ctx.getRootProject(),\n\t\t\ttitle: \"Unhandled error\",\n\t\t\terror\n\t\t});\n\t\tfor (const file of files) {\n\t\t\tconst tasks = getTasks(file), project = this.ctx.getProjectByName(file.projectName || \"\");\n\t\t\tfor (const task of tasks) {\n\t\t\t\tif (task.result?.state !== \"fail\") continue;\n\t\t\t\tconst title = getFullName(task, \" > \");\n\t\t\t\tfor (const error of task.result?.errors ?? []) projectErrors.push({\n\t\t\t\t\tproject,\n\t\t\t\t\ttitle,\n\t\t\t\t\terror,\n\t\t\t\t\tfile\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tconst onWritePath = this.options.onWritePath ?? defaultOnWritePath;\n\t\t// format errors via `printError`\n\t\tfor (const { project, title, error, file } of projectErrors) {\n\t\t\tconst result = capturePrintError(error, this.ctx, {\n\t\t\t\tproject,\n\t\t\t\ttask: file\n\t\t\t}), stack = result?.nearest;\n\t\t\tif (!stack) continue;\n\t\t\tconst formatted = formatMessage({\n\t\t\t\tcommand: \"error\",\n\t\t\t\tproperties: {\n\t\t\t\t\tfile: onWritePath(stack.file),\n\t\t\t\t\ttitle,\n\t\t\t\t\tline: String(stack.line),\n\t\t\t\t\tcolumn: String(stack.column)\n\t\t\t\t},\n\t\t\t\tmessage: stripVTControlCharacters(result.output)\n\t\t\t});\n\t\t\tthis.ctx.logger.log(`\\n${formatted}`);\n\t\t}\n\t}\n}\nconst BUILT_IN_TYPES = [\n\t\"notice\",\n\t\"error\",\n\t\"warning\"\n];\nfunction getTitle(type) {\n\tif (!BUILT_IN_TYPES.includes(type)) return type;\n}\nfunction getType(type) {\n\treturn BUILT_IN_TYPES.includes(type) ? type : \"notice\";\n}\nfunction defaultOnWritePath(path) {\n\treturn path;\n}\n// workflow command formatting based on\n// https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-error-message\n// https://github.com/actions/toolkit/blob/f1d9b4b985e6f0f728b4b766db73498403fd5ca3/packages/core/src/command.ts#L80-L85\nfunction formatMessage({ command, properties, message }) {\n\tlet result = `::${command}`;\n\treturn Object.entries(properties).forEach(([k, v], i) => {\n\t\tresult += i === 0 ? \" \" : \",\", result += `${k}=${escapeProperty(v)}`;\n\t}), result += `::${escapeData(message)}`, result;\n}\nfunction escapeData(s) {\n\treturn s.replace(/%/g, \"%25\").replace(/\\r/g, \"%0D\").replace(/\\n/g, \"%0A\");\n}\nfunction escapeProperty(s) {\n\treturn s.replace(/%/g, \"%25\").replace(/\\r/g, \"%0D\").replace(/\\n/g, \"%0A\").replace(/:/g, \"%3A\").replace(/,/g, \"%2C\");\n}\n\nclass HangingProcessReporter {\n\twhyRunning;\n\tonInit() {\n\t\tthis.whyRunning = createRequire(import.meta.url)(\"why-is-node-running\");\n\t}\n\tonProcessTimeout() {\n\t\tthis.whyRunning?.();\n\t}\n}\n\nconst StatusMap = {\n\tfail: \"failed\",\n\tonly: \"pending\",\n\tpass: \"passed\",\n\trun: \"pending\",\n\tskip: \"skipped\",\n\ttodo: \"todo\",\n\tqueued: \"pending\"\n};\nclass JsonReporter {\n\tstart = 0;\n\tctx;\n\toptions;\n\tcoverageMap;\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\tonInit(ctx) {\n\t\tthis.ctx = ctx, this.start = Date.now(), this.coverageMap = void 0;\n\t}\n\tonCoverage(coverageMap) {\n\t\tthis.coverageMap = coverageMap;\n\t}\n\tasync onTestRunEnd(testModules) {\n\t\tconst files = testModules.map((testModule) => testModule.task), suites = getSuites(files), numTotalTestSuites = suites.length, tests = getTests(files), numTotalTests = tests.length, numFailedTestSuites = suites.filter((s) => s.result?.state === \"fail\").length, numPendingTestSuites = suites.filter((s) => s.result?.state === \"run\" || s.result?.state === \"queued\" || s.mode === \"todo\").length, numPassedTestSuites = numTotalTestSuites - numFailedTestSuites - numPendingTestSuites, numFailedTests = tests.filter((t) => t.result?.state === \"fail\").length, numPassedTests = tests.filter((t) => t.result?.state === \"pass\").length, numPendingTests = tests.filter((t) => t.result?.state === \"run\" || t.result?.state === \"queued\" || t.mode === \"skip\" || t.result?.state === \"skip\").length, numTodoTests = tests.filter((t) => t.mode === \"todo\").length, testResults = [], success = !!(files.length > 0 || this.ctx.config.passWithNoTests) && numFailedTestSuites === 0 && numFailedTests === 0;\n\t\tfor (const file of files) {\n\t\t\tconst tests = getTests([file]);\n\t\t\tlet startTime = tests.reduce((prev, next) => Math.min(prev, next.result?.startTime ?? Number.POSITIVE_INFINITY), Number.POSITIVE_INFINITY);\n\t\t\tif (startTime === Number.POSITIVE_INFINITY) startTime = this.start;\n\t\t\tconst endTime = tests.reduce((prev, next) => Math.max(prev, (next.result?.startTime ?? 0) + (next.result?.duration ?? 0)), startTime), assertionResults = tests.map((t) => {\n\t\t\t\tconst ancestorTitles = [];\n\t\t\t\tlet iter = t.suite;\n\t\t\t\twhile (iter) ancestorTitles.push(iter.name), iter = iter.suite;\n\t\t\t\treturn ancestorTitles.reverse(), {\n\t\t\t\t\tancestorTitles,\n\t\t\t\t\tfullName: t.name ? [...ancestorTitles, t.name].join(\" \") : ancestorTitles.join(\" \"),\n\t\t\t\t\tstatus: StatusMap[t.result?.state || t.mode] || \"skipped\",\n\t\t\t\t\ttitle: t.name,\n\t\t\t\t\tduration: t.result?.duration,\n\t\t\t\t\tfailureMessages: t.result?.errors?.map((e) => e.stack || e.message) || [],\n\t\t\t\t\tlocation: t.location,\n\t\t\t\t\tmeta: t.meta\n\t\t\t\t};\n\t\t\t});\n\t\t\tif (tests.some((t) => t.result?.state === \"run\" || t.result?.state === \"queued\")) this.ctx.logger.warn(\"WARNING: Some tests are still running when generating the JSON report.This is likely an internal bug in Vitest.Please report it to https://github.com/vitest-dev/vitest/issues\");\n\t\t\tconst hasFailedTests = tests.some((t) => t.result?.state === \"fail\");\n\t\t\ttestResults.push({\n\t\t\t\tassertionResults,\n\t\t\t\tstartTime,\n\t\t\t\tendTime,\n\t\t\t\tstatus: file.result?.state === \"fail\" || hasFailedTests ? \"failed\" : \"passed\",\n\t\t\t\tmessage: file.result?.errors?.[0]?.message ?? \"\",\n\t\t\t\tname: file.filepath\n\t\t\t});\n\t\t}\n\t\tconst result = {\n\t\t\tnumTotalTestSuites,\n\t\t\tnumPassedTestSuites,\n\t\t\tnumFailedTestSuites,\n\t\t\tnumPendingTestSuites,\n\t\t\tnumTotalTests,\n\t\t\tnumPassedTests,\n\t\t\tnumFailedTests,\n\t\t\tnumPendingTests,\n\t\t\tnumTodoTests,\n\t\t\tsnapshot: this.ctx.snapshot.summary,\n\t\t\tstartTime: this.start,\n\t\t\tsuccess,\n\t\t\ttestResults,\n\t\t\tcoverageMap: this.coverageMap\n\t\t};\n\t\tawait this.writeReport(JSON.stringify(result));\n\t}\n\t/**\n\t* Writes the report to an output file if specified in the config,\n\t* or logs it to the console otherwise.\n\t* @param report\n\t*/\n\tasync writeReport(report) {\n\t\tconst outputFile = this.options.outputFile ?? getOutputFile(this.ctx.config, \"json\");\n\t\tif (outputFile) {\n\t\t\tconst reportFile = resolve$1(this.ctx.config.root, outputFile), outputDirectory = dirname(reportFile);\n\t\t\tif (!existsSync(outputDirectory)) await promises.mkdir(outputDirectory, { recursive: true });\n\t\t\tawait promises.writeFile(reportFile, report, \"utf-8\"), this.ctx.logger.log(`JSON report written to ${reportFile}`);\n\t\t} else this.ctx.logger.log(report);\n\t}\n}\n\nclass IndentedLogger {\n\tcurrentIndent = \"\";\n\tconstructor(baseLog) {\n\t\tthis.baseLog = baseLog;\n\t}\n\tindent() {\n\t\tthis.currentIndent += \"    \";\n\t}\n\tunindent() {\n\t\tthis.currentIndent = this.currentIndent.substring(0, this.currentIndent.length - 4);\n\t}\n\tlog(text) {\n\t\treturn this.baseLog(this.currentIndent + text);\n\t}\n}\n\nfunction flattenTasks$1(task, baseName = \"\") {\n\tconst base = baseName ? `${baseName} > ` : \"\";\n\treturn task.type === \"suite\" ? task.tasks.flatMap((child) => flattenTasks$1(child, `${base}${task.name}`)) : [{\n\t\t...task,\n\t\tname: `${base}${task.name}`\n\t}];\n}\n// https://gist.github.com/john-doherty/b9195065884cdbfd2017a4756e6409cc\nfunction removeInvalidXMLCharacters(value, removeDiscouragedChars) {\n\tlet regex = /([\\0-\\x08\\v\\f\\x0E-\\x1F\\uFFFD\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\n\tif (value = String(value || \"\").replace(regex, \"\"), removeDiscouragedChars) regex = new RegExp(\n\t\t/* eslint-disable regexp/prefer-character-class, regexp/no-obscure-range, regexp/no-useless-non-capturing-group */\n\t\t\"([\\\\x7F-\\\\x84]|[\\\\x86-\\\\x9F]|[\\\\uFDD0-\\\\uFDEF]|\\\\uD83F[\\\\uDFFE\\\\uDFFF]|(?:\\\\uD87F[\\\\uDFFE\\\\uDFFF])|\\\\uD8BF[\\\\uDFFE\\\\uDFFF]|\\\\uD8FF[\\\\uDFFE\\\\uDFFF]|(?:\\\\uD93F[\\\\uDFFE\\\\uDFFF])|\\\\uD97F[\\\\uDFFE\\\\uDFFF]|\\\\uD9BF[\\\\uDFFE\\\\uDFFF]|\\\\uD9FF[\\\\uDFFE\\\\uDFFF]|\\\\uDA3F[\\\\uDFFE\\\\uDFFF]|\\\\uDA7F[\\\\uDFFE\\\\uDFFF]|\\\\uDABF[\\\\uDFFE\\\\uDFFF]|(?:\\\\uDAFF[\\\\uDFFE\\\\uDFFF])|\\\\uDB3F[\\\\uDFFE\\\\uDFFF]|\\\\uDB7F[\\\\uDFFE\\\\uDFFF]|(?:\\\\uDBBF[\\\\uDFFE\\\\uDFFF])|\\\\uDBFF[\\\\uDFFE\\\\uDFFF](?:[\\\\0-\\\\t\\\\v\\\\f\\\\x0E-\\\\u2027\\\\u202A-\\\\uD7FF\\\\uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF]))\",\n\t\t\"g\"\n\t\t/* eslint-enable */\n\t), value = value.replace(regex, \"\");\n\treturn value;\n}\nfunction escapeXML(value) {\n\treturn removeInvalidXMLCharacters(String(value).replace(/&/g, \"&amp;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\"), true);\n}\nfunction executionTime(durationMS) {\n\treturn (durationMS / 1e3).toLocaleString(\"en-US\", {\n\t\tuseGrouping: false,\n\t\tmaximumFractionDigits: 10\n\t});\n}\nfunction getDuration(task) {\n\tconst duration = task.result?.duration ?? 0;\n\treturn executionTime(duration);\n}\nclass JUnitReporter {\n\tctx;\n\treportFile;\n\tbaseLog;\n\tlogger;\n\t_timeStart = /* @__PURE__ */ new Date();\n\tfileFd;\n\toptions;\n\tconstructor(options) {\n\t\tthis.options = { ...options }, this.options.includeConsoleOutput ??= true;\n\t}\n\tasync onInit(ctx) {\n\t\tthis.ctx = ctx;\n\t\tconst outputFile = this.options.outputFile ?? getOutputFile(this.ctx.config, \"junit\");\n\t\tif (outputFile) {\n\t\t\tthis.reportFile = resolve$1(this.ctx.config.root, outputFile);\n\t\t\tconst outputDirectory = dirname(this.reportFile);\n\t\t\tif (!existsSync(outputDirectory)) await promises.mkdir(outputDirectory, { recursive: true });\n\t\t\tthis.fileFd = await promises.open(this.reportFile, \"w+\"), this.baseLog = async (text) => {\n\t\t\t\tif (!this.fileFd) this.fileFd = await promises.open(this.reportFile, \"w+\");\n\t\t\t\tawait promises.writeFile(this.fileFd, `${text}\\n`);\n\t\t\t};\n\t\t} else this.baseLog = async (text) => this.ctx.logger.log(text);\n\t\tthis._timeStart = /* @__PURE__ */ new Date(), this.logger = new IndentedLogger(this.baseLog);\n\t}\n\tasync writeElement(name, attrs, children) {\n\t\tconst pairs = [];\n\t\tfor (const key in attrs) {\n\t\t\tconst attr = attrs[key];\n\t\t\tif (attr === void 0) continue;\n\t\t\tpairs.push(`${key}=\"${escapeXML(attr)}\"`);\n\t\t}\n\t\tawait this.logger.log(`<${name}${pairs.length ? ` ${pairs.join(\" \")}` : \"\"}>`), this.logger.indent(), await children.call(this), this.logger.unindent(), await this.logger.log(`</${name}>`);\n\t}\n\tasync writeLogs(task, type) {\n\t\tif (task.logs == null || task.logs.length === 0) return;\n\t\tconst logType = type === \"err\" ? \"stderr\" : \"stdout\", logs = task.logs.filter((log) => log.type === logType);\n\t\tlogs.length !== 0 && await this.writeElement(`system-${type}`, {}, async () => {\n\t\t\tfor (const log of logs) await this.baseLog(escapeXML(log.content));\n\t\t});\n\t}\n\tasync writeTasks(tasks, filename) {\n\t\tfor (const task of tasks) {\n\t\t\tlet classname = filename;\n\t\t\tconst templateVars = {\n\t\t\t\tfilename: task.file.name,\n\t\t\t\tfilepath: task.file.filepath\n\t\t\t};\n\t\t\tif (typeof this.options.classnameTemplate === \"function\") classname = this.options.classnameTemplate(templateVars);\n\t\t\telse if (typeof this.options.classnameTemplate === \"string\") classname = this.options.classnameTemplate.replace(/\\{filename\\}/g, templateVars.filename).replace(/\\{filepath\\}/g, templateVars.filepath);\n\t\t\tawait this.writeElement(\"testcase\", {\n\t\t\t\tclassname,\n\t\t\t\tfile: this.options.addFileAttribute ? filename : void 0,\n\t\t\t\tname: task.name,\n\t\t\t\ttime: getDuration(task)\n\t\t\t}, async () => {\n\t\t\t\tif (this.options.includeConsoleOutput) await this.writeLogs(task, \"out\"), await this.writeLogs(task, \"err\");\n\t\t\t\tif (task.mode === \"skip\" || task.mode === \"todo\") await this.logger.log(\"<skipped/>\");\n\t\t\t\tif (task.type === \"test\" && task.annotations.length) {\n\t\t\t\t\tawait this.logger.log(\"<properties>\"), this.logger.indent();\n\t\t\t\t\tfor (const annotation of task.annotations) await this.logger.log(`<property name=\"${escapeXML(annotation.type)}\" value=\"${escapeXML(annotation.message)}\">`), await this.logger.log(\"</property>\");\n\t\t\t\t\tthis.logger.unindent(), await this.logger.log(\"</properties>\");\n\t\t\t\t}\n\t\t\t\tif (task.result?.state === \"fail\") {\n\t\t\t\t\tconst errors = task.result.errors || [];\n\t\t\t\t\tfor (const error of errors) await this.writeElement(\"failure\", {\n\t\t\t\t\t\tmessage: error?.message,\n\t\t\t\t\t\ttype: error?.name\n\t\t\t\t\t}, async () => {\n\t\t\t\t\t\tif (!error) return;\n\t\t\t\t\t\tconst result = capturePrintError(error, this.ctx, {\n\t\t\t\t\t\t\tproject: this.ctx.getProjectByName(task.file.projectName || \"\"),\n\t\t\t\t\t\t\ttask\n\t\t\t\t\t\t});\n\t\t\t\t\t\tawait this.baseLog(escapeXML(stripVTControlCharacters(result.output.trim())));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\tasync onTestRunEnd(testModules) {\n\t\tconst files = testModules.map((testModule) => testModule.task);\n\t\tawait this.logger.log(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\");\n\t\tconst transformed = files.map((file) => {\n\t\t\tconst tasks = file.tasks.flatMap((task) => flattenTasks$1(task)), stats = tasks.reduce((stats, task) => {\n\t\t\t\treturn {\n\t\t\t\t\tpassed: stats.passed + Number(task.result?.state === \"pass\"),\n\t\t\t\t\tfailures: stats.failures + Number(task.result?.state === \"fail\"),\n\t\t\t\t\tskipped: stats.skipped + Number(task.mode === \"skip\" || task.mode === \"todo\")\n\t\t\t\t};\n\t\t\t}, {\n\t\t\t\tpassed: 0,\n\t\t\t\tfailures: 0,\n\t\t\t\tskipped: 0\n\t\t\t}), suites = getSuites(file);\n\t\t\tfor (const suite of suites) if (suite.result?.errors) tasks.push(suite), stats.failures += 1;\n\t\t\t// If there are no tests, but the file failed to load, we still want to report it as a failure\n\t\t\tif (tasks.length === 0 && file.result?.state === \"fail\") stats.failures = 1, tasks.push({\n\t\t\t\tid: file.id,\n\t\t\t\ttype: \"test\",\n\t\t\t\tname: file.name,\n\t\t\t\tmode: \"run\",\n\t\t\t\tresult: file.result,\n\t\t\t\tmeta: {},\n\t\t\t\ttimeout: 0,\n\t\t\t\tcontext: null,\n\t\t\t\tsuite: null,\n\t\t\t\tfile: null,\n\t\t\t\tannotations: []\n\t\t\t});\n\t\t\treturn {\n\t\t\t\t...file,\n\t\t\t\ttasks,\n\t\t\t\tstats\n\t\t\t};\n\t\t}), stats = transformed.reduce((stats, file) => {\n\t\t\treturn stats.tests += file.tasks.length, stats.failures += file.stats.failures, stats.time += file.result?.duration || 0, stats;\n\t\t}, {\n\t\t\tname: this.options.suiteName || \"vitest tests\",\n\t\t\ttests: 0,\n\t\t\tfailures: 0,\n\t\t\terrors: 0,\n\t\t\ttime: 0\n\t\t});\n\t\tif (await this.writeElement(\"testsuites\", {\n\t\t\t...stats,\n\t\t\ttime: executionTime(stats.time)\n\t\t}, async () => {\n\t\t\tfor (const file of transformed) {\n\t\t\t\tconst filename = relative(this.ctx.config.root, file.filepath);\n\t\t\t\tawait this.writeElement(\"testsuite\", {\n\t\t\t\t\tname: filename,\n\t\t\t\t\ttimestamp: (/* @__PURE__ */ new Date()).toISOString(),\n\t\t\t\t\thostname: hostname(),\n\t\t\t\t\ttests: file.tasks.length,\n\t\t\t\t\tfailures: file.stats.failures,\n\t\t\t\t\terrors: 0,\n\t\t\t\t\tskipped: file.stats.skipped,\n\t\t\t\t\ttime: getDuration(file)\n\t\t\t\t}, async () => {\n\t\t\t\t\tawait this.writeTasks(file.tasks, filename);\n\t\t\t\t});\n\t\t\t}\n\t\t}), this.reportFile) this.ctx.logger.log(`JUNIT report written to ${this.reportFile}`);\n\t\tawait this.fileFd?.close(), this.fileFd = void 0;\n\t}\n}\n\nfunction yamlString(str) {\n\treturn str ? `\"${str.replace(/\"/g, \"\\\\\\\"\")}\"` : \"\";\n}\nfunction tapString(str) {\n\treturn str.replace(/\\\\/g, \"\\\\\\\\\").replace(/#/g, \"\\\\#\").replace(/\\n/g, \" \");\n}\nclass TapReporter {\n\tctx;\n\tlogger;\n\tonInit(ctx) {\n\t\tthis.ctx = ctx, this.logger = new IndentedLogger(ctx.logger.log.bind(ctx.logger));\n\t}\n\tstatic getComment(task) {\n\t\treturn task.mode === \"skip\" ? \" # SKIP\" : task.mode === \"todo\" ? \" # TODO\" : task.result?.duration == null ? \"\" : ` # time=${task.result.duration.toFixed(2)}ms`;\n\t}\n\tlogErrorDetails(error, stack) {\n\t\tconst errorName = error.name || \"Unknown Error\";\n\t\tif (this.logger.log(`name: ${yamlString(String(errorName))}`), this.logger.log(`message: ${yamlString(String(error.message))}`), stack)\n // For compatibility with tap-mocha-reporter\n\t\tthis.logger.log(`stack: ${yamlString(`${stack.file}:${stack.line}:${stack.column}`)}`);\n\t}\n\tlogTasks(tasks) {\n\t\tthis.logger.log(`1..${tasks.length}`);\n\t\tfor (const [i, task] of tasks.entries()) {\n\t\t\tconst id = i + 1, ok = task.result?.state === \"pass\" || task.mode === \"skip\" || task.mode === \"todo\" ? \"ok\" : \"not ok\", comment = TapReporter.getComment(task);\n\t\t\tif (task.type === \"suite\" && task.tasks.length > 0) this.logger.log(`${ok} ${id} - ${tapString(task.name)}${comment} {`), this.logger.indent(), this.logTasks(task.tasks), this.logger.unindent(), this.logger.log(\"}\");\n\t\t\telse {\n\t\t\t\tthis.logger.log(`${ok} ${id} - ${tapString(task.name)}${comment}`);\n\t\t\t\tconst project = this.ctx.getProjectByName(task.file.projectName || \"\");\n\t\t\t\tif (task.type === \"test\" && task.annotations) this.logger.indent(), task.annotations.forEach(({ type, message }) => {\n\t\t\t\t\tthis.logger.log(`# ${type}: ${message}`);\n\t\t\t\t}), this.logger.unindent();\n\t\t\t\tif (task.result?.state === \"fail\" && task.result.errors) this.logger.indent(), task.result.errors.forEach((error) => {\n\t\t\t\t\tconst stack = (task.file.pool === \"browser\" ? project.browser?.parseErrorStacktrace(error) || [] : parseErrorStacktrace(error, { frameFilter: this.ctx.config.onStackTrace }))[0];\n\t\t\t\t\tif (this.logger.log(\"---\"), this.logger.log(\"error:\"), this.logger.indent(), this.logErrorDetails(error), this.logger.unindent(), stack) this.logger.log(`at: ${yamlString(`${stack.file}:${stack.line}:${stack.column}`)}`);\n\t\t\t\t\tif (error.showDiff) this.logger.log(`actual: ${yamlString(error.actual)}`), this.logger.log(`expected: ${yamlString(error.expected)}`);\n\t\t\t\t}), this.logger.log(\"...\"), this.logger.unindent();\n\t\t\t}\n\t\t}\n\t}\n\tonTestRunEnd(testModules) {\n\t\tconst files = testModules.map((testModule) => testModule.task);\n\t\tthis.logger.log(\"TAP version 13\"), this.logTasks(files);\n\t}\n}\n\nfunction flattenTasks(task, baseName = \"\") {\n\tconst base = baseName ? `${baseName} > ` : \"\";\n\treturn task.type === \"suite\" && task.tasks.length > 0 ? task.tasks.flatMap((child) => flattenTasks(child, `${base}${task.name}`)) : [{\n\t\t...task,\n\t\tname: `${base}${task.name}`\n\t}];\n}\nclass TapFlatReporter extends TapReporter {\n\tonInit(ctx) {\n\t\tsuper.onInit(ctx);\n\t}\n\tonTestRunEnd(testModules) {\n\t\tthis.ctx.logger.log(\"TAP version 13\");\n\t\tconst flatTasks = testModules.flatMap((testModule) => flattenTasks(testModule.task));\n\t\tthis.logTasks(flatTasks);\n\t}\n}\n\nclass TreeReporter extends DefaultReporter {\n\tverbose = true;\n\trenderSucceed = true;\n}\n\nclass VerboseReporter extends DefaultReporter {\n\tverbose = true;\n\trenderSucceed = true;\n\tprintTestModule(_module) {\n\t\t// don't print test module, only print tests\n\t}\n\tonTestCaseResult(test) {\n\t\tsuper.onTestCaseResult(test);\n\t\tconst testResult = test.result();\n\t\tif (this.ctx.config.hideSkippedTests && testResult.state === \"skipped\") return;\n\t\tlet title = ` ${this.getEntityPrefix(test)} `;\n\t\tif (title += test.module.task.name, test.location) title += c.dim(`:${test.location.line}:${test.location.column}`);\n\t\tif (title += separator, title += getTestName(test.task, separator), title += this.getTestCaseSuffix(test), this.log(title), testResult.state === \"failed\") testResult.errors.forEach((error) => this.log(c.red(`   ${F_RIGHT} ${error.message}`)));\n\t\tif (test.annotations().length) this.log(), this.printAnnotations(test, \"log\", 3), this.log();\n\t}\n}\n\nconst ReportersMap = {\n\t\"default\": DefaultReporter,\n\t\"blob\": BlobReporter,\n\t\"verbose\": VerboseReporter,\n\t\"dot\": DotReporter,\n\t\"json\": JsonReporter,\n\t\"tap\": TapReporter,\n\t\"tap-flat\": TapFlatReporter,\n\t\"junit\": JUnitReporter,\n\t\"tree\": TreeReporter,\n\t\"hanging-process\": HangingProcessReporter,\n\t\"github-actions\": GithubActionsReporter\n};\n\nexport { BlobReporter as B, DefaultReporter as D, F_RIGHT as F, GithubActionsReporter as G, HangingProcessReporter as H, JsonReporter as J, ReportersMap as R, TapFlatReporter as T, VerboseReporter as V, DotReporter as a, JUnitReporter as b, TapReporter as c, stringify as d, TraceMap as e, formatProjectName as f, getStateSymbol as g, ancestor as h, printError as i, errorBanner as j, divider as k, Typechecker as l, generateCodeFrame as m, createDefinesScript as n, originalPositionFor as o, parse$1 as p, convertTasksToEvents as q, readBlobs as r, separator as s, truncateString as t, utils as u, withLabel as w };\n", "import styles from 'tinyrainbow';\n\nfunction _mergeNamespaces(n, m) {\n  m.forEach(function (e) {\n    e && typeof e !== 'string' && !Array.isArray(e) && Object.keys(e).forEach(function (k) {\n      if (k !== 'default' && !(k in n)) {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () { return e[k]; }\n        });\n      }\n    });\n  });\n  return Object.freeze(n);\n}\n\nfunction getKeysOfEnumerableProperties(object, compareKeys) {\n\tconst rawKeys = Object.keys(object);\n\tconst keys = compareKeys === null ? rawKeys : rawKeys.sort(compareKeys);\n\tif (Object.getOwnPropertySymbols) {\n\t\tfor (const symbol of Object.getOwnPropertySymbols(object)) {\n\t\t\tif (Object.getOwnPropertyDescriptor(object, symbol).enumerable) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\treturn keys;\n}\n/**\n* Return entries (for example, of a map)\n* with spacing, indentation, and comma\n* without surrounding punctuation (for example, braces)\n*/\nfunction printIteratorEntries(iterator, config, indentation, depth, refs, printer, separator = \": \") {\n\tlet result = \"\";\n\tlet width = 0;\n\tlet current = iterator.next();\n\tif (!current.done) {\n\t\tresult += config.spacingOuter;\n\t\tconst indentationNext = indentation + config.indent;\n\t\twhile (!current.done) {\n\t\t\tresult += indentationNext;\n\t\t\tif (width++ === config.maxWidth) {\n\t\t\t\tresult += \"…\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst name = printer(current.value[0], config, indentationNext, depth, refs);\n\t\t\tconst value = printer(current.value[1], config, indentationNext, depth, refs);\n\t\t\tresult += name + separator + value;\n\t\t\tcurrent = iterator.next();\n\t\t\tif (!current.done) {\n\t\t\t\tresult += `,${config.spacingInner}`;\n\t\t\t} else if (!config.min) {\n\t\t\t\tresult += \",\";\n\t\t\t}\n\t\t}\n\t\tresult += config.spacingOuter + indentation;\n\t}\n\treturn result;\n}\n/**\n* Return values (for example, of a set)\n* with spacing, indentation, and comma\n* without surrounding punctuation (braces or brackets)\n*/\nfunction printIteratorValues(iterator, config, indentation, depth, refs, printer) {\n\tlet result = \"\";\n\tlet width = 0;\n\tlet current = iterator.next();\n\tif (!current.done) {\n\t\tresult += config.spacingOuter;\n\t\tconst indentationNext = indentation + config.indent;\n\t\twhile (!current.done) {\n\t\t\tresult += indentationNext;\n\t\t\tif (width++ === config.maxWidth) {\n\t\t\t\tresult += \"…\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tresult += printer(current.value, config, indentationNext, depth, refs);\n\t\t\tcurrent = iterator.next();\n\t\t\tif (!current.done) {\n\t\t\t\tresult += `,${config.spacingInner}`;\n\t\t\t} else if (!config.min) {\n\t\t\t\tresult += \",\";\n\t\t\t}\n\t\t}\n\t\tresult += config.spacingOuter + indentation;\n\t}\n\treturn result;\n}\n/**\n* Return items (for example, of an array)\n* with spacing, indentation, and comma\n* without surrounding punctuation (for example, brackets)\n*/\nfunction printListItems(list, config, indentation, depth, refs, printer) {\n\tlet result = \"\";\n\tlist = list instanceof ArrayBuffer ? new DataView(list) : list;\n\tconst isDataView = (l) => l instanceof DataView;\n\tconst length = isDataView(list) ? list.byteLength : list.length;\n\tif (length > 0) {\n\t\tresult += config.spacingOuter;\n\t\tconst indentationNext = indentation + config.indent;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tresult += indentationNext;\n\t\t\tif (i === config.maxWidth) {\n\t\t\t\tresult += \"…\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (isDataView(list) || i in list) {\n\t\t\t\tresult += printer(isDataView(list) ? list.getInt8(i) : list[i], config, indentationNext, depth, refs);\n\t\t\t}\n\t\t\tif (i < length - 1) {\n\t\t\t\tresult += `,${config.spacingInner}`;\n\t\t\t} else if (!config.min) {\n\t\t\t\tresult += \",\";\n\t\t\t}\n\t\t}\n\t\tresult += config.spacingOuter + indentation;\n\t}\n\treturn result;\n}\n/**\n* Return properties of an object\n* with spacing, indentation, and comma\n* without surrounding punctuation (for example, braces)\n*/\nfunction printObjectProperties(val, config, indentation, depth, refs, printer) {\n\tlet result = \"\";\n\tconst keys = getKeysOfEnumerableProperties(val, config.compareKeys);\n\tif (keys.length > 0) {\n\t\tresult += config.spacingOuter;\n\t\tconst indentationNext = indentation + config.indent;\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst key = keys[i];\n\t\t\tconst name = printer(key, config, indentationNext, depth, refs);\n\t\t\tconst value = printer(val[key], config, indentationNext, depth, refs);\n\t\t\tresult += `${indentationNext + name}: ${value}`;\n\t\t\tif (i < keys.length - 1) {\n\t\t\t\tresult += `,${config.spacingInner}`;\n\t\t\t} else if (!config.min) {\n\t\t\t\tresult += \",\";\n\t\t\t}\n\t\t}\n\t\tresult += config.spacingOuter + indentation;\n\t}\n\treturn result;\n}\n\nconst asymmetricMatcher = typeof Symbol === \"function\" && Symbol.for ? Symbol.for(\"jest.asymmetricMatcher\") : 1267621;\nconst SPACE$2 = \" \";\nconst serialize$5 = (val, config, indentation, depth, refs, printer) => {\n\tconst stringedValue = val.toString();\n\tif (stringedValue === \"ArrayContaining\" || stringedValue === \"ArrayNotContaining\") {\n\t\tif (++depth > config.maxDepth) {\n\t\t\treturn `[${stringedValue}]`;\n\t\t}\n\t\treturn `${stringedValue + SPACE$2}[${printListItems(val.sample, config, indentation, depth, refs, printer)}]`;\n\t}\n\tif (stringedValue === \"ObjectContaining\" || stringedValue === \"ObjectNotContaining\") {\n\t\tif (++depth > config.maxDepth) {\n\t\t\treturn `[${stringedValue}]`;\n\t\t}\n\t\treturn `${stringedValue + SPACE$2}{${printObjectProperties(val.sample, config, indentation, depth, refs, printer)}}`;\n\t}\n\tif (stringedValue === \"StringMatching\" || stringedValue === \"StringNotMatching\") {\n\t\treturn stringedValue + SPACE$2 + printer(val.sample, config, indentation, depth, refs);\n\t}\n\tif (stringedValue === \"StringContaining\" || stringedValue === \"StringNotContaining\") {\n\t\treturn stringedValue + SPACE$2 + printer(val.sample, config, indentation, depth, refs);\n\t}\n\tif (typeof val.toAsymmetricMatcher !== \"function\") {\n\t\tthrow new TypeError(`Asymmetric matcher ${val.constructor.name} does not implement toAsymmetricMatcher()`);\n\t}\n\treturn val.toAsymmetricMatcher();\n};\nconst test$5 = (val) => val && val.$$typeof === asymmetricMatcher;\nconst plugin$5 = {\n\tserialize: serialize$5,\n\ttest: test$5\n};\n\nconst SPACE$1 = \" \";\nconst OBJECT_NAMES = new Set([\"DOMStringMap\", \"NamedNodeMap\"]);\nconst ARRAY_REGEXP = /^(?:HTML\\w*Collection|NodeList)$/;\nfunction testName(name) {\n\treturn OBJECT_NAMES.has(name) || ARRAY_REGEXP.test(name);\n}\nconst test$4 = (val) => val && val.constructor && !!val.constructor.name && testName(val.constructor.name);\nfunction isNamedNodeMap(collection) {\n\treturn collection.constructor.name === \"NamedNodeMap\";\n}\nconst serialize$4 = (collection, config, indentation, depth, refs, printer) => {\n\tconst name = collection.constructor.name;\n\tif (++depth > config.maxDepth) {\n\t\treturn `[${name}]`;\n\t}\n\treturn (config.min ? \"\" : name + SPACE$1) + (OBJECT_NAMES.has(name) ? `{${printObjectProperties(isNamedNodeMap(collection) ? [...collection].reduce((props, attribute) => {\n\t\tprops[attribute.name] = attribute.value;\n\t\treturn props;\n\t}, {}) : { ...collection }, config, indentation, depth, refs, printer)}}` : `[${printListItems([...collection], config, indentation, depth, refs, printer)}]`);\n};\nconst plugin$4 = {\n\tserialize: serialize$4,\n\ttest: test$4\n};\n\n/**\n* Copyright (c) Meta Platforms, Inc. and affiliates.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\nfunction escapeHTML(str) {\n\treturn str.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\n}\n\n// Return empty string if keys is empty.\nfunction printProps(keys, props, config, indentation, depth, refs, printer) {\n\tconst indentationNext = indentation + config.indent;\n\tconst colors = config.colors;\n\treturn keys.map((key) => {\n\t\tconst value = props[key];\n\t\tlet printed = printer(value, config, indentationNext, depth, refs);\n\t\tif (typeof value !== \"string\") {\n\t\t\tif (printed.includes(\"\\n\")) {\n\t\t\t\tprinted = config.spacingOuter + indentationNext + printed + config.spacingOuter + indentation;\n\t\t\t}\n\t\t\tprinted = `{${printed}}`;\n\t\t}\n\t\treturn `${config.spacingInner + indentation + colors.prop.open + key + colors.prop.close}=${colors.value.open}${printed}${colors.value.close}`;\n\t}).join(\"\");\n}\n// Return empty string if children is empty.\nfunction printChildren(children, config, indentation, depth, refs, printer) {\n\treturn children.map((child) => config.spacingOuter + indentation + (typeof child === \"string\" ? printText(child, config) : printer(child, config, indentation, depth, refs))).join(\"\");\n}\nfunction printShadowRoot(children, config, indentation, depth, refs, printer) {\n\tif (config.printShadowRoot === false) {\n\t\treturn \"\";\n\t}\n\treturn [`${config.spacingOuter + indentation}#shadow-root`, printChildren(children, config, indentation + config.indent, depth, refs, printer)].join(\"\");\n}\nfunction printText(text, config) {\n\tconst contentColor = config.colors.content;\n\treturn contentColor.open + escapeHTML(text) + contentColor.close;\n}\nfunction printComment(comment, config) {\n\tconst commentColor = config.colors.comment;\n\treturn `${commentColor.open}<!--${escapeHTML(comment)}-->${commentColor.close}`;\n}\n// Separate the functions to format props, children, and element,\n// so a plugin could override a particular function, if needed.\n// Too bad, so sad: the traditional (but unnecessary) space\n// in a self-closing tagColor requires a second test of printedProps.\nfunction printElement(type, printedProps, printedChildren, config, indentation) {\n\tconst tagColor = config.colors.tag;\n\treturn `${tagColor.open}<${type}${printedProps && tagColor.close + printedProps + config.spacingOuter + indentation + tagColor.open}${printedChildren ? `>${tagColor.close}${printedChildren}${config.spacingOuter}${indentation}${tagColor.open}</${type}` : `${printedProps && !config.min ? \"\" : \" \"}/`}>${tagColor.close}`;\n}\nfunction printElementAsLeaf(type, config) {\n\tconst tagColor = config.colors.tag;\n\treturn `${tagColor.open}<${type}${tagColor.close} …${tagColor.open} />${tagColor.close}`;\n}\n\nconst ELEMENT_NODE = 1;\nconst TEXT_NODE = 3;\nconst COMMENT_NODE = 8;\nconst FRAGMENT_NODE = 11;\nconst ELEMENT_REGEXP = /^(?:(?:HTML|SVG)\\w*)?Element$/;\nfunction testHasAttribute(val) {\n\ttry {\n\t\treturn typeof val.hasAttribute === \"function\" && val.hasAttribute(\"is\");\n\t} catch {\n\t\treturn false;\n\t}\n}\nfunction testNode(val) {\n\tconst constructorName = val.constructor.name;\n\tconst { nodeType, tagName } = val;\n\tconst isCustomElement = typeof tagName === \"string\" && tagName.includes(\"-\") || testHasAttribute(val);\n\treturn nodeType === ELEMENT_NODE && (ELEMENT_REGEXP.test(constructorName) || isCustomElement) || nodeType === TEXT_NODE && constructorName === \"Text\" || nodeType === COMMENT_NODE && constructorName === \"Comment\" || nodeType === FRAGMENT_NODE && constructorName === \"DocumentFragment\";\n}\nconst test$3 = (val) => val?.constructor?.name && testNode(val);\nfunction nodeIsText(node) {\n\treturn node.nodeType === TEXT_NODE;\n}\nfunction nodeIsComment(node) {\n\treturn node.nodeType === COMMENT_NODE;\n}\nfunction nodeIsFragment(node) {\n\treturn node.nodeType === FRAGMENT_NODE;\n}\nconst serialize$3 = (node, config, indentation, depth, refs, printer) => {\n\tif (nodeIsText(node)) {\n\t\treturn printText(node.data, config);\n\t}\n\tif (nodeIsComment(node)) {\n\t\treturn printComment(node.data, config);\n\t}\n\tconst type = nodeIsFragment(node) ? \"DocumentFragment\" : node.tagName.toLowerCase();\n\tif (++depth > config.maxDepth) {\n\t\treturn printElementAsLeaf(type, config);\n\t}\n\treturn printElement(type, printProps(nodeIsFragment(node) ? [] : Array.from(node.attributes, (attr) => attr.name).sort(), nodeIsFragment(node) ? {} : [...node.attributes].reduce((props, attribute) => {\n\t\tprops[attribute.name] = attribute.value;\n\t\treturn props;\n\t}, {}), config, indentation + config.indent, depth, refs, printer), (nodeIsFragment(node) || !node.shadowRoot ? \"\" : printShadowRoot(Array.prototype.slice.call(node.shadowRoot.children), config, indentation + config.indent, depth, refs, printer)) + printChildren(Array.prototype.slice.call(node.childNodes || node.children), config, indentation + config.indent, depth, refs, printer), config, indentation);\n};\nconst plugin$3 = {\n\tserialize: serialize$3,\n\ttest: test$3\n};\n\n// SENTINEL constants are from https://github.com/facebook/immutable-js\nconst IS_ITERABLE_SENTINEL = \"@@__IMMUTABLE_ITERABLE__@@\";\nconst IS_LIST_SENTINEL = \"@@__IMMUTABLE_LIST__@@\";\nconst IS_KEYED_SENTINEL = \"@@__IMMUTABLE_KEYED__@@\";\nconst IS_MAP_SENTINEL = \"@@__IMMUTABLE_MAP__@@\";\nconst IS_ORDERED_SENTINEL = \"@@__IMMUTABLE_ORDERED__@@\";\nconst IS_RECORD_SENTINEL = \"@@__IMMUTABLE_RECORD__@@\";\nconst IS_SEQ_SENTINEL = \"@@__IMMUTABLE_SEQ__@@\";\nconst IS_SET_SENTINEL = \"@@__IMMUTABLE_SET__@@\";\nconst IS_STACK_SENTINEL = \"@@__IMMUTABLE_STACK__@@\";\nconst getImmutableName = (name) => `Immutable.${name}`;\nconst printAsLeaf = (name) => `[${name}]`;\nconst SPACE = \" \";\nconst LAZY = \"…\";\nfunction printImmutableEntries(val, config, indentation, depth, refs, printer, type) {\n\treturn ++depth > config.maxDepth ? printAsLeaf(getImmutableName(type)) : `${getImmutableName(type) + SPACE}{${printIteratorEntries(val.entries(), config, indentation, depth, refs, printer)}}`;\n}\n// Record has an entries method because it is a collection in immutable v3.\n// Return an iterator for Immutable Record from version v3 or v4.\nfunction getRecordEntries(val) {\n\tlet i = 0;\n\treturn { next() {\n\t\tif (i < val._keys.length) {\n\t\t\tconst key = val._keys[i++];\n\t\t\treturn {\n\t\t\t\tdone: false,\n\t\t\t\tvalue: [key, val.get(key)]\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tdone: true,\n\t\t\tvalue: undefined\n\t\t};\n\t} };\n}\nfunction printImmutableRecord(val, config, indentation, depth, refs, printer) {\n\t// _name property is defined only for an Immutable Record instance\n\t// which was constructed with a second optional descriptive name arg\n\tconst name = getImmutableName(val._name || \"Record\");\n\treturn ++depth > config.maxDepth ? printAsLeaf(name) : `${name + SPACE}{${printIteratorEntries(getRecordEntries(val), config, indentation, depth, refs, printer)}}`;\n}\nfunction printImmutableSeq(val, config, indentation, depth, refs, printer) {\n\tconst name = getImmutableName(\"Seq\");\n\tif (++depth > config.maxDepth) {\n\t\treturn printAsLeaf(name);\n\t}\n\tif (val[IS_KEYED_SENTINEL]) {\n\t\treturn `${name + SPACE}{${val._iter || val._object ? printIteratorEntries(val.entries(), config, indentation, depth, refs, printer) : LAZY}}`;\n\t}\n\treturn `${name + SPACE}[${val._iter || val._array || val._collection || val._iterable ? printIteratorValues(val.values(), config, indentation, depth, refs, printer) : LAZY}]`;\n}\nfunction printImmutableValues(val, config, indentation, depth, refs, printer, type) {\n\treturn ++depth > config.maxDepth ? printAsLeaf(getImmutableName(type)) : `${getImmutableName(type) + SPACE}[${printIteratorValues(val.values(), config, indentation, depth, refs, printer)}]`;\n}\nconst serialize$2 = (val, config, indentation, depth, refs, printer) => {\n\tif (val[IS_MAP_SENTINEL]) {\n\t\treturn printImmutableEntries(val, config, indentation, depth, refs, printer, val[IS_ORDERED_SENTINEL] ? \"OrderedMap\" : \"Map\");\n\t}\n\tif (val[IS_LIST_SENTINEL]) {\n\t\treturn printImmutableValues(val, config, indentation, depth, refs, printer, \"List\");\n\t}\n\tif (val[IS_SET_SENTINEL]) {\n\t\treturn printImmutableValues(val, config, indentation, depth, refs, printer, val[IS_ORDERED_SENTINEL] ? \"OrderedSet\" : \"Set\");\n\t}\n\tif (val[IS_STACK_SENTINEL]) {\n\t\treturn printImmutableValues(val, config, indentation, depth, refs, printer, \"Stack\");\n\t}\n\tif (val[IS_SEQ_SENTINEL]) {\n\t\treturn printImmutableSeq(val, config, indentation, depth, refs, printer);\n\t}\n\t// For compatibility with immutable v3 and v4, let record be the default.\n\treturn printImmutableRecord(val, config, indentation, depth, refs, printer);\n};\n// Explicitly comparing sentinel properties to true avoids false positive\n// when mock identity-obj-proxy returns the key as the value for any key.\nconst test$2 = (val) => val && (val[IS_ITERABLE_SENTINEL] === true || val[IS_RECORD_SENTINEL] === true);\nconst plugin$2 = {\n\tserialize: serialize$2,\n\ttest: test$2\n};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar reactIs$1 = {exports: {}};\n\nvar reactIs_production = {};\n\n/**\n * @license React\n * react-is.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar hasRequiredReactIs_production;\n\nfunction requireReactIs_production () {\n\tif (hasRequiredReactIs_production) return reactIs_production;\n\thasRequiredReactIs_production = 1;\n\tvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n\t  REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n\t  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n\t  REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n\t  REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n\tvar REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n\t  REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n\t  REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n\t  REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n\t  REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n\t  REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n\t  REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n\t  REACT_VIEW_TRANSITION_TYPE = Symbol.for(\"react.view_transition\"),\n\t  REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\n\tfunction typeOf(object) {\n\t  if (\"object\" === typeof object && null !== object) {\n\t    var $$typeof = object.$$typeof;\n\t    switch ($$typeof) {\n\t      case REACT_ELEMENT_TYPE:\n\t        switch (((object = object.type), object)) {\n\t          case REACT_FRAGMENT_TYPE:\n\t          case REACT_PROFILER_TYPE:\n\t          case REACT_STRICT_MODE_TYPE:\n\t          case REACT_SUSPENSE_TYPE:\n\t          case REACT_SUSPENSE_LIST_TYPE:\n\t          case REACT_VIEW_TRANSITION_TYPE:\n\t            return object;\n\t          default:\n\t            switch (((object = object && object.$$typeof), object)) {\n\t              case REACT_CONTEXT_TYPE:\n\t              case REACT_FORWARD_REF_TYPE:\n\t              case REACT_LAZY_TYPE:\n\t              case REACT_MEMO_TYPE:\n\t                return object;\n\t              case REACT_CONSUMER_TYPE:\n\t                return object;\n\t              default:\n\t                return $$typeof;\n\t            }\n\t        }\n\t      case REACT_PORTAL_TYPE:\n\t        return $$typeof;\n\t    }\n\t  }\n\t}\n\treactIs_production.ContextConsumer = REACT_CONSUMER_TYPE;\n\treactIs_production.ContextProvider = REACT_CONTEXT_TYPE;\n\treactIs_production.Element = REACT_ELEMENT_TYPE;\n\treactIs_production.ForwardRef = REACT_FORWARD_REF_TYPE;\n\treactIs_production.Fragment = REACT_FRAGMENT_TYPE;\n\treactIs_production.Lazy = REACT_LAZY_TYPE;\n\treactIs_production.Memo = REACT_MEMO_TYPE;\n\treactIs_production.Portal = REACT_PORTAL_TYPE;\n\treactIs_production.Profiler = REACT_PROFILER_TYPE;\n\treactIs_production.StrictMode = REACT_STRICT_MODE_TYPE;\n\treactIs_production.Suspense = REACT_SUSPENSE_TYPE;\n\treactIs_production.SuspenseList = REACT_SUSPENSE_LIST_TYPE;\n\treactIs_production.isContextConsumer = function (object) {\n\t  return typeOf(object) === REACT_CONSUMER_TYPE;\n\t};\n\treactIs_production.isContextProvider = function (object) {\n\t  return typeOf(object) === REACT_CONTEXT_TYPE;\n\t};\n\treactIs_production.isElement = function (object) {\n\t  return (\n\t    \"object\" === typeof object &&\n\t    null !== object &&\n\t    object.$$typeof === REACT_ELEMENT_TYPE\n\t  );\n\t};\n\treactIs_production.isForwardRef = function (object) {\n\t  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n\t};\n\treactIs_production.isFragment = function (object) {\n\t  return typeOf(object) === REACT_FRAGMENT_TYPE;\n\t};\n\treactIs_production.isLazy = function (object) {\n\t  return typeOf(object) === REACT_LAZY_TYPE;\n\t};\n\treactIs_production.isMemo = function (object) {\n\t  return typeOf(object) === REACT_MEMO_TYPE;\n\t};\n\treactIs_production.isPortal = function (object) {\n\t  return typeOf(object) === REACT_PORTAL_TYPE;\n\t};\n\treactIs_production.isProfiler = function (object) {\n\t  return typeOf(object) === REACT_PROFILER_TYPE;\n\t};\n\treactIs_production.isStrictMode = function (object) {\n\t  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n\t};\n\treactIs_production.isSuspense = function (object) {\n\t  return typeOf(object) === REACT_SUSPENSE_TYPE;\n\t};\n\treactIs_production.isSuspenseList = function (object) {\n\t  return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;\n\t};\n\treactIs_production.isValidElementType = function (type) {\n\t  return \"string\" === typeof type ||\n\t    \"function\" === typeof type ||\n\t    type === REACT_FRAGMENT_TYPE ||\n\t    type === REACT_PROFILER_TYPE ||\n\t    type === REACT_STRICT_MODE_TYPE ||\n\t    type === REACT_SUSPENSE_TYPE ||\n\t    type === REACT_SUSPENSE_LIST_TYPE ||\n\t    (\"object\" === typeof type &&\n\t      null !== type &&\n\t      (type.$$typeof === REACT_LAZY_TYPE ||\n\t        type.$$typeof === REACT_MEMO_TYPE ||\n\t        type.$$typeof === REACT_CONTEXT_TYPE ||\n\t        type.$$typeof === REACT_CONSUMER_TYPE ||\n\t        type.$$typeof === REACT_FORWARD_REF_TYPE ||\n\t        type.$$typeof === REACT_CLIENT_REFERENCE ||\n\t        void 0 !== type.getModuleId))\n\t    ? true\n\t    : false;\n\t};\n\treactIs_production.typeOf = typeOf;\n\treturn reactIs_production;\n}\n\nvar hasRequiredReactIs$1;\n\nfunction requireReactIs$1 () {\n\tif (hasRequiredReactIs$1) return reactIs$1.exports;\n\thasRequiredReactIs$1 = 1;\n\n\t{\n\t  reactIs$1.exports = requireReactIs_production();\n\t}\n\treturn reactIs$1.exports;\n}\n\nvar reactIsExports$1 = requireReactIs$1();\nvar index$1 = /*@__PURE__*/getDefaultExportFromCjs(reactIsExports$1);\n\nvar ReactIs19 = /*#__PURE__*/_mergeNamespaces({\n  __proto__: null,\n  default: index$1\n}, [reactIsExports$1]);\n\nvar reactIs = {exports: {}};\n\nvar reactIs_production_min = {};\n\n/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar hasRequiredReactIs_production_min;\n\nfunction requireReactIs_production_min () {\n\tif (hasRequiredReactIs_production_min) return reactIs_production_min;\n\thasRequiredReactIs_production_min = 1;\nvar b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\n\tfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}reactIs_production_min.ContextConsumer=h;reactIs_production_min.ContextProvider=g;reactIs_production_min.Element=b;reactIs_production_min.ForwardRef=l;reactIs_production_min.Fragment=d;reactIs_production_min.Lazy=q;reactIs_production_min.Memo=p;reactIs_production_min.Portal=c;reactIs_production_min.Profiler=f;reactIs_production_min.StrictMode=e;reactIs_production_min.Suspense=m;\n\treactIs_production_min.SuspenseList=n;reactIs_production_min.isAsyncMode=function(){return  false};reactIs_production_min.isConcurrentMode=function(){return  false};reactIs_production_min.isContextConsumer=function(a){return v(a)===h};reactIs_production_min.isContextProvider=function(a){return v(a)===g};reactIs_production_min.isElement=function(a){return \"object\"===typeof a&&null!==a&&a.$$typeof===b};reactIs_production_min.isForwardRef=function(a){return v(a)===l};reactIs_production_min.isFragment=function(a){return v(a)===d};reactIs_production_min.isLazy=function(a){return v(a)===q};reactIs_production_min.isMemo=function(a){return v(a)===p};\n\treactIs_production_min.isPortal=function(a){return v(a)===c};reactIs_production_min.isProfiler=function(a){return v(a)===f};reactIs_production_min.isStrictMode=function(a){return v(a)===e};reactIs_production_min.isSuspense=function(a){return v(a)===m};reactIs_production_min.isSuspenseList=function(a){return v(a)===n};\n\treactIs_production_min.isValidElementType=function(a){return \"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?true:false};reactIs_production_min.typeOf=v;\n\treturn reactIs_production_min;\n}\n\nvar hasRequiredReactIs;\n\nfunction requireReactIs () {\n\tif (hasRequiredReactIs) return reactIs.exports;\n\thasRequiredReactIs = 1;\n\n\t{\n\t  reactIs.exports = requireReactIs_production_min();\n\t}\n\treturn reactIs.exports;\n}\n\nvar reactIsExports = requireReactIs();\nvar index = /*@__PURE__*/getDefaultExportFromCjs(reactIsExports);\n\nvar ReactIs18 = /*#__PURE__*/_mergeNamespaces({\n  __proto__: null,\n  default: index\n}, [reactIsExports]);\n\nconst reactIsMethods = [\n\t\"isAsyncMode\",\n\t\"isConcurrentMode\",\n\t\"isContextConsumer\",\n\t\"isContextProvider\",\n\t\"isElement\",\n\t\"isForwardRef\",\n\t\"isFragment\",\n\t\"isLazy\",\n\t\"isMemo\",\n\t\"isPortal\",\n\t\"isProfiler\",\n\t\"isStrictMode\",\n\t\"isSuspense\",\n\t\"isSuspenseList\",\n\t\"isValidElementType\"\n];\nconst ReactIs = Object.fromEntries(reactIsMethods.map((m) => [m, (v) => ReactIs18[m](v) || ReactIs19[m](v)]));\n// Given element.props.children, or subtree during recursive traversal,\n// return flattened array of children.\nfunction getChildren(arg, children = []) {\n\tif (Array.isArray(arg)) {\n\t\tfor (const item of arg) {\n\t\t\tgetChildren(item, children);\n\t\t}\n\t} else if (arg != null && arg !== false && arg !== \"\") {\n\t\tchildren.push(arg);\n\t}\n\treturn children;\n}\nfunction getType(element) {\n\tconst type = element.type;\n\tif (typeof type === \"string\") {\n\t\treturn type;\n\t}\n\tif (typeof type === \"function\") {\n\t\treturn type.displayName || type.name || \"Unknown\";\n\t}\n\tif (ReactIs.isFragment(element)) {\n\t\treturn \"React.Fragment\";\n\t}\n\tif (ReactIs.isSuspense(element)) {\n\t\treturn \"React.Suspense\";\n\t}\n\tif (typeof type === \"object\" && type !== null) {\n\t\tif (ReactIs.isContextProvider(element)) {\n\t\t\treturn \"Context.Provider\";\n\t\t}\n\t\tif (ReactIs.isContextConsumer(element)) {\n\t\t\treturn \"Context.Consumer\";\n\t\t}\n\t\tif (ReactIs.isForwardRef(element)) {\n\t\t\tif (type.displayName) {\n\t\t\t\treturn type.displayName;\n\t\t\t}\n\t\t\tconst functionName = type.render.displayName || type.render.name || \"\";\n\t\t\treturn functionName === \"\" ? \"ForwardRef\" : `ForwardRef(${functionName})`;\n\t\t}\n\t\tif (ReactIs.isMemo(element)) {\n\t\t\tconst functionName = type.displayName || type.type.displayName || type.type.name || \"\";\n\t\t\treturn functionName === \"\" ? \"Memo\" : `Memo(${functionName})`;\n\t\t}\n\t}\n\treturn \"UNDEFINED\";\n}\nfunction getPropKeys$1(element) {\n\tconst { props } = element;\n\treturn Object.keys(props).filter((key) => key !== \"children\" && props[key] !== undefined).sort();\n}\nconst serialize$1 = (element, config, indentation, depth, refs, printer) => ++depth > config.maxDepth ? printElementAsLeaf(getType(element), config) : printElement(getType(element), printProps(getPropKeys$1(element), element.props, config, indentation + config.indent, depth, refs, printer), printChildren(getChildren(element.props.children), config, indentation + config.indent, depth, refs, printer), config, indentation);\nconst test$1 = (val) => val != null && ReactIs.isElement(val);\nconst plugin$1 = {\n\tserialize: serialize$1,\n\ttest: test$1\n};\n\nconst testSymbol = typeof Symbol === \"function\" && Symbol.for ? Symbol.for(\"react.test.json\") : 245830487;\nfunction getPropKeys(object) {\n\tconst { props } = object;\n\treturn props ? Object.keys(props).filter((key) => props[key] !== undefined).sort() : [];\n}\nconst serialize = (object, config, indentation, depth, refs, printer) => ++depth > config.maxDepth ? printElementAsLeaf(object.type, config) : printElement(object.type, object.props ? printProps(getPropKeys(object), object.props, config, indentation + config.indent, depth, refs, printer) : \"\", object.children ? printChildren(object.children, config, indentation + config.indent, depth, refs, printer) : \"\", config, indentation);\nconst test = (val) => val && val.$$typeof === testSymbol;\nconst plugin = {\n\tserialize,\n\ttest\n};\n\nconst toString = Object.prototype.toString;\nconst toISOString = Date.prototype.toISOString;\nconst errorToString = Error.prototype.toString;\nconst regExpToString = RegExp.prototype.toString;\n/**\n* Explicitly comparing typeof constructor to function avoids undefined as name\n* when mock identity-obj-proxy returns the key as the value for any key.\n*/\nfunction getConstructorName(val) {\n\treturn typeof val.constructor === \"function\" && val.constructor.name || \"Object\";\n}\n/** Is val is equal to global window object? Works even if it does not exist :) */\nfunction isWindow(val) {\n\treturn typeof window !== \"undefined\" && val === window;\n}\n// eslint-disable-next-line regexp/no-super-linear-backtracking\nconst SYMBOL_REGEXP = /^Symbol\\((.*)\\)(.*)$/;\nconst NEWLINE_REGEXP = /\\n/g;\nclass PrettyFormatPluginError extends Error {\n\tconstructor(message, stack) {\n\t\tsuper(message);\n\t\tthis.stack = stack;\n\t\tthis.name = this.constructor.name;\n\t}\n}\nfunction isToStringedArrayType(toStringed) {\n\treturn toStringed === \"[object Array]\" || toStringed === \"[object ArrayBuffer]\" || toStringed === \"[object DataView]\" || toStringed === \"[object Float32Array]\" || toStringed === \"[object Float64Array]\" || toStringed === \"[object Int8Array]\" || toStringed === \"[object Int16Array]\" || toStringed === \"[object Int32Array]\" || toStringed === \"[object Uint8Array]\" || toStringed === \"[object Uint8ClampedArray]\" || toStringed === \"[object Uint16Array]\" || toStringed === \"[object Uint32Array]\";\n}\nfunction printNumber(val) {\n\treturn Object.is(val, -0) ? \"-0\" : String(val);\n}\nfunction printBigInt(val) {\n\treturn String(`${val}n`);\n}\nfunction printFunction(val, printFunctionName) {\n\tif (!printFunctionName) {\n\t\treturn \"[Function]\";\n\t}\n\treturn `[Function ${val.name || \"anonymous\"}]`;\n}\nfunction printSymbol(val) {\n\treturn String(val).replace(SYMBOL_REGEXP, \"Symbol($1)\");\n}\nfunction printError(val) {\n\treturn `[${errorToString.call(val)}]`;\n}\n/**\n* The first port of call for printing an object, handles most of the\n* data-types in JS.\n*/\nfunction printBasicValue(val, printFunctionName, escapeRegex, escapeString) {\n\tif (val === true || val === false) {\n\t\treturn `${val}`;\n\t}\n\tif (val === undefined) {\n\t\treturn \"undefined\";\n\t}\n\tif (val === null) {\n\t\treturn \"null\";\n\t}\n\tconst typeOf = typeof val;\n\tif (typeOf === \"number\") {\n\t\treturn printNumber(val);\n\t}\n\tif (typeOf === \"bigint\") {\n\t\treturn printBigInt(val);\n\t}\n\tif (typeOf === \"string\") {\n\t\tif (escapeString) {\n\t\t\treturn `\"${val.replaceAll(/\"|\\\\/g, \"\\\\$&\")}\"`;\n\t\t}\n\t\treturn `\"${val}\"`;\n\t}\n\tif (typeOf === \"function\") {\n\t\treturn printFunction(val, printFunctionName);\n\t}\n\tif (typeOf === \"symbol\") {\n\t\treturn printSymbol(val);\n\t}\n\tconst toStringed = toString.call(val);\n\tif (toStringed === \"[object WeakMap]\") {\n\t\treturn \"WeakMap {}\";\n\t}\n\tif (toStringed === \"[object WeakSet]\") {\n\t\treturn \"WeakSet {}\";\n\t}\n\tif (toStringed === \"[object Function]\" || toStringed === \"[object GeneratorFunction]\") {\n\t\treturn printFunction(val, printFunctionName);\n\t}\n\tif (toStringed === \"[object Symbol]\") {\n\t\treturn printSymbol(val);\n\t}\n\tif (toStringed === \"[object Date]\") {\n\t\treturn Number.isNaN(+val) ? \"Date { NaN }\" : toISOString.call(val);\n\t}\n\tif (toStringed === \"[object Error]\") {\n\t\treturn printError(val);\n\t}\n\tif (toStringed === \"[object RegExp]\") {\n\t\tif (escapeRegex) {\n\t\t\t// https://github.com/benjamingr/RegExp.escape/blob/main/polyfill.js\n\t\t\treturn regExpToString.call(val).replaceAll(/[$()*+.?[\\\\\\]^{|}]/g, \"\\\\$&\");\n\t\t}\n\t\treturn regExpToString.call(val);\n\t}\n\tif (val instanceof Error) {\n\t\treturn printError(val);\n\t}\n\treturn null;\n}\n/**\n* Handles more complex objects ( such as objects with circular references.\n* maps and sets etc )\n*/\nfunction printComplexValue(val, config, indentation, depth, refs, hasCalledToJSON) {\n\tif (refs.includes(val)) {\n\t\treturn \"[Circular]\";\n\t}\n\trefs = [...refs];\n\trefs.push(val);\n\tconst hitMaxDepth = ++depth > config.maxDepth;\n\tconst min = config.min;\n\tif (config.callToJSON && !hitMaxDepth && val.toJSON && typeof val.toJSON === \"function\" && !hasCalledToJSON) {\n\t\treturn printer(val.toJSON(), config, indentation, depth, refs, true);\n\t}\n\tconst toStringed = toString.call(val);\n\tif (toStringed === \"[object Arguments]\") {\n\t\treturn hitMaxDepth ? \"[Arguments]\" : `${min ? \"\" : \"Arguments \"}[${printListItems(val, config, indentation, depth, refs, printer)}]`;\n\t}\n\tif (isToStringedArrayType(toStringed)) {\n\t\treturn hitMaxDepth ? `[${val.constructor.name}]` : `${min ? \"\" : !config.printBasicPrototype && val.constructor.name === \"Array\" ? \"\" : `${val.constructor.name} `}[${printListItems(val, config, indentation, depth, refs, printer)}]`;\n\t}\n\tif (toStringed === \"[object Map]\") {\n\t\treturn hitMaxDepth ? \"[Map]\" : `Map {${printIteratorEntries(val.entries(), config, indentation, depth, refs, printer, \" => \")}}`;\n\t}\n\tif (toStringed === \"[object Set]\") {\n\t\treturn hitMaxDepth ? \"[Set]\" : `Set {${printIteratorValues(val.values(), config, indentation, depth, refs, printer)}}`;\n\t}\n\t// Avoid failure to serialize global window object in jsdom test environment.\n\t// For example, not even relevant if window is prop of React element.\n\treturn hitMaxDepth || isWindow(val) ? `[${getConstructorName(val)}]` : `${min ? \"\" : !config.printBasicPrototype && getConstructorName(val) === \"Object\" ? \"\" : `${getConstructorName(val)} `}{${printObjectProperties(val, config, indentation, depth, refs, printer)}}`;\n}\nconst ErrorPlugin = {\n\ttest: (val) => val && val instanceof Error,\n\tserialize(val, config, indentation, depth, refs, printer) {\n\t\tif (refs.includes(val)) {\n\t\t\treturn \"[Circular]\";\n\t\t}\n\t\trefs = [...refs, val];\n\t\tconst hitMaxDepth = ++depth > config.maxDepth;\n\t\tconst { message, cause,...rest } = val;\n\t\tconst entries = {\n\t\t\tmessage,\n\t\t\t...typeof cause !== \"undefined\" ? { cause } : {},\n\t\t\t...val instanceof AggregateError ? { errors: val.errors } : {},\n\t\t\t...rest\n\t\t};\n\t\tconst name = val.name !== \"Error\" ? val.name : getConstructorName(val);\n\t\treturn hitMaxDepth ? `[${name}]` : `${name} {${printIteratorEntries(Object.entries(entries).values(), config, indentation, depth, refs, printer)}}`;\n\t}\n};\nfunction isNewPlugin(plugin) {\n\treturn plugin.serialize != null;\n}\nfunction printPlugin(plugin, val, config, indentation, depth, refs) {\n\tlet printed;\n\ttry {\n\t\tprinted = isNewPlugin(plugin) ? plugin.serialize(val, config, indentation, depth, refs, printer) : plugin.print(val, (valChild) => printer(valChild, config, indentation, depth, refs), (str) => {\n\t\t\tconst indentationNext = indentation + config.indent;\n\t\t\treturn indentationNext + str.replaceAll(NEWLINE_REGEXP, `\\n${indentationNext}`);\n\t\t}, {\n\t\t\tedgeSpacing: config.spacingOuter,\n\t\t\tmin: config.min,\n\t\t\tspacing: config.spacingInner\n\t\t}, config.colors);\n\t} catch (error) {\n\t\tthrow new PrettyFormatPluginError(error.message, error.stack);\n\t}\n\tif (typeof printed !== \"string\") {\n\t\tthrow new TypeError(`pretty-format: Plugin must return type \"string\" but instead returned \"${typeof printed}\".`);\n\t}\n\treturn printed;\n}\nfunction findPlugin(plugins, val) {\n\tfor (const plugin of plugins) {\n\t\ttry {\n\t\t\tif (plugin.test(val)) {\n\t\t\t\treturn plugin;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow new PrettyFormatPluginError(error.message, error.stack);\n\t\t}\n\t}\n\treturn null;\n}\nfunction printer(val, config, indentation, depth, refs, hasCalledToJSON) {\n\tconst plugin = findPlugin(config.plugins, val);\n\tif (plugin !== null) {\n\t\treturn printPlugin(plugin, val, config, indentation, depth, refs);\n\t}\n\tconst basicResult = printBasicValue(val, config.printFunctionName, config.escapeRegex, config.escapeString);\n\tif (basicResult !== null) {\n\t\treturn basicResult;\n\t}\n\treturn printComplexValue(val, config, indentation, depth, refs, hasCalledToJSON);\n}\nconst DEFAULT_THEME = {\n\tcomment: \"gray\",\n\tcontent: \"reset\",\n\tprop: \"yellow\",\n\ttag: \"cyan\",\n\tvalue: \"green\"\n};\nconst DEFAULT_THEME_KEYS = Object.keys(DEFAULT_THEME);\nconst DEFAULT_OPTIONS = {\n\tcallToJSON: true,\n\tcompareKeys: undefined,\n\tescapeRegex: false,\n\tescapeString: true,\n\thighlight: false,\n\tindent: 2,\n\tmaxDepth: Number.POSITIVE_INFINITY,\n\tmaxWidth: Number.POSITIVE_INFINITY,\n\tmin: false,\n\tplugins: [],\n\tprintBasicPrototype: true,\n\tprintFunctionName: true,\n\tprintShadowRoot: true,\n\ttheme: DEFAULT_THEME\n};\nfunction validateOptions(options) {\n\tfor (const key of Object.keys(options)) {\n\t\tif (!Object.hasOwn(DEFAULT_OPTIONS, key)) {\n\t\t\tthrow new Error(`pretty-format: Unknown option \"${key}\".`);\n\t\t}\n\t}\n\tif (options.min && options.indent !== undefined && options.indent !== 0) {\n\t\tthrow new Error(\"pretty-format: Options \\\"min\\\" and \\\"indent\\\" cannot be used together.\");\n\t}\n}\nfunction getColorsHighlight() {\n\treturn DEFAULT_THEME_KEYS.reduce((colors, key) => {\n\t\tconst value = DEFAULT_THEME[key];\n\t\tconst color = value && styles[value];\n\t\tif (color && typeof color.close === \"string\" && typeof color.open === \"string\") {\n\t\t\tcolors[key] = color;\n\t\t} else {\n\t\t\tthrow new Error(`pretty-format: Option \"theme\" has a key \"${key}\" whose value \"${value}\" is undefined in ansi-styles.`);\n\t\t}\n\t\treturn colors;\n\t}, Object.create(null));\n}\nfunction getColorsEmpty() {\n\treturn DEFAULT_THEME_KEYS.reduce((colors, key) => {\n\t\tcolors[key] = {\n\t\t\tclose: \"\",\n\t\t\topen: \"\"\n\t\t};\n\t\treturn colors;\n\t}, Object.create(null));\n}\nfunction getPrintFunctionName(options) {\n\treturn options?.printFunctionName ?? DEFAULT_OPTIONS.printFunctionName;\n}\nfunction getEscapeRegex(options) {\n\treturn options?.escapeRegex ?? DEFAULT_OPTIONS.escapeRegex;\n}\nfunction getEscapeString(options) {\n\treturn options?.escapeString ?? DEFAULT_OPTIONS.escapeString;\n}\nfunction getConfig(options) {\n\treturn {\n\t\tcallToJSON: options?.callToJSON ?? DEFAULT_OPTIONS.callToJSON,\n\t\tcolors: options?.highlight ? getColorsHighlight() : getColorsEmpty(),\n\t\tcompareKeys: typeof options?.compareKeys === \"function\" || options?.compareKeys === null ? options.compareKeys : DEFAULT_OPTIONS.compareKeys,\n\t\tescapeRegex: getEscapeRegex(options),\n\t\tescapeString: getEscapeString(options),\n\t\tindent: options?.min ? \"\" : createIndent(options?.indent ?? DEFAULT_OPTIONS.indent),\n\t\tmaxDepth: options?.maxDepth ?? DEFAULT_OPTIONS.maxDepth,\n\t\tmaxWidth: options?.maxWidth ?? DEFAULT_OPTIONS.maxWidth,\n\t\tmin: options?.min ?? DEFAULT_OPTIONS.min,\n\t\tplugins: options?.plugins ?? DEFAULT_OPTIONS.plugins,\n\t\tprintBasicPrototype: options?.printBasicPrototype ?? true,\n\t\tprintFunctionName: getPrintFunctionName(options),\n\t\tprintShadowRoot: options?.printShadowRoot ?? true,\n\t\tspacingInner: options?.min ? \" \" : \"\\n\",\n\t\tspacingOuter: options?.min ? \"\" : \"\\n\"\n\t};\n}\nfunction createIndent(indent) {\n\treturn Array.from({ length: indent + 1 }).join(\" \");\n}\n/**\n* Returns a presentation string of your `val` object\n* @param val any potential JavaScript object\n* @param options Custom settings\n*/\nfunction format(val, options) {\n\tif (options) {\n\t\tvalidateOptions(options);\n\t\tif (options.plugins) {\n\t\t\tconst plugin = findPlugin(options.plugins, val);\n\t\t\tif (plugin !== null) {\n\t\t\t\treturn printPlugin(plugin, val, getConfig(options), \"\", 0, []);\n\t\t\t}\n\t\t}\n\t}\n\tconst basicResult = printBasicValue(val, getPrintFunctionName(options), getEscapeRegex(options), getEscapeString(options));\n\tif (basicResult !== null) {\n\t\treturn basicResult;\n\t}\n\treturn printComplexValue(val, getConfig(options), \"\", 0, []);\n}\nconst plugins = {\n\tAsymmetricMatcher: plugin$5,\n\tDOMCollection: plugin$4,\n\tDOMElement: plugin$3,\n\tImmutable: plugin$2,\n\tReactElement: plugin$1,\n\tReactTestComponent: plugin,\n\tError: ErrorPlugin\n};\n\nexport { DEFAULT_OPTIONS, format, plugins };\n", "import { plugins, format as format$1 } from '@vitest/pretty-format';\n\nconst ansiColors = {\n    bold: ['1', '22'],\n    dim: ['2', '22'],\n    italic: ['3', '23'],\n    underline: ['4', '24'],\n    // 5 & 6 are blinking\n    inverse: ['7', '27'],\n    hidden: ['8', '28'],\n    strike: ['9', '29'],\n    // 10-20 are fonts\n    // 21-29 are resets for 1-9\n    black: ['30', '39'],\n    red: ['31', '39'],\n    green: ['32', '39'],\n    yellow: ['33', '39'],\n    blue: ['34', '39'],\n    magenta: ['35', '39'],\n    cyan: ['36', '39'],\n    white: ['37', '39'],\n    brightblack: ['30;1', '39'],\n    brightred: ['31;1', '39'],\n    brightgreen: ['32;1', '39'],\n    brightyellow: ['33;1', '39'],\n    brightblue: ['34;1', '39'],\n    brightmagenta: ['35;1', '39'],\n    brightcyan: ['36;1', '39'],\n    brightwhite: ['37;1', '39'],\n    grey: ['90', '39'],\n};\nconst styles = {\n    special: 'cyan',\n    number: 'yellow',\n    bigint: 'yellow',\n    boolean: 'yellow',\n    undefined: 'grey',\n    null: 'bold',\n    string: 'green',\n    symbol: 'green',\n    date: 'magenta',\n    regexp: 'red',\n};\nconst truncator = '…';\nfunction colorise(value, styleType) {\n    const color = ansiColors[styles[styleType]] || ansiColors[styleType] || '';\n    if (!color) {\n        return String(value);\n    }\n    return `\\u001b[${color[0]}m${String(value)}\\u001b[${color[1]}m`;\n}\nfunction normaliseOptions({ showHidden = false, depth = 2, colors = false, customInspect = true, showProxy = false, maxArrayLength = Infinity, breakLength = Infinity, seen = [], \n// eslint-disable-next-line no-shadow\ntruncate = Infinity, stylize = String, } = {}, inspect) {\n    const options = {\n        showHidden: Boolean(showHidden),\n        depth: Number(depth),\n        colors: Boolean(colors),\n        customInspect: Boolean(customInspect),\n        showProxy: Boolean(showProxy),\n        maxArrayLength: Number(maxArrayLength),\n        breakLength: Number(breakLength),\n        truncate: Number(truncate),\n        seen,\n        inspect,\n        stylize,\n    };\n    if (options.colors) {\n        options.stylize = colorise;\n    }\n    return options;\n}\nfunction isHighSurrogate(char) {\n    return char >= '\\ud800' && char <= '\\udbff';\n}\nfunction truncate(string, length, tail = truncator) {\n    string = String(string);\n    const tailLength = tail.length;\n    const stringLength = string.length;\n    if (tailLength > length && stringLength > tailLength) {\n        return tail;\n    }\n    if (stringLength > length && stringLength > tailLength) {\n        let end = length - tailLength;\n        if (end > 0 && isHighSurrogate(string[end - 1])) {\n            end = end - 1;\n        }\n        return `${string.slice(0, end)}${tail}`;\n    }\n    return string;\n}\n// eslint-disable-next-line complexity\nfunction inspectList(list, options, inspectItem, separator = ', ') {\n    inspectItem = inspectItem || options.inspect;\n    const size = list.length;\n    if (size === 0)\n        return '';\n    const originalLength = options.truncate;\n    let output = '';\n    let peek = '';\n    let truncated = '';\n    for (let i = 0; i < size; i += 1) {\n        const last = i + 1 === list.length;\n        const secondToLast = i + 2 === list.length;\n        truncated = `${truncator}(${list.length - i})`;\n        const value = list[i];\n        // If there is more than one remaining we need to account for a separator of `, `\n        options.truncate = originalLength - output.length - (last ? 0 : separator.length);\n        const string = peek || inspectItem(value, options) + (last ? '' : separator);\n        const nextLength = output.length + string.length;\n        const truncatedLength = nextLength + truncated.length;\n        // If this is the last element, and adding it would\n        // take us over length, but adding the truncator wouldn't - then break now\n        if (last && nextLength > originalLength && output.length + truncated.length <= originalLength) {\n            break;\n        }\n        // If this isn't the last or second to last element to scan,\n        // but the string is already over length then break here\n        if (!last && !secondToLast && truncatedLength > originalLength) {\n            break;\n        }\n        // Peek at the next string to determine if we should\n        // break early before adding this item to the output\n        peek = last ? '' : inspectItem(list[i + 1], options) + (secondToLast ? '' : separator);\n        // If we have one element left, but this element and\n        // the next takes over length, the break early\n        if (!last && secondToLast && truncatedLength > originalLength && nextLength + peek.length > originalLength) {\n            break;\n        }\n        output += string;\n        // If the next element takes us to length -\n        // but there are more after that, then we should truncate now\n        if (!last && !secondToLast && nextLength + peek.length >= originalLength) {\n            truncated = `${truncator}(${list.length - i - 1})`;\n            break;\n        }\n        truncated = '';\n    }\n    return `${output}${truncated}`;\n}\nfunction quoteComplexKey(key) {\n    if (key.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/)) {\n        return key;\n    }\n    return JSON.stringify(key)\n        .replace(/'/g, \"\\\\'\")\n        .replace(/\\\\\"/g, '\"')\n        .replace(/(^\"|\"$)/g, \"'\");\n}\nfunction inspectProperty([key, value], options) {\n    options.truncate -= 2;\n    if (typeof key === 'string') {\n        key = quoteComplexKey(key);\n    }\n    else if (typeof key !== 'number') {\n        key = `[${options.inspect(key, options)}]`;\n    }\n    options.truncate -= key.length;\n    value = options.inspect(value, options);\n    return `${key}: ${value}`;\n}\n\nfunction inspectArray(array, options) {\n    // Object.keys will always output the Array indices first, so we can slice by\n    // `array.length` to get non-index properties\n    const nonIndexProperties = Object.keys(array).slice(array.length);\n    if (!array.length && !nonIndexProperties.length)\n        return '[]';\n    options.truncate -= 4;\n    const listContents = inspectList(array, options);\n    options.truncate -= listContents.length;\n    let propertyContents = '';\n    if (nonIndexProperties.length) {\n        propertyContents = inspectList(nonIndexProperties.map(key => [key, array[key]]), options, inspectProperty);\n    }\n    return `[ ${listContents}${propertyContents ? `, ${propertyContents}` : ''} ]`;\n}\n\nconst getArrayName = (array) => {\n    // We need to special case Node.js' Buffers, which report to be Uint8Array\n    // @ts-ignore\n    if (typeof Buffer === 'function' && array instanceof Buffer) {\n        return 'Buffer';\n    }\n    if (array[Symbol.toStringTag]) {\n        return array[Symbol.toStringTag];\n    }\n    return array.constructor.name;\n};\nfunction inspectTypedArray(array, options) {\n    const name = getArrayName(array);\n    options.truncate -= name.length + 4;\n    // Object.keys will always output the Array indices first, so we can slice by\n    // `array.length` to get non-index properties\n    const nonIndexProperties = Object.keys(array).slice(array.length);\n    if (!array.length && !nonIndexProperties.length)\n        return `${name}[]`;\n    // As we know TypedArrays only contain Unsigned Integers, we can skip inspecting each one and simply\n    // stylise the toString() value of them\n    let output = '';\n    for (let i = 0; i < array.length; i++) {\n        const string = `${options.stylize(truncate(array[i], options.truncate), 'number')}${i === array.length - 1 ? '' : ', '}`;\n        options.truncate -= string.length;\n        if (array[i] !== array.length && options.truncate <= 3) {\n            output += `${truncator}(${array.length - array[i] + 1})`;\n            break;\n        }\n        output += string;\n    }\n    let propertyContents = '';\n    if (nonIndexProperties.length) {\n        propertyContents = inspectList(nonIndexProperties.map(key => [key, array[key]]), options, inspectProperty);\n    }\n    return `${name}[ ${output}${propertyContents ? `, ${propertyContents}` : ''} ]`;\n}\n\nfunction inspectDate(dateObject, options) {\n    const stringRepresentation = dateObject.toJSON();\n    if (stringRepresentation === null) {\n        return 'Invalid Date';\n    }\n    const split = stringRepresentation.split('T');\n    const date = split[0];\n    // If we need to - truncate the time portion, but never the date\n    return options.stylize(`${date}T${truncate(split[1], options.truncate - date.length - 1)}`, 'date');\n}\n\nfunction inspectFunction(func, options) {\n    const functionType = func[Symbol.toStringTag] || 'Function';\n    const name = func.name;\n    if (!name) {\n        return options.stylize(`[${functionType}]`, 'special');\n    }\n    return options.stylize(`[${functionType} ${truncate(name, options.truncate - 11)}]`, 'special');\n}\n\nfunction inspectMapEntry([key, value], options) {\n    options.truncate -= 4;\n    key = options.inspect(key, options);\n    options.truncate -= key.length;\n    value = options.inspect(value, options);\n    return `${key} => ${value}`;\n}\n// IE11 doesn't support `map.entries()`\nfunction mapToEntries(map) {\n    const entries = [];\n    map.forEach((value, key) => {\n        entries.push([key, value]);\n    });\n    return entries;\n}\nfunction inspectMap(map, options) {\n    if (map.size === 0)\n        return 'Map{}';\n    options.truncate -= 7;\n    return `Map{ ${inspectList(mapToEntries(map), options, inspectMapEntry)} }`;\n}\n\nconst isNaN = Number.isNaN || (i => i !== i); // eslint-disable-line no-self-compare\nfunction inspectNumber(number, options) {\n    if (isNaN(number)) {\n        return options.stylize('NaN', 'number');\n    }\n    if (number === Infinity) {\n        return options.stylize('Infinity', 'number');\n    }\n    if (number === -Infinity) {\n        return options.stylize('-Infinity', 'number');\n    }\n    if (number === 0) {\n        return options.stylize(1 / number === Infinity ? '+0' : '-0', 'number');\n    }\n    return options.stylize(truncate(String(number), options.truncate), 'number');\n}\n\nfunction inspectBigInt(number, options) {\n    let nums = truncate(number.toString(), options.truncate - 1);\n    if (nums !== truncator)\n        nums += 'n';\n    return options.stylize(nums, 'bigint');\n}\n\nfunction inspectRegExp(value, options) {\n    const flags = value.toString().split('/')[2];\n    const sourceLength = options.truncate - (2 + flags.length);\n    const source = value.source;\n    return options.stylize(`/${truncate(source, sourceLength)}/${flags}`, 'regexp');\n}\n\n// IE11 doesn't support `Array.from(set)`\nfunction arrayFromSet(set) {\n    const values = [];\n    set.forEach(value => {\n        values.push(value);\n    });\n    return values;\n}\nfunction inspectSet(set, options) {\n    if (set.size === 0)\n        return 'Set{}';\n    options.truncate -= 7;\n    return `Set{ ${inspectList(arrayFromSet(set), options)} }`;\n}\n\nconst stringEscapeChars = new RegExp(\"['\\\\u0000-\\\\u001f\\\\u007f-\\\\u009f\\\\u00ad\\\\u0600-\\\\u0604\\\\u070f\\\\u17b4\\\\u17b5\" +\n    '\\\\u200c-\\\\u200f\\\\u2028-\\\\u202f\\\\u2060-\\\\u206f\\\\ufeff\\\\ufff0-\\\\uffff]', 'g');\nconst escapeCharacters = {\n    '\\b': '\\\\b',\n    '\\t': '\\\\t',\n    '\\n': '\\\\n',\n    '\\f': '\\\\f',\n    '\\r': '\\\\r',\n    \"'\": \"\\\\'\",\n    '\\\\': '\\\\\\\\',\n};\nconst hex = 16;\nfunction escape(char) {\n    return (escapeCharacters[char] ||\n        `\\\\u${`0000${char.charCodeAt(0).toString(hex)}`.slice(-4)}`);\n}\nfunction inspectString(string, options) {\n    if (stringEscapeChars.test(string)) {\n        string = string.replace(stringEscapeChars, escape);\n    }\n    return options.stylize(`'${truncate(string, options.truncate - 2)}'`, 'string');\n}\n\nfunction inspectSymbol(value) {\n    if ('description' in Symbol.prototype) {\n        return value.description ? `Symbol(${value.description})` : 'Symbol()';\n    }\n    return value.toString();\n}\n\nconst getPromiseValue = () => 'Promise{…}';\n\nfunction inspectObject$1(object, options) {\n    const properties = Object.getOwnPropertyNames(object);\n    const symbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(object) : [];\n    if (properties.length === 0 && symbols.length === 0) {\n        return '{}';\n    }\n    options.truncate -= 4;\n    options.seen = options.seen || [];\n    if (options.seen.includes(object)) {\n        return '[Circular]';\n    }\n    options.seen.push(object);\n    const propertyContents = inspectList(properties.map(key => [key, object[key]]), options, inspectProperty);\n    const symbolContents = inspectList(symbols.map(key => [key, object[key]]), options, inspectProperty);\n    options.seen.pop();\n    let sep = '';\n    if (propertyContents && symbolContents) {\n        sep = ', ';\n    }\n    return `{ ${propertyContents}${sep}${symbolContents} }`;\n}\n\nconst toStringTag = typeof Symbol !== 'undefined' && Symbol.toStringTag ? Symbol.toStringTag : false;\nfunction inspectClass(value, options) {\n    let name = '';\n    if (toStringTag && toStringTag in value) {\n        name = value[toStringTag];\n    }\n    name = name || value.constructor.name;\n    // Babel transforms anonymous classes to the name `_class`\n    if (!name || name === '_class') {\n        name = '<Anonymous Class>';\n    }\n    options.truncate -= name.length;\n    return `${name}${inspectObject$1(value, options)}`;\n}\n\nfunction inspectArguments(args, options) {\n    if (args.length === 0)\n        return 'Arguments[]';\n    options.truncate -= 13;\n    return `Arguments[ ${inspectList(args, options)} ]`;\n}\n\nconst errorKeys = [\n    'stack',\n    'line',\n    'column',\n    'name',\n    'message',\n    'fileName',\n    'lineNumber',\n    'columnNumber',\n    'number',\n    'description',\n    'cause',\n];\nfunction inspectObject(error, options) {\n    const properties = Object.getOwnPropertyNames(error).filter(key => errorKeys.indexOf(key) === -1);\n    const name = error.name;\n    options.truncate -= name.length;\n    let message = '';\n    if (typeof error.message === 'string') {\n        message = truncate(error.message, options.truncate);\n    }\n    else {\n        properties.unshift('message');\n    }\n    message = message ? `: ${message}` : '';\n    options.truncate -= message.length + 5;\n    options.seen = options.seen || [];\n    if (options.seen.includes(error)) {\n        return '[Circular]';\n    }\n    options.seen.push(error);\n    const propertyContents = inspectList(properties.map(key => [key, error[key]]), options, inspectProperty);\n    return `${name}${message}${propertyContents ? ` { ${propertyContents} }` : ''}`;\n}\n\nfunction inspectAttribute([key, value], options) {\n    options.truncate -= 3;\n    if (!value) {\n        return `${options.stylize(String(key), 'yellow')}`;\n    }\n    return `${options.stylize(String(key), 'yellow')}=${options.stylize(`\"${value}\"`, 'string')}`;\n}\nfunction inspectNodeCollection(collection, options) {\n    return inspectList(collection, options, inspectNode, '\\n');\n}\nfunction inspectNode(node, options) {\n    switch (node.nodeType) {\n        case 1:\n            return inspectHTML(node, options);\n        case 3:\n            return options.inspect(node.data, options);\n        default:\n            return options.inspect(node, options);\n    }\n}\n// @ts-ignore (Deno doesn't have Element)\nfunction inspectHTML(element, options) {\n    const properties = element.getAttributeNames();\n    const name = element.tagName.toLowerCase();\n    const head = options.stylize(`<${name}`, 'special');\n    const headClose = options.stylize(`>`, 'special');\n    const tail = options.stylize(`</${name}>`, 'special');\n    options.truncate -= name.length * 2 + 5;\n    let propertyContents = '';\n    if (properties.length > 0) {\n        propertyContents += ' ';\n        propertyContents += inspectList(properties.map((key) => [key, element.getAttribute(key)]), options, inspectAttribute, ' ');\n    }\n    options.truncate -= propertyContents.length;\n    const truncate = options.truncate;\n    let children = inspectNodeCollection(element.children, options);\n    if (children && children.length > truncate) {\n        children = `${truncator}(${element.children.length})`;\n    }\n    return `${head}${propertyContents}${headClose}${children}${tail}`;\n}\n\n/* !\n * loupe\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nconst symbolsSupported = typeof Symbol === 'function' && typeof Symbol.for === 'function';\nconst chaiInspect = symbolsSupported ? Symbol.for('chai/inspect') : '@@chai/inspect';\nconst nodeInspect = Symbol.for('nodejs.util.inspect.custom');\nconst constructorMap = new WeakMap();\nconst stringTagMap = {};\nconst baseTypesMap = {\n    undefined: (value, options) => options.stylize('undefined', 'undefined'),\n    null: (value, options) => options.stylize('null', 'null'),\n    boolean: (value, options) => options.stylize(String(value), 'boolean'),\n    Boolean: (value, options) => options.stylize(String(value), 'boolean'),\n    number: inspectNumber,\n    Number: inspectNumber,\n    bigint: inspectBigInt,\n    BigInt: inspectBigInt,\n    string: inspectString,\n    String: inspectString,\n    function: inspectFunction,\n    Function: inspectFunction,\n    symbol: inspectSymbol,\n    // A Symbol polyfill will return `Symbol` not `symbol` from typedetect\n    Symbol: inspectSymbol,\n    Array: inspectArray,\n    Date: inspectDate,\n    Map: inspectMap,\n    Set: inspectSet,\n    RegExp: inspectRegExp,\n    Promise: getPromiseValue,\n    // WeakSet, WeakMap are totally opaque to us\n    WeakSet: (value, options) => options.stylize('WeakSet{…}', 'special'),\n    WeakMap: (value, options) => options.stylize('WeakMap{…}', 'special'),\n    Arguments: inspectArguments,\n    Int8Array: inspectTypedArray,\n    Uint8Array: inspectTypedArray,\n    Uint8ClampedArray: inspectTypedArray,\n    Int16Array: inspectTypedArray,\n    Uint16Array: inspectTypedArray,\n    Int32Array: inspectTypedArray,\n    Uint32Array: inspectTypedArray,\n    Float32Array: inspectTypedArray,\n    Float64Array: inspectTypedArray,\n    Generator: () => '',\n    DataView: () => '',\n    ArrayBuffer: () => '',\n    Error: inspectObject,\n    HTMLCollection: inspectNodeCollection,\n    NodeList: inspectNodeCollection,\n};\n// eslint-disable-next-line complexity\nconst inspectCustom = (value, options, type, inspectFn) => {\n    if (chaiInspect in value && typeof value[chaiInspect] === 'function') {\n        return value[chaiInspect](options);\n    }\n    if (nodeInspect in value && typeof value[nodeInspect] === 'function') {\n        return value[nodeInspect](options.depth, options, inspectFn);\n    }\n    if ('inspect' in value && typeof value.inspect === 'function') {\n        return value.inspect(options.depth, options);\n    }\n    if ('constructor' in value && constructorMap.has(value.constructor)) {\n        return constructorMap.get(value.constructor)(value, options);\n    }\n    if (stringTagMap[type]) {\n        return stringTagMap[type](value, options);\n    }\n    return '';\n};\nconst toString = Object.prototype.toString;\n// eslint-disable-next-line complexity\nfunction inspect$1(value, opts = {}) {\n    const options = normaliseOptions(opts, inspect$1);\n    const { customInspect } = options;\n    let type = value === null ? 'null' : typeof value;\n    if (type === 'object') {\n        type = toString.call(value).slice(8, -1);\n    }\n    // If it is a base value that we already support, then use Loupe's inspector\n    if (type in baseTypesMap) {\n        return baseTypesMap[type](value, options);\n    }\n    // If `options.customInspect` is set to true then try to use the custom inspector\n    if (customInspect && value) {\n        const output = inspectCustom(value, options, type, inspect$1);\n        if (output) {\n            if (typeof output === 'string')\n                return output;\n            return inspect$1(output, options);\n        }\n    }\n    const proto = value ? Object.getPrototypeOf(value) : false;\n    // If it's a plain Object then use Loupe's inspector\n    if (proto === Object.prototype || proto === null) {\n        return inspectObject$1(value, options);\n    }\n    // Specifically account for HTMLElements\n    // @ts-ignore\n    if (value && typeof HTMLElement === 'function' && value instanceof HTMLElement) {\n        return inspectHTML(value, options);\n    }\n    if ('constructor' in value) {\n        // If it is a class, inspect it like an object but add the constructor name\n        if (value.constructor !== Object) {\n            return inspectClass(value, options);\n        }\n        // If it is an object with an anonymous prototype, display it as an object.\n        return inspectObject$1(value, options);\n    }\n    // last chance to check if it's an object\n    if (value === Object(value)) {\n        return inspectObject$1(value, options);\n    }\n    // We have run out of options! Just stringify the value\n    return options.stylize(String(value), type);\n}\n\nconst { AsymmetricMatcher, DOMCollection, DOMElement, Immutable, ReactElement, ReactTestComponent } = plugins;\nconst PLUGINS = [\n\tReactTestComponent,\n\tReactElement,\n\tDOMElement,\n\tDOMCollection,\n\tImmutable,\n\tAsymmetricMatcher\n];\nfunction stringify(object, maxDepth = 10, { maxLength,...options } = {}) {\n\tconst MAX_LENGTH = maxLength ?? 1e4;\n\tlet result;\n\ttry {\n\t\tresult = format$1(object, {\n\t\t\tmaxDepth,\n\t\t\tescapeString: false,\n\t\t\tplugins: PLUGINS,\n\t\t\t...options\n\t\t});\n\t} catch {\n\t\tresult = format$1(object, {\n\t\t\tcallToJSON: false,\n\t\t\tmaxDepth,\n\t\t\tescapeString: false,\n\t\t\tplugins: PLUGINS,\n\t\t\t...options\n\t\t});\n\t}\n\t// Prevents infinite loop https://github.com/vitest-dev/vitest/issues/7249\n\treturn result.length >= MAX_LENGTH && maxDepth > 1 ? stringify(object, Math.floor(Math.min(maxDepth, Number.MAX_SAFE_INTEGER) / 2), {\n\t\tmaxLength,\n\t\t...options\n\t}) : result;\n}\nconst formatRegExp = /%[sdjifoOc%]/g;\nfunction format(...args) {\n\tif (typeof args[0] !== \"string\") {\n\t\tconst objects = [];\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tobjects.push(inspect(args[i], {\n\t\t\t\tdepth: 0,\n\t\t\t\tcolors: false\n\t\t\t}));\n\t\t}\n\t\treturn objects.join(\" \");\n\t}\n\tconst len = args.length;\n\tlet i = 1;\n\tconst template = args[0];\n\tlet str = String(template).replace(formatRegExp, (x) => {\n\t\tif (x === \"%%\") {\n\t\t\treturn \"%\";\n\t\t}\n\t\tif (i >= len) {\n\t\t\treturn x;\n\t\t}\n\t\tswitch (x) {\n\t\t\tcase \"%s\": {\n\t\t\t\tconst value = args[i++];\n\t\t\t\tif (typeof value === \"bigint\") {\n\t\t\t\t\treturn `${value.toString()}n`;\n\t\t\t\t}\n\t\t\t\tif (typeof value === \"number\" && value === 0 && 1 / value < 0) {\n\t\t\t\t\treturn \"-0\";\n\t\t\t\t}\n\t\t\t\tif (typeof value === \"object\" && value !== null) {\n\t\t\t\t\tif (typeof value.toString === \"function\" && value.toString !== Object.prototype.toString) {\n\t\t\t\t\t\treturn value.toString();\n\t\t\t\t\t}\n\t\t\t\t\treturn inspect(value, {\n\t\t\t\t\t\tdepth: 0,\n\t\t\t\t\t\tcolors: false\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn String(value);\n\t\t\t}\n\t\t\tcase \"%d\": {\n\t\t\t\tconst value = args[i++];\n\t\t\t\tif (typeof value === \"bigint\") {\n\t\t\t\t\treturn `${value.toString()}n`;\n\t\t\t\t}\n\t\t\t\treturn Number(value).toString();\n\t\t\t}\n\t\t\tcase \"%i\": {\n\t\t\t\tconst value = args[i++];\n\t\t\t\tif (typeof value === \"bigint\") {\n\t\t\t\t\treturn `${value.toString()}n`;\n\t\t\t\t}\n\t\t\t\treturn Number.parseInt(String(value)).toString();\n\t\t\t}\n\t\t\tcase \"%f\": return Number.parseFloat(String(args[i++])).toString();\n\t\t\tcase \"%o\": return inspect(args[i++], {\n\t\t\t\tshowHidden: true,\n\t\t\t\tshowProxy: true\n\t\t\t});\n\t\t\tcase \"%O\": return inspect(args[i++]);\n\t\t\tcase \"%c\": {\n\t\t\t\ti++;\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\tcase \"%j\": try {\n\t\t\t\treturn JSON.stringify(args[i++]);\n\t\t\t} catch (err) {\n\t\t\t\tconst m = err.message;\n\t\t\t\tif (m.includes(\"circular structure\") || m.includes(\"cyclic structures\") || m.includes(\"cyclic object\")) {\n\t\t\t\t\treturn \"[Circular]\";\n\t\t\t\t}\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tdefault: return x;\n\t\t}\n\t});\n\tfor (let x = args[i]; i < len; x = args[++i]) {\n\t\tif (x === null || typeof x !== \"object\") {\n\t\t\tstr += ` ${x}`;\n\t\t} else {\n\t\t\tstr += ` ${inspect(x)}`;\n\t\t}\n\t}\n\treturn str;\n}\nfunction inspect(obj, options = {}) {\n\tif (options.truncate === 0) {\n\t\toptions.truncate = Number.POSITIVE_INFINITY;\n\t}\n\treturn inspect$1(obj, options);\n}\nfunction objDisplay(obj, options = {}) {\n\tif (typeof options.truncate === \"undefined\") {\n\t\toptions.truncate = 40;\n\t}\n\tconst str = inspect(obj, options);\n\tconst type = Object.prototype.toString.call(obj);\n\tif (options.truncate && str.length >= options.truncate) {\n\t\tif (type === \"[object Function]\") {\n\t\t\tconst fn = obj;\n\t\t\treturn !fn.name ? \"[Function]\" : `[Function: ${fn.name}]`;\n\t\t} else if (type === \"[object Array]\") {\n\t\t\treturn `[ Array(${obj.length}) ]`;\n\t\t} else if (type === \"[object Object]\") {\n\t\t\tconst keys = Object.keys(obj);\n\t\t\tconst kstr = keys.length > 2 ? `${keys.splice(0, 2).join(\", \")}, ...` : keys.join(\", \");\n\t\t\treturn `{ Object (${kstr}) }`;\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n\treturn str;\n}\n\nexport { format, formatRegExp, inspect, objDisplay, stringify };\n", "// TODO: this is all copy pasted from Vite - can they expose a module that exports only constants?\nconst KNOWN_ASSET_TYPES = [\n\t\"apng\",\n\t\"bmp\",\n\t\"png\",\n\t\"jpe?g\",\n\t\"jfif\",\n\t\"pjpeg\",\n\t\"pjp\",\n\t\"gif\",\n\t\"svg\",\n\t\"ico\",\n\t\"webp\",\n\t\"avif\",\n\t\"mp4\",\n\t\"webm\",\n\t\"ogg\",\n\t\"mp3\",\n\t\"wav\",\n\t\"flac\",\n\t\"aac\",\n\t\"woff2?\",\n\t\"eot\",\n\t\"ttf\",\n\t\"otf\",\n\t\"webmanifest\",\n\t\"pdf\",\n\t\"txt\"\n];\nconst KNOWN_ASSET_RE = new RegExp(`\\\\.(${KNOWN_ASSET_TYPES.join(\"|\")})$`);\nconst CSS_LANGS_RE = /\\.(css|less|sass|scss|styl|stylus|pcss|postcss|sss)(?:$|\\?)/;\n/**\n* Prefix for resolved Ids that are not valid browser import specifiers\n*/\nconst VALID_ID_PREFIX = `/@id/`;\n/**\n* Plugins that use 'virtual modules' (e.g. for helper functions), prefix the\n* module ID with `\\0`, a convention from the rollup ecosystem.\n* This prevents other plugins from trying to process the id (like node resolution),\n* and core features like sourcemaps can use this info to differentiate between\n* virtual modules and regular files.\n* `\\0` is not a permitted char in import URLs so we have to replace them during\n* import analysis. The id will be decoded back before entering the plugins pipeline.\n* These encoded virtual ids are also prefixed by the VALID_ID_PREFIX, so virtual\n* modules in the browser end up encoded as `/@id/__x00__{id}`\n*/\nconst NULL_BYTE_PLACEHOLDER = `__x00__`;\n\nexport { CSS_LANGS_RE, KNOWN_ASSET_RE, KNOWN_ASSET_TYPES, NULL_BYTE_PLACEHOLDER, VALID_ID_PREFIX };\n", "import { VALID_ID_PREFIX, NULL_BYTE_PLACEHOLDER } from './constants.js';\n\n// port from nanoid\n// https://github.com/ai/nanoid\nconst urlAlphabet = \"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict\";\nfunction nanoid(size = 21) {\n\tlet id = \"\";\n\tlet i = size;\n\twhile (i--) {\n\t\tid += urlAlphabet[Math.random() * 64 | 0];\n\t}\n\treturn id;\n}\n\nconst RealDate = Date;\nfunction random(seed) {\n\tconst x = Math.sin(seed++) * 1e4;\n\treturn x - Math.floor(x);\n}\nfunction shuffle(array, seed = RealDate.now()) {\n\tlet length = array.length;\n\twhile (length) {\n\t\tconst index = Math.floor(random(seed) * length--);\n\t\tconst previous = array[length];\n\t\tarray[length] = array[index];\n\t\tarray[index] = previous;\n\t\t++seed;\n\t}\n\treturn array;\n}\n\n/**\n* Get original stacktrace without source map support the most performant way.\n* - Create only 1 stack frame.\n* - Rewrite prepareStackTrace to bypass \"support-stack-trace\" (usually takes ~250ms).\n*/\nfunction createSimpleStackTrace(options) {\n\tconst { message = \"$$stack trace error\", stackTraceLimit = 1 } = options || {};\n\tconst limit = Error.stackTraceLimit;\n\tconst prepareStackTrace = Error.prepareStackTrace;\n\tError.stackTraceLimit = stackTraceLimit;\n\tError.prepareStackTrace = (e) => e.stack;\n\tconst err = new Error(message);\n\tconst stackTrace = err.stack || \"\";\n\tError.prepareStackTrace = prepareStackTrace;\n\tError.stackTraceLimit = limit;\n\treturn stackTrace;\n}\nfunction notNullish(v) {\n\treturn v != null;\n}\nfunction assertTypes(value, name, types) {\n\tconst receivedType = typeof value;\n\tconst pass = types.includes(receivedType);\n\tif (!pass) {\n\t\tthrow new TypeError(`${name} value must be ${types.join(\" or \")}, received \"${receivedType}\"`);\n\t}\n}\nfunction isPrimitive(value) {\n\treturn value === null || typeof value !== \"function\" && typeof value !== \"object\";\n}\nfunction slash(path) {\n\treturn path.replace(/\\\\/g, \"/\");\n}\nconst postfixRE = /[?#].*$/;\nfunction cleanUrl(url) {\n\treturn url.replace(postfixRE, \"\");\n}\nconst externalRE = /^(?:[a-z]+:)?\\/\\//;\nconst isExternalUrl = (url) => externalRE.test(url);\n/**\n* Prepend `/@id/` and replace null byte so the id is URL-safe.\n* This is prepended to resolved ids that are not valid browser\n* import specifiers by the importAnalysis plugin.\n*/\nfunction wrapId(id) {\n\treturn id.startsWith(VALID_ID_PREFIX) ? id : VALID_ID_PREFIX + id.replace(\"\\0\", NULL_BYTE_PLACEHOLDER);\n}\n/**\n* Undo {@link wrapId}'s `/@id/` and null byte replacements.\n*/\nfunction unwrapId(id) {\n\treturn id.startsWith(VALID_ID_PREFIX) ? id.slice(VALID_ID_PREFIX.length).replace(NULL_BYTE_PLACEHOLDER, \"\\0\") : id;\n}\nfunction withTrailingSlash(path) {\n\tif (path.at(-1) !== \"/\") {\n\t\treturn `${path}/`;\n\t}\n\treturn path;\n}\nconst bareImportRE = /^(?![a-z]:)[\\w@](?!.*:\\/\\/)/i;\nfunction isBareImport(id) {\n\treturn bareImportRE.test(id);\n}\nfunction toArray(array) {\n\tif (array === null || array === undefined) {\n\t\tarray = [];\n\t}\n\tif (Array.isArray(array)) {\n\t\treturn array;\n\t}\n\treturn [array];\n}\nfunction isObject(item) {\n\treturn item != null && typeof item === \"object\" && !Array.isArray(item);\n}\nfunction isFinalObj(obj) {\n\treturn obj === Object.prototype || obj === Function.prototype || obj === RegExp.prototype;\n}\nfunction getType(value) {\n\treturn Object.prototype.toString.apply(value).slice(8, -1);\n}\nfunction collectOwnProperties(obj, collector) {\n\tconst collect = typeof collector === \"function\" ? collector : (key) => collector.add(key);\n\tObject.getOwnPropertyNames(obj).forEach(collect);\n\tObject.getOwnPropertySymbols(obj).forEach(collect);\n}\nfunction getOwnProperties(obj) {\n\tconst ownProps = new Set();\n\tif (isFinalObj(obj)) {\n\t\treturn [];\n\t}\n\tcollectOwnProperties(obj, ownProps);\n\treturn Array.from(ownProps);\n}\nconst defaultCloneOptions = { forceWritable: false };\nfunction deepClone(val, options = defaultCloneOptions) {\n\tconst seen = new WeakMap();\n\treturn clone(val, seen, options);\n}\nfunction clone(val, seen, options = defaultCloneOptions) {\n\tlet k, out;\n\tif (seen.has(val)) {\n\t\treturn seen.get(val);\n\t}\n\tif (Array.isArray(val)) {\n\t\tout = Array.from({ length: k = val.length });\n\t\tseen.set(val, out);\n\t\twhile (k--) {\n\t\t\tout[k] = clone(val[k], seen, options);\n\t\t}\n\t\treturn out;\n\t}\n\tif (Object.prototype.toString.call(val) === \"[object Object]\") {\n\t\tout = Object.create(Object.getPrototypeOf(val));\n\t\tseen.set(val, out);\n\t\t// we don't need properties from prototype\n\t\tconst props = getOwnProperties(val);\n\t\tfor (const k of props) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(val, k);\n\t\t\tif (!descriptor) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst cloned = clone(val[k], seen, options);\n\t\t\tif (options.forceWritable) {\n\t\t\t\tObject.defineProperty(out, k, {\n\t\t\t\t\tenumerable: descriptor.enumerable,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: cloned\n\t\t\t\t});\n\t\t\t} else if (\"get\" in descriptor) {\n\t\t\t\tObject.defineProperty(out, k, {\n\t\t\t\t\t...descriptor,\n\t\t\t\t\tget() {\n\t\t\t\t\t\treturn cloned;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tObject.defineProperty(out, k, {\n\t\t\t\t\t...descriptor,\n\t\t\t\t\tvalue: cloned\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\treturn val;\n}\nfunction noop() {}\nfunction objectAttr(source, path, defaultValue = undefined) {\n\t// a[3].b -> a.3.b\n\tconst paths = path.replace(/\\[(\\d+)\\]/g, \".$1\").split(\".\");\n\tlet result = source;\n\tfor (const p of paths) {\n\t\tresult = new Object(result)[p];\n\t\tif (result === undefined) {\n\t\t\treturn defaultValue;\n\t\t}\n\t}\n\treturn result;\n}\nfunction createDefer() {\n\tlet resolve = null;\n\tlet reject = null;\n\tconst p = new Promise((_resolve, _reject) => {\n\t\tresolve = _resolve;\n\t\treject = _reject;\n\t});\n\tp.resolve = resolve;\n\tp.reject = reject;\n\treturn p;\n}\n/**\n* If code starts with a function call, will return its last index, respecting arguments.\n* This will return 25 - last ending character of toMatch \")\"\n* Also works with callbacks\n* ```\n* toMatch({ test: '123' });\n* toBeAliased('123')\n* ```\n*/\nfunction getCallLastIndex(code) {\n\tlet charIndex = -1;\n\tlet inString = null;\n\tlet startedBracers = 0;\n\tlet endedBracers = 0;\n\tlet beforeChar = null;\n\twhile (charIndex <= code.length) {\n\t\tbeforeChar = code[charIndex];\n\t\tcharIndex++;\n\t\tconst char = code[charIndex];\n\t\tconst isCharString = char === \"\\\"\" || char === \"'\" || char === \"`\";\n\t\tif (isCharString && beforeChar !== \"\\\\\") {\n\t\t\tif (inString === char) {\n\t\t\t\tinString = null;\n\t\t\t} else if (!inString) {\n\t\t\t\tinString = char;\n\t\t\t}\n\t\t}\n\t\tif (!inString) {\n\t\t\tif (char === \"(\") {\n\t\t\t\tstartedBracers++;\n\t\t\t}\n\t\t\tif (char === \")\") {\n\t\t\t\tendedBracers++;\n\t\t\t}\n\t\t}\n\t\tif (startedBracers && endedBracers && startedBracers === endedBracers) {\n\t\t\treturn charIndex;\n\t\t}\n\t}\n\treturn null;\n}\nfunction isNegativeNaN(val) {\n\tif (!Number.isNaN(val)) {\n\t\treturn false;\n\t}\n\tconst f64 = new Float64Array(1);\n\tf64[0] = val;\n\tconst u32 = new Uint32Array(f64.buffer);\n\tconst isNegative = u32[1] >>> 31 === 1;\n\treturn isNegative;\n}\nfunction toString(v) {\n\treturn Object.prototype.toString.call(v);\n}\nfunction isPlainObject(val) {\n\treturn toString(val) === \"[object Object]\" && (!val.constructor || val.constructor.name === \"Object\");\n}\nfunction isMergeableObject(item) {\n\treturn isPlainObject(item) && !Array.isArray(item);\n}\n/**\n* Deep merge :P\n*\n* Will merge objects only if they are plain\n*\n* Do not merge types - it is very expensive and usually it's better to case a type here\n*/\nfunction deepMerge(target, ...sources) {\n\tif (!sources.length) {\n\t\treturn target;\n\t}\n\tconst source = sources.shift();\n\tif (source === undefined) {\n\t\treturn target;\n\t}\n\tif (isMergeableObject(target) && isMergeableObject(source)) {\n\t\tObject.keys(source).forEach((key) => {\n\t\t\tconst _source = source;\n\t\t\tif (isMergeableObject(_source[key])) {\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\ttarget[key] = {};\n\t\t\t\t}\n\t\t\t\tdeepMerge(target[key], _source[key]);\n\t\t\t} else {\n\t\t\t\ttarget[key] = _source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn deepMerge(target, ...sources);\n}\n\nexport { assertTypes, cleanUrl, clone, createDefer, createSimpleStackTrace, deepClone, deepMerge, getCallLastIndex, getOwnProperties, getType, isBareImport, isExternalUrl, isNegativeNaN, isObject, isPrimitive, nanoid, noop, notNullish, objectAttr, shuffle, slash, toArray, unwrapId, withTrailingSlash, wrapId };\n", "function getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nexport { getDefaultExportFromCjs as g };\n", "import { plugins, format } from '@vitest/pretty-format';\nimport c from 'tinyrainbow';\nimport { stringify } from './display.js';\nimport { deepClone, getOwnProperties, getType as getType$1 } from './helpers.js';\nimport { g as getDefaultExportFromCjs } from './chunk-_commonjsHelpers.js';\nimport './constants.js';\n\n/**\n* Diff Match and Patch\n* Copyright 2018 The diff-match-patch Authors.\n* https://github.com/google/diff-match-patch\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n/**\n* @fileoverview Computes the difference between two texts to create a patch.\n* Applies the patch onto another text, allowing for errors.\n* @author fraser@google.com (Neil Fraser)\n*/\n/**\n* CHANGES by pedrottimark to diff_match_patch_uncompressed.ts file:\n*\n* 1. Delete anything not needed to use diff_cleanupSemantic method\n* 2. Convert from prototype properties to var declarations\n* 3. Convert Diff to class from constructor and prototype\n* 4. Add type annotations for arguments and return values\n* 5. Add exports\n*/\n/**\n* The data structure representing a diff is an array of tuples:\n* [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n* which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n*/\nconst DIFF_DELETE = -1;\nconst DIFF_INSERT = 1;\nconst DIFF_EQUAL = 0;\n/**\n* Class representing one diff tuple.\n* Attempts to look like a two-element array (which is what this used to be).\n* @param {number} op Operation, one of: DIFF_DELETE, DIFF_INSERT, DIFF_EQUAL.\n* @param {string} text Text to be deleted, inserted, or retained.\n* @constructor\n*/\nclass Diff {\n\t0;\n\t1;\n\tconstructor(op, text) {\n\t\tthis[0] = op;\n\t\tthis[1] = text;\n\t}\n}\n/**\n* Determine the common prefix of two strings.\n* @param {string} text1 First string.\n* @param {string} text2 Second string.\n* @return {number} The number of characters common to the start of each\n*     string.\n*/\nfunction diff_commonPrefix(text1, text2) {\n\t// Quick check for common null cases.\n\tif (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n\t\treturn 0;\n\t}\n\t// Binary search.\n\t// Performance analysis: https://neil.fraser.name/news/2007/10/09/\n\tlet pointermin = 0;\n\tlet pointermax = Math.min(text1.length, text2.length);\n\tlet pointermid = pointermax;\n\tlet pointerstart = 0;\n\twhile (pointermin < pointermid) {\n\t\tif (text1.substring(pointerstart, pointermid) === text2.substring(pointerstart, pointermid)) {\n\t\t\tpointermin = pointermid;\n\t\t\tpointerstart = pointermin;\n\t\t} else {\n\t\t\tpointermax = pointermid;\n\t\t}\n\t\tpointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n\t}\n\treturn pointermid;\n}\n/**\n* Determine the common suffix of two strings.\n* @param {string} text1 First string.\n* @param {string} text2 Second string.\n* @return {number} The number of characters common to the end of each string.\n*/\nfunction diff_commonSuffix(text1, text2) {\n\t// Quick check for common null cases.\n\tif (!text1 || !text2 || text1.charAt(text1.length - 1) !== text2.charAt(text2.length - 1)) {\n\t\treturn 0;\n\t}\n\t// Binary search.\n\t// Performance analysis: https://neil.fraser.name/news/2007/10/09/\n\tlet pointermin = 0;\n\tlet pointermax = Math.min(text1.length, text2.length);\n\tlet pointermid = pointermax;\n\tlet pointerend = 0;\n\twhile (pointermin < pointermid) {\n\t\tif (text1.substring(text1.length - pointermid, text1.length - pointerend) === text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n\t\t\tpointermin = pointermid;\n\t\t\tpointerend = pointermin;\n\t\t} else {\n\t\t\tpointermax = pointermid;\n\t\t}\n\t\tpointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n\t}\n\treturn pointermid;\n}\n/**\n* Determine if the suffix of one string is the prefix of another.\n* @param {string} text1 First string.\n* @param {string} text2 Second string.\n* @return {number} The number of characters common to the end of the first\n*     string and the start of the second string.\n* @private\n*/\nfunction diff_commonOverlap_(text1, text2) {\n\t// Cache the text lengths to prevent multiple calls.\n\tconst text1_length = text1.length;\n\tconst text2_length = text2.length;\n\t// Eliminate the null case.\n\tif (text1_length === 0 || text2_length === 0) {\n\t\treturn 0;\n\t}\n\t// Truncate the longer string.\n\tif (text1_length > text2_length) {\n\t\ttext1 = text1.substring(text1_length - text2_length);\n\t} else if (text1_length < text2_length) {\n\t\ttext2 = text2.substring(0, text1_length);\n\t}\n\tconst text_length = Math.min(text1_length, text2_length);\n\t// Quick check for the worst case.\n\tif (text1 === text2) {\n\t\treturn text_length;\n\t}\n\t// Start by looking for a single character match\n\t// and increase length until no match is found.\n\t// Performance analysis: https://neil.fraser.name/news/2010/11/04/\n\tlet best = 0;\n\tlet length = 1;\n\twhile (true) {\n\t\tconst pattern = text1.substring(text_length - length);\n\t\tconst found = text2.indexOf(pattern);\n\t\tif (found === -1) {\n\t\t\treturn best;\n\t\t}\n\t\tlength += found;\n\t\tif (found === 0 || text1.substring(text_length - length) === text2.substring(0, length)) {\n\t\t\tbest = length;\n\t\t\tlength++;\n\t\t}\n\t}\n}\n/**\n* Reduce the number of edits by eliminating semantically trivial equalities.\n* @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n*/\nfunction diff_cleanupSemantic(diffs) {\n\tlet changes = false;\n\tconst equalities = [];\n\tlet equalitiesLength = 0;\n\t/** @type {?string} */\n\tlet lastEquality = null;\n\t// Always equal to diffs[equalities[equalitiesLength - 1]][1]\n\tlet pointer = 0;\n\t// Number of characters that changed prior to the equality.\n\tlet length_insertions1 = 0;\n\tlet length_deletions1 = 0;\n\t// Number of characters that changed after the equality.\n\tlet length_insertions2 = 0;\n\tlet length_deletions2 = 0;\n\twhile (pointer < diffs.length) {\n\t\tif (diffs[pointer][0] === DIFF_EQUAL) {\n\t\t\t// Equality found.\n\t\t\tequalities[equalitiesLength++] = pointer;\n\t\t\tlength_insertions1 = length_insertions2;\n\t\t\tlength_deletions1 = length_deletions2;\n\t\t\tlength_insertions2 = 0;\n\t\t\tlength_deletions2 = 0;\n\t\t\tlastEquality = diffs[pointer][1];\n\t\t} else {\n\t\t\t// An insertion or deletion.\n\t\t\tif (diffs[pointer][0] === DIFF_INSERT) {\n\t\t\t\tlength_insertions2 += diffs[pointer][1].length;\n\t\t\t} else {\n\t\t\t\tlength_deletions2 += diffs[pointer][1].length;\n\t\t\t}\n\t\t\t// Eliminate an equality that is smaller or equal to the edits on both\n\t\t\t// sides of it.\n\t\t\tif (lastEquality && lastEquality.length <= Math.max(length_insertions1, length_deletions1) && lastEquality.length <= Math.max(length_insertions2, length_deletions2)) {\n\t\t\t\t// Duplicate record.\n\t\t\t\tdiffs.splice(equalities[equalitiesLength - 1], 0, new Diff(DIFF_DELETE, lastEquality));\n\t\t\t\t// Change second copy to insert.\n\t\t\t\tdiffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n\t\t\t\t// Throw away the equality we just deleted.\n\t\t\t\tequalitiesLength--;\n\t\t\t\t// Throw away the previous equality (it needs to be reevaluated).\n\t\t\t\tequalitiesLength--;\n\t\t\t\tpointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n\t\t\t\tlength_insertions1 = 0;\n\t\t\t\tlength_deletions1 = 0;\n\t\t\t\tlength_insertions2 = 0;\n\t\t\t\tlength_deletions2 = 0;\n\t\t\t\tlastEquality = null;\n\t\t\t\tchanges = true;\n\t\t\t}\n\t\t}\n\t\tpointer++;\n\t}\n\t// Normalize the diff.\n\tif (changes) {\n\t\tdiff_cleanupMerge(diffs);\n\t}\n\tdiff_cleanupSemanticLossless(diffs);\n\t// Find any overlaps between deletions and insertions.\n\t// e.g: <del>abcxxx</del><ins>xxxdef</ins>\n\t//   -> <del>abc</del>xxx<ins>def</ins>\n\t// e.g: <del>xxxabc</del><ins>defxxx</ins>\n\t//   -> <ins>def</ins>xxx<del>abc</del>\n\t// Only extract an overlap if it is as big as the edit ahead or behind it.\n\tpointer = 1;\n\twhile (pointer < diffs.length) {\n\t\tif (diffs[pointer - 1][0] === DIFF_DELETE && diffs[pointer][0] === DIFF_INSERT) {\n\t\t\tconst deletion = diffs[pointer - 1][1];\n\t\t\tconst insertion = diffs[pointer][1];\n\t\t\tconst overlap_length1 = diff_commonOverlap_(deletion, insertion);\n\t\t\tconst overlap_length2 = diff_commonOverlap_(insertion, deletion);\n\t\t\tif (overlap_length1 >= overlap_length2) {\n\t\t\t\tif (overlap_length1 >= deletion.length / 2 || overlap_length1 >= insertion.length / 2) {\n\t\t\t\t\t// Overlap found.  Insert an equality and trim the surrounding edits.\n\t\t\t\t\tdiffs.splice(pointer, 0, new Diff(DIFF_EQUAL, insertion.substring(0, overlap_length1)));\n\t\t\t\t\tdiffs[pointer - 1][1] = deletion.substring(0, deletion.length - overlap_length1);\n\t\t\t\t\tdiffs[pointer + 1][1] = insertion.substring(overlap_length1);\n\t\t\t\t\tpointer++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (overlap_length2 >= deletion.length / 2 || overlap_length2 >= insertion.length / 2) {\n\t\t\t\t\t// Reverse overlap found.\n\t\t\t\t\t// Insert an equality and swap and trim the surrounding edits.\n\t\t\t\t\tdiffs.splice(pointer, 0, new Diff(DIFF_EQUAL, deletion.substring(0, overlap_length2)));\n\t\t\t\t\tdiffs[pointer - 1][0] = DIFF_INSERT;\n\t\t\t\t\tdiffs[pointer - 1][1] = insertion.substring(0, insertion.length - overlap_length2);\n\t\t\t\t\tdiffs[pointer + 1][0] = DIFF_DELETE;\n\t\t\t\t\tdiffs[pointer + 1][1] = deletion.substring(overlap_length2);\n\t\t\t\t\tpointer++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpointer++;\n\t\t}\n\t\tpointer++;\n\t}\n}\n// Define some regex patterns for matching boundaries.\nconst nonAlphaNumericRegex_ = /[^a-z0-9]/i;\nconst whitespaceRegex_ = /\\s/;\nconst linebreakRegex_ = /[\\r\\n]/;\nconst blanklineEndRegex_ = /\\n\\r?\\n$/;\nconst blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n/**\n* Look for single edits surrounded on both sides by equalities\n* which can be shifted sideways to align the edit to a word boundary.\n* e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n* @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n*/\nfunction diff_cleanupSemanticLossless(diffs) {\n\tlet pointer = 1;\n\t// Intentionally ignore the first and last element (don't need checking).\n\twhile (pointer < diffs.length - 1) {\n\t\tif (diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL) {\n\t\t\t// This is a single edit surrounded by equalities.\n\t\t\tlet equality1 = diffs[pointer - 1][1];\n\t\t\tlet edit = diffs[pointer][1];\n\t\t\tlet equality2 = diffs[pointer + 1][1];\n\t\t\t// First, shift the edit as far left as possible.\n\t\t\tconst commonOffset = diff_commonSuffix(equality1, edit);\n\t\t\tif (commonOffset) {\n\t\t\t\tconst commonString = edit.substring(edit.length - commonOffset);\n\t\t\t\tequality1 = equality1.substring(0, equality1.length - commonOffset);\n\t\t\t\tedit = commonString + edit.substring(0, edit.length - commonOffset);\n\t\t\t\tequality2 = commonString + equality2;\n\t\t\t}\n\t\t\t// Second, step character by character right, looking for the best fit.\n\t\t\tlet bestEquality1 = equality1;\n\t\t\tlet bestEdit = edit;\n\t\t\tlet bestEquality2 = equality2;\n\t\t\tlet bestScore = diff_cleanupSemanticScore_(equality1, edit) + diff_cleanupSemanticScore_(edit, equality2);\n\t\t\twhile (edit.charAt(0) === equality2.charAt(0)) {\n\t\t\t\tequality1 += edit.charAt(0);\n\t\t\t\tedit = edit.substring(1) + equality2.charAt(0);\n\t\t\t\tequality2 = equality2.substring(1);\n\t\t\t\tconst score = diff_cleanupSemanticScore_(equality1, edit) + diff_cleanupSemanticScore_(edit, equality2);\n\t\t\t\t// The >= encourages trailing rather than leading whitespace on edits.\n\t\t\t\tif (score >= bestScore) {\n\t\t\t\t\tbestScore = score;\n\t\t\t\t\tbestEquality1 = equality1;\n\t\t\t\t\tbestEdit = edit;\n\t\t\t\t\tbestEquality2 = equality2;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (diffs[pointer - 1][1] !== bestEquality1) {\n\t\t\t\t// We have an improvement, save it back to the diff.\n\t\t\t\tif (bestEquality1) {\n\t\t\t\t\tdiffs[pointer - 1][1] = bestEquality1;\n\t\t\t\t} else {\n\t\t\t\t\tdiffs.splice(pointer - 1, 1);\n\t\t\t\t\tpointer--;\n\t\t\t\t}\n\t\t\t\tdiffs[pointer][1] = bestEdit;\n\t\t\t\tif (bestEquality2) {\n\t\t\t\t\tdiffs[pointer + 1][1] = bestEquality2;\n\t\t\t\t} else {\n\t\t\t\t\tdiffs.splice(pointer + 1, 1);\n\t\t\t\t\tpointer--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tpointer++;\n\t}\n}\n/**\n* Reorder and merge like edit sections.  Merge equalities.\n* Any edit section can move as long as it doesn't cross an equality.\n* @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n*/\nfunction diff_cleanupMerge(diffs) {\n\tvar _diffs$at;\n\t// Add a dummy entry at the end.\n\tdiffs.push(new Diff(DIFF_EQUAL, \"\"));\n\tlet pointer = 0;\n\tlet count_delete = 0;\n\tlet count_insert = 0;\n\tlet text_delete = \"\";\n\tlet text_insert = \"\";\n\tlet commonlength;\n\twhile (pointer < diffs.length) {\n\t\tswitch (diffs[pointer][0]) {\n\t\t\tcase DIFF_INSERT:\n\t\t\t\tcount_insert++;\n\t\t\t\ttext_insert += diffs[pointer][1];\n\t\t\t\tpointer++;\n\t\t\t\tbreak;\n\t\t\tcase DIFF_DELETE:\n\t\t\t\tcount_delete++;\n\t\t\t\ttext_delete += diffs[pointer][1];\n\t\t\t\tpointer++;\n\t\t\t\tbreak;\n\t\t\tcase DIFF_EQUAL:\n\t\t\t\t// Upon reaching an equality, check for prior redundancies.\n\t\t\t\tif (count_delete + count_insert > 1) {\n\t\t\t\t\tif (count_delete !== 0 && count_insert !== 0) {\n\t\t\t\t\t\t// Factor out any common prefixes.\n\t\t\t\t\t\tcommonlength = diff_commonPrefix(text_insert, text_delete);\n\t\t\t\t\t\tif (commonlength !== 0) {\n\t\t\t\t\t\t\tif (pointer - count_delete - count_insert > 0 && diffs[pointer - count_delete - count_insert - 1][0] === DIFF_EQUAL) {\n\t\t\t\t\t\t\t\tdiffs[pointer - count_delete - count_insert - 1][1] += text_insert.substring(0, commonlength);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdiffs.splice(0, 0, new Diff(DIFF_EQUAL, text_insert.substring(0, commonlength)));\n\t\t\t\t\t\t\t\tpointer++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttext_insert = text_insert.substring(commonlength);\n\t\t\t\t\t\t\ttext_delete = text_delete.substring(commonlength);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Factor out any common suffixes.\n\t\t\t\t\t\tcommonlength = diff_commonSuffix(text_insert, text_delete);\n\t\t\t\t\t\tif (commonlength !== 0) {\n\t\t\t\t\t\t\tdiffs[pointer][1] = text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];\n\t\t\t\t\t\t\ttext_insert = text_insert.substring(0, text_insert.length - commonlength);\n\t\t\t\t\t\t\ttext_delete = text_delete.substring(0, text_delete.length - commonlength);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Delete the offending records and add the merged ones.\n\t\t\t\t\tpointer -= count_delete + count_insert;\n\t\t\t\t\tdiffs.splice(pointer, count_delete + count_insert);\n\t\t\t\t\tif (text_delete.length) {\n\t\t\t\t\t\tdiffs.splice(pointer, 0, new Diff(DIFF_DELETE, text_delete));\n\t\t\t\t\t\tpointer++;\n\t\t\t\t\t}\n\t\t\t\t\tif (text_insert.length) {\n\t\t\t\t\t\tdiffs.splice(pointer, 0, new Diff(DIFF_INSERT, text_insert));\n\t\t\t\t\t\tpointer++;\n\t\t\t\t\t}\n\t\t\t\t\tpointer++;\n\t\t\t\t} else if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n\t\t\t\t\t// Merge this equality with the previous one.\n\t\t\t\t\tdiffs[pointer - 1][1] += diffs[pointer][1];\n\t\t\t\t\tdiffs.splice(pointer, 1);\n\t\t\t\t} else {\n\t\t\t\t\tpointer++;\n\t\t\t\t}\n\t\t\t\tcount_insert = 0;\n\t\t\t\tcount_delete = 0;\n\t\t\t\ttext_delete = \"\";\n\t\t\t\ttext_insert = \"\";\n\t\t\t\tbreak;\n\t\t}\n\t}\n\tif (((_diffs$at = diffs.at(-1)) === null || _diffs$at === void 0 ? void 0 : _diffs$at[1]) === \"\") {\n\t\tdiffs.pop();\n\t}\n\t// Second pass: look for single edits surrounded on both sides by equalities\n\t// which can be shifted sideways to eliminate an equality.\n\t// e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n\tlet changes = false;\n\tpointer = 1;\n\t// Intentionally ignore the first and last element (don't need checking).\n\twhile (pointer < diffs.length - 1) {\n\t\tif (diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL) {\n\t\t\t// This is a single edit surrounded by equalities.\n\t\t\tif (diffs[pointer][1].substring(diffs[pointer][1].length - diffs[pointer - 1][1].length) === diffs[pointer - 1][1]) {\n\t\t\t\t// Shift the edit over the previous equality.\n\t\t\t\tdiffs[pointer][1] = diffs[pointer - 1][1] + diffs[pointer][1].substring(0, diffs[pointer][1].length - diffs[pointer - 1][1].length);\n\t\t\t\tdiffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n\t\t\t\tdiffs.splice(pointer - 1, 1);\n\t\t\t\tchanges = true;\n\t\t\t} else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) === diffs[pointer + 1][1]) {\n\t\t\t\t// Shift the edit over the next equality.\n\t\t\t\tdiffs[pointer - 1][1] += diffs[pointer + 1][1];\n\t\t\t\tdiffs[pointer][1] = diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1];\n\t\t\t\tdiffs.splice(pointer + 1, 1);\n\t\t\t\tchanges = true;\n\t\t\t}\n\t\t}\n\t\tpointer++;\n\t}\n\t// If shifts were made, the diff needs reordering and another shift sweep.\n\tif (changes) {\n\t\tdiff_cleanupMerge(diffs);\n\t}\n}\n/**\n* Given two strings, compute a score representing whether the internal\n* boundary falls on logical boundaries.\n* Scores range from 6 (best) to 0 (worst).\n* Closure, but does not reference any external variables.\n* @param {string} one First string.\n* @param {string} two Second string.\n* @return {number} The score.\n* @private\n*/\nfunction diff_cleanupSemanticScore_(one, two) {\n\tif (!one || !two) {\n\t\t// Edges are the best.\n\t\treturn 6;\n\t}\n\t// Each port of this function behaves slightly differently due to\n\t// subtle differences in each language's definition of things like\n\t// 'whitespace'.  Since this function's purpose is largely cosmetic,\n\t// the choice has been made to use each language's native features\n\t// rather than force total conformity.\n\tconst char1 = one.charAt(one.length - 1);\n\tconst char2 = two.charAt(0);\n\tconst nonAlphaNumeric1 = char1.match(nonAlphaNumericRegex_);\n\tconst nonAlphaNumeric2 = char2.match(nonAlphaNumericRegex_);\n\tconst whitespace1 = nonAlphaNumeric1 && char1.match(whitespaceRegex_);\n\tconst whitespace2 = nonAlphaNumeric2 && char2.match(whitespaceRegex_);\n\tconst lineBreak1 = whitespace1 && char1.match(linebreakRegex_);\n\tconst lineBreak2 = whitespace2 && char2.match(linebreakRegex_);\n\tconst blankLine1 = lineBreak1 && one.match(blanklineEndRegex_);\n\tconst blankLine2 = lineBreak2 && two.match(blanklineStartRegex_);\n\tif (blankLine1 || blankLine2) {\n\t\t// Five points for blank lines.\n\t\treturn 5;\n\t} else if (lineBreak1 || lineBreak2) {\n\t\t// Four points for line breaks.\n\t\treturn 4;\n\t} else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n\t\t// Three points for end of sentences.\n\t\treturn 3;\n\t} else if (whitespace1 || whitespace2) {\n\t\t// Two points for whitespace.\n\t\treturn 2;\n\t} else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n\t\t// One point for non-alphanumeric.\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\n/**\n* Copyright (c) Meta Platforms, Inc. and affiliates.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\nconst NO_DIFF_MESSAGE = \"Compared values have no visual difference.\";\nconst SIMILAR_MESSAGE = \"Compared values serialize to the same structure.\\n\" + \"Printing internal object structure without calling `toJSON` instead.\";\n\nvar build = {};\n\nvar hasRequiredBuild;\n\nfunction requireBuild () {\n\tif (hasRequiredBuild) return build;\n\thasRequiredBuild = 1;\n\n\tObject.defineProperty(build, '__esModule', {\n\t  value: true\n\t});\n\tbuild.default = diffSequence;\n\t/**\n\t * Copyright (c) Meta Platforms, Inc. and affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\n\t// This diff-sequences package implements the linear space variation in\n\t// An O(ND) Difference Algorithm and Its Variations by Eugene W. Myers\n\n\t// Relationship in notation between Myers paper and this package:\n\t// A is a\n\t// N is aLength, aEnd - aStart, and so on\n\t// x is aIndex, aFirst, aLast, and so on\n\t// B is b\n\t// M is bLength, bEnd - bStart, and so on\n\t// y is bIndex, bFirst, bLast, and so on\n\t// Δ = N - M is negative of baDeltaLength = bLength - aLength\n\t// D is d\n\t// k is kF\n\t// k + Δ is kF = kR - baDeltaLength\n\t// V is aIndexesF or aIndexesR (see comment below about Indexes type)\n\t// index intervals [1, N] and [1, M] are [0, aLength) and [0, bLength)\n\t// starting point in forward direction (0, 0) is (-1, -1)\n\t// starting point in reverse direction (N + 1, M + 1) is (aLength, bLength)\n\n\t// The “edit graph” for sequences a and b corresponds to items:\n\t// in a on the horizontal axis\n\t// in b on the vertical axis\n\t//\n\t// Given a-coordinate of a point in a diagonal, you can compute b-coordinate.\n\t//\n\t// Forward diagonals kF:\n\t// zero diagonal intersects top left corner\n\t// positive diagonals intersect top edge\n\t// negative diagonals insersect left edge\n\t//\n\t// Reverse diagonals kR:\n\t// zero diagonal intersects bottom right corner\n\t// positive diagonals intersect right edge\n\t// negative diagonals intersect bottom edge\n\n\t// The graph contains a directed acyclic graph of edges:\n\t// horizontal: delete an item from a\n\t// vertical: insert an item from b\n\t// diagonal: common item in a and b\n\t//\n\t// The algorithm solves dual problems in the graph analogy:\n\t// Find longest common subsequence: path with maximum number of diagonal edges\n\t// Find shortest edit script: path with minimum number of non-diagonal edges\n\n\t// Input callback function compares items at indexes in the sequences.\n\n\t// Output callback function receives the number of adjacent items\n\t// and starting indexes of each common subsequence.\n\t// Either original functions or wrapped to swap indexes if graph is transposed.\n\t// Indexes in sequence a of last point of forward or reverse paths in graph.\n\t// Myers algorithm indexes by diagonal k which for negative is bad deopt in V8.\n\t// This package indexes by iF and iR which are greater than or equal to zero.\n\t// and also updates the index arrays in place to cut memory in half.\n\t// kF = 2 * iF - d\n\t// kR = d - 2 * iR\n\t// Division of index intervals in sequences a and b at the middle change.\n\t// Invariant: intervals do not have common items at the start or end.\n\tconst pkg = 'diff-sequences'; // for error messages\n\tconst NOT_YET_SET = 0; // small int instead of undefined to avoid deopt in V8\n\n\t// Return the number of common items that follow in forward direction.\n\t// The length of what Myers paper calls a “snake” in a forward path.\n\tconst countCommonItemsF = (aIndex, aEnd, bIndex, bEnd, isCommon) => {\n\t  let nCommon = 0;\n\t  while (aIndex < aEnd && bIndex < bEnd && isCommon(aIndex, bIndex)) {\n\t    aIndex += 1;\n\t    bIndex += 1;\n\t    nCommon += 1;\n\t  }\n\t  return nCommon;\n\t};\n\n\t// Return the number of common items that precede in reverse direction.\n\t// The length of what Myers paper calls a “snake” in a reverse path.\n\tconst countCommonItemsR = (aStart, aIndex, bStart, bIndex, isCommon) => {\n\t  let nCommon = 0;\n\t  while (aStart <= aIndex && bStart <= bIndex && isCommon(aIndex, bIndex)) {\n\t    aIndex -= 1;\n\t    bIndex -= 1;\n\t    nCommon += 1;\n\t  }\n\t  return nCommon;\n\t};\n\n\t// A simple function to extend forward paths from (d - 1) to d changes\n\t// when forward and reverse paths cannot yet overlap.\n\tconst extendPathsF = (\n\t  d,\n\t  aEnd,\n\t  bEnd,\n\t  bF,\n\t  isCommon,\n\t  aIndexesF,\n\t  iMaxF // return the value because optimization might decrease it\n\t) => {\n\t  // Unroll the first iteration.\n\t  let iF = 0;\n\t  let kF = -d; // kF = 2 * iF - d\n\t  let aFirst = aIndexesF[iF]; // in first iteration always insert\n\t  let aIndexPrev1 = aFirst; // prev value of [iF - 1] in next iteration\n\t  aIndexesF[iF] += countCommonItemsF(\n\t    aFirst + 1,\n\t    aEnd,\n\t    bF + aFirst - kF + 1,\n\t    bEnd,\n\t    isCommon\n\t  );\n\n\t  // Optimization: skip diagonals in which paths cannot ever overlap.\n\t  const nF = d < iMaxF ? d : iMaxF;\n\n\t  // The diagonals kF are odd when d is odd and even when d is even.\n\t  for (iF += 1, kF += 2; iF <= nF; iF += 1, kF += 2) {\n\t    // To get first point of path segment, move one change in forward direction\n\t    // from last point of previous path segment in an adjacent diagonal.\n\t    // In last possible iteration when iF === d and kF === d always delete.\n\t    if (iF !== d && aIndexPrev1 < aIndexesF[iF]) {\n\t      aFirst = aIndexesF[iF]; // vertical to insert from b\n\t    } else {\n\t      aFirst = aIndexPrev1 + 1; // horizontal to delete from a\n\n\t      if (aEnd <= aFirst) {\n\t        // Optimization: delete moved past right of graph.\n\t        return iF - 1;\n\t      }\n\t    }\n\n\t    // To get last point of path segment, move along diagonal of common items.\n\t    aIndexPrev1 = aIndexesF[iF];\n\t    aIndexesF[iF] =\n\t      aFirst +\n\t      countCommonItemsF(aFirst + 1, aEnd, bF + aFirst - kF + 1, bEnd, isCommon);\n\t  }\n\t  return iMaxF;\n\t};\n\n\t// A simple function to extend reverse paths from (d - 1) to d changes\n\t// when reverse and forward paths cannot yet overlap.\n\tconst extendPathsR = (\n\t  d,\n\t  aStart,\n\t  bStart,\n\t  bR,\n\t  isCommon,\n\t  aIndexesR,\n\t  iMaxR // return the value because optimization might decrease it\n\t) => {\n\t  // Unroll the first iteration.\n\t  let iR = 0;\n\t  let kR = d; // kR = d - 2 * iR\n\t  let aFirst = aIndexesR[iR]; // in first iteration always insert\n\t  let aIndexPrev1 = aFirst; // prev value of [iR - 1] in next iteration\n\t  aIndexesR[iR] -= countCommonItemsR(\n\t    aStart,\n\t    aFirst - 1,\n\t    bStart,\n\t    bR + aFirst - kR - 1,\n\t    isCommon\n\t  );\n\n\t  // Optimization: skip diagonals in which paths cannot ever overlap.\n\t  const nR = d < iMaxR ? d : iMaxR;\n\n\t  // The diagonals kR are odd when d is odd and even when d is even.\n\t  for (iR += 1, kR -= 2; iR <= nR; iR += 1, kR -= 2) {\n\t    // To get first point of path segment, move one change in reverse direction\n\t    // from last point of previous path segment in an adjacent diagonal.\n\t    // In last possible iteration when iR === d and kR === -d always delete.\n\t    if (iR !== d && aIndexesR[iR] < aIndexPrev1) {\n\t      aFirst = aIndexesR[iR]; // vertical to insert from b\n\t    } else {\n\t      aFirst = aIndexPrev1 - 1; // horizontal to delete from a\n\n\t      if (aFirst < aStart) {\n\t        // Optimization: delete moved past left of graph.\n\t        return iR - 1;\n\t      }\n\t    }\n\n\t    // To get last point of path segment, move along diagonal of common items.\n\t    aIndexPrev1 = aIndexesR[iR];\n\t    aIndexesR[iR] =\n\t      aFirst -\n\t      countCommonItemsR(\n\t        aStart,\n\t        aFirst - 1,\n\t        bStart,\n\t        bR + aFirst - kR - 1,\n\t        isCommon\n\t      );\n\t  }\n\t  return iMaxR;\n\t};\n\n\t// A complete function to extend forward paths from (d - 1) to d changes.\n\t// Return true if a path overlaps reverse path of (d - 1) changes in its diagonal.\n\tconst extendOverlappablePathsF = (\n\t  d,\n\t  aStart,\n\t  aEnd,\n\t  bStart,\n\t  bEnd,\n\t  isCommon,\n\t  aIndexesF,\n\t  iMaxF,\n\t  aIndexesR,\n\t  iMaxR,\n\t  division // update prop values if return true\n\t) => {\n\t  const bF = bStart - aStart; // bIndex = bF + aIndex - kF\n\t  const aLength = aEnd - aStart;\n\t  const bLength = bEnd - bStart;\n\t  const baDeltaLength = bLength - aLength; // kF = kR - baDeltaLength\n\n\t  // Range of diagonals in which forward and reverse paths might overlap.\n\t  const kMinOverlapF = -baDeltaLength - (d - 1); // -(d - 1) <= kR\n\t  const kMaxOverlapF = -baDeltaLength + (d - 1); // kR <= (d - 1)\n\n\t  let aIndexPrev1 = NOT_YET_SET; // prev value of [iF - 1] in next iteration\n\n\t  // Optimization: skip diagonals in which paths cannot ever overlap.\n\t  const nF = d < iMaxF ? d : iMaxF;\n\n\t  // The diagonals kF = 2 * iF - d are odd when d is odd and even when d is even.\n\t  for (let iF = 0, kF = -d; iF <= nF; iF += 1, kF += 2) {\n\t    // To get first point of path segment, move one change in forward direction\n\t    // from last point of previous path segment in an adjacent diagonal.\n\t    // In first iteration when iF === 0 and kF === -d always insert.\n\t    // In last possible iteration when iF === d and kF === d always delete.\n\t    const insert = iF === 0 || (iF !== d && aIndexPrev1 < aIndexesF[iF]);\n\t    const aLastPrev = insert ? aIndexesF[iF] : aIndexPrev1;\n\t    const aFirst = insert\n\t      ? aLastPrev // vertical to insert from b\n\t      : aLastPrev + 1; // horizontal to delete from a\n\n\t    // To get last point of path segment, move along diagonal of common items.\n\t    const bFirst = bF + aFirst - kF;\n\t    const nCommonF = countCommonItemsF(\n\t      aFirst + 1,\n\t      aEnd,\n\t      bFirst + 1,\n\t      bEnd,\n\t      isCommon\n\t    );\n\t    const aLast = aFirst + nCommonF;\n\t    aIndexPrev1 = aIndexesF[iF];\n\t    aIndexesF[iF] = aLast;\n\t    if (kMinOverlapF <= kF && kF <= kMaxOverlapF) {\n\t      // Solve for iR of reverse path with (d - 1) changes in diagonal kF:\n\t      // kR = kF + baDeltaLength\n\t      // kR = (d - 1) - 2 * iR\n\t      const iR = (d - 1 - (kF + baDeltaLength)) / 2;\n\n\t      // If this forward path overlaps the reverse path in this diagonal,\n\t      // then this is the middle change of the index intervals.\n\t      if (iR <= iMaxR && aIndexesR[iR] - 1 <= aLast) {\n\t        // Unlike the Myers algorithm which finds only the middle “snake”\n\t        // this package can find two common subsequences per division.\n\t        // Last point of previous path segment is on an adjacent diagonal.\n\t        const bLastPrev = bF + aLastPrev - (insert ? kF + 1 : kF - 1);\n\n\t        // Because of invariant that intervals preceding the middle change\n\t        // cannot have common items at the end,\n\t        // move in reverse direction along a diagonal of common items.\n\t        const nCommonR = countCommonItemsR(\n\t          aStart,\n\t          aLastPrev,\n\t          bStart,\n\t          bLastPrev,\n\t          isCommon\n\t        );\n\t        const aIndexPrevFirst = aLastPrev - nCommonR;\n\t        const bIndexPrevFirst = bLastPrev - nCommonR;\n\t        const aEndPreceding = aIndexPrevFirst + 1;\n\t        const bEndPreceding = bIndexPrevFirst + 1;\n\t        division.nChangePreceding = d - 1;\n\t        if (d - 1 === aEndPreceding + bEndPreceding - aStart - bStart) {\n\t          // Optimization: number of preceding changes in forward direction\n\t          // is equal to number of items in preceding interval,\n\t          // therefore it cannot contain any common items.\n\t          division.aEndPreceding = aStart;\n\t          division.bEndPreceding = bStart;\n\t        } else {\n\t          division.aEndPreceding = aEndPreceding;\n\t          division.bEndPreceding = bEndPreceding;\n\t        }\n\t        division.nCommonPreceding = nCommonR;\n\t        if (nCommonR !== 0) {\n\t          division.aCommonPreceding = aEndPreceding;\n\t          division.bCommonPreceding = bEndPreceding;\n\t        }\n\t        division.nCommonFollowing = nCommonF;\n\t        if (nCommonF !== 0) {\n\t          division.aCommonFollowing = aFirst + 1;\n\t          division.bCommonFollowing = bFirst + 1;\n\t        }\n\t        const aStartFollowing = aLast + 1;\n\t        const bStartFollowing = bFirst + nCommonF + 1;\n\t        division.nChangeFollowing = d - 1;\n\t        if (d - 1 === aEnd + bEnd - aStartFollowing - bStartFollowing) {\n\t          // Optimization: number of changes in reverse direction\n\t          // is equal to number of items in following interval,\n\t          // therefore it cannot contain any common items.\n\t          division.aStartFollowing = aEnd;\n\t          division.bStartFollowing = bEnd;\n\t        } else {\n\t          division.aStartFollowing = aStartFollowing;\n\t          division.bStartFollowing = bStartFollowing;\n\t        }\n\t        return true;\n\t      }\n\t    }\n\t  }\n\t  return false;\n\t};\n\n\t// A complete function to extend reverse paths from (d - 1) to d changes.\n\t// Return true if a path overlaps forward path of d changes in its diagonal.\n\tconst extendOverlappablePathsR = (\n\t  d,\n\t  aStart,\n\t  aEnd,\n\t  bStart,\n\t  bEnd,\n\t  isCommon,\n\t  aIndexesF,\n\t  iMaxF,\n\t  aIndexesR,\n\t  iMaxR,\n\t  division // update prop values if return true\n\t) => {\n\t  const bR = bEnd - aEnd; // bIndex = bR + aIndex - kR\n\t  const aLength = aEnd - aStart;\n\t  const bLength = bEnd - bStart;\n\t  const baDeltaLength = bLength - aLength; // kR = kF + baDeltaLength\n\n\t  // Range of diagonals in which forward and reverse paths might overlap.\n\t  const kMinOverlapR = baDeltaLength - d; // -d <= kF\n\t  const kMaxOverlapR = baDeltaLength + d; // kF <= d\n\n\t  let aIndexPrev1 = NOT_YET_SET; // prev value of [iR - 1] in next iteration\n\n\t  // Optimization: skip diagonals in which paths cannot ever overlap.\n\t  const nR = d < iMaxR ? d : iMaxR;\n\n\t  // The diagonals kR = d - 2 * iR are odd when d is odd and even when d is even.\n\t  for (let iR = 0, kR = d; iR <= nR; iR += 1, kR -= 2) {\n\t    // To get first point of path segment, move one change in reverse direction\n\t    // from last point of previous path segment in an adjacent diagonal.\n\t    // In first iteration when iR === 0 and kR === d always insert.\n\t    // In last possible iteration when iR === d and kR === -d always delete.\n\t    const insert = iR === 0 || (iR !== d && aIndexesR[iR] < aIndexPrev1);\n\t    const aLastPrev = insert ? aIndexesR[iR] : aIndexPrev1;\n\t    const aFirst = insert\n\t      ? aLastPrev // vertical to insert from b\n\t      : aLastPrev - 1; // horizontal to delete from a\n\n\t    // To get last point of path segment, move along diagonal of common items.\n\t    const bFirst = bR + aFirst - kR;\n\t    const nCommonR = countCommonItemsR(\n\t      aStart,\n\t      aFirst - 1,\n\t      bStart,\n\t      bFirst - 1,\n\t      isCommon\n\t    );\n\t    const aLast = aFirst - nCommonR;\n\t    aIndexPrev1 = aIndexesR[iR];\n\t    aIndexesR[iR] = aLast;\n\t    if (kMinOverlapR <= kR && kR <= kMaxOverlapR) {\n\t      // Solve for iF of forward path with d changes in diagonal kR:\n\t      // kF = kR - baDeltaLength\n\t      // kF = 2 * iF - d\n\t      const iF = (d + (kR - baDeltaLength)) / 2;\n\n\t      // If this reverse path overlaps the forward path in this diagonal,\n\t      // then this is a middle change of the index intervals.\n\t      if (iF <= iMaxF && aLast - 1 <= aIndexesF[iF]) {\n\t        const bLast = bFirst - nCommonR;\n\t        division.nChangePreceding = d;\n\t        if (d === aLast + bLast - aStart - bStart) {\n\t          // Optimization: number of changes in reverse direction\n\t          // is equal to number of items in preceding interval,\n\t          // therefore it cannot contain any common items.\n\t          division.aEndPreceding = aStart;\n\t          division.bEndPreceding = bStart;\n\t        } else {\n\t          division.aEndPreceding = aLast;\n\t          division.bEndPreceding = bLast;\n\t        }\n\t        division.nCommonPreceding = nCommonR;\n\t        if (nCommonR !== 0) {\n\t          // The last point of reverse path segment is start of common subsequence.\n\t          division.aCommonPreceding = aLast;\n\t          division.bCommonPreceding = bLast;\n\t        }\n\t        division.nChangeFollowing = d - 1;\n\t        if (d === 1) {\n\t          // There is no previous path segment.\n\t          division.nCommonFollowing = 0;\n\t          division.aStartFollowing = aEnd;\n\t          division.bStartFollowing = bEnd;\n\t        } else {\n\t          // Unlike the Myers algorithm which finds only the middle “snake”\n\t          // this package can find two common subsequences per division.\n\t          // Last point of previous path segment is on an adjacent diagonal.\n\t          const bLastPrev = bR + aLastPrev - (insert ? kR - 1 : kR + 1);\n\n\t          // Because of invariant that intervals following the middle change\n\t          // cannot have common items at the start,\n\t          // move in forward direction along a diagonal of common items.\n\t          const nCommonF = countCommonItemsF(\n\t            aLastPrev,\n\t            aEnd,\n\t            bLastPrev,\n\t            bEnd,\n\t            isCommon\n\t          );\n\t          division.nCommonFollowing = nCommonF;\n\t          if (nCommonF !== 0) {\n\t            // The last point of reverse path segment is start of common subsequence.\n\t            division.aCommonFollowing = aLastPrev;\n\t            division.bCommonFollowing = bLastPrev;\n\t          }\n\t          const aStartFollowing = aLastPrev + nCommonF; // aFirstPrev\n\t          const bStartFollowing = bLastPrev + nCommonF; // bFirstPrev\n\n\t          if (d - 1 === aEnd + bEnd - aStartFollowing - bStartFollowing) {\n\t            // Optimization: number of changes in forward direction\n\t            // is equal to number of items in following interval,\n\t            // therefore it cannot contain any common items.\n\t            division.aStartFollowing = aEnd;\n\t            division.bStartFollowing = bEnd;\n\t          } else {\n\t            division.aStartFollowing = aStartFollowing;\n\t            division.bStartFollowing = bStartFollowing;\n\t          }\n\t        }\n\t        return true;\n\t      }\n\t    }\n\t  }\n\t  return false;\n\t};\n\n\t// Given index intervals and input function to compare items at indexes,\n\t// divide at the middle change.\n\t//\n\t// DO NOT CALL if start === end, because interval cannot contain common items\n\t// and because this function will throw the “no overlap” error.\n\tconst divide = (\n\t  nChange,\n\t  aStart,\n\t  aEnd,\n\t  bStart,\n\t  bEnd,\n\t  isCommon,\n\t  aIndexesF,\n\t  aIndexesR,\n\t  division // output\n\t) => {\n\t  const bF = bStart - aStart; // bIndex = bF + aIndex - kF\n\t  const bR = bEnd - aEnd; // bIndex = bR + aIndex - kR\n\t  const aLength = aEnd - aStart;\n\t  const bLength = bEnd - bStart;\n\n\t  // Because graph has square or portrait orientation,\n\t  // length difference is minimum number of items to insert from b.\n\t  // Corresponding forward and reverse diagonals in graph\n\t  // depend on length difference of the sequences:\n\t  // kF = kR - baDeltaLength\n\t  // kR = kF + baDeltaLength\n\t  const baDeltaLength = bLength - aLength;\n\n\t  // Optimization: max diagonal in graph intersects corner of shorter side.\n\t  let iMaxF = aLength;\n\t  let iMaxR = aLength;\n\n\t  // Initialize no changes yet in forward or reverse direction:\n\t  aIndexesF[0] = aStart - 1; // at open start of interval, outside closed start\n\t  aIndexesR[0] = aEnd; // at open end of interval\n\n\t  if (baDeltaLength % 2 === 0) {\n\t    // The number of changes in paths is 2 * d if length difference is even.\n\t    const dMin = (nChange || baDeltaLength) / 2;\n\t    const dMax = (aLength + bLength) / 2;\n\t    for (let d = 1; d <= dMax; d += 1) {\n\t      iMaxF = extendPathsF(d, aEnd, bEnd, bF, isCommon, aIndexesF, iMaxF);\n\t      if (d < dMin) {\n\t        iMaxR = extendPathsR(d, aStart, bStart, bR, isCommon, aIndexesR, iMaxR);\n\t      } else if (\n\t        // If a reverse path overlaps a forward path in the same diagonal,\n\t        // return a division of the index intervals at the middle change.\n\t        extendOverlappablePathsR(\n\t          d,\n\t          aStart,\n\t          aEnd,\n\t          bStart,\n\t          bEnd,\n\t          isCommon,\n\t          aIndexesF,\n\t          iMaxF,\n\t          aIndexesR,\n\t          iMaxR,\n\t          division\n\t        )\n\t      ) {\n\t        return;\n\t      }\n\t    }\n\t  } else {\n\t    // The number of changes in paths is 2 * d - 1 if length difference is odd.\n\t    const dMin = ((nChange || baDeltaLength) + 1) / 2;\n\t    const dMax = (aLength + bLength + 1) / 2;\n\n\t    // Unroll first half iteration so loop extends the relevant pairs of paths.\n\t    // Because of invariant that intervals have no common items at start or end,\n\t    // and limitation not to call divide with empty intervals,\n\t    // therefore it cannot be called if a forward path with one change\n\t    // would overlap a reverse path with no changes, even if dMin === 1.\n\t    let d = 1;\n\t    iMaxF = extendPathsF(d, aEnd, bEnd, bF, isCommon, aIndexesF, iMaxF);\n\t    for (d += 1; d <= dMax; d += 1) {\n\t      iMaxR = extendPathsR(\n\t        d - 1,\n\t        aStart,\n\t        bStart,\n\t        bR,\n\t        isCommon,\n\t        aIndexesR,\n\t        iMaxR\n\t      );\n\t      if (d < dMin) {\n\t        iMaxF = extendPathsF(d, aEnd, bEnd, bF, isCommon, aIndexesF, iMaxF);\n\t      } else if (\n\t        // If a forward path overlaps a reverse path in the same diagonal,\n\t        // return a division of the index intervals at the middle change.\n\t        extendOverlappablePathsF(\n\t          d,\n\t          aStart,\n\t          aEnd,\n\t          bStart,\n\t          bEnd,\n\t          isCommon,\n\t          aIndexesF,\n\t          iMaxF,\n\t          aIndexesR,\n\t          iMaxR,\n\t          division\n\t        )\n\t      ) {\n\t        return;\n\t      }\n\t    }\n\t  }\n\n\t  /* istanbul ignore next */\n\t  throw new Error(\n\t    `${pkg}: no overlap aStart=${aStart} aEnd=${aEnd} bStart=${bStart} bEnd=${bEnd}`\n\t  );\n\t};\n\n\t// Given index intervals and input function to compare items at indexes,\n\t// return by output function the number of adjacent items and starting indexes\n\t// of each common subsequence. Divide and conquer with only linear space.\n\t//\n\t// The index intervals are half open [start, end) like array slice method.\n\t// DO NOT CALL if start === end, because interval cannot contain common items\n\t// and because divide function will throw the “no overlap” error.\n\tconst findSubsequences = (\n\t  nChange,\n\t  aStart,\n\t  aEnd,\n\t  bStart,\n\t  bEnd,\n\t  transposed,\n\t  callbacks,\n\t  aIndexesF,\n\t  aIndexesR,\n\t  division // temporary memory, not input nor output\n\t) => {\n\t  if (bEnd - bStart < aEnd - aStart) {\n\t    // Transpose graph so it has portrait instead of landscape orientation.\n\t    // Always compare shorter to longer sequence for consistency and optimization.\n\t    transposed = !transposed;\n\t    if (transposed && callbacks.length === 1) {\n\t      // Lazily wrap callback functions to swap args if graph is transposed.\n\t      const {foundSubsequence, isCommon} = callbacks[0];\n\t      callbacks[1] = {\n\t        foundSubsequence: (nCommon, bCommon, aCommon) => {\n\t          foundSubsequence(nCommon, aCommon, bCommon);\n\t        },\n\t        isCommon: (bIndex, aIndex) => isCommon(aIndex, bIndex)\n\t      };\n\t    }\n\t    const tStart = aStart;\n\t    const tEnd = aEnd;\n\t    aStart = bStart;\n\t    aEnd = bEnd;\n\t    bStart = tStart;\n\t    bEnd = tEnd;\n\t  }\n\t  const {foundSubsequence, isCommon} = callbacks[transposed ? 1 : 0];\n\n\t  // Divide the index intervals at the middle change.\n\t  divide(\n\t    nChange,\n\t    aStart,\n\t    aEnd,\n\t    bStart,\n\t    bEnd,\n\t    isCommon,\n\t    aIndexesF,\n\t    aIndexesR,\n\t    division\n\t  );\n\t  const {\n\t    nChangePreceding,\n\t    aEndPreceding,\n\t    bEndPreceding,\n\t    nCommonPreceding,\n\t    aCommonPreceding,\n\t    bCommonPreceding,\n\t    nCommonFollowing,\n\t    aCommonFollowing,\n\t    bCommonFollowing,\n\t    nChangeFollowing,\n\t    aStartFollowing,\n\t    bStartFollowing\n\t  } = division;\n\n\t  // Unless either index interval is empty, they might contain common items.\n\t  if (aStart < aEndPreceding && bStart < bEndPreceding) {\n\t    // Recursely find and return common subsequences preceding the division.\n\t    findSubsequences(\n\t      nChangePreceding,\n\t      aStart,\n\t      aEndPreceding,\n\t      bStart,\n\t      bEndPreceding,\n\t      transposed,\n\t      callbacks,\n\t      aIndexesF,\n\t      aIndexesR,\n\t      division\n\t    );\n\t  }\n\n\t  // Return common subsequences that are adjacent to the middle change.\n\t  if (nCommonPreceding !== 0) {\n\t    foundSubsequence(nCommonPreceding, aCommonPreceding, bCommonPreceding);\n\t  }\n\t  if (nCommonFollowing !== 0) {\n\t    foundSubsequence(nCommonFollowing, aCommonFollowing, bCommonFollowing);\n\t  }\n\n\t  // Unless either index interval is empty, they might contain common items.\n\t  if (aStartFollowing < aEnd && bStartFollowing < bEnd) {\n\t    // Recursely find and return common subsequences following the division.\n\t    findSubsequences(\n\t      nChangeFollowing,\n\t      aStartFollowing,\n\t      aEnd,\n\t      bStartFollowing,\n\t      bEnd,\n\t      transposed,\n\t      callbacks,\n\t      aIndexesF,\n\t      aIndexesR,\n\t      division\n\t    );\n\t  }\n\t};\n\tconst validateLength = (name, arg) => {\n\t  if (typeof arg !== 'number') {\n\t    throw new TypeError(`${pkg}: ${name} typeof ${typeof arg} is not a number`);\n\t  }\n\t  if (!Number.isSafeInteger(arg)) {\n\t    throw new RangeError(`${pkg}: ${name} value ${arg} is not a safe integer`);\n\t  }\n\t  if (arg < 0) {\n\t    throw new RangeError(`${pkg}: ${name} value ${arg} is a negative integer`);\n\t  }\n\t};\n\tconst validateCallback = (name, arg) => {\n\t  const type = typeof arg;\n\t  if (type !== 'function') {\n\t    throw new TypeError(`${pkg}: ${name} typeof ${type} is not a function`);\n\t  }\n\t};\n\n\t// Compare items in two sequences to find a longest common subsequence.\n\t// Given lengths of sequences and input function to compare items at indexes,\n\t// return by output function the number of adjacent items and starting indexes\n\t// of each common subsequence.\n\tfunction diffSequence(aLength, bLength, isCommon, foundSubsequence) {\n\t  validateLength('aLength', aLength);\n\t  validateLength('bLength', bLength);\n\t  validateCallback('isCommon', isCommon);\n\t  validateCallback('foundSubsequence', foundSubsequence);\n\n\t  // Count common items from the start in the forward direction.\n\t  const nCommonF = countCommonItemsF(0, aLength, 0, bLength, isCommon);\n\t  if (nCommonF !== 0) {\n\t    foundSubsequence(nCommonF, 0, 0);\n\t  }\n\n\t  // Unless both sequences consist of common items only,\n\t  // find common items in the half-trimmed index intervals.\n\t  if (aLength !== nCommonF || bLength !== nCommonF) {\n\t    // Invariant: intervals do not have common items at the start.\n\t    // The start of an index interval is closed like array slice method.\n\t    const aStart = nCommonF;\n\t    const bStart = nCommonF;\n\n\t    // Count common items from the end in the reverse direction.\n\t    const nCommonR = countCommonItemsR(\n\t      aStart,\n\t      aLength - 1,\n\t      bStart,\n\t      bLength - 1,\n\t      isCommon\n\t    );\n\n\t    // Invariant: intervals do not have common items at the end.\n\t    // The end of an index interval is open like array slice method.\n\t    const aEnd = aLength - nCommonR;\n\t    const bEnd = bLength - nCommonR;\n\n\t    // Unless one sequence consists of common items only,\n\t    // therefore the other trimmed index interval consists of changes only,\n\t    // find common items in the trimmed index intervals.\n\t    const nCommonFR = nCommonF + nCommonR;\n\t    if (aLength !== nCommonFR && bLength !== nCommonFR) {\n\t      const nChange = 0; // number of change items is not yet known\n\t      const transposed = false; // call the original unwrapped functions\n\t      const callbacks = [\n\t        {\n\t          foundSubsequence,\n\t          isCommon\n\t        }\n\t      ];\n\n\t      // Indexes in sequence a of last points in furthest reaching paths\n\t      // from outside the start at top left in the forward direction:\n\t      const aIndexesF = [NOT_YET_SET];\n\t      // from the end at bottom right in the reverse direction:\n\t      const aIndexesR = [NOT_YET_SET];\n\n\t      // Initialize one object as output of all calls to divide function.\n\t      const division = {\n\t        aCommonFollowing: NOT_YET_SET,\n\t        aCommonPreceding: NOT_YET_SET,\n\t        aEndPreceding: NOT_YET_SET,\n\t        aStartFollowing: NOT_YET_SET,\n\t        bCommonFollowing: NOT_YET_SET,\n\t        bCommonPreceding: NOT_YET_SET,\n\t        bEndPreceding: NOT_YET_SET,\n\t        bStartFollowing: NOT_YET_SET,\n\t        nChangeFollowing: NOT_YET_SET,\n\t        nChangePreceding: NOT_YET_SET,\n\t        nCommonFollowing: NOT_YET_SET,\n\t        nCommonPreceding: NOT_YET_SET\n\t      };\n\n\t      // Find and return common subsequences in the trimmed index intervals.\n\t      findSubsequences(\n\t        nChange,\n\t        aStart,\n\t        aEnd,\n\t        bStart,\n\t        bEnd,\n\t        transposed,\n\t        callbacks,\n\t        aIndexesF,\n\t        aIndexesR,\n\t        division\n\t      );\n\t    }\n\t    if (nCommonR !== 0) {\n\t      foundSubsequence(nCommonR, aEnd, bEnd);\n\t    }\n\t  }\n\t}\n\treturn build;\n}\n\nvar buildExports = /*@__PURE__*/ requireBuild();\nvar diffSequences = /*@__PURE__*/getDefaultExportFromCjs(buildExports);\n\nfunction formatTrailingSpaces(line, trailingSpaceFormatter) {\n\treturn line.replace(/\\s+$/, (match) => trailingSpaceFormatter(match));\n}\nfunction printDiffLine(line, isFirstOrLast, color, indicator, trailingSpaceFormatter, emptyFirstOrLastLinePlaceholder) {\n\treturn line.length !== 0 ? color(`${indicator} ${formatTrailingSpaces(line, trailingSpaceFormatter)}`) : indicator !== \" \" ? color(indicator) : isFirstOrLast && emptyFirstOrLastLinePlaceholder.length !== 0 ? color(`${indicator} ${emptyFirstOrLastLinePlaceholder}`) : \"\";\n}\nfunction printDeleteLine(line, isFirstOrLast, { aColor, aIndicator, changeLineTrailingSpaceColor, emptyFirstOrLastLinePlaceholder }) {\n\treturn printDiffLine(line, isFirstOrLast, aColor, aIndicator, changeLineTrailingSpaceColor, emptyFirstOrLastLinePlaceholder);\n}\nfunction printInsertLine(line, isFirstOrLast, { bColor, bIndicator, changeLineTrailingSpaceColor, emptyFirstOrLastLinePlaceholder }) {\n\treturn printDiffLine(line, isFirstOrLast, bColor, bIndicator, changeLineTrailingSpaceColor, emptyFirstOrLastLinePlaceholder);\n}\nfunction printCommonLine(line, isFirstOrLast, { commonColor, commonIndicator, commonLineTrailingSpaceColor, emptyFirstOrLastLinePlaceholder }) {\n\treturn printDiffLine(line, isFirstOrLast, commonColor, commonIndicator, commonLineTrailingSpaceColor, emptyFirstOrLastLinePlaceholder);\n}\n// In GNU diff format, indexes are one-based instead of zero-based.\nfunction createPatchMark(aStart, aEnd, bStart, bEnd, { patchColor }) {\n\treturn patchColor(`@@ -${aStart + 1},${aEnd - aStart} +${bStart + 1},${bEnd - bStart} @@`);\n}\n// jest --no-expand\n//\n// Given array of aligned strings with inverse highlight formatting,\n// return joined lines with diff formatting (and patch marks, if needed).\nfunction joinAlignedDiffsNoExpand(diffs, options) {\n\tconst iLength = diffs.length;\n\tconst nContextLines = options.contextLines;\n\tconst nContextLines2 = nContextLines + nContextLines;\n\t// First pass: count output lines and see if it has patches.\n\tlet jLength = iLength;\n\tlet hasExcessAtStartOrEnd = false;\n\tlet nExcessesBetweenChanges = 0;\n\tlet i = 0;\n\twhile (i !== iLength) {\n\t\tconst iStart = i;\n\t\twhile (i !== iLength && diffs[i][0] === DIFF_EQUAL) {\n\t\t\ti += 1;\n\t\t}\n\t\tif (iStart !== i) {\n\t\t\tif (iStart === 0) {\n\t\t\t\t// at start\n\t\t\t\tif (i > nContextLines) {\n\t\t\t\t\tjLength -= i - nContextLines;\n\t\t\t\t\thasExcessAtStartOrEnd = true;\n\t\t\t\t}\n\t\t\t} else if (i === iLength) {\n\t\t\t\t// at end\n\t\t\t\tconst n = i - iStart;\n\t\t\t\tif (n > nContextLines) {\n\t\t\t\t\tjLength -= n - nContextLines;\n\t\t\t\t\thasExcessAtStartOrEnd = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// between changes\n\t\t\t\tconst n = i - iStart;\n\t\t\t\tif (n > nContextLines2) {\n\t\t\t\t\tjLength -= n - nContextLines2;\n\t\t\t\t\tnExcessesBetweenChanges += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twhile (i !== iLength && diffs[i][0] !== DIFF_EQUAL) {\n\t\t\ti += 1;\n\t\t}\n\t}\n\tconst hasPatch = nExcessesBetweenChanges !== 0 || hasExcessAtStartOrEnd;\n\tif (nExcessesBetweenChanges !== 0) {\n\t\tjLength += nExcessesBetweenChanges + 1;\n\t} else if (hasExcessAtStartOrEnd) {\n\t\tjLength += 1;\n\t}\n\tconst jLast = jLength - 1;\n\tconst lines = [];\n\tlet jPatchMark = 0;\n\tif (hasPatch) {\n\t\tlines.push(\"\");\n\t}\n\t// Indexes of expected or received lines in current patch:\n\tlet aStart = 0;\n\tlet bStart = 0;\n\tlet aEnd = 0;\n\tlet bEnd = 0;\n\tconst pushCommonLine = (line) => {\n\t\tconst j = lines.length;\n\t\tlines.push(printCommonLine(line, j === 0 || j === jLast, options));\n\t\taEnd += 1;\n\t\tbEnd += 1;\n\t};\n\tconst pushDeleteLine = (line) => {\n\t\tconst j = lines.length;\n\t\tlines.push(printDeleteLine(line, j === 0 || j === jLast, options));\n\t\taEnd += 1;\n\t};\n\tconst pushInsertLine = (line) => {\n\t\tconst j = lines.length;\n\t\tlines.push(printInsertLine(line, j === 0 || j === jLast, options));\n\t\tbEnd += 1;\n\t};\n\t// Second pass: push lines with diff formatting (and patch marks, if needed).\n\ti = 0;\n\twhile (i !== iLength) {\n\t\tlet iStart = i;\n\t\twhile (i !== iLength && diffs[i][0] === DIFF_EQUAL) {\n\t\t\ti += 1;\n\t\t}\n\t\tif (iStart !== i) {\n\t\t\tif (iStart === 0) {\n\t\t\t\t// at beginning\n\t\t\t\tif (i > nContextLines) {\n\t\t\t\t\tiStart = i - nContextLines;\n\t\t\t\t\taStart = iStart;\n\t\t\t\t\tbStart = iStart;\n\t\t\t\t\taEnd = aStart;\n\t\t\t\t\tbEnd = bStart;\n\t\t\t\t}\n\t\t\t\tfor (let iCommon = iStart; iCommon !== i; iCommon += 1) {\n\t\t\t\t\tpushCommonLine(diffs[iCommon][1]);\n\t\t\t\t}\n\t\t\t} else if (i === iLength) {\n\t\t\t\t// at end\n\t\t\t\tconst iEnd = i - iStart > nContextLines ? iStart + nContextLines : i;\n\t\t\t\tfor (let iCommon = iStart; iCommon !== iEnd; iCommon += 1) {\n\t\t\t\t\tpushCommonLine(diffs[iCommon][1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// between changes\n\t\t\t\tconst nCommon = i - iStart;\n\t\t\t\tif (nCommon > nContextLines2) {\n\t\t\t\t\tconst iEnd = iStart + nContextLines;\n\t\t\t\t\tfor (let iCommon = iStart; iCommon !== iEnd; iCommon += 1) {\n\t\t\t\t\t\tpushCommonLine(diffs[iCommon][1]);\n\t\t\t\t\t}\n\t\t\t\t\tlines[jPatchMark] = createPatchMark(aStart, aEnd, bStart, bEnd, options);\n\t\t\t\t\tjPatchMark = lines.length;\n\t\t\t\t\tlines.push(\"\");\n\t\t\t\t\tconst nOmit = nCommon - nContextLines2;\n\t\t\t\t\taStart = aEnd + nOmit;\n\t\t\t\t\tbStart = bEnd + nOmit;\n\t\t\t\t\taEnd = aStart;\n\t\t\t\t\tbEnd = bStart;\n\t\t\t\t\tfor (let iCommon = i - nContextLines; iCommon !== i; iCommon += 1) {\n\t\t\t\t\t\tpushCommonLine(diffs[iCommon][1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (let iCommon = iStart; iCommon !== i; iCommon += 1) {\n\t\t\t\t\t\tpushCommonLine(diffs[iCommon][1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twhile (i !== iLength && diffs[i][0] === DIFF_DELETE) {\n\t\t\tpushDeleteLine(diffs[i][1]);\n\t\t\ti += 1;\n\t\t}\n\t\twhile (i !== iLength && diffs[i][0] === DIFF_INSERT) {\n\t\t\tpushInsertLine(diffs[i][1]);\n\t\t\ti += 1;\n\t\t}\n\t}\n\tif (hasPatch) {\n\t\tlines[jPatchMark] = createPatchMark(aStart, aEnd, bStart, bEnd, options);\n\t}\n\treturn lines.join(\"\\n\");\n}\n// jest --expand\n//\n// Given array of aligned strings with inverse highlight formatting,\n// return joined lines with diff formatting.\nfunction joinAlignedDiffsExpand(diffs, options) {\n\treturn diffs.map((diff, i, diffs) => {\n\t\tconst line = diff[1];\n\t\tconst isFirstOrLast = i === 0 || i === diffs.length - 1;\n\t\tswitch (diff[0]) {\n\t\t\tcase DIFF_DELETE: return printDeleteLine(line, isFirstOrLast, options);\n\t\t\tcase DIFF_INSERT: return printInsertLine(line, isFirstOrLast, options);\n\t\t\tdefault: return printCommonLine(line, isFirstOrLast, options);\n\t\t}\n\t}).join(\"\\n\");\n}\n\nconst noColor = (string) => string;\nconst DIFF_CONTEXT_DEFAULT = 5;\nconst DIFF_TRUNCATE_THRESHOLD_DEFAULT = 0;\nfunction getDefaultOptions() {\n\treturn {\n\t\taAnnotation: \"Expected\",\n\t\taColor: c.green,\n\t\taIndicator: \"-\",\n\t\tbAnnotation: \"Received\",\n\t\tbColor: c.red,\n\t\tbIndicator: \"+\",\n\t\tchangeColor: c.inverse,\n\t\tchangeLineTrailingSpaceColor: noColor,\n\t\tcommonColor: c.dim,\n\t\tcommonIndicator: \" \",\n\t\tcommonLineTrailingSpaceColor: noColor,\n\t\tcompareKeys: undefined,\n\t\tcontextLines: DIFF_CONTEXT_DEFAULT,\n\t\temptyFirstOrLastLinePlaceholder: \"\",\n\t\texpand: false,\n\t\tincludeChangeCounts: false,\n\t\tomitAnnotationLines: false,\n\t\tpatchColor: c.yellow,\n\t\tprintBasicPrototype: false,\n\t\ttruncateThreshold: DIFF_TRUNCATE_THRESHOLD_DEFAULT,\n\t\ttruncateAnnotation: \"... Diff result is truncated\",\n\t\ttruncateAnnotationColor: noColor\n\t};\n}\nfunction getCompareKeys(compareKeys) {\n\treturn compareKeys && typeof compareKeys === \"function\" ? compareKeys : undefined;\n}\nfunction getContextLines(contextLines) {\n\treturn typeof contextLines === \"number\" && Number.isSafeInteger(contextLines) && contextLines >= 0 ? contextLines : DIFF_CONTEXT_DEFAULT;\n}\n// Pure function returns options with all properties.\nfunction normalizeDiffOptions(options = {}) {\n\treturn {\n\t\t...getDefaultOptions(),\n\t\t...options,\n\t\tcompareKeys: getCompareKeys(options.compareKeys),\n\t\tcontextLines: getContextLines(options.contextLines)\n\t};\n}\n\nfunction isEmptyString(lines) {\n\treturn lines.length === 1 && lines[0].length === 0;\n}\nfunction countChanges(diffs) {\n\tlet a = 0;\n\tlet b = 0;\n\tdiffs.forEach((diff) => {\n\t\tswitch (diff[0]) {\n\t\t\tcase DIFF_DELETE:\n\t\t\t\ta += 1;\n\t\t\t\tbreak;\n\t\t\tcase DIFF_INSERT:\n\t\t\t\tb += 1;\n\t\t\t\tbreak;\n\t\t}\n\t});\n\treturn {\n\t\ta,\n\t\tb\n\t};\n}\nfunction printAnnotation({ aAnnotation, aColor, aIndicator, bAnnotation, bColor, bIndicator, includeChangeCounts, omitAnnotationLines }, changeCounts) {\n\tif (omitAnnotationLines) {\n\t\treturn \"\";\n\t}\n\tlet aRest = \"\";\n\tlet bRest = \"\";\n\tif (includeChangeCounts) {\n\t\tconst aCount = String(changeCounts.a);\n\t\tconst bCount = String(changeCounts.b);\n\t\t// Padding right aligns the ends of the annotations.\n\t\tconst baAnnotationLengthDiff = bAnnotation.length - aAnnotation.length;\n\t\tconst aAnnotationPadding = \" \".repeat(Math.max(0, baAnnotationLengthDiff));\n\t\tconst bAnnotationPadding = \" \".repeat(Math.max(0, -baAnnotationLengthDiff));\n\t\t// Padding left aligns the ends of the counts.\n\t\tconst baCountLengthDiff = bCount.length - aCount.length;\n\t\tconst aCountPadding = \" \".repeat(Math.max(0, baCountLengthDiff));\n\t\tconst bCountPadding = \" \".repeat(Math.max(0, -baCountLengthDiff));\n\t\taRest = `${aAnnotationPadding}  ${aIndicator} ${aCountPadding}${aCount}`;\n\t\tbRest = `${bAnnotationPadding}  ${bIndicator} ${bCountPadding}${bCount}`;\n\t}\n\tconst a = `${aIndicator} ${aAnnotation}${aRest}`;\n\tconst b = `${bIndicator} ${bAnnotation}${bRest}`;\n\treturn `${aColor(a)}\\n${bColor(b)}\\n\\n`;\n}\nfunction printDiffLines(diffs, truncated, options) {\n\treturn printAnnotation(options, countChanges(diffs)) + (options.expand ? joinAlignedDiffsExpand(diffs, options) : joinAlignedDiffsNoExpand(diffs, options)) + (truncated ? options.truncateAnnotationColor(`\\n${options.truncateAnnotation}`) : \"\");\n}\n// Compare two arrays of strings line-by-line. Format as comparison lines.\nfunction diffLinesUnified(aLines, bLines, options) {\n\tconst normalizedOptions = normalizeDiffOptions(options);\n\tconst [diffs, truncated] = diffLinesRaw(isEmptyString(aLines) ? [] : aLines, isEmptyString(bLines) ? [] : bLines, normalizedOptions);\n\treturn printDiffLines(diffs, truncated, normalizedOptions);\n}\n// Given two pairs of arrays of strings:\n// Compare the pair of comparison arrays line-by-line.\n// Format the corresponding lines in the pair of displayable arrays.\nfunction diffLinesUnified2(aLinesDisplay, bLinesDisplay, aLinesCompare, bLinesCompare, options) {\n\tif (isEmptyString(aLinesDisplay) && isEmptyString(aLinesCompare)) {\n\t\taLinesDisplay = [];\n\t\taLinesCompare = [];\n\t}\n\tif (isEmptyString(bLinesDisplay) && isEmptyString(bLinesCompare)) {\n\t\tbLinesDisplay = [];\n\t\tbLinesCompare = [];\n\t}\n\tif (aLinesDisplay.length !== aLinesCompare.length || bLinesDisplay.length !== bLinesCompare.length) {\n\t\t// Fall back to diff of display lines.\n\t\treturn diffLinesUnified(aLinesDisplay, bLinesDisplay, options);\n\t}\n\tconst [diffs, truncated] = diffLinesRaw(aLinesCompare, bLinesCompare, options);\n\t// Replace comparison lines with displayable lines.\n\tlet aIndex = 0;\n\tlet bIndex = 0;\n\tdiffs.forEach((diff) => {\n\t\tswitch (diff[0]) {\n\t\t\tcase DIFF_DELETE:\n\t\t\t\tdiff[1] = aLinesDisplay[aIndex];\n\t\t\t\taIndex += 1;\n\t\t\t\tbreak;\n\t\t\tcase DIFF_INSERT:\n\t\t\t\tdiff[1] = bLinesDisplay[bIndex];\n\t\t\t\tbIndex += 1;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tdiff[1] = bLinesDisplay[bIndex];\n\t\t\t\taIndex += 1;\n\t\t\t\tbIndex += 1;\n\t\t}\n\t});\n\treturn printDiffLines(diffs, truncated, normalizeDiffOptions(options));\n}\n// Compare two arrays of strings line-by-line.\nfunction diffLinesRaw(aLines, bLines, options) {\n\tconst truncate = (options === null || options === void 0 ? void 0 : options.truncateThreshold) ?? false;\n\tconst truncateThreshold = Math.max(Math.floor((options === null || options === void 0 ? void 0 : options.truncateThreshold) ?? 0), 0);\n\tconst aLength = truncate ? Math.min(aLines.length, truncateThreshold) : aLines.length;\n\tconst bLength = truncate ? Math.min(bLines.length, truncateThreshold) : bLines.length;\n\tconst truncated = aLength !== aLines.length || bLength !== bLines.length;\n\tconst isCommon = (aIndex, bIndex) => aLines[aIndex] === bLines[bIndex];\n\tconst diffs = [];\n\tlet aIndex = 0;\n\tlet bIndex = 0;\n\tconst foundSubsequence = (nCommon, aCommon, bCommon) => {\n\t\tfor (; aIndex !== aCommon; aIndex += 1) {\n\t\t\tdiffs.push(new Diff(DIFF_DELETE, aLines[aIndex]));\n\t\t}\n\t\tfor (; bIndex !== bCommon; bIndex += 1) {\n\t\t\tdiffs.push(new Diff(DIFF_INSERT, bLines[bIndex]));\n\t\t}\n\t\tfor (; nCommon !== 0; nCommon -= 1, aIndex += 1, bIndex += 1) {\n\t\t\tdiffs.push(new Diff(DIFF_EQUAL, bLines[bIndex]));\n\t\t}\n\t};\n\tdiffSequences(aLength, bLength, isCommon, foundSubsequence);\n\t// After the last common subsequence, push remaining change items.\n\tfor (; aIndex !== aLength; aIndex += 1) {\n\t\tdiffs.push(new Diff(DIFF_DELETE, aLines[aIndex]));\n\t}\n\tfor (; bIndex !== bLength; bIndex += 1) {\n\t\tdiffs.push(new Diff(DIFF_INSERT, bLines[bIndex]));\n\t}\n\treturn [diffs, truncated];\n}\n\n// get the type of a value with handling the edge cases like `typeof []`\n// and `typeof null`\nfunction getType(value) {\n\tif (value === undefined) {\n\t\treturn \"undefined\";\n\t} else if (value === null) {\n\t\treturn \"null\";\n\t} else if (Array.isArray(value)) {\n\t\treturn \"array\";\n\t} else if (typeof value === \"boolean\") {\n\t\treturn \"boolean\";\n\t} else if (typeof value === \"function\") {\n\t\treturn \"function\";\n\t} else if (typeof value === \"number\") {\n\t\treturn \"number\";\n\t} else if (typeof value === \"string\") {\n\t\treturn \"string\";\n\t} else if (typeof value === \"bigint\") {\n\t\treturn \"bigint\";\n\t} else if (typeof value === \"object\") {\n\t\tif (value != null) {\n\t\t\tif (value.constructor === RegExp) {\n\t\t\t\treturn \"regexp\";\n\t\t\t} else if (value.constructor === Map) {\n\t\t\t\treturn \"map\";\n\t\t\t} else if (value.constructor === Set) {\n\t\t\t\treturn \"set\";\n\t\t\t} else if (value.constructor === Date) {\n\t\t\t\treturn \"date\";\n\t\t\t}\n\t\t}\n\t\treturn \"object\";\n\t} else if (typeof value === \"symbol\") {\n\t\treturn \"symbol\";\n\t}\n\tthrow new Error(`value of unknown type: ${value}`);\n}\n\n// platforms compatible\nfunction getNewLineSymbol(string) {\n\treturn string.includes(\"\\r\\n\") ? \"\\r\\n\" : \"\\n\";\n}\nfunction diffStrings(a, b, options) {\n\tconst truncate = (options === null || options === void 0 ? void 0 : options.truncateThreshold) ?? false;\n\tconst truncateThreshold = Math.max(Math.floor((options === null || options === void 0 ? void 0 : options.truncateThreshold) ?? 0), 0);\n\tlet aLength = a.length;\n\tlet bLength = b.length;\n\tif (truncate) {\n\t\tconst aMultipleLines = a.includes(\"\\n\");\n\t\tconst bMultipleLines = b.includes(\"\\n\");\n\t\tconst aNewLineSymbol = getNewLineSymbol(a);\n\t\tconst bNewLineSymbol = getNewLineSymbol(b);\n\t\t// multiple-lines string expects a newline to be appended at the end\n\t\tconst _a = aMultipleLines ? `${a.split(aNewLineSymbol, truncateThreshold).join(aNewLineSymbol)}\\n` : a;\n\t\tconst _b = bMultipleLines ? `${b.split(bNewLineSymbol, truncateThreshold).join(bNewLineSymbol)}\\n` : b;\n\t\taLength = _a.length;\n\t\tbLength = _b.length;\n\t}\n\tconst truncated = aLength !== a.length || bLength !== b.length;\n\tconst isCommon = (aIndex, bIndex) => a[aIndex] === b[bIndex];\n\tlet aIndex = 0;\n\tlet bIndex = 0;\n\tconst diffs = [];\n\tconst foundSubsequence = (nCommon, aCommon, bCommon) => {\n\t\tif (aIndex !== aCommon) {\n\t\t\tdiffs.push(new Diff(DIFF_DELETE, a.slice(aIndex, aCommon)));\n\t\t}\n\t\tif (bIndex !== bCommon) {\n\t\t\tdiffs.push(new Diff(DIFF_INSERT, b.slice(bIndex, bCommon)));\n\t\t}\n\t\taIndex = aCommon + nCommon;\n\t\tbIndex = bCommon + nCommon;\n\t\tdiffs.push(new Diff(DIFF_EQUAL, b.slice(bCommon, bIndex)));\n\t};\n\tdiffSequences(aLength, bLength, isCommon, foundSubsequence);\n\t// After the last common subsequence, push remaining change items.\n\tif (aIndex !== aLength) {\n\t\tdiffs.push(new Diff(DIFF_DELETE, a.slice(aIndex)));\n\t}\n\tif (bIndex !== bLength) {\n\t\tdiffs.push(new Diff(DIFF_INSERT, b.slice(bIndex)));\n\t}\n\treturn [diffs, truncated];\n}\n\n// Given change op and array of diffs, return concatenated string:\n// * include common strings\n// * include change strings which have argument op with changeColor\n// * exclude change strings which have opposite op\nfunction concatenateRelevantDiffs(op, diffs, changeColor) {\n\treturn diffs.reduce((reduced, diff) => reduced + (diff[0] === DIFF_EQUAL ? diff[1] : diff[0] === op && diff[1].length !== 0 ? changeColor(diff[1]) : \"\"), \"\");\n}\n// Encapsulate change lines until either a common newline or the end.\nclass ChangeBuffer {\n\top;\n\tline;\n\tlines;\n\tchangeColor;\n\tconstructor(op, changeColor) {\n\t\tthis.op = op;\n\t\tthis.line = [];\n\t\tthis.lines = [];\n\t\tthis.changeColor = changeColor;\n\t}\n\tpushSubstring(substring) {\n\t\tthis.pushDiff(new Diff(this.op, substring));\n\t}\n\tpushLine() {\n\t\t// Assume call only if line has at least one diff,\n\t\t// therefore an empty line must have a diff which has an empty string.\n\t\t// If line has multiple diffs, then assume it has a common diff,\n\t\t// therefore change diffs have change color;\n\t\t// otherwise then it has line color only.\n\t\tthis.lines.push(this.line.length !== 1 ? new Diff(this.op, concatenateRelevantDiffs(this.op, this.line, this.changeColor)) : this.line[0][0] === this.op ? this.line[0] : new Diff(this.op, this.line[0][1]));\n\t\tthis.line.length = 0;\n\t}\n\tisLineEmpty() {\n\t\treturn this.line.length === 0;\n\t}\n\t// Minor input to buffer.\n\tpushDiff(diff) {\n\t\tthis.line.push(diff);\n\t}\n\t// Main input to buffer.\n\talign(diff) {\n\t\tconst string = diff[1];\n\t\tif (string.includes(\"\\n\")) {\n\t\t\tconst substrings = string.split(\"\\n\");\n\t\t\tconst iLast = substrings.length - 1;\n\t\t\tsubstrings.forEach((substring, i) => {\n\t\t\t\tif (i < iLast) {\n\t\t\t\t\t// The first substring completes the current change line.\n\t\t\t\t\t// A middle substring is a change line.\n\t\t\t\t\tthis.pushSubstring(substring);\n\t\t\t\t\tthis.pushLine();\n\t\t\t\t} else if (substring.length !== 0) {\n\t\t\t\t\t// The last substring starts a change line, if it is not empty.\n\t\t\t\t\t// Important: This non-empty condition also automatically omits\n\t\t\t\t\t// the newline appended to the end of expected and received strings.\n\t\t\t\t\tthis.pushSubstring(substring);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\t// Append non-multiline string to current change line.\n\t\t\tthis.pushDiff(diff);\n\t\t}\n\t}\n\t// Output from buffer.\n\tmoveLinesTo(lines) {\n\t\tif (!this.isLineEmpty()) {\n\t\t\tthis.pushLine();\n\t\t}\n\t\tlines.push(...this.lines);\n\t\tthis.lines.length = 0;\n\t}\n}\n// Encapsulate common and change lines.\nclass CommonBuffer {\n\tdeleteBuffer;\n\tinsertBuffer;\n\tlines;\n\tconstructor(deleteBuffer, insertBuffer) {\n\t\tthis.deleteBuffer = deleteBuffer;\n\t\tthis.insertBuffer = insertBuffer;\n\t\tthis.lines = [];\n\t}\n\tpushDiffCommonLine(diff) {\n\t\tthis.lines.push(diff);\n\t}\n\tpushDiffChangeLines(diff) {\n\t\tconst isDiffEmpty = diff[1].length === 0;\n\t\t// An empty diff string is redundant, unless a change line is empty.\n\t\tif (!isDiffEmpty || this.deleteBuffer.isLineEmpty()) {\n\t\t\tthis.deleteBuffer.pushDiff(diff);\n\t\t}\n\t\tif (!isDiffEmpty || this.insertBuffer.isLineEmpty()) {\n\t\t\tthis.insertBuffer.pushDiff(diff);\n\t\t}\n\t}\n\tflushChangeLines() {\n\t\tthis.deleteBuffer.moveLinesTo(this.lines);\n\t\tthis.insertBuffer.moveLinesTo(this.lines);\n\t}\n\t// Input to buffer.\n\talign(diff) {\n\t\tconst op = diff[0];\n\t\tconst string = diff[1];\n\t\tif (string.includes(\"\\n\")) {\n\t\t\tconst substrings = string.split(\"\\n\");\n\t\t\tconst iLast = substrings.length - 1;\n\t\t\tsubstrings.forEach((substring, i) => {\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tconst subdiff = new Diff(op, substring);\n\t\t\t\t\tif (this.deleteBuffer.isLineEmpty() && this.insertBuffer.isLineEmpty()) {\n\t\t\t\t\t\t// If both current change lines are empty,\n\t\t\t\t\t\t// then the first substring is a common line.\n\t\t\t\t\t\tthis.flushChangeLines();\n\t\t\t\t\t\tthis.pushDiffCommonLine(subdiff);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// If either current change line is non-empty,\n\t\t\t\t\t\t// then the first substring completes the change lines.\n\t\t\t\t\t\tthis.pushDiffChangeLines(subdiff);\n\t\t\t\t\t\tthis.flushChangeLines();\n\t\t\t\t\t}\n\t\t\t\t} else if (i < iLast) {\n\t\t\t\t\t// A middle substring is a common line.\n\t\t\t\t\tthis.pushDiffCommonLine(new Diff(op, substring));\n\t\t\t\t} else if (substring.length !== 0) {\n\t\t\t\t\t// The last substring starts a change line, if it is not empty.\n\t\t\t\t\t// Important: This non-empty condition also automatically omits\n\t\t\t\t\t// the newline appended to the end of expected and received strings.\n\t\t\t\t\tthis.pushDiffChangeLines(new Diff(op, substring));\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\t// Append non-multiline string to current change lines.\n\t\t\t// Important: It cannot be at the end following empty change lines,\n\t\t\t// because newline appended to the end of expected and received strings.\n\t\t\tthis.pushDiffChangeLines(diff);\n\t\t}\n\t}\n\t// Output from buffer.\n\tgetLines() {\n\t\tthis.flushChangeLines();\n\t\treturn this.lines;\n\t}\n}\n// Given diffs from expected and received strings,\n// return new array of diffs split or joined into lines.\n//\n// To correctly align a change line at the end, the algorithm:\n// * assumes that a newline was appended to the strings\n// * omits the last newline from the output array\n//\n// Assume the function is not called:\n// * if either expected or received is empty string\n// * if neither expected nor received is multiline string\nfunction getAlignedDiffs(diffs, changeColor) {\n\tconst deleteBuffer = new ChangeBuffer(DIFF_DELETE, changeColor);\n\tconst insertBuffer = new ChangeBuffer(DIFF_INSERT, changeColor);\n\tconst commonBuffer = new CommonBuffer(deleteBuffer, insertBuffer);\n\tdiffs.forEach((diff) => {\n\t\tswitch (diff[0]) {\n\t\t\tcase DIFF_DELETE:\n\t\t\t\tdeleteBuffer.align(diff);\n\t\t\t\tbreak;\n\t\t\tcase DIFF_INSERT:\n\t\t\t\tinsertBuffer.align(diff);\n\t\t\t\tbreak;\n\t\t\tdefault: commonBuffer.align(diff);\n\t\t}\n\t});\n\treturn commonBuffer.getLines();\n}\n\nfunction hasCommonDiff(diffs, isMultiline) {\n\tif (isMultiline) {\n\t\t// Important: Ignore common newline that was appended to multiline strings!\n\t\tconst iLast = diffs.length - 1;\n\t\treturn diffs.some((diff, i) => diff[0] === DIFF_EQUAL && (i !== iLast || diff[1] !== \"\\n\"));\n\t}\n\treturn diffs.some((diff) => diff[0] === DIFF_EQUAL);\n}\n// Compare two strings character-by-character.\n// Format as comparison lines in which changed substrings have inverse colors.\nfunction diffStringsUnified(a, b, options) {\n\tif (a !== b && a.length !== 0 && b.length !== 0) {\n\t\tconst isMultiline = a.includes(\"\\n\") || b.includes(\"\\n\");\n\t\t// getAlignedDiffs assumes that a newline was appended to the strings.\n\t\tconst [diffs, truncated] = diffStringsRaw(isMultiline ? `${a}\\n` : a, isMultiline ? `${b}\\n` : b, true, options);\n\t\tif (hasCommonDiff(diffs, isMultiline)) {\n\t\t\tconst optionsNormalized = normalizeDiffOptions(options);\n\t\t\tconst lines = getAlignedDiffs(diffs, optionsNormalized.changeColor);\n\t\t\treturn printDiffLines(lines, truncated, optionsNormalized);\n\t\t}\n\t}\n\t// Fall back to line-by-line diff.\n\treturn diffLinesUnified(a.split(\"\\n\"), b.split(\"\\n\"), options);\n}\n// Compare two strings character-by-character.\n// Optionally clean up small common substrings, also known as chaff.\nfunction diffStringsRaw(a, b, cleanup, options) {\n\tconst [diffs, truncated] = diffStrings(a, b, options);\n\tif (cleanup) {\n\t\tdiff_cleanupSemantic(diffs);\n\t}\n\treturn [diffs, truncated];\n}\n\nfunction getCommonMessage(message, options) {\n\tconst { commonColor } = normalizeDiffOptions(options);\n\treturn commonColor(message);\n}\nconst { AsymmetricMatcher, DOMCollection, DOMElement, Immutable, ReactElement, ReactTestComponent } = plugins;\nconst PLUGINS = [\n\tReactTestComponent,\n\tReactElement,\n\tDOMElement,\n\tDOMCollection,\n\tImmutable,\n\tAsymmetricMatcher,\n\tplugins.Error\n];\nconst FORMAT_OPTIONS = {\n\tmaxDepth: 20,\n\tplugins: PLUGINS\n};\nconst FALLBACK_FORMAT_OPTIONS = {\n\tcallToJSON: false,\n\tmaxDepth: 8,\n\tplugins: PLUGINS\n};\n// Generate a string that will highlight the difference between two values\n// with green and red. (similar to how github does code diffing)\n/**\n* @param a Expected value\n* @param b Received value\n* @param options Diff options\n* @returns {string | null} a string diff\n*/\nfunction diff(a, b, options) {\n\tif (Object.is(a, b)) {\n\t\treturn \"\";\n\t}\n\tconst aType = getType(a);\n\tlet expectedType = aType;\n\tlet omitDifference = false;\n\tif (aType === \"object\" && typeof a.asymmetricMatch === \"function\") {\n\t\tif (a.$$typeof !== Symbol.for(\"jest.asymmetricMatcher\")) {\n\t\t\t// Do not know expected type of user-defined asymmetric matcher.\n\t\t\treturn undefined;\n\t\t}\n\t\tif (typeof a.getExpectedType !== \"function\") {\n\t\t\t// For example, expect.anything() matches either null or undefined\n\t\t\treturn undefined;\n\t\t}\n\t\texpectedType = a.getExpectedType();\n\t\t// Primitive types boolean and number omit difference below.\n\t\t// For example, omit difference for expect.stringMatching(regexp)\n\t\tomitDifference = expectedType === \"string\";\n\t}\n\tif (expectedType !== getType(b)) {\n\t\tconst { aAnnotation, aColor, aIndicator, bAnnotation, bColor, bIndicator } = normalizeDiffOptions(options);\n\t\tconst formatOptions = getFormatOptions(FALLBACK_FORMAT_OPTIONS, options);\n\t\tlet aDisplay = format(a, formatOptions);\n\t\tlet bDisplay = format(b, formatOptions);\n\t\t// even if prettyFormat prints successfully big objects,\n\t\t// large string can choke later on (concatenation? RPC?),\n\t\t// so truncate it to a reasonable length here.\n\t\t// (For example, playwright's ElementHandle can become about 200_000_000 length string)\n\t\tconst MAX_LENGTH = 1e5;\n\t\tfunction truncate(s) {\n\t\t\treturn s.length <= MAX_LENGTH ? s : `${s.slice(0, MAX_LENGTH)}...`;\n\t\t}\n\t\taDisplay = truncate(aDisplay);\n\t\tbDisplay = truncate(bDisplay);\n\t\tconst aDiff = `${aColor(`${aIndicator} ${aAnnotation}:`)} \\n${aDisplay}`;\n\t\tconst bDiff = `${bColor(`${bIndicator} ${bAnnotation}:`)} \\n${bDisplay}`;\n\t\treturn `${aDiff}\\n\\n${bDiff}`;\n\t}\n\tif (omitDifference) {\n\t\treturn undefined;\n\t}\n\tswitch (aType) {\n\t\tcase \"string\": return diffLinesUnified(a.split(\"\\n\"), b.split(\"\\n\"), options);\n\t\tcase \"boolean\":\n\t\tcase \"number\": return comparePrimitive(a, b, options);\n\t\tcase \"map\": return compareObjects(sortMap(a), sortMap(b), options);\n\t\tcase \"set\": return compareObjects(sortSet(a), sortSet(b), options);\n\t\tdefault: return compareObjects(a, b, options);\n\t}\n}\nfunction comparePrimitive(a, b, options) {\n\tconst aFormat = format(a, FORMAT_OPTIONS);\n\tconst bFormat = format(b, FORMAT_OPTIONS);\n\treturn aFormat === bFormat ? \"\" : diffLinesUnified(aFormat.split(\"\\n\"), bFormat.split(\"\\n\"), options);\n}\nfunction sortMap(map) {\n\treturn new Map(Array.from(map.entries()).sort());\n}\nfunction sortSet(set) {\n\treturn new Set(Array.from(set.values()).sort());\n}\nfunction compareObjects(a, b, options) {\n\tlet difference;\n\tlet hasThrown = false;\n\ttry {\n\t\tconst formatOptions = getFormatOptions(FORMAT_OPTIONS, options);\n\t\tdifference = getObjectsDifference(a, b, formatOptions, options);\n\t} catch {\n\t\thasThrown = true;\n\t}\n\tconst noDiffMessage = getCommonMessage(NO_DIFF_MESSAGE, options);\n\t// If the comparison yields no results, compare again but this time\n\t// without calling `toJSON`. It's also possible that toJSON might throw.\n\tif (difference === undefined || difference === noDiffMessage) {\n\t\tconst formatOptions = getFormatOptions(FALLBACK_FORMAT_OPTIONS, options);\n\t\tdifference = getObjectsDifference(a, b, formatOptions, options);\n\t\tif (difference !== noDiffMessage && !hasThrown) {\n\t\t\tdifference = `${getCommonMessage(SIMILAR_MESSAGE, options)}\\n\\n${difference}`;\n\t\t}\n\t}\n\treturn difference;\n}\nfunction getFormatOptions(formatOptions, options) {\n\tconst { compareKeys, printBasicPrototype, maxDepth } = normalizeDiffOptions(options);\n\treturn {\n\t\t...formatOptions,\n\t\tcompareKeys,\n\t\tprintBasicPrototype,\n\t\tmaxDepth: maxDepth ?? formatOptions.maxDepth\n\t};\n}\nfunction getObjectsDifference(a, b, formatOptions, options) {\n\tconst formatOptionsZeroIndent = {\n\t\t...formatOptions,\n\t\tindent: 0\n\t};\n\tconst aCompare = format(a, formatOptionsZeroIndent);\n\tconst bCompare = format(b, formatOptionsZeroIndent);\n\tif (aCompare === bCompare) {\n\t\treturn getCommonMessage(NO_DIFF_MESSAGE, options);\n\t} else {\n\t\tconst aDisplay = format(a, formatOptions);\n\t\tconst bDisplay = format(b, formatOptions);\n\t\treturn diffLinesUnified2(aDisplay.split(\"\\n\"), bDisplay.split(\"\\n\"), aCompare.split(\"\\n\"), bCompare.split(\"\\n\"), options);\n\t}\n}\nconst MAX_DIFF_STRING_LENGTH = 2e4;\nfunction isAsymmetricMatcher(data) {\n\tconst type = getType$1(data);\n\treturn type === \"Object\" && typeof data.asymmetricMatch === \"function\";\n}\nfunction isReplaceable(obj1, obj2) {\n\tconst obj1Type = getType$1(obj1);\n\tconst obj2Type = getType$1(obj2);\n\treturn obj1Type === obj2Type && (obj1Type === \"Object\" || obj1Type === \"Array\");\n}\nfunction printDiffOrStringify(received, expected, options) {\n\tconst { aAnnotation, bAnnotation } = normalizeDiffOptions(options);\n\tif (typeof expected === \"string\" && typeof received === \"string\" && expected.length > 0 && received.length > 0 && expected.length <= MAX_DIFF_STRING_LENGTH && received.length <= MAX_DIFF_STRING_LENGTH && expected !== received) {\n\t\tif (expected.includes(\"\\n\") || received.includes(\"\\n\")) {\n\t\t\treturn diffStringsUnified(expected, received, options);\n\t\t}\n\t\tconst [diffs] = diffStringsRaw(expected, received, true);\n\t\tconst hasCommonDiff = diffs.some((diff) => diff[0] === DIFF_EQUAL);\n\t\tconst printLabel = getLabelPrinter(aAnnotation, bAnnotation);\n\t\tconst expectedLine = printLabel(aAnnotation) + printExpected(getCommonAndChangedSubstrings(diffs, DIFF_DELETE, hasCommonDiff));\n\t\tconst receivedLine = printLabel(bAnnotation) + printReceived(getCommonAndChangedSubstrings(diffs, DIFF_INSERT, hasCommonDiff));\n\t\treturn `${expectedLine}\\n${receivedLine}`;\n\t}\n\t// if (isLineDiffable(expected, received)) {\n\tconst clonedExpected = deepClone(expected, { forceWritable: true });\n\tconst clonedReceived = deepClone(received, { forceWritable: true });\n\tconst { replacedExpected, replacedActual } = replaceAsymmetricMatcher(clonedReceived, clonedExpected);\n\tconst difference = diff(replacedExpected, replacedActual, options);\n\treturn difference;\n\t// }\n\t// const printLabel = getLabelPrinter(aAnnotation, bAnnotation)\n\t// const expectedLine = printLabel(aAnnotation) + printExpected(expected)\n\t// const receivedLine\n\t//   = printLabel(bAnnotation)\n\t//   + (stringify(expected) === stringify(received)\n\t//     ? 'serializes to the same string'\n\t//     : printReceived(received))\n\t// return `${expectedLine}\\n${receivedLine}`\n}\nfunction replaceAsymmetricMatcher(actual, expected, actualReplaced = new WeakSet(), expectedReplaced = new WeakSet()) {\n\t// handle asymmetric Error.cause diff\n\tif (actual instanceof Error && expected instanceof Error && typeof actual.cause !== \"undefined\" && typeof expected.cause === \"undefined\") {\n\t\tdelete actual.cause;\n\t\treturn {\n\t\t\treplacedActual: actual,\n\t\t\treplacedExpected: expected\n\t\t};\n\t}\n\tif (!isReplaceable(actual, expected)) {\n\t\treturn {\n\t\t\treplacedActual: actual,\n\t\t\treplacedExpected: expected\n\t\t};\n\t}\n\tif (actualReplaced.has(actual) || expectedReplaced.has(expected)) {\n\t\treturn {\n\t\t\treplacedActual: actual,\n\t\t\treplacedExpected: expected\n\t\t};\n\t}\n\tactualReplaced.add(actual);\n\texpectedReplaced.add(expected);\n\tgetOwnProperties(expected).forEach((key) => {\n\t\tconst expectedValue = expected[key];\n\t\tconst actualValue = actual[key];\n\t\tif (isAsymmetricMatcher(expectedValue)) {\n\t\t\tif (expectedValue.asymmetricMatch(actualValue)) {\n\t\t\t\tactual[key] = expectedValue;\n\t\t\t}\n\t\t} else if (isAsymmetricMatcher(actualValue)) {\n\t\t\tif (actualValue.asymmetricMatch(expectedValue)) {\n\t\t\t\texpected[key] = actualValue;\n\t\t\t}\n\t\t} else if (isReplaceable(actualValue, expectedValue)) {\n\t\t\tconst replaced = replaceAsymmetricMatcher(actualValue, expectedValue, actualReplaced, expectedReplaced);\n\t\t\tactual[key] = replaced.replacedActual;\n\t\t\texpected[key] = replaced.replacedExpected;\n\t\t}\n\t});\n\treturn {\n\t\treplacedActual: actual,\n\t\treplacedExpected: expected\n\t};\n}\nfunction getLabelPrinter(...strings) {\n\tconst maxLength = strings.reduce((max, string) => string.length > max ? string.length : max, 0);\n\treturn (string) => `${string}: ${\" \".repeat(maxLength - string.length)}`;\n}\nconst SPACE_SYMBOL = \"·\";\nfunction replaceTrailingSpaces(text) {\n\treturn text.replace(/\\s+$/gm, (spaces) => SPACE_SYMBOL.repeat(spaces.length));\n}\nfunction printReceived(object) {\n\treturn c.red(replaceTrailingSpaces(stringify(object)));\n}\nfunction printExpected(value) {\n\treturn c.green(replaceTrailingSpaces(stringify(value)));\n}\nfunction getCommonAndChangedSubstrings(diffs, op, hasCommonDiff) {\n\treturn diffs.reduce((reduced, diff) => reduced + (diff[0] === DIFF_EQUAL ? diff[1] : diff[0] === op ? hasCommonDiff ? c.inverse(diff[1]) : diff[1] : \"\"), \"\");\n}\n\nexport { DIFF_DELETE, DIFF_EQUAL, DIFF_INSERT, Diff, diff, diffLinesRaw, diffLinesUnified, diffLinesUnified2, diffStringsRaw, diffStringsUnified, getLabelPrinter, printDiffOrStringify, replaceAsymmetricMatcher };\n", "const IS_RECORD_SYMBOL = \"@@__IMMUTABLE_RECORD__@@\";\nconst IS_COLLECTION_SYMBOL = \"@@__IMMUTABLE_ITERABLE__@@\";\nfunction isImmutable(v) {\n\treturn v && (v[IS_COLLECTION_SYMBOL] || v[IS_RECORD_SYMBOL]);\n}\nconst OBJECT_PROTO = Object.getPrototypeOf({});\nfunction getUnserializableMessage(err) {\n\tif (err instanceof Error) {\n\t\treturn `<unserializable>: ${err.message}`;\n\t}\n\tif (typeof err === \"string\") {\n\t\treturn `<unserializable>: ${err}`;\n\t}\n\treturn \"<unserializable>\";\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\nfunction serializeValue(val, seen = new WeakMap()) {\n\tif (!val || typeof val === \"string\") {\n\t\treturn val;\n\t}\n\tif (val instanceof Error && \"toJSON\" in val && typeof val.toJSON === \"function\") {\n\t\tconst jsonValue = val.toJSON();\n\t\tif (jsonValue && jsonValue !== val && typeof jsonValue === \"object\") {\n\t\t\tif (typeof val.message === \"string\") {\n\t\t\t\tsafe(() => jsonValue.message ?? (jsonValue.message = normalizeErrorMessage(val.message)));\n\t\t\t}\n\t\t\tif (typeof val.stack === \"string\") {\n\t\t\t\tsafe(() => jsonValue.stack ?? (jsonValue.stack = val.stack));\n\t\t\t}\n\t\t\tif (typeof val.name === \"string\") {\n\t\t\t\tsafe(() => jsonValue.name ?? (jsonValue.name = val.name));\n\t\t\t}\n\t\t\tif (val.cause != null) {\n\t\t\t\tsafe(() => jsonValue.cause ?? (jsonValue.cause = serializeValue(val.cause, seen)));\n\t\t\t}\n\t\t}\n\t\treturn serializeValue(jsonValue, seen);\n\t}\n\tif (typeof val === \"function\") {\n\t\treturn `Function<${val.name || \"anonymous\"}>`;\n\t}\n\tif (typeof val === \"symbol\") {\n\t\treturn val.toString();\n\t}\n\tif (typeof val !== \"object\") {\n\t\treturn val;\n\t}\n\tif (typeof Buffer !== \"undefined\" && val instanceof Buffer) {\n\t\treturn `<Buffer(${val.length}) ...>`;\n\t}\n\tif (typeof Uint8Array !== \"undefined\" && val instanceof Uint8Array) {\n\t\treturn `<Uint8Array(${val.length}) ...>`;\n\t}\n\t// cannot serialize immutables as immutables\n\tif (isImmutable(val)) {\n\t\treturn serializeValue(val.toJSON(), seen);\n\t}\n\tif (val instanceof Promise || val.constructor && val.constructor.prototype === \"AsyncFunction\") {\n\t\treturn \"Promise\";\n\t}\n\tif (typeof Element !== \"undefined\" && val instanceof Element) {\n\t\treturn val.tagName;\n\t}\n\tif (typeof val.toJSON === \"function\") {\n\t\treturn serializeValue(val.toJSON(), seen);\n\t}\n\tif (seen.has(val)) {\n\t\treturn seen.get(val);\n\t}\n\tif (Array.isArray(val)) {\n\t\t// eslint-disable-next-line unicorn/no-new-array -- we need to keep sparse arrays ([1,,3])\n\t\tconst clone = new Array(val.length);\n\t\tseen.set(val, clone);\n\t\tval.forEach((e, i) => {\n\t\t\ttry {\n\t\t\t\tclone[i] = serializeValue(e, seen);\n\t\t\t} catch (err) {\n\t\t\t\tclone[i] = getUnserializableMessage(err);\n\t\t\t}\n\t\t});\n\t\treturn clone;\n\t} else {\n\t\t// Objects with `Error` constructors appear to cause problems during worker communication\n\t\t// using `MessagePort`, so the serialized error object is being recreated as plain object.\n\t\tconst clone = Object.create(null);\n\t\tseen.set(val, clone);\n\t\tlet obj = val;\n\t\twhile (obj && obj !== OBJECT_PROTO) {\n\t\t\tObject.getOwnPropertyNames(obj).forEach((key) => {\n\t\t\t\tif (key in clone) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tclone[key] = serializeValue(val[key], seen);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// delete in case it has a setter from prototype that might throw\n\t\t\t\t\tdelete clone[key];\n\t\t\t\t\tclone[key] = getUnserializableMessage(err);\n\t\t\t\t}\n\t\t\t});\n\t\t\tobj = Object.getPrototypeOf(obj);\n\t\t}\n\t\tif (val instanceof Error) {\n\t\t\tsafe(() => val.message = normalizeErrorMessage(val.message));\n\t\t}\n\t\treturn clone;\n\t}\n}\nfunction safe(fn) {\n\ttry {\n\t\treturn fn();\n\t} catch {}\n}\nfunction normalizeErrorMessage(message) {\n\treturn message.replace(/__(vite_ssr_import|vi_import)_\\d+__\\./g, \"\");\n}\n\nexport { serializeValue };\n", "import { printDiffOrStringify } from './diff.js';\nimport { stringify } from './display.js';\nimport { serializeValue } from './serialize.js';\nimport '@vitest/pretty-format';\nimport 'tinyrainbow';\nimport './helpers.js';\nimport './constants.js';\nimport './chunk-_commonjsHelpers.js';\n\nfunction processError(_err, diffOptions, seen = new WeakSet()) {\n\tif (!_err || typeof _err !== \"object\") {\n\t\treturn { message: String(_err) };\n\t}\n\tconst err = _err;\n\tif (err.showDiff || err.showDiff === undefined && err.expected !== undefined && err.actual !== undefined) {\n\t\terr.diff = printDiffOrStringify(err.actual, err.expected, {\n\t\t\t...diffOptions,\n\t\t\t...err.diffOptions\n\t\t});\n\t}\n\tif (\"expected\" in err && typeof err.expected !== \"string\") {\n\t\terr.expected = stringify(err.expected, 10);\n\t}\n\tif (\"actual\" in err && typeof err.actual !== \"string\") {\n\t\terr.actual = stringify(err.actual, 10);\n\t}\n\t// some Error implementations may not allow rewriting cause\n\t// in most cases, the assignment will lead to \"err.cause = err.cause\"\n\ttry {\n\t\tif (!seen.has(err) && typeof err.cause === \"object\") {\n\t\t\tseen.add(err);\n\t\t\terr.cause = processError(err.cause, diffOptions, seen);\n\t\t}\n\t} catch {}\n\ttry {\n\t\treturn serializeValue(err);\n\t} catch (e) {\n\t\treturn serializeValue(new Error(`Failed to fully serialize error: ${e === null || e === void 0 ? void 0 : e.message}\\nInner error message: ${err === null || err === void 0 ? void 0 : err.message}`));\n\t}\n}\n\nexport { processError, serializeValue as serializeError };\n", "const _DRIVE_LETTER_START_RE = /^[A-Za-z]:\\//;\nfunction normalizeWindowsPath(input = \"\") {\n  if (!input) {\n    return input;\n  }\n  return input.replace(/\\\\/g, \"/\").replace(_DRIVE_LETTER_START_RE, (r) => r.toUpperCase());\n}\n\nconst _UNC_REGEX = /^[/\\\\]{2}/;\nconst _IS_ABSOLUTE_RE = /^[/\\\\](?![/\\\\])|^[/\\\\]{2}(?!\\.)|^[A-Za-z]:[/\\\\]/;\nconst _DRIVE_LETTER_RE = /^[A-Za-z]:$/;\nconst normalize = function(path) {\n  if (path.length === 0) {\n    return \".\";\n  }\n  path = normalizeWindowsPath(path);\n  const isUNCPath = path.match(_UNC_REGEX);\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSeparator = path[path.length - 1] === \"/\";\n  path = normalizeString(path, !isPathAbsolute);\n  if (path.length === 0) {\n    if (isPathAbsolute) {\n      return \"/\";\n    }\n    return trailingSeparator ? \"./\" : \".\";\n  }\n  if (trailingSeparator) {\n    path += \"/\";\n  }\n  if (_DRIVE_LETTER_RE.test(path)) {\n    path += \"/\";\n  }\n  if (isUNCPath) {\n    if (!isPathAbsolute) {\n      return `//./${path}`;\n    }\n    return `//${path}`;\n  }\n  return isPathAbsolute && !isAbsolute(path) ? `/${path}` : path;\n};\nconst join = function(...segments) {\n  let path = \"\";\n  for (const seg of segments) {\n    if (!seg) {\n      continue;\n    }\n    if (path.length > 0) {\n      const pathTrailing = path[path.length - 1] === \"/\";\n      const segLeading = seg[0] === \"/\";\n      const both = pathTrailing && segLeading;\n      if (both) {\n        path += seg.slice(1);\n      } else {\n        path += pathTrailing || segLeading ? seg : `/${seg}`;\n      }\n    } else {\n      path += seg;\n    }\n  }\n  return normalize(path);\n};\nfunction cwd() {\n  if (typeof process !== \"undefined\" && typeof process.cwd === \"function\") {\n    return process.cwd().replace(/\\\\/g, \"/\");\n  }\n  return \"/\";\n}\nconst resolve = function(...arguments_) {\n  arguments_ = arguments_.map((argument) => normalizeWindowsPath(argument));\n  let resolvedPath = \"\";\n  let resolvedAbsolute = false;\n  for (let index = arguments_.length - 1; index >= -1 && !resolvedAbsolute; index--) {\n    const path = index >= 0 ? arguments_[index] : cwd();\n    if (!path || path.length === 0) {\n      continue;\n    }\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = isAbsolute(path);\n  }\n  resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute);\n  if (resolvedAbsolute && !isAbsolute(resolvedPath)) {\n    return `/${resolvedPath}`;\n  }\n  return resolvedPath.length > 0 ? resolvedPath : \".\";\n};\nfunction normalizeString(path, allowAboveRoot) {\n  let res = \"\";\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let char = null;\n  for (let index = 0; index <= path.length; ++index) {\n    if (index < path.length) {\n      char = path[index];\n    } else if (char === \"/\") {\n      break;\n    } else {\n      char = \"/\";\n    }\n    if (char === \"/\") {\n      if (lastSlash === index - 1 || dots === 1) ; else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res[res.length - 1] !== \".\" || res[res.length - 2] !== \".\") {\n          if (res.length > 2) {\n            const lastSlashIndex = res.lastIndexOf(\"/\");\n            if (lastSlashIndex === -1) {\n              res = \"\";\n              lastSegmentLength = 0;\n            } else {\n              res = res.slice(0, lastSlashIndex);\n              lastSegmentLength = res.length - 1 - res.lastIndexOf(\"/\");\n            }\n            lastSlash = index;\n            dots = 0;\n            continue;\n          } else if (res.length > 0) {\n            res = \"\";\n            lastSegmentLength = 0;\n            lastSlash = index;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? \"/..\" : \"..\";\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0) {\n          res += `/${path.slice(lastSlash + 1, index)}`;\n        } else {\n          res = path.slice(lastSlash + 1, index);\n        }\n        lastSegmentLength = index - lastSlash - 1;\n      }\n      lastSlash = index;\n      dots = 0;\n    } else if (char === \".\" && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\nconst isAbsolute = function(p) {\n  return _IS_ABSOLUTE_RE.test(p);\n};\nconst dirname = function(p) {\n  const segments = normalizeWindowsPath(p).replace(/\\/$/, \"\").split(\"/\").slice(0, -1);\n  if (segments.length === 1 && _DRIVE_LETTER_RE.test(segments[0])) {\n    segments[0] += \"/\";\n  }\n  return segments.join(\"/\") || (isAbsolute(p) ? \"/\" : \".\");\n};\n\nexport { dirname as d, join as j, resolve as r };\n", "import { isPrimitive, notNullish } from './helpers.js';\nimport { r as resolve } from './chunk-pathe.M-eThtNZ.js';\nimport './constants.js';\n\n// src/vlq.ts\nvar comma = \",\".charCodeAt(0);\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar intToChar = new Uint8Array(64);\nvar charToInt = new Uint8Array(128);\nfor (let i = 0; i < chars.length; i++) {\n  const c = chars.charCodeAt(i);\n  intToChar[i] = c;\n  charToInt[c] = i;\n}\nfunction decodeInteger(reader, relative) {\n  let value = 0;\n  let shift = 0;\n  let integer = 0;\n  do {\n    const c = reader.next();\n    integer = charToInt[c];\n    value |= (integer & 31) << shift;\n    shift += 5;\n  } while (integer & 32);\n  const shouldNegate = value & 1;\n  value >>>= 1;\n  if (shouldNegate) {\n    value = -2147483648 | -value;\n  }\n  return relative + value;\n}\nfunction hasMoreVlq(reader, max) {\n  if (reader.pos >= max) return false;\n  return reader.peek() !== comma;\n}\nvar StringReader = class {\n  constructor(buffer) {\n    this.pos = 0;\n    this.buffer = buffer;\n  }\n  next() {\n    return this.buffer.charCodeAt(this.pos++);\n  }\n  peek() {\n    return this.buffer.charCodeAt(this.pos);\n  }\n  indexOf(char) {\n    const { buffer, pos } = this;\n    const idx = buffer.indexOf(char, pos);\n    return idx === -1 ? buffer.length : idx;\n  }\n};\n\n// src/sourcemap-codec.ts\nfunction decode(mappings) {\n  const { length } = mappings;\n  const reader = new StringReader(mappings);\n  const decoded = [];\n  let genColumn = 0;\n  let sourcesIndex = 0;\n  let sourceLine = 0;\n  let sourceColumn = 0;\n  let namesIndex = 0;\n  do {\n    const semi = reader.indexOf(\";\");\n    const line = [];\n    let sorted = true;\n    let lastCol = 0;\n    genColumn = 0;\n    while (reader.pos < semi) {\n      let seg;\n      genColumn = decodeInteger(reader, genColumn);\n      if (genColumn < lastCol) sorted = false;\n      lastCol = genColumn;\n      if (hasMoreVlq(reader, semi)) {\n        sourcesIndex = decodeInteger(reader, sourcesIndex);\n        sourceLine = decodeInteger(reader, sourceLine);\n        sourceColumn = decodeInteger(reader, sourceColumn);\n        if (hasMoreVlq(reader, semi)) {\n          namesIndex = decodeInteger(reader, namesIndex);\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex];\n        } else {\n          seg = [genColumn, sourcesIndex, sourceLine, sourceColumn];\n        }\n      } else {\n        seg = [genColumn];\n      }\n      line.push(seg);\n      reader.pos++;\n    }\n    if (!sorted) sort(line);\n    decoded.push(line);\n    reader.pos = semi + 1;\n  } while (reader.pos <= length);\n  return decoded;\n}\nfunction sort(line) {\n  line.sort(sortComparator);\n}\nfunction sortComparator(a, b) {\n  return a[0] - b[0];\n}\n\n// src/trace-mapping.ts\n\n// src/sourcemap-segment.ts\nvar COLUMN = 0;\nvar SOURCES_INDEX = 1;\nvar SOURCE_LINE = 2;\nvar SOURCE_COLUMN = 3;\nvar NAMES_INDEX = 4;\n\n// src/binary-search.ts\nvar found = false;\nfunction binarySearch(haystack, needle, low, high) {\n  while (low <= high) {\n    const mid = low + (high - low >> 1);\n    const cmp = haystack[mid][COLUMN] - needle;\n    if (cmp === 0) {\n      found = true;\n      return mid;\n    }\n    if (cmp < 0) {\n      low = mid + 1;\n    } else {\n      high = mid - 1;\n    }\n  }\n  found = false;\n  return low - 1;\n}\nfunction upperBound(haystack, needle, index) {\n  for (let i = index + 1; i < haystack.length; index = i++) {\n    if (haystack[i][COLUMN] !== needle) break;\n  }\n  return index;\n}\nfunction lowerBound(haystack, needle, index) {\n  for (let i = index - 1; i >= 0; index = i--) {\n    if (haystack[i][COLUMN] !== needle) break;\n  }\n  return index;\n}\nfunction memoizedBinarySearch(haystack, needle, state, key) {\n  const { lastKey, lastNeedle, lastIndex } = state;\n  let low = 0;\n  let high = haystack.length - 1;\n  if (key === lastKey) {\n    if (needle === lastNeedle) {\n      found = lastIndex !== -1 && haystack[lastIndex][COLUMN] === needle;\n      return lastIndex;\n    }\n    if (needle >= lastNeedle) {\n      low = lastIndex === -1 ? 0 : lastIndex;\n    } else {\n      high = lastIndex;\n    }\n  }\n  state.lastKey = key;\n  state.lastNeedle = needle;\n  return state.lastIndex = binarySearch(haystack, needle, low, high);\n}\n\n// src/trace-mapping.ts\nvar LINE_GTR_ZERO = \"`line` must be greater than 0 (lines start at line 1)\";\nvar COL_GTR_EQ_ZERO = \"`column` must be greater than or equal to 0 (columns start at column 0)\";\nvar LEAST_UPPER_BOUND = -1;\nvar GREATEST_LOWER_BOUND = 1;\nfunction cast(map) {\n  return map;\n}\nfunction decodedMappings(map) {\n  var _a;\n  return (_a = cast(map))._decoded || (_a._decoded = decode(cast(map)._encoded));\n}\nfunction originalPositionFor(map, needle) {\n  let { line, column, bias } = needle;\n  line--;\n  if (line < 0) throw new Error(LINE_GTR_ZERO);\n  if (column < 0) throw new Error(COL_GTR_EQ_ZERO);\n  const decoded = decodedMappings(map);\n  if (line >= decoded.length) return OMapping(null, null, null, null);\n  const segments = decoded[line];\n  const index = traceSegmentInternal(\n    segments,\n    cast(map)._decodedMemo,\n    line,\n    column,\n    bias || GREATEST_LOWER_BOUND\n  );\n  if (index === -1) return OMapping(null, null, null, null);\n  const segment = segments[index];\n  if (segment.length === 1) return OMapping(null, null, null, null);\n  const { names, resolvedSources } = map;\n  return OMapping(\n    resolvedSources[segment[SOURCES_INDEX]],\n    segment[SOURCE_LINE] + 1,\n    segment[SOURCE_COLUMN],\n    segment.length === 5 ? names[segment[NAMES_INDEX]] : null\n  );\n}\nfunction OMapping(source, line, column, name) {\n  return { source, line, column, name };\n}\nfunction traceSegmentInternal(segments, memo, line, column, bias) {\n  let index = memoizedBinarySearch(segments, column, memo, line);\n  if (found) {\n    index = (bias === LEAST_UPPER_BOUND ? upperBound : lowerBound)(segments, column, index);\n  } else if (bias === LEAST_UPPER_BOUND) index++;\n  if (index === -1 || index === segments.length) return -1;\n  return index;\n}\n\nconst CHROME_IE_STACK_REGEXP = /^\\s*at .*(?:\\S:\\d+|\\(native\\))/m;\nconst SAFARI_NATIVE_CODE_REGEXP = /^(?:eval@)?(?:\\[native code\\])?$/;\nconst stackIgnorePatterns = [\n\t\"node:internal\",\n\t/\\/packages\\/\\w+\\/dist\\//,\n\t/\\/@vitest\\/\\w+\\/dist\\//,\n\t\"/vitest/dist/\",\n\t\"/vitest/src/\",\n\t\"/node_modules/chai/\",\n\t\"/node_modules/tinyspy/\",\n\t\"/vite/dist/node/module-runner\",\n\t\"/rolldown-vite/dist/node/module-runner\",\n\t\"/deps/chunk-\",\n\t\"/deps/@vitest\",\n\t\"/deps/loupe\",\n\t\"/deps/chai\",\n\t\"/browser-playwright/dist/locators.js\",\n\t\"/browser-webdriverio/dist/locators.js\",\n\t\"/browser-preview/dist/locators.js\",\n\t/node:\\w+/,\n\t/__vitest_test__/,\n\t/__vitest_browser__/,\n\t/\\/deps\\/vitest_/\n];\nfunction extractLocation(urlLike) {\n\t// Fail-fast but return locations like \"(native)\"\n\tif (!urlLike.includes(\":\")) {\n\t\treturn [urlLike];\n\t}\n\tconst regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n\tconst parts = regExp.exec(urlLike.replace(/^\\(|\\)$/g, \"\"));\n\tif (!parts) {\n\t\treturn [urlLike];\n\t}\n\tlet url = parts[1];\n\tif (url.startsWith(\"async \")) {\n\t\turl = url.slice(6);\n\t}\n\tif (url.startsWith(\"http:\") || url.startsWith(\"https:\")) {\n\t\tconst urlObj = new URL(url);\n\t\turlObj.searchParams.delete(\"import\");\n\t\turlObj.searchParams.delete(\"browserv\");\n\t\turl = urlObj.pathname + urlObj.hash + urlObj.search;\n\t}\n\tif (url.startsWith(\"/@fs/\")) {\n\t\tconst isWindows = /^\\/@fs\\/[a-zA-Z]:\\//.test(url);\n\t\turl = url.slice(isWindows ? 5 : 4);\n\t}\n\treturn [\n\t\turl,\n\t\tparts[2] || undefined,\n\t\tparts[3] || undefined\n\t];\n}\nfunction parseSingleFFOrSafariStack(raw) {\n\tlet line = raw.trim();\n\tif (SAFARI_NATIVE_CODE_REGEXP.test(line)) {\n\t\treturn null;\n\t}\n\tif (line.includes(\" > eval\")) {\n\t\tline = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, \":$1\");\n\t}\n\t// Early return for lines that don't look like Firefox/Safari stack traces\n\t// Firefox/Safari stack traces must contain '@' and should have location info after it\n\tif (!line.includes(\"@\")) {\n\t\treturn null;\n\t}\n\t// Find the correct @ that separates function name from location\n\t// For cases like '@https://@fs/path' or 'functionName@https://@fs/path'\n\t// we need to find the first @ that precedes a valid location (containing :)\n\tlet atIndex = -1;\n\tlet locationPart = \"\";\n\tlet functionName;\n\t// Try each @ from left to right to find the one that gives us a valid location\n\tfor (let i = 0; i < line.length; i++) {\n\t\tif (line[i] === \"@\") {\n\t\t\tconst candidateLocation = line.slice(i + 1);\n\t\t\t// Minimum length 3 for valid location: 1 for filename + 1 for colon + 1 for line number (e.g., \"a:1\")\n\t\t\tif (candidateLocation.includes(\":\") && candidateLocation.length >= 3) {\n\t\t\t\tatIndex = i;\n\t\t\t\tlocationPart = candidateLocation;\n\t\t\t\tfunctionName = i > 0 ? line.slice(0, i) : undefined;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t// Validate we found a valid location with minimum length (filename:line format)\n\tif (atIndex === -1 || !locationPart.includes(\":\") || locationPart.length < 3) {\n\t\treturn null;\n\t}\n\tconst [url, lineNumber, columnNumber] = extractLocation(locationPart);\n\tif (!url || !lineNumber || !columnNumber) {\n\t\treturn null;\n\t}\n\treturn {\n\t\tfile: url,\n\t\tmethod: functionName || \"\",\n\t\tline: Number.parseInt(lineNumber),\n\t\tcolumn: Number.parseInt(columnNumber)\n\t};\n}\nfunction parseSingleStack(raw) {\n\tconst line = raw.trim();\n\tif (!CHROME_IE_STACK_REGEXP.test(line)) {\n\t\treturn parseSingleFFOrSafariStack(line);\n\t}\n\treturn parseSingleV8Stack(line);\n}\n// Based on https://github.com/stacktracejs/error-stack-parser\n// Credit to stacktracejs\nfunction parseSingleV8Stack(raw) {\n\tlet line = raw.trim();\n\tif (!CHROME_IE_STACK_REGEXP.test(line)) {\n\t\treturn null;\n\t}\n\tif (line.includes(\"(eval \")) {\n\t\tline = line.replace(/eval code/g, \"eval\").replace(/(\\(eval at [^()]*)|(,.*$)/g, \"\");\n\t}\n\tlet sanitizedLine = line.replace(/^\\s+/, \"\").replace(/\\(eval code/g, \"(\").replace(/^.*?\\s+/, \"\");\n\t// capture and preserve the parenthesized location \"(/foo/my bar.js:12:87)\" in\n\t// case it has spaces in it, as the string is split on \\s+ later on\n\tconst location = sanitizedLine.match(/ (\\(.+\\)$)/);\n\t// remove the parenthesized location from the line, if it was matched\n\tsanitizedLine = location ? sanitizedLine.replace(location[0], \"\") : sanitizedLine;\n\t// if a location was matched, pass it to extractLocation() otherwise pass all sanitizedLine\n\t// because this line doesn't have function name\n\tconst [url, lineNumber, columnNumber] = extractLocation(location ? location[1] : sanitizedLine);\n\tlet method = location && sanitizedLine || \"\";\n\tlet file = url && [\"eval\", \"<anonymous>\"].includes(url) ? undefined : url;\n\tif (!file || !lineNumber || !columnNumber) {\n\t\treturn null;\n\t}\n\tif (method.startsWith(\"async \")) {\n\t\tmethod = method.slice(6);\n\t}\n\tif (file.startsWith(\"file://\")) {\n\t\tfile = file.slice(7);\n\t}\n\t// normalize Windows path (\\ -> /)\n\tfile = file.startsWith(\"node:\") || file.startsWith(\"internal:\") ? file : resolve(file);\n\tif (method) {\n\t\tmethod = method.replace(/__vite_ssr_import_\\d+__\\./g, \"\").replace(/(Object\\.)?__vite_ssr_export_default__\\s?/g, \"\");\n\t}\n\treturn {\n\t\tmethod,\n\t\tfile,\n\t\tline: Number.parseInt(lineNumber),\n\t\tcolumn: Number.parseInt(columnNumber)\n\t};\n}\nfunction createStackString(stacks) {\n\treturn stacks.map((stack) => {\n\t\tconst line = `${stack.file}:${stack.line}:${stack.column}`;\n\t\tif (stack.method) {\n\t\t\treturn `    at ${stack.method}(${line})`;\n\t\t}\n\t\treturn `    at ${line}`;\n\t}).join(\"\\n\");\n}\nfunction parseStacktrace(stack, options = {}) {\n\tconst { ignoreStackEntries = stackIgnorePatterns } = options;\n\tconst stacks = !CHROME_IE_STACK_REGEXP.test(stack) ? parseFFOrSafariStackTrace(stack) : parseV8Stacktrace(stack);\n\treturn stacks.map((stack) => {\n\t\tvar _options$getSourceMap;\n\t\tif (options.getUrlId) {\n\t\t\tstack.file = options.getUrlId(stack.file);\n\t\t}\n\t\tconst map = (_options$getSourceMap = options.getSourceMap) === null || _options$getSourceMap === void 0 ? void 0 : _options$getSourceMap.call(options, stack.file);\n\t\tif (!map || typeof map !== \"object\" || !map.version) {\n\t\t\treturn shouldFilter(ignoreStackEntries, stack.file) ? null : stack;\n\t\t}\n\t\tconst traceMap = new DecodedMap(map, stack.file);\n\t\tconst position = getOriginalPosition(traceMap, stack);\n\t\tif (!position) {\n\t\t\treturn stack;\n\t\t}\n\t\tconst { line, column, source, name } = position;\n\t\tlet file = source || stack.file;\n\t\tif (file.match(/\\/\\w:\\//)) {\n\t\t\tfile = file.slice(1);\n\t\t}\n\t\tif (shouldFilter(ignoreStackEntries, file)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (line != null && column != null) {\n\t\t\treturn {\n\t\t\t\tline,\n\t\t\t\tcolumn,\n\t\t\t\tfile,\n\t\t\t\tmethod: name || stack.method\n\t\t\t};\n\t\t}\n\t\treturn stack;\n\t}).filter((s) => s != null);\n}\nfunction shouldFilter(ignoreStackEntries, file) {\n\treturn ignoreStackEntries.some((p) => file.match(p));\n}\nfunction parseFFOrSafariStackTrace(stack) {\n\treturn stack.split(\"\\n\").map((line) => parseSingleFFOrSafariStack(line)).filter(notNullish);\n}\nfunction parseV8Stacktrace(stack) {\n\treturn stack.split(\"\\n\").map((line) => parseSingleV8Stack(line)).filter(notNullish);\n}\nfunction parseErrorStacktrace(e, options = {}) {\n\tif (!e || isPrimitive(e)) {\n\t\treturn [];\n\t}\n\tif (\"stacks\" in e && e.stacks) {\n\t\treturn e.stacks;\n\t}\n\tconst stackStr = e.stack || \"\";\n\t// if \"stack\" property was overwritten at runtime to be something else,\n\t// ignore the value because we don't know how to process it\n\tlet stackFrames = typeof stackStr === \"string\" ? parseStacktrace(stackStr, options) : [];\n\tif (!stackFrames.length) {\n\t\tconst e_ = e;\n\t\tif (e_.fileName != null && e_.lineNumber != null && e_.columnNumber != null) {\n\t\t\tstackFrames = parseStacktrace(`${e_.fileName}:${e_.lineNumber}:${e_.columnNumber}`, options);\n\t\t}\n\t\tif (e_.sourceURL != null && e_.line != null && e_._column != null) {\n\t\t\tstackFrames = parseStacktrace(`${e_.sourceURL}:${e_.line}:${e_.column}`, options);\n\t\t}\n\t}\n\tif (options.frameFilter) {\n\t\tstackFrames = stackFrames.filter((f) => options.frameFilter(e, f) !== false);\n\t}\n\te.stacks = stackFrames;\n\treturn stackFrames;\n}\nclass DecodedMap {\n\t_encoded;\n\t_decoded;\n\t_decodedMemo;\n\turl;\n\tversion;\n\tnames = [];\n\tresolvedSources;\n\tconstructor(map, from) {\n\t\tthis.map = map;\n\t\tconst { mappings, names, sources } = map;\n\t\tthis.version = map.version;\n\t\tthis.names = names || [];\n\t\tthis._encoded = mappings || \"\";\n\t\tthis._decodedMemo = memoizedState();\n\t\tthis.url = from;\n\t\tthis.resolvedSources = (sources || []).map((s) => resolve(s || \"\", from));\n\t}\n}\nfunction memoizedState() {\n\treturn {\n\t\tlastKey: -1,\n\t\tlastNeedle: -1,\n\t\tlastIndex: -1\n\t};\n}\nfunction getOriginalPosition(map, needle) {\n\tconst result = originalPositionFor(map, needle);\n\tif (result.column == null) {\n\t\treturn null;\n\t}\n\treturn result;\n}\n\nexport { DecodedMap, createStackString, stackIgnorePatterns as defaultStackIgnorePatterns, getOriginalPosition, parseErrorStacktrace, parseSingleFFOrSafariStack, parseSingleStack, parseSingleV8Stack, parseStacktrace };\n", "import { processError } from '@vitest/utils/error';\nimport { parseSingleStack } from '@vitest/utils/source-map';\nimport { relative } from 'pathe';\nimport { toArray } from '@vitest/utils/helpers';\n\nfunction createChainable(keys, fn) {\n\tfunction create(context) {\n\t\tconst chain = function(...args) {\n\t\t\treturn fn.apply(context, args);\n\t\t};\n\t\tObject.assign(chain, fn);\n\t\tchain.withContext = () => chain.bind(context);\n\t\tchain.setContext = (key, value) => {\n\t\t\tcontext[key] = value;\n\t\t};\n\t\tchain.mergeContext = (ctx) => {\n\t\t\tObject.assign(context, ctx);\n\t\t};\n\t\tfor (const key of keys) {\n\t\t\tObject.defineProperty(chain, key, { get() {\n\t\t\t\treturn create({\n\t\t\t\t\t...context,\n\t\t\t\t\t[key]: true\n\t\t\t\t});\n\t\t\t} });\n\t\t}\n\t\treturn chain;\n\t}\n\tconst chain = create({});\n\tchain.fn = fn;\n\treturn chain;\n}\n\n/**\n* If any tasks been marked as `only`, mark all other tasks as `skip`.\n*/\nfunction interpretTaskModes(file, namePattern, testLocations, onlyMode, parentIsOnly, allowOnly) {\n\tconst matchedLocations = [];\n\tconst traverseSuite = (suite, parentIsOnly, parentMatchedWithLocation) => {\n\t\tconst suiteIsOnly = parentIsOnly || suite.mode === \"only\";\n\t\tsuite.tasks.forEach((t) => {\n\t\t\t// Check if either the parent suite or the task itself are marked as included\n\t\t\tconst includeTask = suiteIsOnly || t.mode === \"only\";\n\t\t\tif (onlyMode) {\n\t\t\t\tif (t.type === \"suite\" && (includeTask || someTasksAreOnly(t))) {\n\t\t\t\t\t// Don't skip this suite\n\t\t\t\t\tif (t.mode === \"only\") {\n\t\t\t\t\t\tcheckAllowOnly(t, allowOnly);\n\t\t\t\t\t\tt.mode = \"run\";\n\t\t\t\t\t}\n\t\t\t\t} else if (t.mode === \"run\" && !includeTask) {\n\t\t\t\t\tt.mode = \"skip\";\n\t\t\t\t} else if (t.mode === \"only\") {\n\t\t\t\t\tcheckAllowOnly(t, allowOnly);\n\t\t\t\t\tt.mode = \"run\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet hasLocationMatch = parentMatchedWithLocation;\n\t\t\t// Match test location against provided locations, only run if present\n\t\t\t// in `testLocations`. Note: if `includeTaskLocations` is not enabled,\n\t\t\t// all test will be skipped.\n\t\t\tif (testLocations !== undefined && testLocations.length !== 0) {\n\t\t\t\tif (t.location && (testLocations === null || testLocations === void 0 ? void 0 : testLocations.includes(t.location.line))) {\n\t\t\t\t\tt.mode = \"run\";\n\t\t\t\t\tmatchedLocations.push(t.location.line);\n\t\t\t\t\thasLocationMatch = true;\n\t\t\t\t} else if (parentMatchedWithLocation) {\n\t\t\t\t\tt.mode = \"run\";\n\t\t\t\t} else if (t.type === \"test\") {\n\t\t\t\t\tt.mode = \"skip\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (t.type === \"test\") {\n\t\t\t\tif (namePattern && !getTaskFullName(t).match(namePattern)) {\n\t\t\t\t\tt.mode = \"skip\";\n\t\t\t\t}\n\t\t\t} else if (t.type === \"suite\") {\n\t\t\t\tif (t.mode === \"skip\") {\n\t\t\t\t\tskipAllTasks(t);\n\t\t\t\t} else if (t.mode === \"todo\") {\n\t\t\t\t\ttodoAllTasks(t);\n\t\t\t\t} else {\n\t\t\t\t\ttraverseSuite(t, includeTask, hasLocationMatch);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t// if all subtasks are skipped, mark as skip\n\t\tif (suite.mode === \"run\" || suite.mode === \"queued\") {\n\t\t\tif (suite.tasks.length && suite.tasks.every((i) => i.mode !== \"run\" && i.mode !== \"queued\")) {\n\t\t\t\tsuite.mode = \"skip\";\n\t\t\t}\n\t\t}\n\t};\n\ttraverseSuite(file, parentIsOnly, false);\n\tconst nonMatching = testLocations === null || testLocations === void 0 ? void 0 : testLocations.filter((loc) => !matchedLocations.includes(loc));\n\tif (nonMatching && nonMatching.length !== 0) {\n\t\tconst message = nonMatching.length === 1 ? `line ${nonMatching[0]}` : `lines ${nonMatching.join(\", \")}`;\n\t\tif (file.result === undefined) {\n\t\t\tfile.result = {\n\t\t\t\tstate: \"fail\",\n\t\t\t\terrors: []\n\t\t\t};\n\t\t}\n\t\tif (file.result.errors === undefined) {\n\t\t\tfile.result.errors = [];\n\t\t}\n\t\tfile.result.errors.push(processError(new Error(`No test found in ${file.name} in ${message}`)));\n\t}\n}\nfunction getTaskFullName(task) {\n\treturn `${task.suite ? `${getTaskFullName(task.suite)} ` : \"\"}${task.name}`;\n}\nfunction someTasksAreOnly(suite) {\n\treturn suite.tasks.some((t) => t.mode === \"only\" || t.type === \"suite\" && someTasksAreOnly(t));\n}\nfunction skipAllTasks(suite) {\n\tsuite.tasks.forEach((t) => {\n\t\tif (t.mode === \"run\" || t.mode === \"queued\") {\n\t\t\tt.mode = \"skip\";\n\t\t\tif (t.type === \"suite\") {\n\t\t\t\tskipAllTasks(t);\n\t\t\t}\n\t\t}\n\t});\n}\nfunction todoAllTasks(suite) {\n\tsuite.tasks.forEach((t) => {\n\t\tif (t.mode === \"run\" || t.mode === \"queued\") {\n\t\t\tt.mode = \"todo\";\n\t\t\tif (t.type === \"suite\") {\n\t\t\t\ttodoAllTasks(t);\n\t\t\t}\n\t\t}\n\t});\n}\nfunction checkAllowOnly(task, allowOnly) {\n\tif (allowOnly) {\n\t\treturn;\n\t}\n\tconst error = processError(new Error(\"[Vitest] Unexpected .only modifier. Remove it or pass --allowOnly argument to bypass this error\"));\n\ttask.result = {\n\t\tstate: \"fail\",\n\t\terrors: [error]\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nfunction generateHash(str) {\n\tlet hash = 0;\n\tif (str.length === 0) {\n\t\treturn `${hash}`;\n\t}\n\tfor (let i = 0; i < str.length; i++) {\n\t\tconst char = str.charCodeAt(i);\n\t\thash = (hash << 5) - hash + char;\n\t\thash = hash & hash;\n\t}\n\treturn `${hash}`;\n}\nfunction calculateSuiteHash(parent) {\n\tparent.tasks.forEach((t, idx) => {\n\t\tt.id = `${parent.id}_${idx}`;\n\t\tif (t.type === \"suite\") {\n\t\t\tcalculateSuiteHash(t);\n\t\t}\n\t});\n}\nfunction createFileTask(filepath, root, projectName, pool) {\n\tconst path = relative(root, filepath);\n\tconst file = {\n\t\tid: generateFileHash(path, projectName),\n\t\tname: path,\n\t\ttype: \"suite\",\n\t\tmode: \"queued\",\n\t\tfilepath,\n\t\ttasks: [],\n\t\tmeta: Object.create(null),\n\t\tprojectName,\n\t\tfile: undefined,\n\t\tpool\n\t};\n\tfile.file = file;\n\treturn file;\n}\n/**\n* Generate a unique ID for a file based on its path and project name\n* @param file File relative to the root of the project to keep ID the same between different machines\n* @param projectName The name of the test project\n*/\n/* @__NO_SIDE_EFFECTS__ */\nfunction generateFileHash(file, projectName) {\n\treturn /* @__PURE__ */ generateHash(`${file}${projectName || \"\"}`);\n}\nfunction findTestFileStackTrace(testFilePath, error) {\n\t// first line is the error message\n\tconst lines = error.split(\"\\n\").slice(1);\n\tfor (const line of lines) {\n\t\tconst stack = parseSingleStack(line);\n\t\tif (stack && stack.file === testFilePath) {\n\t\t\treturn stack;\n\t\t}\n\t}\n}\n\n/**\n* Return a function for running multiple async operations with limited concurrency.\n*/\nfunction limitConcurrency(concurrency = Infinity) {\n\t// The number of currently active + pending tasks.\n\tlet count = 0;\n\t// The head and tail of the pending task queue, built using a singly linked list.\n\t// Both head and tail are initially undefined, signifying an empty queue.\n\t// They both become undefined again whenever there are no pending tasks.\n\tlet head;\n\tlet tail;\n\t// A bookkeeping function executed whenever a task has been run to completion.\n\tconst finish = () => {\n\t\tcount--;\n\t\t// Check if there are further pending tasks in the queue.\n\t\tif (head) {\n\t\t\t// Allow the next pending task to run and pop it from the queue.\n\t\t\thead[0]();\n\t\t\thead = head[1];\n\t\t\t// The head may now be undefined if there are no further pending tasks.\n\t\t\t// In that case, set tail to undefined as well.\n\t\t\ttail = head && tail;\n\t\t}\n\t};\n\treturn (func, ...args) => {\n\t\t// Create a promise chain that:\n\t\t//  1. Waits for its turn in the task queue (if necessary).\n\t\t//  2. Runs the task.\n\t\t//  3. Allows the next pending task (if any) to run.\n\t\treturn new Promise((resolve) => {\n\t\t\tif (count++ < concurrency) {\n\t\t\t\t// No need to queue if fewer than maxConcurrency tasks are running.\n\t\t\t\tresolve();\n\t\t\t} else if (tail) {\n\t\t\t\t// There are pending tasks, so append to the queue.\n\t\t\t\ttail = tail[1] = [resolve];\n\t\t\t} else {\n\t\t\t\t// No other pending tasks, initialize the queue with a new tail and head.\n\t\t\t\thead = tail = [resolve];\n\t\t\t}\n\t\t}).then(() => {\n\t\t\t// Running func here ensures that even a non-thenable result or an\n\t\t\t// immediately thrown error gets wrapped into a Promise.\n\t\t\treturn func(...args);\n\t\t}).finally(finish);\n\t};\n}\n\n/**\n* Partition in tasks groups by consecutive concurrent\n*/\nfunction partitionSuiteChildren(suite) {\n\tlet tasksGroup = [];\n\tconst tasksGroups = [];\n\tfor (const c of suite.tasks) {\n\t\tif (tasksGroup.length === 0 || c.concurrent === tasksGroup[0].concurrent) {\n\t\t\ttasksGroup.push(c);\n\t\t} else {\n\t\t\ttasksGroups.push(tasksGroup);\n\t\t\ttasksGroup = [c];\n\t\t}\n\t}\n\tif (tasksGroup.length > 0) {\n\t\ttasksGroups.push(tasksGroup);\n\t}\n\treturn tasksGroups;\n}\n\nfunction isTestCase(s) {\n\treturn s.type === \"test\";\n}\nfunction getTests(suite) {\n\tconst tests = [];\n\tconst arraySuites = toArray(suite);\n\tfor (const s of arraySuites) {\n\t\tif (isTestCase(s)) {\n\t\t\ttests.push(s);\n\t\t} else {\n\t\t\tfor (const task of s.tasks) {\n\t\t\t\tif (isTestCase(task)) {\n\t\t\t\t\ttests.push(task);\n\t\t\t\t} else {\n\t\t\t\t\tconst taskTests = getTests(task);\n\t\t\t\t\tfor (const test of taskTests) {\n\t\t\t\t\t\ttests.push(test);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn tests;\n}\nfunction getTasks(tasks = []) {\n\treturn toArray(tasks).flatMap((s) => isTestCase(s) ? [s] : [s, ...getTasks(s.tasks)]);\n}\nfunction getSuites(suite) {\n\treturn toArray(suite).flatMap((s) => s.type === \"suite\" ? [s, ...getSuites(s.tasks)] : []);\n}\nfunction hasTests(suite) {\n\treturn toArray(suite).some((s) => s.tasks.some((c) => isTestCase(c) || hasTests(c)));\n}\nfunction hasFailed(suite) {\n\treturn toArray(suite).some((s) => {\n\t\tvar _s$result;\n\t\treturn ((_s$result = s.result) === null || _s$result === void 0 ? void 0 : _s$result.state) === \"fail\" || s.type === \"suite\" && hasFailed(s.tasks);\n\t});\n}\nfunction getNames(task) {\n\tconst names = [task.name];\n\tlet current = task;\n\twhile (current === null || current === void 0 ? void 0 : current.suite) {\n\t\tcurrent = current.suite;\n\t\tif (current === null || current === void 0 ? void 0 : current.name) {\n\t\t\tnames.unshift(current.name);\n\t\t}\n\t}\n\tif (current !== task.file) {\n\t\tnames.unshift(task.file.name);\n\t}\n\treturn names;\n}\nfunction getFullName(task, separator = \" > \") {\n\treturn getNames(task).join(separator);\n}\nfunction getTestName(task, separator = \" > \") {\n\treturn getNames(task).slice(1).join(separator);\n}\n\nexport { calculateSuiteHash as a, createFileTask as b, createChainable as c, generateHash as d, getFullName as e, findTestFileStackTrace as f, generateFileHash as g, getNames as h, interpretTaskModes as i, getSuites as j, getTasks as k, limitConcurrency as l, getTestName as m, getTests as n, hasFailed as o, partitionSuiteChildren as p, hasTests as q, isTestCase as r, someTasksAreOnly as s };\n", "const r=Object.create(null),i=e=>globalThis.process?.env||import.meta.env||globalThis.Deno?.env.toObject()||globalThis.__env__||(e?r:globalThis),o=new Proxy(r,{get(e,s){return i()[s]??r[s]},has(e,s){const E=i();return s in E||s in r},set(e,s,E){const B=i(!0);return B[s]=E,!0},deleteProperty(e,s){if(!s)return!1;const E=i(!0);return delete E[s],!0},ownKeys(){const e=i(!0);return Object.keys(e)}}),t=typeof process<\"u\"&&process.env&&process.env.NODE_ENV||\"\",f=[[\"APPVEYOR\"],[\"AWS_AMPLIFY\",\"AWS_APP_ID\",{ci:!0}],[\"AZURE_PIPELINES\",\"SYSTEM_TEAMFOUNDATIONCOLLECTIONURI\"],[\"AZURE_STATIC\",\"INPUT_AZURE_STATIC_WEB_APPS_API_TOKEN\"],[\"APPCIRCLE\",\"AC_APPCIRCLE\"],[\"BAMBOO\",\"bamboo_planKey\"],[\"BITBUCKET\",\"BITBUCKET_COMMIT\"],[\"BITRISE\",\"BITRISE_IO\"],[\"BUDDY\",\"BUDDY_WORKSPACE_ID\"],[\"BUILDKITE\"],[\"CIRCLE\",\"CIRCLECI\"],[\"CIRRUS\",\"CIRRUS_CI\"],[\"CLOUDFLARE_PAGES\",\"CF_PAGES\",{ci:!0}],[\"CLOUDFLARE_WORKERS\",\"WORKERS_CI\",{ci:!0}],[\"CODEBUILD\",\"CODEBUILD_BUILD_ARN\"],[\"CODEFRESH\",\"CF_BUILD_ID\"],[\"DRONE\"],[\"DRONE\",\"DRONE_BUILD_EVENT\"],[\"DSARI\"],[\"GITHUB_ACTIONS\"],[\"GITLAB\",\"GITLAB_CI\"],[\"GITLAB\",\"CI_MERGE_REQUEST_ID\"],[\"GOCD\",\"GO_PIPELINE_LABEL\"],[\"LAYERCI\"],[\"HUDSON\",\"HUDSON_URL\"],[\"JENKINS\",\"JENKINS_URL\"],[\"MAGNUM\"],[\"NETLIFY\"],[\"NETLIFY\",\"NETLIFY_LOCAL\",{ci:!1}],[\"NEVERCODE\"],[\"RENDER\"],[\"SAIL\",\"SAILCI\"],[\"SEMAPHORE\"],[\"SCREWDRIVER\"],[\"SHIPPABLE\"],[\"SOLANO\",\"TDDIUM\"],[\"STRIDER\"],[\"TEAMCITY\",\"TEAMCITY_VERSION\"],[\"TRAVIS\"],[\"VERCEL\",\"NOW_BUILDER\"],[\"VERCEL\",\"VERCEL\",{ci:!1}],[\"VERCEL\",\"VERCEL_ENV\",{ci:!1}],[\"APPCENTER\",\"APPCENTER_BUILD_ID\"],[\"CODESANDBOX\",\"CODESANDBOX_SSE\",{ci:!1}],[\"CODESANDBOX\",\"CODESANDBOX_HOST\",{ci:!1}],[\"STACKBLITZ\"],[\"STORMKIT\"],[\"CLEAVR\"],[\"ZEABUR\"],[\"CODESPHERE\",\"CODESPHERE_APP_ID\",{ci:!0}],[\"RAILWAY\",\"RAILWAY_PROJECT_ID\"],[\"RAILWAY\",\"RAILWAY_SERVICE_ID\"],[\"DENO-DEPLOY\",\"DENO_DEPLOYMENT_ID\"],[\"FIREBASE_APP_HOSTING\",\"FIREBASE_APP_HOSTING\",{ci:!0}]];function b(){if(globalThis.process?.env)for(const e of f){const s=e[1]||e[0];if(globalThis.process?.env[s])return{name:e[0].toLowerCase(),...e[2]}}return globalThis.process?.env?.SHELL===\"/bin/jsh\"&&globalThis.process?.versions?.webcontainer?{name:\"stackblitz\",ci:!1}:{name:\"\",ci:!1}}const l=b(),p=l.name;function n(e){return e?e!==\"false\":!1}const I=globalThis.process?.platform||\"\",T=n(o.CI)||l.ci!==!1,R=n(globalThis.process?.stdout&&globalThis.process?.stdout.isTTY),U=typeof window<\"u\",d=n(o.DEBUG),a=t===\"test\"||n(o.TEST),g=t===\"production\",h=t===\"dev\"||t===\"development\",v=n(o.MINIMAL)||T||a||!R,A=/^win/i.test(I),M=/^linux/i.test(I),m=/^darwin/i.test(I),Y=!n(o.NO_COLOR)&&(n(o.FORCE_COLOR)||(R||A)&&o.TERM!==\"dumb\"||T),C=(globalThis.process?.versions?.node||\"\").replace(/^v/,\"\")||null,V=Number(C?.split(\".\")[0])||null,W=globalThis.process||Object.create(null),_={versions:{}},y=new Proxy(W,{get(e,s){if(s===\"env\")return o;if(s in e)return e[s];if(s in _)return _[s]}}),O=globalThis.process?.release?.name===\"node\",c=!!globalThis.Bun||!!globalThis.process?.versions?.bun,D=!!globalThis.Deno,L=!!globalThis.fastly,S=!!globalThis.Netlify,u=!!globalThis.EdgeRuntime,N=globalThis.navigator?.userAgent===\"Cloudflare-Workers\",F=[[S,\"netlify\"],[u,\"edge-light\"],[N,\"workerd\"],[L,\"fastly\"],[D,\"deno\"],[c,\"bun\"],[O,\"node\"]];function G(){const e=F.find(s=>s[0]);if(e)return{name:e[1]}}const P=G(),K=P?.name||\"\";export{o as env,R as hasTTY,U as hasWindow,c as isBun,T as isCI,Y as isColorSupported,d as isDebug,D as isDeno,h as isDevelopment,u as isEdgeLight,L as isFastly,M as isLinux,m as isMacOS,v as isMinimal,S as isNetlify,O as isNode,g as isProduction,a as isTest,A as isWindows,N as isWorkerd,t as nodeENV,V as nodeMajorVersion,C as nodeVersion,I as platform,y as process,p as provider,l as providerInfo,K as runtime,P as runtimeInfo};\n", "import { isCI } from 'std-env';\n\nconst isNode = typeof process < \"u\" && typeof process.stdout < \"u\" && !process.versions?.deno && !globalThis.window;\nconst isDeno = typeof process < \"u\" && typeof process.stdout < \"u\" && process.versions?.deno !== void 0;\nconst isWindows = (isNode || isDeno) && process.platform === \"win32\";\nconst isTTY = (isNode || isDeno) && process.stdout?.isTTY && !isCI;\n\nexport { isWindows as a, isTTY as i };\n", "import { resolve } from 'node:path';\nimport url from 'node:url';\n\nconst rootDir = resolve(url.fileURLToPath(import.meta.url), \"../../\");\nconst distDir = resolve(url.fileURLToPath(import.meta.url), \"../../dist\");\n\nexport { distDir, rootDir };\n", "import { DEFAULT_CLIENT_CONDITIONS, DEFAULT_CLIENT_MAIN_FIELDS, DEFAULT_EXTERNAL_CONDITIONS, DEFAULT_SERVER_CONDITIONS, DEFAULT_SERVER_MAIN_FIELDS, VERSION, createLogger, defaultAllowedOrigins } from \"./chunks/logger.js\";\nimport { BuildEnvironment, DevEnvironment, build, buildErrorMessage, createBuilder, createFilter, createIdResolver, createRunnableDevEnvironment, createServer, createServerHotChannel, createServerModuleRunner, createServerModuleRunnerTransport, defineConfig, fetchModule, formatPostcssSourceMap, isCSSRequest, isFileLoadingAllowed, isFileServingAllowed, isRunnableDevEnvironment, loadConfigFromFile, loadEnv, mergeAlias, mergeConfig, normalizePath, optimizeDeps, perEnvironmentPlugin, perEnvironmentState, preprocessCSS, preview, resolveConfig, resolveEnvPrefix, rollupVersion, runnerImport, searchForWorkspaceRoot, send, sortUserPlugins, ssrTransform, transformWithEsbuild } from \"./chunks/config.js\";\nimport { parseAst, parseAstAsync } from \"rollup/parseAst\";\nimport { version as esbuildVersion } from \"esbuild\";\n\n//#region src/node/server/environments/fetchableEnvironments.ts\nfunction createFetchableDevEnvironment(name, config, context) {\n\tif (typeof Request === \"undefined\" || typeof Response === \"undefined\") throw new TypeError(\"FetchableDevEnvironment requires a global `Request` and `Response` object.\");\n\tif (!context.handleRequest) throw new TypeError(\"FetchableDevEnvironment requires a `handleRequest` method during initialisation.\");\n\treturn new FetchableDevEnvironment(name, config, context);\n}\nfunction isFetchableDevEnvironment(environment) {\n\treturn environment instanceof FetchableDevEnvironment;\n}\nvar FetchableDevEnvironment = class extends DevEnvironment {\n\t_handleRequest;\n\tconstructor(name, config, context) {\n\t\tsuper(name, config, context);\n\t\tthis._handleRequest = context.handleRequest;\n\t}\n\tasync dispatchFetch(request) {\n\t\tif (!(request instanceof Request)) throw new TypeError(\"FetchableDevEnvironment `dispatchFetch` must receive a `Request` object.\");\n\t\tconst response = await this._handleRequest(request);\n\t\tif (!(response instanceof Response)) throw new TypeError(\"FetchableDevEnvironment `context.handleRequest` must return a `Response` object.\");\n\t\treturn response;\n\t}\n};\n\n//#endregion\nexport { BuildEnvironment, DevEnvironment, build, buildErrorMessage, createBuilder, createFetchableDevEnvironment, createFilter, createIdResolver, createLogger, createRunnableDevEnvironment, createServer, createServerHotChannel, createServerModuleRunner, createServerModuleRunnerTransport, defaultAllowedOrigins, DEFAULT_CLIENT_CONDITIONS as defaultClientConditions, DEFAULT_CLIENT_MAIN_FIELDS as defaultClientMainFields, DEFAULT_EXTERNAL_CONDITIONS as defaultExternalConditions, DEFAULT_SERVER_CONDITIONS as defaultServerConditions, DEFAULT_SERVER_MAIN_FIELDS as defaultServerMainFields, defineConfig, esbuildVersion, fetchModule, formatPostcssSourceMap, isCSSRequest, isFetchableDevEnvironment, isFileLoadingAllowed, isFileServingAllowed, isRunnableDevEnvironment, loadConfigFromFile, loadEnv, mergeAlias, mergeConfig, ssrTransform as moduleRunnerTransform, normalizePath, optimizeDeps, parseAst, parseAstAsync, perEnvironmentPlugin, perEnvironmentState, preprocessCSS, preview, resolveConfig, resolveEnvPrefix, rollupVersion, runnerImport, searchForWorkspaceRoot, send, sortUserPlugins, transformWithEsbuild, VERSION as version };", "const lineSplitRE = /\\r?\\n/;\nfunction positionToOffset(source, lineNumber, columnNumber) {\n\tconst lines = source.split(lineSplitRE);\n\tconst nl = /\\r\\n/.test(source) ? 2 : 1;\n\tlet start = 0;\n\tif (lineNumber > lines.length) {\n\t\treturn source.length;\n\t}\n\tfor (let i = 0; i < lineNumber - 1; i++) {\n\t\tstart += lines[i].length + nl;\n\t}\n\treturn start + columnNumber;\n}\nfunction offsetToLineNumber(source, offset) {\n\tif (offset > source.length) {\n\t\tthrow new Error(`offset is longer than source length! offset ${offset} > length ${source.length}`);\n\t}\n\tconst lines = source.split(lineSplitRE);\n\tconst nl = /\\r\\n/.test(source) ? 2 : 1;\n\tlet counted = 0;\n\tlet line = 0;\n\tfor (; line < lines.length; line++) {\n\t\tconst lineLength = lines[line].length + nl;\n\t\tif (counted + lineLength >= offset) {\n\t\t\tbreak;\n\t\t}\n\t\tcounted += lineLength;\n\t}\n\treturn line + 1;\n}\n\nexport { lineSplitRE, offsetToLineNumber, positionToOffset };\n"],
  "mappings": "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",
  "names": ["_", "_", "n", "m", "d", "object", "keys", "printer", "separator", "l", "i", "_a", "b", "c", "f", "p", "t", "u", "v", "a", "r", "plugin", "plugins", "truncate", "inspect", "separator", "i", "set", "object", "toString", "i", "index", "v", "url", "getType", "k", "resolve", "p", "toString", "v", "getDefaultExportFromCjs", "found", "pointer", "d", "foundSubsequence", "isCommon", "getDefaultExportFromCjs", "i", "n", "diff", "diffs", "a", "b", "truncate", "aIndex", "bIndex", "getType", "_a", "_b", "AsymmetricMatcher", "DOMCollection", "DOMElement", "Immutable", "ReactElement", "ReactTestComponent", "PLUGINS", "set", "hasCommonDiff", "object", "v", "clone", "i", "r", "normalize", "isAbsolute", "join", "resolve", "index", "p", "dirname", "i", "c", "relative", "a", "b", "index", "_a", "url", "isWindows", "url", "resolve", "stack", "p", "f", "resolve", "parentIsOnly", "t", "i", "resolve", "test", "separator", "_a", "_b", "_a", "_b", "C", "_a", "url", "esbuildVersion", "i", "noop", "_", "y", "i", "a", "index", "stringify", "v", "value", "keys", "executionTime", "promises", "files", "errors", "b", "p", "url", "_a", "_b", "c", "text", "base", "rootDir", "skipped", "performance$1", "suiteState", "test", "separator", "console", "group", "m", "t", "_c", "tasks", "comma", "chars", "intToChar", "charToInt", "decodeInteger", "relative", "hasMoreVlq", "StringReader", "decode", "sort", "normalizePath", "pointer", "resolve", "COLUMN", "SOURCES_INDEX", "SOURCE_LINE", "SOURCE_COLUMN", "NAMES_INDEX", "sortComparator", "found", "binarySearch", "upperBound", "lowerBound", "memoizedState", "memoizedBinarySearch", "LINE_GTR_ZERO", "COL_GTR_EQ_ZERO", "LEAST_UPPER_BOUND", "GREATEST_LOWER_BOUND", "cast", "decodedMappings", "originalPositionFor", "OMapping", "traceSegmentInternal", "node", "override", "task", "nodeos__default", "printError", "error", "l", "testName", "getType", "tests", "_d", "stats"]
}
